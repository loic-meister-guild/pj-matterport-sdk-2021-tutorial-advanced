!function(e) {
    var t = {};
    function n(r) {
        if (t[r])
            return t[r].exports;
        var i = t[r] = {
            i: r,
            l: !1,
            exports: {}
        };
        return e[r].call(i.exports, i, i.exports, n),
        i.l = !0,
        i.exports
    }
    n.m = e,
    n.c = t,
    n.d = function(e, t, r) {
        n.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: r
        })
    }
    ,
    n.r = function(e) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }
    ,
    n.t = function(e, t) {
        if (1 & t && (e = n(e)),
        8 & t)
            return e;
        if (4 & t && "object" == typeof e && e && e.__esModule)
            return e;
        var r = Object.create(null);
        if (n.r(r),
        Object.defineProperty(r, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var i in e)
                n.d(r, i, function(t) {
                    return e[t]
                }
                .bind(null, i));
        return r
    }
    ,
    n.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e.default
        }
        : function() {
            return e
        }
        ;
        return n.d(t, "a", t),
        t
    }
    ,
    n.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }
    ,
    n.p = "",
    n(n.s = 35)
}([function(e, t, n) {
    "use strict";
    e.exports = n(16)
}
, function(e, t, n) {
    var r;
    /*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
    !function() {
        "use strict";
        var n = {}.hasOwnProperty;
        function i() {
            for (var e = [], t = 0; t < arguments.length; t++) {
                var r = arguments[t];
                if (r) {
                    var a = typeof r;
                    if ("string" === a || "number" === a)
                        e.push(r);
                    else if (Array.isArray(r) && r.length) {
                        var o = i.apply(null, r);
                        o && e.push(o)
                    } else if ("object" === a)
                        for (var s in r)
                            n.call(r, s) && r[s] && e.push(s)
                }
            }
            return e.join(" ")
        }
        e.exports ? (i.default = i,
        e.exports = i) : void 0 === (r = function() {
            return i
        }
        .apply(t, [])) || (e.exports = r)
    }()
}
, function(e, t, n) {
    "use strict";
    e.exports = function(e) {
        var t = [];
        return t.toString = function() {
            return this.map((function(t) {
                var n = function(e, t) {
                    var n = e[1] || ""
                      , r = e[3];
                    if (!r)
                        return n;
                    if (t && "function" == typeof btoa) {
                        var i = (o = r,
                        s = btoa(unescape(encodeURIComponent(JSON.stringify(o)))),
                        l = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),
                        "/*# ".concat(l, " */"))
                          , a = r.sources.map((function(e) {
                            return "/*# sourceURL=".concat(r.sourceRoot || "").concat(e, " */")
                        }
                        ));
                        return [n].concat(a).concat([i]).join("\n")
                    }
                    var o, s, l;
                    return [n].join("\n")
                }(t, e);
                return t[2] ? "@media ".concat(t[2], " {").concat(n, "}") : n
            }
            )).join("")
        }
        ,
        t.i = function(e, n, r) {
            "string" == typeof e && (e = [[null, e, ""]]);
            var i = {};
            if (r)
                for (var a = 0; a < this.length; a++) {
                    var o = this[a][0];
                    null != o && (i[o] = !0)
                }
            for (var s = 0; s < e.length; s++) {
                var l = [].concat(e[s]);
                r && i[l[0]] || (n && (l[2] ? l[2] = "".concat(n, " and ").concat(l[2]) : l[2] = n),
                t.push(l))
            }
        }
        ,
        t
    }
}
, function(e, t, n) {
    "use strict";
    var r, i = function() {
        return void 0 === r && (r = Boolean(window && document && document.all && !window.atob)),
        r
    }, a = function() {
        var e = {};
        return function(t) {
            if (void 0 === e[t]) {
                var n = document.querySelector(t);
                if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement)
                    try {
                        n = n.contentDocument.head
                    } catch (e) {
                        n = null
                    }
                e[t] = n
            }
            return e[t]
        }
    }(), o = [];
    function s(e) {
        for (var t = -1, n = 0; n < o.length; n++)
            if (o[n].identifier === e) {
                t = n;
                break
            }
        return t
    }
    function l(e, t) {
        for (var n = {}, r = [], i = 0; i < e.length; i++) {
            var a = e[i]
              , l = t.base ? a[0] + t.base : a[0]
              , u = n[l] || 0
              , c = "".concat(l, " ").concat(u);
            n[l] = u + 1;
            var h = s(c)
              , d = {
                css: a[1],
                media: a[2],
                sourceMap: a[3]
            };
            -1 !== h ? (o[h].references++,
            o[h].updater(d)) : o.push({
                identifier: c,
                updater: g(d, t),
                references: 1
            }),
            r.push(c)
        }
        return r
    }
    function u(e) {
        var t = document.createElement("style")
          , r = e.attributes || {};
        if (void 0 === r.nonce) {
            var i = n.nc;
            i && (r.nonce = i)
        }
        if (Object.keys(r).forEach((function(e) {
            t.setAttribute(e, r[e])
        }
        )),
        "function" == typeof e.insert)
            e.insert(t);
        else {
            var o = a(e.insert || "head");
            if (!o)
                throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
            o.appendChild(t)
        }
        return t
    }
    var c, h = (c = [],
    function(e, t) {
        return c[e] = t,
        c.filter(Boolean).join("\n")
    }
    );
    function d(e, t, n, r) {
        var i = n ? "" : r.media ? "@media ".concat(r.media, " {").concat(r.css, "}") : r.css;
        if (e.styleSheet)
            e.styleSheet.cssText = h(t, i);
        else {
            var a = document.createTextNode(i)
              , o = e.childNodes;
            o[t] && e.removeChild(o[t]),
            o.length ? e.insertBefore(a, o[t]) : e.appendChild(a)
        }
    }
    function f(e, t, n) {
        var r = n.css
          , i = n.media
          , a = n.sourceMap;
        if (i ? e.setAttribute("media", i) : e.removeAttribute("media"),
        a && btoa && (r += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a)))), " */")),
        e.styleSheet)
            e.styleSheet.cssText = r;
        else {
            for (; e.firstChild; )
                e.removeChild(e.firstChild);
            e.appendChild(document.createTextNode(r))
        }
    }
    var p = null
      , m = 0;
    function g(e, t) {
        var n, r, i;
        if (t.singleton) {
            var a = m++;
            n = p || (p = u(t)),
            r = d.bind(null, n, a, !1),
            i = d.bind(null, n, a, !0)
        } else
            n = u(t),
            r = f.bind(null, n, t),
            i = function() {
                !function(e) {
                    if (null === e.parentNode)
                        return !1;
                    e.parentNode.removeChild(e)
                }(n)
            }
            ;
        return r(e),
        function(t) {
            if (t) {
                if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap)
                    return;
                r(e = t)
            } else
                i()
        }
    }
    e.exports = function(e, t) {
        (t = t || {}).singleton || "boolean" == typeof t.singleton || (t.singleton = i());
        var n = l(e = e || [], t);
        return function(e) {
            if (e = e || [],
            "[object Array]" === Object.prototype.toString.call(e)) {
                for (var r = 0; r < n.length; r++) {
                    var i = s(n[r]);
                    o[i].references--
                }
                for (var a = l(e, t), u = 0; u < n.length; u++) {
                    var c = s(n[u]);
                    0 === o[c].references && (o[c].updater(),
                    o.splice(c, 1))
                }
                n = a
            }
        }
    }
}
, function(e, t) {
    var n;
    n = function() {
        return this
    }();
    try {
        n = n || new Function("return this")()
    } catch (e) {
        "object" == typeof window && (n = window)
    }
    e.exports = n
}
, function(e, t, n) {
    var r;
    "undefined" != typeof window && (r = function() {
        return function(e) {
            var t = {};
            function n(r) {
                if (t[r])
                    return t[r].exports;
                var i = t[r] = {
                    i: r,
                    l: !1,
                    exports: {}
                };
                return e[r].call(i.exports, i, i.exports, n),
                i.l = !0,
                i.exports
            }
            return n.m = e,
            n.c = t,
            n.d = function(e, t, r) {
                n.o(e, t) || Object.defineProperty(e, t, {
                    enumerable: !0,
                    get: r
                })
            }
            ,
            n.r = function(e) {
                "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                }),
                Object.defineProperty(e, "__esModule", {
                    value: !0
                })
            }
            ,
            n.t = function(e, t) {
                if (1 & t && (e = n(e)),
                8 & t)
                    return e;
                if (4 & t && "object" == typeof e && e && e.__esModule)
                    return e;
                var r = Object.create(null);
                if (n.r(r),
                Object.defineProperty(r, "default", {
                    enumerable: !0,
                    value: e
                }),
                2 & t && "string" != typeof e)
                    for (var i in e)
                        n.d(r, i, function(t) {
                            return e[t]
                        }
                        .bind(null, i));
                return r
            }
            ,
            n.n = function(e) {
                var t = e && e.__esModule ? function() {
                    return e.default
                }
                : function() {
                    return e
                }
                ;
                return n.d(t, "a", t),
                t
            }
            ,
            n.o = function(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }
            ,
            n.p = "/dist/",
            n(n.s = "./src/hls.ts")
        }({
            "./node_modules/eventemitter3/index.js": /*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
            /*! no static exports found */
            /*! ModuleConcatenation bailout: Module is not an ECMAScript module */
            function(e, t, n) {
                "use strict";
                var r = Object.prototype.hasOwnProperty
                  , i = "~";
                function a() {}
                function o(e, t, n) {
                    this.fn = e,
                    this.context = t,
                    this.once = n || !1
                }
                function s(e, t, n, r, a) {
                    if ("function" != typeof n)
                        throw new TypeError("The listener must be a function");
                    var s = new o(n,r || e,a)
                      , l = i ? i + t : t;
                    return e._events[l] ? e._events[l].fn ? e._events[l] = [e._events[l], s] : e._events[l].push(s) : (e._events[l] = s,
                    e._eventsCount++),
                    e
                }
                function l(e, t) {
                    0 == --e._eventsCount ? e._events = new a : delete e._events[t]
                }
                function u() {
                    this._events = new a,
                    this._eventsCount = 0
                }
                Object.create && (a.prototype = Object.create(null),
                (new a).__proto__ || (i = !1)),
                u.prototype.eventNames = function() {
                    var e, t, n = [];
                    if (0 === this._eventsCount)
                        return n;
                    for (t in e = this._events)
                        r.call(e, t) && n.push(i ? t.slice(1) : t);
                    return Object.getOwnPropertySymbols ? n.concat(Object.getOwnPropertySymbols(e)) : n
                }
                ,
                u.prototype.listeners = function(e) {
                    var t = i ? i + e : e
                      , n = this._events[t];
                    if (!n)
                        return [];
                    if (n.fn)
                        return [n.fn];
                    for (var r = 0, a = n.length, o = new Array(a); r < a; r++)
                        o[r] = n[r].fn;
                    return o
                }
                ,
                u.prototype.listenerCount = function(e) {
                    var t = i ? i + e : e
                      , n = this._events[t];
                    return n ? n.fn ? 1 : n.length : 0
                }
                ,
                u.prototype.emit = function(e, t, n, r, a, o) {
                    var s = i ? i + e : e;
                    if (!this._events[s])
                        return !1;
                    var l, u, c = this._events[s], h = arguments.length;
                    if (c.fn) {
                        switch (c.once && this.removeListener(e, c.fn, void 0, !0),
                        h) {
                        case 1:
                            return c.fn.call(c.context),
                            !0;
                        case 2:
                            return c.fn.call(c.context, t),
                            !0;
                        case 3:
                            return c.fn.call(c.context, t, n),
                            !0;
                        case 4:
                            return c.fn.call(c.context, t, n, r),
                            !0;
                        case 5:
                            return c.fn.call(c.context, t, n, r, a),
                            !0;
                        case 6:
                            return c.fn.call(c.context, t, n, r, a, o),
                            !0
                        }
                        for (u = 1,
                        l = new Array(h - 1); u < h; u++)
                            l[u - 1] = arguments[u];
                        c.fn.apply(c.context, l)
                    } else {
                        var d, f = c.length;
                        for (u = 0; u < f; u++)
                            switch (c[u].once && this.removeListener(e, c[u].fn, void 0, !0),
                            h) {
                            case 1:
                                c[u].fn.call(c[u].context);
                                break;
                            case 2:
                                c[u].fn.call(c[u].context, t);
                                break;
                            case 3:
                                c[u].fn.call(c[u].context, t, n);
                                break;
                            case 4:
                                c[u].fn.call(c[u].context, t, n, r);
                                break;
                            default:
                                if (!l)
                                    for (d = 1,
                                    l = new Array(h - 1); d < h; d++)
                                        l[d - 1] = arguments[d];
                                c[u].fn.apply(c[u].context, l)
                            }
                    }
                    return !0
                }
                ,
                u.prototype.on = function(e, t, n) {
                    return s(this, e, t, n, !1)
                }
                ,
                u.prototype.once = function(e, t, n) {
                    return s(this, e, t, n, !0)
                }
                ,
                u.prototype.removeListener = function(e, t, n, r) {
                    var a = i ? i + e : e;
                    if (!this._events[a])
                        return this;
                    if (!t)
                        return l(this, a),
                        this;
                    var o = this._events[a];
                    if (o.fn)
                        o.fn !== t || r && !o.once || n && o.context !== n || l(this, a);
                    else {
                        for (var s = 0, u = [], c = o.length; s < c; s++)
                            (o[s].fn !== t || r && !o[s].once || n && o[s].context !== n) && u.push(o[s]);
                        u.length ? this._events[a] = 1 === u.length ? u[0] : u : l(this, a)
                    }
                    return this
                }
                ,
                u.prototype.removeAllListeners = function(e) {
                    var t;
                    return e ? (t = i ? i + e : e,
                    this._events[t] && l(this, t)) : (this._events = new a,
                    this._eventsCount = 0),
                    this
                }
                ,
                u.prototype.off = u.prototype.removeListener,
                u.prototype.addListener = u.prototype.on,
                u.prefixed = i,
                u.EventEmitter = u,
                e.exports = u
            },
            "./node_modules/url-toolkit/src/url-toolkit.js": /*!*****************************************************!*\
  !*** ./node_modules/url-toolkit/src/url-toolkit.js ***!
  \*****************************************************/
            /*! no static exports found */
            /*! ModuleConcatenation bailout: Module is not an ECMAScript module */
            function(e, t, n) {
                var r, i, a, o, s;
                r = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/\?#]*\/)*.*?)??(;.*?)?(\?.*?)?(#.*?)?$/,
                i = /^([^\/?#]*)(.*)$/,
                a = /(?:\/|^)\.(?=\/)/g,
                o = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g,
                s = {
                    buildAbsoluteURL: function(e, t, n) {
                        if (n = n || {},
                        e = e.trim(),
                        !(t = t.trim())) {
                            if (!n.alwaysNormalize)
                                return e;
                            var r = s.parseURL(e);
                            if (!r)
                                throw new Error("Error trying to parse base URL.");
                            return r.path = s.normalizePath(r.path),
                            s.buildURLFromParts(r)
                        }
                        var a = s.parseURL(t);
                        if (!a)
                            throw new Error("Error trying to parse relative URL.");
                        if (a.scheme)
                            return n.alwaysNormalize ? (a.path = s.normalizePath(a.path),
                            s.buildURLFromParts(a)) : t;
                        var o = s.parseURL(e);
                        if (!o)
                            throw new Error("Error trying to parse base URL.");
                        if (!o.netLoc && o.path && "/" !== o.path[0]) {
                            var l = i.exec(o.path);
                            o.netLoc = l[1],
                            o.path = l[2]
                        }
                        o.netLoc && !o.path && (o.path = "/");
                        var u = {
                            scheme: o.scheme,
                            netLoc: a.netLoc,
                            path: null,
                            params: a.params,
                            query: a.query,
                            fragment: a.fragment
                        };
                        if (!a.netLoc && (u.netLoc = o.netLoc,
                        "/" !== a.path[0]))
                            if (a.path) {
                                var c = o.path
                                  , h = c.substring(0, c.lastIndexOf("/") + 1) + a.path;
                                u.path = s.normalizePath(h)
                            } else
                                u.path = o.path,
                                a.params || (u.params = o.params,
                                a.query || (u.query = o.query));
                        return null === u.path && (u.path = n.alwaysNormalize ? s.normalizePath(a.path) : a.path),
                        s.buildURLFromParts(u)
                    },
                    parseURL: function(e) {
                        var t = r.exec(e);
                        return t ? {
                            scheme: t[1] || "",
                            netLoc: t[2] || "",
                            path: t[3] || "",
                            params: t[4] || "",
                            query: t[5] || "",
                            fragment: t[6] || ""
                        } : null
                    },
                    normalizePath: function(e) {
                        for (e = e.split("").reverse().join("").replace(a, ""); e.length !== (e = e.replace(o, "")).length; )
                            ;
                        return e.split("").reverse().join("")
                    },
                    buildURLFromParts: function(e) {
                        return e.scheme + e.netLoc + e.path + e.params + e.query + e.fragment
                    }
                },
                e.exports = s
            },
            "./node_modules/webworkify-webpack/index.js": /*!**************************************************!*\
  !*** ./node_modules/webworkify-webpack/index.js ***!
  \**************************************************/
            /*! no static exports found */
            /*! ModuleConcatenation bailout: Module is not an ECMAScript module */
            function(e, t, n) {
                function r(e) {
                    var t = {};
                    function n(r) {
                        if (t[r])
                            return t[r].exports;
                        var i = t[r] = {
                            i: r,
                            l: !1,
                            exports: {}
                        };
                        return e[r].call(i.exports, i, i.exports, n),
                        i.l = !0,
                        i.exports
                    }
                    n.m = e,
                    n.c = t,
                    n.i = function(e) {
                        return e
                    }
                    ,
                    n.d = function(e, t, r) {
                        n.o(e, t) || Object.defineProperty(e, t, {
                            configurable: !1,
                            enumerable: !0,
                            get: r
                        })
                    }
                    ,
                    n.r = function(e) {
                        Object.defineProperty(e, "__esModule", {
                            value: !0
                        })
                    }
                    ,
                    n.n = function(e) {
                        var t = e && e.__esModule ? function() {
                            return e.default
                        }
                        : function() {
                            return e
                        }
                        ;
                        return n.d(t, "a", t),
                        t
                    }
                    ,
                    n.o = function(e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t)
                    }
                    ,
                    n.p = "/",
                    n.oe = function(e) {
                        throw console.error(e),
                        e
                    }
                    ;
                    var r = n(n.s = ENTRY_MODULE);
                    return r.default || r
                }
                function i(e) {
                    return (e + "").replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&")
                }
                function a(e, t, r) {
                    var a = {};
                    a[r] = [];
                    var o = t.toString()
                      , s = o.match(/^function\s?\w*\(\w+,\s*\w+,\s*(\w+)\)/);
                    if (!s)
                        return a;
                    for (var l, u = s[1], c = new RegExp("(\\\\n|\\W)" + i(u) + "\\(\\s*(/\\*.*?\\*/)?\\s*.*?([\\.|\\-|\\+|\\w|/|@]+).*?\\)","g"); l = c.exec(o); )
                        "dll-reference" !== l[3] && a[r].push(l[3]);
                    for (c = new RegExp("\\(" + i(u) + '\\("(dll-reference\\s([\\.|\\-|\\+|\\w|/|@]+))"\\)\\)\\(\\s*(/\\*.*?\\*/)?\\s*.*?([\\.|\\-|\\+|\\w|/|@]+).*?\\)',"g"); l = c.exec(o); )
                        e[l[2]] || (a[r].push(l[1]),
                        e[l[2]] = n(l[1]).m),
                        a[l[2]] = a[l[2]] || [],
                        a[l[2]].push(l[4]);
                    for (var h, d = Object.keys(a), f = 0; f < d.length; f++)
                        for (var p = 0; p < a[d[f]].length; p++)
                            h = a[d[f]][p],
                            isNaN(1 * h) || (a[d[f]][p] = 1 * a[d[f]][p]);
                    return a
                }
                function o(e) {
                    return Object.keys(e).reduce((function(t, n) {
                        return t || e[n].length > 0
                    }
                    ), !1)
                }
                e.exports = function(e, t) {
                    t = t || {};
                    var i = {
                        main: n.m
                    }
                      , s = t.all ? {
                        main: Object.keys(i.main)
                    } : function(e, t) {
                        for (var n = {
                            main: [t]
                        }, r = {
                            main: []
                        }, i = {
                            main: {}
                        }; o(n); )
                            for (var s = Object.keys(n), l = 0; l < s.length; l++) {
                                var u = s[l]
                                  , c = n[u].pop();
                                if (i[u] = i[u] || {},
                                !i[u][c] && e[u][c]) {
                                    i[u][c] = !0,
                                    r[u] = r[u] || [],
                                    r[u].push(c);
                                    for (var h = a(e, e[u][c], u), d = Object.keys(h), f = 0; f < d.length; f++)
                                        n[d[f]] = n[d[f]] || [],
                                        n[d[f]] = n[d[f]].concat(h[d[f]])
                                }
                            }
                        return r
                    }(i, e)
                      , l = "";
                    Object.keys(s).filter((function(e) {
                        return "main" !== e
                    }
                    )).forEach((function(e) {
                        for (var t = 0; s[e][t]; )
                            t++;
                        s[e].push(t),
                        i[e][t] = "(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })",
                        l = l + "var " + e + " = (" + r.toString().replace("ENTRY_MODULE", JSON.stringify(t)) + ")({" + s[e].map((function(t) {
                            return JSON.stringify(t) + ": " + i[e][t].toString()
                        }
                        )).join(",") + "});\n"
                    }
                    )),
                    l = l + "new ((" + r.toString().replace("ENTRY_MODULE", JSON.stringify(e)) + ")({" + s.main.map((function(e) {
                        return JSON.stringify(e) + ": " + i.main[e].toString()
                    }
                    )).join(",") + "}))(self);";
                    var u = new window.Blob([l],{
                        type: "text/javascript"
                    });
                    if (t.bare)
                        return u;
                    var c = (window.URL || window.webkitURL || window.mozURL || window.msURL).createObjectURL(u)
                      , h = new window.Worker(c);
                    return h.objectURL = c,
                    h
                }
            },
            "./src/crypt/decrypter.js": /*!********************************************!*\
  !*** ./src/crypt/decrypter.js + 3 modules ***!
  \********************************************/
            /*! exports provided: default */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/errors.ts because of ./src/hls.ts */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/events.js because of ./src/hls.ts */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/utils/get-self-scope.js because of ./src/hls.ts */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/utils/logger.js because of ./src/hls.ts */
            function(e, t, n) {
                "use strict";
                n.r(t);
                var r = function() {
                    function e(e, t) {
                        this.subtle = e,
                        this.aesIV = t
                    }
                    return e.prototype.decrypt = function(e, t) {
                        return this.subtle.decrypt({
                            name: "AES-CBC",
                            iv: this.aesIV
                        }, t, e)
                    }
                    ,
                    e
                }()
                  , i = function() {
                    function e(e, t) {
                        this.subtle = e,
                        this.key = t
                    }
                    return e.prototype.expandKey = function() {
                        return this.subtle.importKey("raw", this.key, {
                            name: "AES-CBC"
                        }, !1, ["encrypt", "decrypt"])
                    }
                    ,
                    e
                }()
                  , a = function() {
                    function e() {
                        this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
                        this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)],
                        this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)],
                        this.sBox = new Uint32Array(256),
                        this.invSBox = new Uint32Array(256),
                        this.key = new Uint32Array(0),
                        this.initTable()
                    }
                    var t = e.prototype;
                    return t.uint8ArrayToUint32Array_ = function(e) {
                        for (var t = new DataView(e), n = new Uint32Array(4), r = 0; r < 4; r++)
                            n[r] = t.getUint32(4 * r);
                        return n
                    }
                    ,
                    t.initTable = function() {
                        var e = this.sBox
                          , t = this.invSBox
                          , n = this.subMix
                          , r = n[0]
                          , i = n[1]
                          , a = n[2]
                          , o = n[3]
                          , s = this.invSubMix
                          , l = s[0]
                          , u = s[1]
                          , c = s[2]
                          , h = s[3]
                          , d = new Uint32Array(256)
                          , f = 0
                          , p = 0
                          , m = 0;
                        for (m = 0; m < 256; m++)
                            d[m] = m < 128 ? m << 1 : m << 1 ^ 283;
                        for (m = 0; m < 256; m++) {
                            var g = p ^ p << 1 ^ p << 2 ^ p << 3 ^ p << 4;
                            g = g >>> 8 ^ 255 & g ^ 99,
                            e[f] = g,
                            t[g] = f;
                            var v = d[f]
                              , y = d[v]
                              , b = d[y]
                              , x = 257 * d[g] ^ 16843008 * g;
                            r[f] = x << 24 | x >>> 8,
                            i[f] = x << 16 | x >>> 16,
                            a[f] = x << 8 | x >>> 24,
                            o[f] = x,
                            x = 16843009 * b ^ 65537 * y ^ 257 * v ^ 16843008 * f,
                            l[g] = x << 24 | x >>> 8,
                            u[g] = x << 16 | x >>> 16,
                            c[g] = x << 8 | x >>> 24,
                            h[g] = x,
                            f ? (f = v ^ d[d[d[b ^ v]]],
                            p ^= d[d[p]]) : f = p = 1
                        }
                    }
                    ,
                    t.expandKey = function(e) {
                        for (var t = this.uint8ArrayToUint32Array_(e), n = !0, r = 0; r < t.length && n; )
                            n = t[r] === this.key[r],
                            r++;
                        if (!n) {
                            this.key = t;
                            var i = this.keySize = t.length;
                            if (4 !== i && 6 !== i && 8 !== i)
                                throw new Error("Invalid aes key size=" + i);
                            var a, o, s, l, u = this.ksRows = 4 * (i + 6 + 1), c = this.keySchedule = new Uint32Array(u), h = this.invKeySchedule = new Uint32Array(u), d = this.sBox, f = this.rcon, p = this.invSubMix, m = p[0], g = p[1], v = p[2], y = p[3];
                            for (a = 0; a < u; a++)
                                a < i ? s = c[a] = t[a] : (l = s,
                                a % i == 0 ? (l = d[(l = l << 8 | l >>> 24) >>> 24] << 24 | d[l >>> 16 & 255] << 16 | d[l >>> 8 & 255] << 8 | d[255 & l],
                                l ^= f[a / i | 0] << 24) : i > 6 && a % i == 4 && (l = d[l >>> 24] << 24 | d[l >>> 16 & 255] << 16 | d[l >>> 8 & 255] << 8 | d[255 & l]),
                                c[a] = s = (c[a - i] ^ l) >>> 0);
                            for (o = 0; o < u; o++)
                                a = u - o,
                                l = 3 & o ? c[a] : c[a - 4],
                                h[o] = o < 4 || a <= 4 ? l : m[d[l >>> 24]] ^ g[d[l >>> 16 & 255]] ^ v[d[l >>> 8 & 255]] ^ y[d[255 & l]],
                                h[o] = h[o] >>> 0
                        }
                    }
                    ,
                    t.networkToHostOrderSwap = function(e) {
                        return e << 24 | (65280 & e) << 8 | (16711680 & e) >> 8 | e >>> 24
                    }
                    ,
                    t.decrypt = function(e, t, n, r) {
                        for (var i, a, o, s, l, u, c, h, d, f, p, m, g, v, y, b, x, w = this.keySize + 6, _ = this.invKeySchedule, E = this.invSBox, T = this.invSubMix, S = T[0], M = T[1], A = T[2], R = T[3], L = this.uint8ArrayToUint32Array_(n), C = L[0], P = L[1], O = L[2], k = L[3], D = new Int32Array(e), I = new Int32Array(D.length), N = this.networkToHostOrderSwap; t < D.length; ) {
                            for (d = N(D[t]),
                            f = N(D[t + 1]),
                            p = N(D[t + 2]),
                            m = N(D[t + 3]),
                            l = d ^ _[0],
                            u = m ^ _[1],
                            c = p ^ _[2],
                            h = f ^ _[3],
                            g = 4,
                            v = 1; v < w; v++)
                                i = S[l >>> 24] ^ M[u >> 16 & 255] ^ A[c >> 8 & 255] ^ R[255 & h] ^ _[g],
                                a = S[u >>> 24] ^ M[c >> 16 & 255] ^ A[h >> 8 & 255] ^ R[255 & l] ^ _[g + 1],
                                o = S[c >>> 24] ^ M[h >> 16 & 255] ^ A[l >> 8 & 255] ^ R[255 & u] ^ _[g + 2],
                                s = S[h >>> 24] ^ M[l >> 16 & 255] ^ A[u >> 8 & 255] ^ R[255 & c] ^ _[g + 3],
                                l = i,
                                u = a,
                                c = o,
                                h = s,
                                g += 4;
                            i = E[l >>> 24] << 24 ^ E[u >> 16 & 255] << 16 ^ E[c >> 8 & 255] << 8 ^ E[255 & h] ^ _[g],
                            a = E[u >>> 24] << 24 ^ E[c >> 16 & 255] << 16 ^ E[h >> 8 & 255] << 8 ^ E[255 & l] ^ _[g + 1],
                            o = E[c >>> 24] << 24 ^ E[h >> 16 & 255] << 16 ^ E[l >> 8 & 255] << 8 ^ E[255 & u] ^ _[g + 2],
                            s = E[h >>> 24] << 24 ^ E[l >> 16 & 255] << 16 ^ E[u >> 8 & 255] << 8 ^ E[255 & c] ^ _[g + 3],
                            g += 3,
                            I[t] = N(i ^ C),
                            I[t + 1] = N(s ^ P),
                            I[t + 2] = N(o ^ O),
                            I[t + 3] = N(a ^ k),
                            C = d,
                            P = f,
                            O = p,
                            k = m,
                            t += 4
                        }
                        return r ? (y = I.buffer,
                        b = y.byteLength,
                        (x = b && new DataView(y).getUint8(b - 1)) ? y.slice(0, b - x) : y) : I.buffer
                    }
                    ,
                    t.destroy = function() {
                        this.key = void 0,
                        this.keySize = void 0,
                        this.ksRows = void 0,
                        this.sBox = void 0,
                        this.invSBox = void 0,
                        this.subMix = void 0,
                        this.invSubMix = void 0,
                        this.keySchedule = void 0,
                        this.invKeySchedule = void 0,
                        this.rcon = void 0
                    }
                    ,
                    e
                }()
                  , o = n("./src/errors.ts")
                  , s = n("./src/utils/logger.js")
                  , l = n("./src/events.js")
                  , u = n("./src/utils/get-self-scope.js")
                  , c = Object(u.getSelfScope)()
                  , h = function() {
                    function e(e, t, n) {
                        var r = (void 0 === n ? {} : n).removePKCS7Padding
                          , i = void 0 === r || r;
                        if (this.logEnabled = !0,
                        this.observer = e,
                        this.config = t,
                        this.removePKCS7Padding = i,
                        i)
                            try {
                                var a = c.crypto;
                                a && (this.subtle = a.subtle || a.webkitSubtle)
                            } catch (e) {}
                        this.disableWebCrypto = !this.subtle
                    }
                    var t = e.prototype;
                    return t.isSync = function() {
                        return this.disableWebCrypto && this.config.enableSoftwareAES
                    }
                    ,
                    t.decrypt = function(e, t, n, o) {
                        var l = this;
                        if (this.disableWebCrypto && this.config.enableSoftwareAES) {
                            this.logEnabled && (s.logger.log("JS AES decrypt"),
                            this.logEnabled = !1);
                            var u = this.decryptor;
                            u || (this.decryptor = u = new a),
                            u.expandKey(t),
                            o(u.decrypt(e, 0, n, this.removePKCS7Padding))
                        } else {
                            this.logEnabled && (s.logger.log("WebCrypto AES decrypt"),
                            this.logEnabled = !1);
                            var c = this.subtle;
                            this.key !== t && (this.key = t,
                            this.fastAesKey = new i(c,t)),
                            this.fastAesKey.expandKey().then((function(i) {
                                new r(c,n).decrypt(e, i).catch((function(r) {
                                    l.onWebCryptoError(r, e, t, n, o)
                                }
                                )).then((function(e) {
                                    o(e)
                                }
                                ))
                            }
                            )).catch((function(r) {
                                l.onWebCryptoError(r, e, t, n, o)
                            }
                            ))
                        }
                    }
                    ,
                    t.onWebCryptoError = function(e, t, n, r, i) {
                        this.config.enableSoftwareAES ? (s.logger.log("WebCrypto Error, disable WebCrypto API"),
                        this.disableWebCrypto = !0,
                        this.logEnabled = !0,
                        this.decrypt(t, n, r, i)) : (s.logger.error("decrypting error : " + e.message),
                        this.observer.trigger(l.default.ERROR, {
                            type: o.ErrorTypes.MEDIA_ERROR,
                            details: o.ErrorDetails.FRAG_DECRYPT_ERROR,
                            fatal: !0,
                            reason: e.message
                        }))
                    }
                    ,
                    t.destroy = function() {
                        var e = this.decryptor;
                        e && (e.destroy(),
                        this.decryptor = void 0)
                    }
                    ,
                    e
                }();
                t.default = h
            },
            "./src/demux/demuxer-inline.js": /*!**************************************************!*\
  !*** ./src/demux/demuxer-inline.js + 12 modules ***!
  \**************************************************/
            /*! exports provided: default */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/crypt/decrypter.js because of ./src/hls.ts */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/demux/id3.js because of ./src/hls.ts */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/demux/mp4demuxer.js because of ./src/hls.ts */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/errors.ts because of ./src/hls.ts */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/events.js because of ./src/hls.ts */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/polyfills/number-isFinite.js because of ./src/hls.ts */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/utils/get-self-scope.js because of ./src/hls.ts */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/utils/logger.js because of ./src/hls.ts */
            function(e, t, n) {
                "use strict";
                n.r(t);
                var r = n("./src/events.js")
                  , i = n("./src/errors.ts")
                  , a = n("./src/crypt/decrypter.js")
                  , o = n("./src/polyfills/number-isFinite.js")
                  , s = n("./src/utils/logger.js")
                  , l = n("./src/utils/get-self-scope.js");
                function u(e, t) {
                    return 255 === e[t] && 240 == (246 & e[t + 1])
                }
                function c(e, t) {
                    return 1 & e[t + 1] ? 7 : 9
                }
                function h(e, t) {
                    return (3 & e[t + 3]) << 11 | e[t + 4] << 3 | (224 & e[t + 5]) >>> 5
                }
                function d(e, t) {
                    return !!(t + 1 < e.length && u(e, t))
                }
                function f(e, t) {
                    if (d(e, t)) {
                        var n = c(e, t);
                        t + 5 < e.length && (n = h(e, t));
                        var r = t + n;
                        if (r === e.length || r + 1 < e.length && u(e, r))
                            return !0
                    }
                    return !1
                }
                function p(e, t, n, a, o) {
                    if (!e.samplerate) {
                        var l = function(e, t, n, a) {
                            var o, l, u, c, h, d = navigator.userAgent.toLowerCase(), f = a, p = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                            if (o = 1 + ((192 & t[n + 2]) >>> 6),
                            !((l = (60 & t[n + 2]) >>> 2) > p.length - 1))
                                return c = (1 & t[n + 2]) << 2,
                                c |= (192 & t[n + 3]) >>> 6,
                                s.logger.log("manifest codec:" + a + ",ADTS data:type:" + o + ",sampleingIndex:" + l + "[" + p[l] + "Hz],channelConfig:" + c),
                                /firefox/i.test(d) ? l >= 6 ? (o = 5,
                                h = new Array(4),
                                u = l - 3) : (o = 2,
                                h = new Array(2),
                                u = l) : -1 !== d.indexOf("android") ? (o = 2,
                                h = new Array(2),
                                u = l) : (o = 5,
                                h = new Array(4),
                                a && (-1 !== a.indexOf("mp4a.40.29") || -1 !== a.indexOf("mp4a.40.5")) || !a && l >= 6 ? u = l - 3 : ((a && -1 !== a.indexOf("mp4a.40.2") && (l >= 6 && 1 === c || /vivaldi/i.test(d)) || !a && 1 === c) && (o = 2,
                                h = new Array(2)),
                                u = l)),
                                h[0] = o << 3,
                                h[0] |= (14 & l) >> 1,
                                h[1] |= (1 & l) << 7,
                                h[1] |= c << 3,
                                5 === o && (h[1] |= (14 & u) >> 1,
                                h[2] = (1 & u) << 7,
                                h[2] |= 8,
                                h[3] = 0),
                                {
                                    config: h,
                                    samplerate: p[l],
                                    channelCount: c,
                                    codec: "mp4a.40." + o,
                                    manifestCodec: f
                                };
                            e.trigger(r.default.ERROR, {
                                type: i.ErrorTypes.MEDIA_ERROR,
                                details: i.ErrorDetails.FRAG_PARSING_ERROR,
                                fatal: !0,
                                reason: "invalid ADTS sampling index:" + l
                            })
                        }(t, n, a, o);
                        e.config = l.config,
                        e.samplerate = l.samplerate,
                        e.channelCount = l.channelCount,
                        e.codec = l.codec,
                        e.manifestCodec = l.manifestCodec,
                        s.logger.log("parsed codec:" + e.codec + ",rate:" + l.samplerate + ",nb channel:" + l.channelCount)
                    }
                }
                function m(e) {
                    return 9216e4 / e
                }
                function g(e, t, n, r, i) {
                    var a = function(e, t, n, r, i) {
                        var a, o, s = e.length;
                        if (a = c(e, t),
                        o = h(e, t),
                        (o -= a) > 0 && t + a + o <= s)
                            return {
                                headerLength: a,
                                frameLength: o,
                                stamp: n + r * i
                            }
                    }(t, n, r, i, m(e.samplerate));
                    if (a) {
                        var o = a.stamp
                          , s = a.headerLength
                          , l = a.frameLength
                          , u = {
                            unit: t.subarray(n + s, n + s + l),
                            pts: o,
                            dts: o
                        };
                        return e.samples.push(u),
                        {
                            sample: u,
                            length: l + s
                        }
                    }
                }
                var v = n("./src/demux/id3.js")
                  , y = function() {
                    function e(e, t, n) {
                        this.observer = e,
                        this.config = n,
                        this.remuxer = t
                    }
                    var t = e.prototype;
                    return t.resetInitSegment = function(e, t, n, r) {
                        this._audioTrack = {
                            container: "audio/adts",
                            type: "audio",
                            id: 0,
                            sequenceNumber: 0,
                            isAAC: !0,
                            samples: [],
                            len: 0,
                            manifestCodec: t,
                            duration: r,
                            inputTimeScale: 9e4
                        }
                    }
                    ,
                    t.resetTimeStamp = function() {}
                    ,
                    e.probe = function(e) {
                        if (!e)
                            return !1;
                        for (var t = (v.default.getID3Data(e, 0) || []).length, n = e.length; t < n; t++)
                            if (f(e, t))
                                return s.logger.log("ADTS sync word found !"),
                                !0;
                        return !1
                    }
                    ,
                    t.append = function(e, t, n, r) {
                        for (var i = this._audioTrack, a = v.default.getID3Data(e, 0) || [], l = v.default.getTimeStamp(a), u = Object(o.isFiniteNumber)(l) ? 90 * l : 9e4 * t, c = 0, h = u, f = e.length, m = a.length, y = [{
                            pts: h,
                            dts: h,
                            data: a
                        }]; m < f - 1; )
                            if (d(e, m) && m + 5 < f) {
                                p(i, this.observer, e, m, i.manifestCodec);
                                var b = g(i, e, m, u, c);
                                if (!b) {
                                    s.logger.log("Unable to parse AAC frame");
                                    break
                                }
                                m += b.length,
                                h = b.sample.pts,
                                c++
                            } else
                                v.default.isHeader(e, m) ? (a = v.default.getID3Data(e, m),
                                y.push({
                                    pts: h,
                                    dts: h,
                                    data: a
                                }),
                                m += a.length) : m++;
                        this.remuxer.remux(i, {
                            samples: []
                        }, {
                            samples: y,
                            inputTimeScale: 9e4
                        }, {
                            samples: []
                        }, t, n, r)
                    }
                    ,
                    t.destroy = function() {}
                    ,
                    e
                }()
                  , b = n("./src/demux/mp4demuxer.js")
                  , x = {
                    BitratesMap: [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160],
                    SamplingRateMap: [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3],
                    SamplesCoefficients: [[0, 72, 144, 12], [0, 0, 0, 0], [0, 72, 144, 12], [0, 144, 144, 12]],
                    BytesInSlot: [0, 1, 1, 4],
                    appendFrame: function(e, t, n, r, i) {
                        if (!(n + 24 > t.length)) {
                            var a = this.parseHeader(t, n);
                            if (a && n + a.frameLength <= t.length) {
                                var o = r + i * (9e4 * a.samplesPerFrame / a.sampleRate)
                                  , s = {
                                    unit: t.subarray(n, n + a.frameLength),
                                    pts: o,
                                    dts: o
                                };
                                return e.config = [],
                                e.channelCount = a.channelCount,
                                e.samplerate = a.sampleRate,
                                e.samples.push(s),
                                {
                                    sample: s,
                                    length: a.frameLength
                                }
                            }
                        }
                    },
                    parseHeader: function(e, t) {
                        var n = e[t + 1] >> 3 & 3
                          , r = e[t + 1] >> 1 & 3
                          , i = e[t + 2] >> 4 & 15
                          , a = e[t + 2] >> 2 & 3
                          , o = e[t + 2] >> 1 & 1;
                        if (1 !== n && 0 !== i && 15 !== i && 3 !== a) {
                            var s = 3 === n ? 3 - r : 3 === r ? 3 : 4
                              , l = 1e3 * x.BitratesMap[14 * s + i - 1]
                              , u = 3 === n ? 0 : 2 === n ? 1 : 2
                              , c = x.SamplingRateMap[3 * u + a]
                              , h = e[t + 3] >> 6 == 3 ? 1 : 2
                              , d = x.SamplesCoefficients[n][r]
                              , f = x.BytesInSlot[r]
                              , p = 8 * d * f;
                            return {
                                sampleRate: c,
                                channelCount: h,
                                frameLength: parseInt(d * l / c + o, 10) * f,
                                samplesPerFrame: p
                            }
                        }
                    },
                    isHeaderPattern: function(e, t) {
                        return 255 === e[t] && 224 == (224 & e[t + 1]) && 0 != (6 & e[t + 1])
                    },
                    isHeader: function(e, t) {
                        return !!(t + 1 < e.length && this.isHeaderPattern(e, t))
                    },
                    probe: function(e, t) {
                        if (t + 1 < e.length && this.isHeaderPattern(e, t)) {
                            var n = this.parseHeader(e, t)
                              , r = 4;
                            n && n.frameLength && (r = n.frameLength);
                            var i = t + r;
                            if (i === e.length || i + 1 < e.length && this.isHeaderPattern(e, i))
                                return !0
                        }
                        return !1
                    }
                }
                  , w = x
                  , _ = function() {
                    function e(e) {
                        this.data = e,
                        this.bytesAvailable = e.byteLength,
                        this.word = 0,
                        this.bitsAvailable = 0
                    }
                    var t = e.prototype;
                    return t.loadWord = function() {
                        var e = this.data
                          , t = this.bytesAvailable
                          , n = e.byteLength - t
                          , r = new Uint8Array(4)
                          , i = Math.min(4, t);
                        if (0 === i)
                            throw new Error("no bytes available");
                        r.set(e.subarray(n, n + i)),
                        this.word = new DataView(r.buffer).getUint32(0),
                        this.bitsAvailable = 8 * i,
                        this.bytesAvailable -= i
                    }
                    ,
                    t.skipBits = function(e) {
                        var t;
                        this.bitsAvailable > e ? (this.word <<= e,
                        this.bitsAvailable -= e) : (e -= this.bitsAvailable,
                        e -= (t = e >> 3) >> 3,
                        this.bytesAvailable -= t,
                        this.loadWord(),
                        this.word <<= e,
                        this.bitsAvailable -= e)
                    }
                    ,
                    t.readBits = function(e) {
                        var t = Math.min(this.bitsAvailable, e)
                          , n = this.word >>> 32 - t;
                        return e > 32 && s.logger.error("Cannot read more than 32 bits at a time"),
                        this.bitsAvailable -= t,
                        this.bitsAvailable > 0 ? this.word <<= t : this.bytesAvailable > 0 && this.loadWord(),
                        (t = e - t) > 0 && this.bitsAvailable ? n << t | this.readBits(t) : n
                    }
                    ,
                    t.skipLZ = function() {
                        var e;
                        for (e = 0; e < this.bitsAvailable; ++e)
                            if (0 != (this.word & 2147483648 >>> e))
                                return this.word <<= e,
                                this.bitsAvailable -= e,
                                e;
                        return this.loadWord(),
                        e + this.skipLZ()
                    }
                    ,
                    t.skipUEG = function() {
                        this.skipBits(1 + this.skipLZ())
                    }
                    ,
                    t.skipEG = function() {
                        this.skipBits(1 + this.skipLZ())
                    }
                    ,
                    t.readUEG = function() {
                        var e = this.skipLZ();
                        return this.readBits(e + 1) - 1
                    }
                    ,
                    t.readEG = function() {
                        var e = this.readUEG();
                        return 1 & e ? 1 + e >>> 1 : -1 * (e >>> 1)
                    }
                    ,
                    t.readBoolean = function() {
                        return 1 === this.readBits(1)
                    }
                    ,
                    t.readUByte = function() {
                        return this.readBits(8)
                    }
                    ,
                    t.readUShort = function() {
                        return this.readBits(16)
                    }
                    ,
                    t.readUInt = function() {
                        return this.readBits(32)
                    }
                    ,
                    t.skipScalingList = function(e) {
                        var t, n = 8, r = 8;
                        for (t = 0; t < e; t++)
                            0 !== r && (r = (n + this.readEG() + 256) % 256),
                            n = 0 === r ? n : r
                    }
                    ,
                    t.readSPS = function() {
                        var e, t, n, r, i, a, o, s = 0, l = 0, u = 0, c = 0, h = this.readUByte.bind(this), d = this.readBits.bind(this), f = this.readUEG.bind(this), p = this.readBoolean.bind(this), m = this.skipBits.bind(this), g = this.skipEG.bind(this), v = this.skipUEG.bind(this), y = this.skipScalingList.bind(this);
                        if (h(),
                        e = h(),
                        d(5),
                        m(3),
                        h(),
                        v(),
                        100 === e || 110 === e || 122 === e || 244 === e || 44 === e || 83 === e || 86 === e || 118 === e || 128 === e) {
                            var b = f();
                            if (3 === b && m(1),
                            v(),
                            v(),
                            m(1),
                            p())
                                for (a = 3 !== b ? 8 : 12,
                                o = 0; o < a; o++)
                                    p() && y(o < 6 ? 16 : 64)
                        }
                        v();
                        var x = f();
                        if (0 === x)
                            f();
                        else if (1 === x)
                            for (m(1),
                            g(),
                            g(),
                            t = f(),
                            o = 0; o < t; o++)
                                g();
                        v(),
                        m(1),
                        n = f(),
                        r = f(),
                        0 === (i = d(1)) && m(1),
                        m(1),
                        p() && (s = f(),
                        l = f(),
                        u = f(),
                        c = f());
                        var w = [1, 1];
                        if (p() && p())
                            switch (h()) {
                            case 1:
                                w = [1, 1];
                                break;
                            case 2:
                                w = [12, 11];
                                break;
                            case 3:
                                w = [10, 11];
                                break;
                            case 4:
                                w = [16, 11];
                                break;
                            case 5:
                                w = [40, 33];
                                break;
                            case 6:
                                w = [24, 11];
                                break;
                            case 7:
                                w = [20, 11];
                                break;
                            case 8:
                                w = [32, 11];
                                break;
                            case 9:
                                w = [80, 33];
                                break;
                            case 10:
                                w = [18, 11];
                                break;
                            case 11:
                                w = [15, 11];
                                break;
                            case 12:
                                w = [64, 33];
                                break;
                            case 13:
                                w = [160, 99];
                                break;
                            case 14:
                                w = [4, 3];
                                break;
                            case 15:
                                w = [3, 2];
                                break;
                            case 16:
                                w = [2, 1];
                                break;
                            case 255:
                                w = [h() << 8 | h(), h() << 8 | h()]
                            }
                        return {
                            width: Math.ceil(16 * (n + 1) - 2 * s - 2 * l),
                            height: (2 - i) * (r + 1) * 16 - (i ? 2 : 4) * (u + c),
                            pixelRatio: w
                        }
                    }
                    ,
                    t.readSliceType = function() {
                        return this.readUByte(),
                        this.readUEG(),
                        this.readUEG()
                    }
                    ,
                    e
                }()
                  , E = function() {
                    function e(e, t, n, r) {
                        this.decryptdata = n,
                        this.discardEPB = r,
                        this.decrypter = new a.default(e,t,{
                            removePKCS7Padding: !1
                        })
                    }
                    var t = e.prototype;
                    return t.decryptBuffer = function(e, t) {
                        this.decrypter.decrypt(e, this.decryptdata.key.buffer, this.decryptdata.iv.buffer, t)
                    }
                    ,
                    t.decryptAacSample = function(e, t, n, r) {
                        var i = e[t].unit
                          , a = i.subarray(16, i.length - i.length % 16)
                          , o = a.buffer.slice(a.byteOffset, a.byteOffset + a.length)
                          , s = this;
                        this.decryptBuffer(o, (function(a) {
                            a = new Uint8Array(a),
                            i.set(a, 16),
                            r || s.decryptAacSamples(e, t + 1, n)
                        }
                        ))
                    }
                    ,
                    t.decryptAacSamples = function(e, t, n) {
                        for (; ; t++) {
                            if (t >= e.length)
                                return void n();
                            if (!(e[t].unit.length < 32)) {
                                var r = this.decrypter.isSync();
                                if (this.decryptAacSample(e, t, n, r),
                                !r)
                                    return
                            }
                        }
                    }
                    ,
                    t.getAvcEncryptedData = function(e) {
                        for (var t = 16 * Math.floor((e.length - 48) / 160) + 16, n = new Int8Array(t), r = 0, i = 32; i <= e.length - 16; i += 160,
                        r += 16)
                            n.set(e.subarray(i, i + 16), r);
                        return n
                    }
                    ,
                    t.getAvcDecryptedUnit = function(e, t) {
                        t = new Uint8Array(t);
                        for (var n = 0, r = 32; r <= e.length - 16; r += 160,
                        n += 16)
                            e.set(t.subarray(n, n + 16), r);
                        return e
                    }
                    ,
                    t.decryptAvcSample = function(e, t, n, r, i, a) {
                        var o = this.discardEPB(i.data)
                          , s = this.getAvcEncryptedData(o)
                          , l = this;
                        this.decryptBuffer(s.buffer, (function(s) {
                            i.data = l.getAvcDecryptedUnit(o, s),
                            a || l.decryptAvcSamples(e, t, n + 1, r)
                        }
                        ))
                    }
                    ,
                    t.decryptAvcSamples = function(e, t, n, r) {
                        for (; ; t++,
                        n = 0) {
                            if (t >= e.length)
                                return void r();
                            for (var i = e[t].units; !(n >= i.length); n++) {
                                var a = i[n];
                                if (!(a.length <= 48 || 1 !== a.type && 5 !== a.type)) {
                                    var o = this.decrypter.isSync();
                                    if (this.decryptAvcSample(e, t, n, r, a, o),
                                    !o)
                                        return
                                }
                            }
                        }
                    }
                    ,
                    e
                }()
                  , T = {
                    video: 1,
                    audio: 2,
                    id3: 3,
                    text: 4
                }
                  , S = function() {
                    function e(e, t, n, r) {
                        this.observer = e,
                        this.config = n,
                        this.typeSupported = r,
                        this.remuxer = t,
                        this.sampleAes = null
                    }
                    var t = e.prototype;
                    return t.setDecryptData = function(e) {
                        null != e && null != e.key && "SAMPLE-AES" === e.method ? this.sampleAes = new E(this.observer,this.config,e,this.discardEPB) : this.sampleAes = null
                    }
                    ,
                    e.probe = function(t) {
                        var n = e._syncOffset(t);
                        return !(n < 0 || (n && s.logger.warn("MPEG2-TS detected but first sync word found @ offset " + n + ", junk ahead ?"),
                        0))
                    }
                    ,
                    e._syncOffset = function(e) {
                        for (var t = Math.min(1e3, e.length - 564), n = 0; n < t; ) {
                            if (71 === e[n] && 71 === e[n + 188] && 71 === e[n + 376])
                                return n;
                            n++
                        }
                        return -1
                    }
                    ,
                    e.createTrack = function(e, t) {
                        return {
                            container: "video" === e || "audio" === e ? "video/mp2t" : void 0,
                            type: e,
                            id: T[e],
                            pid: -1,
                            inputTimeScale: 9e4,
                            sequenceNumber: 0,
                            samples: [],
                            dropped: "video" === e ? 0 : void 0,
                            isAAC: "audio" === e || void 0,
                            duration: "audio" === e ? t : void 0
                        }
                    }
                    ,
                    t.resetInitSegment = function(t, n, r, i) {
                        this.pmtParsed = !1,
                        this._pmtId = -1,
                        this._avcTrack = e.createTrack("video", i),
                        this._audioTrack = e.createTrack("audio", i),
                        this._id3Track = e.createTrack("id3", i),
                        this._txtTrack = e.createTrack("text", i),
                        this.aacOverFlow = null,
                        this.aacLastPTS = null,
                        this.avcSample = null,
                        this.audioCodec = n,
                        this.videoCodec = r,
                        this._duration = i
                    }
                    ,
                    t.resetTimeStamp = function() {}
                    ,
                    t.append = function(t, n, a, o) {
                        var l, u, c, h, d, f = t.length, p = !1;
                        this.contiguous = a;
                        var m = this.pmtParsed
                          , g = this._avcTrack
                          , v = this._audioTrack
                          , y = this._id3Track
                          , b = g.pid
                          , x = v.pid
                          , w = y.pid
                          , _ = this._pmtId
                          , E = g.pesData
                          , T = v.pesData
                          , S = y.pesData
                          , M = this._parsePAT
                          , A = this._parsePMT
                          , R = this._parsePES
                          , L = this._parseAVCPES.bind(this)
                          , C = this._parseAACPES.bind(this)
                          , P = this._parseMPEGPES.bind(this)
                          , O = this._parseID3PES.bind(this)
                          , k = e._syncOffset(t);
                        for (f -= (f + k) % 188,
                        l = k; l < f; l += 188)
                            if (71 === t[l]) {
                                if (u = !!(64 & t[l + 1]),
                                c = ((31 & t[l + 1]) << 8) + t[l + 2],
                                (48 & t[l + 3]) >> 4 > 1) {
                                    if ((h = l + 5 + t[l + 4]) === l + 188)
                                        continue
                                } else
                                    h = l + 4;
                                switch (c) {
                                case b:
                                    u && (E && (d = R(E)) && L(d, !1),
                                    E = {
                                        data: [],
                                        size: 0
                                    }),
                                    E && (E.data.push(t.subarray(h, l + 188)),
                                    E.size += l + 188 - h);
                                    break;
                                case x:
                                    u && (T && (d = R(T)) && (v.isAAC ? C(d) : P(d)),
                                    T = {
                                        data: [],
                                        size: 0
                                    }),
                                    T && (T.data.push(t.subarray(h, l + 188)),
                                    T.size += l + 188 - h);
                                    break;
                                case w:
                                    u && (S && (d = R(S)) && O(d),
                                    S = {
                                        data: [],
                                        size: 0
                                    }),
                                    S && (S.data.push(t.subarray(h, l + 188)),
                                    S.size += l + 188 - h);
                                    break;
                                case 0:
                                    u && (h += t[h] + 1),
                                    _ = this._pmtId = M(t, h);
                                    break;
                                case _:
                                    u && (h += t[h] + 1);
                                    var D = A(t, h, !0 === this.typeSupported.mpeg || !0 === this.typeSupported.mp3, null != this.sampleAes);
                                    (b = D.avc) > 0 && (g.pid = b),
                                    (x = D.audio) > 0 && (v.pid = x,
                                    v.isAAC = D.isAAC),
                                    (w = D.id3) > 0 && (y.pid = w),
                                    p && !m && (s.logger.log("reparse from beginning"),
                                    p = !1,
                                    l = k - 188),
                                    m = this.pmtParsed = !0;
                                    break;
                                case 17:
                                case 8191:
                                    break;
                                default:
                                    p = !0
                                }
                            } else
                                this.observer.trigger(r.default.ERROR, {
                                    type: i.ErrorTypes.MEDIA_ERROR,
                                    details: i.ErrorDetails.FRAG_PARSING_ERROR,
                                    fatal: !1,
                                    reason: "TS packet did not start with 0x47"
                                });
                        E && (d = R(E)) ? (L(d, !0),
                        g.pesData = null) : g.pesData = E,
                        T && (d = R(T)) ? (v.isAAC ? C(d) : P(d),
                        v.pesData = null) : (T && T.size && s.logger.log("last AAC PES packet truncated,might overlap between fragments"),
                        v.pesData = T),
                        S && (d = R(S)) ? (O(d),
                        y.pesData = null) : y.pesData = S,
                        null == this.sampleAes ? this.remuxer.remux(v, g, y, this._txtTrack, n, a, o) : this.decryptAndRemux(v, g, y, this._txtTrack, n, a, o)
                    }
                    ,
                    t.decryptAndRemux = function(e, t, n, r, i, a, o) {
                        if (e.samples && e.isAAC) {
                            var s = this;
                            this.sampleAes.decryptAacSamples(e.samples, 0, (function() {
                                s.decryptAndRemuxAvc(e, t, n, r, i, a, o)
                            }
                            ))
                        } else
                            this.decryptAndRemuxAvc(e, t, n, r, i, a, o)
                    }
                    ,
                    t.decryptAndRemuxAvc = function(e, t, n, r, i, a, o) {
                        if (t.samples) {
                            var s = this;
                            this.sampleAes.decryptAvcSamples(t.samples, 0, 0, (function() {
                                s.remuxer.remux(e, t, n, r, i, a, o)
                            }
                            ))
                        } else
                            this.remuxer.remux(e, t, n, r, i, a, o)
                    }
                    ,
                    t.destroy = function() {
                        this._initPTS = this._initDTS = void 0,
                        this._duration = 0
                    }
                    ,
                    t._parsePAT = function(e, t) {
                        return (31 & e[t + 10]) << 8 | e[t + 11]
                    }
                    ,
                    t._parsePMT = function(e, t, n, r) {
                        var i, a, o = {
                            audio: -1,
                            avc: -1,
                            id3: -1,
                            isAAC: !0
                        };
                        for (i = t + 3 + ((15 & e[t + 1]) << 8 | e[t + 2]) - 4,
                        t += 12 + ((15 & e[t + 10]) << 8 | e[t + 11]); t < i; ) {
                            switch (a = (31 & e[t + 1]) << 8 | e[t + 2],
                            e[t]) {
                            case 207:
                                if (!r) {
                                    s.logger.log("unknown stream type:" + e[t]);
                                    break
                                }
                            case 15:
                                -1 === o.audio && (o.audio = a);
                                break;
                            case 21:
                                -1 === o.id3 && (o.id3 = a);
                                break;
                            case 219:
                                if (!r) {
                                    s.logger.log("unknown stream type:" + e[t]);
                                    break
                                }
                            case 27:
                                -1 === o.avc && (o.avc = a);
                                break;
                            case 3:
                            case 4:
                                n ? -1 === o.audio && (o.audio = a,
                                o.isAAC = !1) : s.logger.log("MPEG audio found, not supported in this browser for now");
                                break;
                            case 36:
                                s.logger.warn("HEVC stream type found, not supported for now");
                                break;
                            default:
                                s.logger.log("unknown stream type:" + e[t])
                            }
                            t += 5 + ((15 & e[t + 3]) << 8 | e[t + 4])
                        }
                        return o
                    }
                    ,
                    t._parsePES = function(e) {
                        var t, n, r, i, a, o, l, u, c = 0, h = e.data;
                        if (!e || 0 === e.size)
                            return null;
                        for (; h[0].length < 19 && h.length > 1; ) {
                            var d = new Uint8Array(h[0].length + h[1].length);
                            d.set(h[0]),
                            d.set(h[1], h[0].length),
                            h[0] = d,
                            h.splice(1, 1)
                        }
                        if (1 === ((t = h[0])[0] << 16) + (t[1] << 8) + t[2]) {
                            if ((r = (t[4] << 8) + t[5]) && r > e.size - 6)
                                return null;
                            if (192 & (n = t[7]) && ((o = 536870912 * (14 & t[9]) + 4194304 * (255 & t[10]) + 16384 * (254 & t[11]) + 128 * (255 & t[12]) + (254 & t[13]) / 2) > 4294967295 && (o -= 8589934592),
                            64 & n ? ((l = 536870912 * (14 & t[14]) + 4194304 * (255 & t[15]) + 16384 * (254 & t[16]) + 128 * (255 & t[17]) + (254 & t[18]) / 2) > 4294967295 && (l -= 8589934592),
                            o - l > 54e5 && (s.logger.warn(Math.round((o - l) / 9e4) + "s delta between PTS and DTS, align them"),
                            o = l)) : l = o),
                            u = (i = t[8]) + 9,
                            e.size <= u)
                                return null;
                            e.size -= u,
                            a = new Uint8Array(e.size);
                            for (var f = 0, p = h.length; f < p; f++) {
                                var m = (t = h[f]).byteLength;
                                if (u) {
                                    if (u > m) {
                                        u -= m;
                                        continue
                                    }
                                    t = t.subarray(u),
                                    m -= u,
                                    u = 0
                                }
                                a.set(t, c),
                                c += m
                            }
                            return r && (r -= i + 3),
                            {
                                data: a,
                                pts: o,
                                dts: l,
                                len: r
                            }
                        }
                        return null
                    }
                    ,
                    t.pushAccesUnit = function(e, t) {
                        if (e.units.length && e.frame) {
                            var n = t.samples
                              , r = n.length;
                            if (isNaN(e.pts)) {
                                if (!r)
                                    return void t.dropped++;
                                var i = n[r - 1];
                                e.pts = i.pts,
                                e.dts = i.dts
                            }
                            !this.config.forceKeyFrameOnDiscontinuity || !0 === e.key || t.sps && (r || this.contiguous) ? (e.id = r,
                            n.push(e)) : t.dropped++
                        }
                        e.debug.length && s.logger.log(e.pts + "/" + e.dts + ":" + e.debug)
                    }
                    ,
                    t._parseAVCPES = function(e, t) {
                        var n, r, i, a = this, o = this._avcTrack, s = this._parseAVCNALu(e.data), l = this.avcSample, u = !1, c = this.pushAccesUnit.bind(this), h = function(e, t, n, r) {
                            return {
                                key: e,
                                pts: t,
                                dts: n,
                                units: [],
                                debug: r
                            }
                        };
                        e.data = null,
                        l && s.length && !o.audFound && (c(l, o),
                        l = this.avcSample = h(!1, e.pts, e.dts, "")),
                        s.forEach((function(t) {
                            switch (t.type) {
                            case 1:
                                r = !0,
                                l || (l = a.avcSample = h(!0, e.pts, e.dts, "")),
                                l.frame = !0;
                                var s = t.data;
                                if (u && s.length > 4) {
                                    var d = new _(s).readSliceType();
                                    2 !== d && 4 !== d && 7 !== d && 9 !== d || (l.key = !0)
                                }
                                break;
                            case 5:
                                r = !0,
                                l || (l = a.avcSample = h(!0, e.pts, e.dts, "")),
                                l.key = !0,
                                l.frame = !0;
                                break;
                            case 6:
                                r = !0,
                                (n = new _(a.discardEPB(t.data))).readUByte();
                                for (var f = 0, p = 0, m = !1, g = 0; !m && n.bytesAvailable > 1; ) {
                                    f = 0;
                                    do {
                                        f += g = n.readUByte()
                                    } while (255 === g);
                                    p = 0;
                                    do {
                                        p += g = n.readUByte()
                                    } while (255 === g);
                                    if (4 === f && 0 !== n.bytesAvailable) {
                                        if (m = !0,
                                        181 === n.readUByte() && 49 === n.readUShort() && 1195456820 === n.readUInt() && 3 === n.readUByte()) {
                                            var y = n.readUByte()
                                              , b = 31 & y
                                              , x = [y, n.readUByte()];
                                            for (i = 0; i < b; i++)
                                                x.push(n.readUByte()),
                                                x.push(n.readUByte()),
                                                x.push(n.readUByte());
                                            a._insertSampleInOrder(a._txtTrack.samples, {
                                                type: 3,
                                                pts: e.pts,
                                                bytes: x
                                            })
                                        }
                                    } else if (5 === f && 0 !== n.bytesAvailable) {
                                        if (m = !0,
                                        p > 16) {
                                            var w = [];
                                            for (i = 0; i < 16; i++)
                                                w.push(n.readUByte().toString(16)),
                                                3 !== i && 5 !== i && 7 !== i && 9 !== i || w.push("-");
                                            var E = p - 16
                                              , T = new Uint8Array(E);
                                            for (i = 0; i < E; i++)
                                                T[i] = n.readUByte();
                                            a._insertSampleInOrder(a._txtTrack.samples, {
                                                pts: e.pts,
                                                payloadType: f,
                                                uuid: w.join(""),
                                                userDataBytes: T,
                                                userData: Object(v.utf8ArrayToStr)(T.buffer)
                                            })
                                        }
                                    } else if (p < n.bytesAvailable)
                                        for (i = 0; i < p; i++)
                                            n.readUByte()
                                }
                                break;
                            case 7:
                                if (r = !0,
                                u = !0,
                                !o.sps) {
                                    var S = (n = new _(t.data)).readSPS();
                                    o.width = S.width,
                                    o.height = S.height,
                                    o.pixelRatio = S.pixelRatio,
                                    o.sps = [t.data],
                                    o.duration = a._duration;
                                    var M = t.data.subarray(1, 4)
                                      , A = "avc1.";
                                    for (i = 0; i < 3; i++) {
                                        var R = M[i].toString(16);
                                        R.length < 2 && (R = "0" + R),
                                        A += R
                                    }
                                    o.codec = A
                                }
                                break;
                            case 8:
                                r = !0,
                                o.pps || (o.pps = [t.data]);
                                break;
                            case 9:
                                r = !1,
                                o.audFound = !0,
                                l && c(l, o),
                                l = a.avcSample = h(!1, e.pts, e.dts, "");
                                break;
                            case 12:
                                r = !1;
                                break;
                            default:
                                r = !1,
                                l && (l.debug += "unknown NAL " + t.type + " ")
                            }
                            l && r && l.units.push(t)
                        }
                        )),
                        t && l && (c(l, o),
                        this.avcSample = null)
                    }
                    ,
                    t._insertSampleInOrder = function(e, t) {
                        var n = e.length;
                        if (n > 0) {
                            if (t.pts >= e[n - 1].pts)
                                e.push(t);
                            else
                                for (var r = n - 1; r >= 0; r--)
                                    if (t.pts < e[r].pts) {
                                        e.splice(r, 0, t);
                                        break
                                    }
                        } else
                            e.push(t)
                    }
                    ,
                    t._getLastNalUnit = function() {
                        var e, t = this.avcSample;
                        if (!t || 0 === t.units.length) {
                            var n = this._avcTrack.samples;
                            t = n[n.length - 1]
                        }
                        if (t) {
                            var r = t.units;
                            e = r[r.length - 1]
                        }
                        return e
                    }
                    ,
                    t._parseAVCNALu = function(e) {
                        var t, n, r, i, a = 0, o = e.byteLength, s = this._avcTrack, l = s.naluState || 0, u = l, c = [], h = -1;
                        for (-1 === l && (h = 0,
                        i = 31 & e[0],
                        l = 0,
                        a = 1); a < o; )
                            if (t = e[a++],
                            l)
                                if (1 !== l)
                                    if (t)
                                        if (1 === t) {
                                            if (h >= 0)
                                                r = {
                                                    data: e.subarray(h, a - l - 1),
                                                    type: i
                                                },
                                                c.push(r);
                                            else {
                                                var d = this._getLastNalUnit();
                                                if (d && (u && a <= 4 - u && d.state && (d.data = d.data.subarray(0, d.data.byteLength - u)),
                                                (n = a - l - 1) > 0)) {
                                                    var f = new Uint8Array(d.data.byteLength + n);
                                                    f.set(d.data, 0),
                                                    f.set(e.subarray(0, n), d.data.byteLength),
                                                    d.data = f
                                                }
                                            }
                                            a < o ? (h = a,
                                            i = 31 & e[a],
                                            l = 0) : l = -1
                                        } else
                                            l = 0;
                                    else
                                        l = 3;
                                else
                                    l = t ? 0 : 2;
                            else
                                l = t ? 0 : 1;
                        if (h >= 0 && l >= 0 && (r = {
                            data: e.subarray(h, o),
                            type: i,
                            state: l
                        },
                        c.push(r)),
                        0 === c.length) {
                            var p = this._getLastNalUnit();
                            if (p) {
                                var m = new Uint8Array(p.data.byteLength + e.byteLength);
                                m.set(p.data, 0),
                                m.set(e, p.data.byteLength),
                                p.data = m
                            }
                        }
                        return s.naluState = l,
                        c
                    }
                    ,
                    t.discardEPB = function(e) {
                        for (var t, n, r = e.byteLength, i = [], a = 1; a < r - 2; )
                            0 === e[a] && 0 === e[a + 1] && 3 === e[a + 2] ? (i.push(a + 2),
                            a += 2) : a++;
                        if (0 === i.length)
                            return e;
                        t = r - i.length,
                        n = new Uint8Array(t);
                        var o = 0;
                        for (a = 0; a < t; o++,
                        a++)
                            o === i[0] && (o++,
                            i.shift()),
                            n[a] = e[o];
                        return n
                    }
                    ,
                    t._parseAACPES = function(e) {
                        var t, n, a, o, l, u, c, h = this._audioTrack, f = e.data, v = e.pts, y = this.aacOverFlow, b = this.aacLastPTS;
                        if (y) {
                            var x = new Uint8Array(y.byteLength + f.byteLength);
                            x.set(y, 0),
                            x.set(f, y.byteLength),
                            f = x
                        }
                        for (a = 0,
                        l = f.length; a < l - 1 && !d(f, a); a++)
                            ;
                        if (!a || (a < l - 1 ? (u = "AAC PES did not start with ADTS header,offset:" + a,
                        c = !1) : (u = "no ADTS header found in AAC PES",
                        c = !0),
                        s.logger.warn("parsing error:" + u),
                        this.observer.trigger(r.default.ERROR, {
                            type: i.ErrorTypes.MEDIA_ERROR,
                            details: i.ErrorDetails.FRAG_PARSING_ERROR,
                            fatal: c,
                            reason: u
                        }),
                        !c)) {
                            if (p(h, this.observer, f, a, this.audioCodec),
                            n = 0,
                            t = m(h.samplerate),
                            y && b) {
                                var w = b + t;
                                Math.abs(w - v) > 1 && (s.logger.log("AAC: align PTS for overlapping frames by " + Math.round((w - v) / 90)),
                                v = w)
                            }
                            for (; a < l; ) {
                                if (d(f, a)) {
                                    if (a + 5 < l) {
                                        var _ = g(h, f, a, v, n);
                                        if (_) {
                                            a += _.length,
                                            o = _.sample.pts,
                                            n++;
                                            continue
                                        }
                                    }
                                    break
                                }
                                a++
                            }
                            y = a < l ? f.subarray(a, l) : null,
                            this.aacOverFlow = y,
                            this.aacLastPTS = o
                        }
                    }
                    ,
                    t._parseMPEGPES = function(e) {
                        for (var t = e.data, n = t.length, r = 0, i = 0, a = e.pts; i < n; )
                            if (w.isHeader(t, i)) {
                                var o = w.appendFrame(this._audioTrack, t, i, a, r);
                                if (!o)
                                    break;
                                i += o.length,
                                r++
                            } else
                                i++
                    }
                    ,
                    t._parseID3PES = function(e) {
                        this._id3Track.samples.push(e)
                    }
                    ,
                    e
                }()
                  , M = function() {
                    function e(e, t, n) {
                        this.observer = e,
                        this.config = n,
                        this.remuxer = t
                    }
                    var t = e.prototype;
                    return t.resetInitSegment = function(e, t, n, r) {
                        this._audioTrack = {
                            container: "audio/mpeg",
                            type: "audio",
                            id: -1,
                            sequenceNumber: 0,
                            isAAC: !1,
                            samples: [],
                            len: 0,
                            manifestCodec: t,
                            duration: r,
                            inputTimeScale: 9e4
                        }
                    }
                    ,
                    t.resetTimeStamp = function() {}
                    ,
                    e.probe = function(e) {
                        var t, n, r = v.default.getID3Data(e, 0);
                        if (r && void 0 !== v.default.getTimeStamp(r))
                            for (t = r.length,
                            n = Math.min(e.length - 1, t + 100); t < n; t++)
                                if (w.probe(e, t))
                                    return s.logger.log("MPEG Audio sync word found !"),
                                    !0;
                        return !1
                    }
                    ,
                    t.append = function(e, t, n, r) {
                        for (var i = v.default.getID3Data(e, 0), a = v.default.getTimeStamp(i), o = a ? 90 * a : 9e4 * t, s = i.length, l = e.length, u = 0, c = 0, h = this._audioTrack, d = [{
                            pts: o,
                            dts: o,
                            data: i
                        }]; s < l; )
                            if (w.isHeader(e, s)) {
                                var f = w.appendFrame(h, e, s, o, u);
                                if (!f)
                                    break;
                                s += f.length,
                                c = f.sample.pts,
                                u++
                            } else
                                v.default.isHeader(e, s) ? (i = v.default.getID3Data(e, s),
                                d.push({
                                    pts: c,
                                    dts: c,
                                    data: i
                                }),
                                s += i.length) : s++;
                        this.remuxer.remux(h, {
                            samples: []
                        }, {
                            samples: d,
                            inputTimeScale: 9e4
                        }, {
                            samples: []
                        }, t, n, r)
                    }
                    ,
                    t.destroy = function() {}
                    ,
                    e
                }()
                  , A = function() {
                    function e() {}
                    return e.getSilentFrame = function(e, t) {
                        switch (e) {
                        case "mp4a.40.2":
                            if (1 === t)
                                return new Uint8Array([0, 200, 0, 128, 35, 128]);
                            if (2 === t)
                                return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                            if (3 === t)
                                return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                            if (4 === t)
                                return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                            if (5 === t)
                                return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                            if (6 === t)
                                return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]);
                            break;
                        default:
                            if (1 === t)
                                return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                            if (2 === t)
                                return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                            if (3 === t)
                                return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94])
                        }
                        return null
                    }
                    ,
                    e
                }()
                  , R = Math.pow(2, 32) - 1
                  , L = function() {
                    function e() {}
                    return e.init = function() {
                        var t;
                        for (t in e.types = {
                            avc1: [],
                            avcC: [],
                            btrt: [],
                            dinf: [],
                            dref: [],
                            esds: [],
                            ftyp: [],
                            hdlr: [],
                            mdat: [],
                            mdhd: [],
                            mdia: [],
                            mfhd: [],
                            minf: [],
                            moof: [],
                            moov: [],
                            mp4a: [],
                            ".mp3": [],
                            mvex: [],
                            mvhd: [],
                            pasp: [],
                            sdtp: [],
                            stbl: [],
                            stco: [],
                            stsc: [],
                            stsd: [],
                            stsz: [],
                            stts: [],
                            tfdt: [],
                            tfhd: [],
                            traf: [],
                            trak: [],
                            trun: [],
                            trex: [],
                            tkhd: [],
                            vmhd: [],
                            smhd: []
                        },
                        e.types)
                            e.types.hasOwnProperty(t) && (e.types[t] = [t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2), t.charCodeAt(3)]);
                        var n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0])
                          , r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                        e.HDLR_TYPES = {
                            video: n,
                            audio: r
                        };
                        var i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1])
                          , a = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                        e.STTS = e.STSC = e.STCO = a,
                        e.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
                        e.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
                        e.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]),
                        e.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]);
                        var o = new Uint8Array([105, 115, 111, 109])
                          , s = new Uint8Array([97, 118, 99, 49])
                          , l = new Uint8Array([0, 0, 0, 1]);
                        e.FTYP = e.box(e.types.ftyp, o, l, o, s),
                        e.DINF = e.box(e.types.dinf, e.box(e.types.dref, i))
                    }
                    ,
                    e.box = function(e) {
                        for (var t, n = Array.prototype.slice.call(arguments, 1), r = 8, i = n.length, a = i; i--; )
                            r += n[i].byteLength;
                        for ((t = new Uint8Array(r))[0] = r >> 24 & 255,
                        t[1] = r >> 16 & 255,
                        t[2] = r >> 8 & 255,
                        t[3] = 255 & r,
                        t.set(e, 4),
                        i = 0,
                        r = 8; i < a; i++)
                            t.set(n[i], r),
                            r += n[i].byteLength;
                        return t
                    }
                    ,
                    e.hdlr = function(t) {
                        return e.box(e.types.hdlr, e.HDLR_TYPES[t])
                    }
                    ,
                    e.mdat = function(t) {
                        return e.box(e.types.mdat, t)
                    }
                    ,
                    e.mdhd = function(t, n) {
                        n *= t;
                        var r = Math.floor(n / (R + 1))
                          , i = Math.floor(n % (R + 1));
                        return e.box(e.types.mdhd, new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, 85, 196, 0, 0]))
                    }
                    ,
                    e.mdia = function(t) {
                        return e.box(e.types.mdia, e.mdhd(t.timescale, t.duration), e.hdlr(t.type), e.minf(t))
                    }
                    ,
                    e.mfhd = function(t) {
                        return e.box(e.types.mfhd, new Uint8Array([0, 0, 0, 0, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t]))
                    }
                    ,
                    e.minf = function(t) {
                        return "audio" === t.type ? e.box(e.types.minf, e.box(e.types.smhd, e.SMHD), e.DINF, e.stbl(t)) : e.box(e.types.minf, e.box(e.types.vmhd, e.VMHD), e.DINF, e.stbl(t))
                    }
                    ,
                    e.moof = function(t, n, r) {
                        return e.box(e.types.moof, e.mfhd(t), e.traf(r, n))
                    }
                    ,
                    e.moov = function(t) {
                        for (var n = t.length, r = []; n--; )
                            r[n] = e.trak(t[n]);
                        return e.box.apply(null, [e.types.moov, e.mvhd(t[0].timescale, t[0].duration)].concat(r).concat(e.mvex(t)))
                    }
                    ,
                    e.mvex = function(t) {
                        for (var n = t.length, r = []; n--; )
                            r[n] = e.trex(t[n]);
                        return e.box.apply(null, [e.types.mvex].concat(r))
                    }
                    ,
                    e.mvhd = function(t, n) {
                        n *= t;
                        var r = Math.floor(n / (R + 1))
                          , i = Math.floor(n % (R + 1))
                          , a = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                        return e.box(e.types.mvhd, a)
                    }
                    ,
                    e.sdtp = function(t) {
                        var n, r, i = t.samples || [], a = new Uint8Array(4 + i.length);
                        for (r = 0; r < i.length; r++)
                            n = i[r].flags,
                            a[r + 4] = n.dependsOn << 4 | n.isDependedOn << 2 | n.hasRedundancy;
                        return e.box(e.types.sdtp, a)
                    }
                    ,
                    e.stbl = function(t) {
                        return e.box(e.types.stbl, e.stsd(t), e.box(e.types.stts, e.STTS), e.box(e.types.stsc, e.STSC), e.box(e.types.stsz, e.STSZ), e.box(e.types.stco, e.STCO))
                    }
                    ,
                    e.avc1 = function(t) {
                        var n, r, i, a = [], o = [];
                        for (n = 0; n < t.sps.length; n++)
                            i = (r = t.sps[n]).byteLength,
                            a.push(i >>> 8 & 255),
                            a.push(255 & i),
                            a = a.concat(Array.prototype.slice.call(r));
                        for (n = 0; n < t.pps.length; n++)
                            i = (r = t.pps[n]).byteLength,
                            o.push(i >>> 8 & 255),
                            o.push(255 & i),
                            o = o.concat(Array.prototype.slice.call(r));
                        var s = e.box(e.types.avcC, new Uint8Array([1, a[3], a[4], a[5], 255, 224 | t.sps.length].concat(a).concat([t.pps.length]).concat(o)))
                          , l = t.width
                          , u = t.height
                          , c = t.pixelRatio[0]
                          , h = t.pixelRatio[1];
                        return e.box(e.types.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, l >> 8 & 255, 255 & l, u >> 8 & 255, 255 & u, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), s, e.box(e.types.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])), e.box(e.types.pasp, new Uint8Array([c >> 24, c >> 16 & 255, c >> 8 & 255, 255 & c, h >> 24, h >> 16 & 255, h >> 8 & 255, 255 & h])))
                    }
                    ,
                    e.esds = function(e) {
                        var t = e.config.length;
                        return new Uint8Array([0, 0, 0, 0, 3, 23 + t, 0, 1, 0, 4, 15 + t, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([t]).concat(e.config).concat([6, 1, 2]))
                    }
                    ,
                    e.mp4a = function(t) {
                        var n = t.samplerate;
                        return e.box(e.types.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, n >> 8 & 255, 255 & n, 0, 0]), e.box(e.types.esds, e.esds(t)))
                    }
                    ,
                    e.mp3 = function(t) {
                        var n = t.samplerate;
                        return e.box(e.types[".mp3"], new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, n >> 8 & 255, 255 & n, 0, 0]))
                    }
                    ,
                    e.stsd = function(t) {
                        return "audio" === t.type ? t.isAAC || "mp3" !== t.codec ? e.box(e.types.stsd, e.STSD, e.mp4a(t)) : e.box(e.types.stsd, e.STSD, e.mp3(t)) : e.box(e.types.stsd, e.STSD, e.avc1(t))
                    }
                    ,
                    e.tkhd = function(t) {
                        var n = t.id
                          , r = t.duration * t.timescale
                          , i = t.width
                          , a = t.height
                          , o = Math.floor(r / (R + 1))
                          , s = Math.floor(r % (R + 1));
                        return e.box(e.types.tkhd, new Uint8Array([1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n, 0, 0, 0, 0, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o, s >> 24, s >> 16 & 255, s >> 8 & 255, 255 & s, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, i >> 8 & 255, 255 & i, 0, 0, a >> 8 & 255, 255 & a, 0, 0]))
                    }
                    ,
                    e.traf = function(t, n) {
                        var r = e.sdtp(t)
                          , i = t.id
                          , a = Math.floor(n / (R + 1))
                          , o = Math.floor(n % (R + 1));
                        return e.box(e.types.traf, e.box(e.types.tfhd, new Uint8Array([0, 0, 0, 0, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i])), e.box(e.types.tfdt, new Uint8Array([1, 0, 0, 0, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o])), e.trun(t, r.length + 16 + 20 + 8 + 16 + 8 + 8), r)
                    }
                    ,
                    e.trak = function(t) {
                        return t.duration = t.duration || 4294967295,
                        e.box(e.types.trak, e.tkhd(t), e.mdia(t))
                    }
                    ,
                    e.trex = function(t) {
                        var n = t.id;
                        return e.box(e.types.trex, new Uint8Array([0, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))
                    }
                    ,
                    e.trun = function(t, n) {
                        var r, i, a, o, s, l, u = t.samples || [], c = u.length, h = 12 + 16 * c, d = new Uint8Array(h);
                        for (n += 8 + h,
                        d.set([0, 0, 15, 1, c >>> 24 & 255, c >>> 16 & 255, c >>> 8 & 255, 255 & c, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, 255 & n], 0),
                        r = 0; r < c; r++)
                            a = (i = u[r]).duration,
                            o = i.size,
                            s = i.flags,
                            l = i.cts,
                            d.set([a >>> 24 & 255, a >>> 16 & 255, a >>> 8 & 255, 255 & a, o >>> 24 & 255, o >>> 16 & 255, o >>> 8 & 255, 255 & o, s.isLeading << 2 | s.dependsOn, s.isDependedOn << 6 | s.hasRedundancy << 4 | s.paddingValue << 1 | s.isNonSync, 61440 & s.degradPrio, 15 & s.degradPrio, l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, 255 & l], 12 + 16 * r);
                        return e.box(e.types.trun, d)
                    }
                    ,
                    e.initSegment = function(t) {
                        e.types || e.init();
                        var n, r = e.moov(t);
                        return (n = new Uint8Array(e.FTYP.byteLength + r.byteLength)).set(e.FTYP),
                        n.set(r, e.FTYP.byteLength),
                        n
                    }
                    ,
                    e
                }();
                function C(e, t, n, r) {
                    void 0 === n && (n = 1),
                    void 0 === r && (r = !1);
                    var i = e * t * n;
                    return r ? Math.round(i) : i
                }
                function P(e, t) {
                    return void 0 === t && (t = !1),
                    C(e, 1e3, 1 / 9e4, t)
                }
                function O(e, t) {
                    return void 0 === t && (t = 1),
                    C(e, 9e4, 1 / t)
                }
                var k, D = O(10), I = O(.2), N = function() {
                    function e(e, t, n, r) {
                        this.observer = e,
                        this.config = t,
                        this.typeSupported = n;
                        var i = navigator.userAgent;
                        this.isSafari = r && r.indexOf("Apple") > -1 && i && !i.match("CriOS"),
                        this.ISGenerated = !1
                    }
                    var t = e.prototype;
                    return t.destroy = function() {}
                    ,
                    t.resetTimeStamp = function(e) {
                        this._initPTS = this._initDTS = e
                    }
                    ,
                    t.resetInitSegment = function() {
                        this.ISGenerated = !1
                    }
                    ,
                    t.remux = function(e, t, n, i, a, o, l) {
                        if (this.ISGenerated || this.generateIS(e, t, a),
                        this.ISGenerated) {
                            var u = e.samples.length
                              , c = t.samples.length
                              , h = a
                              , d = a;
                            if (u && c) {
                                var f = (e.samples[0].pts - t.samples[0].pts) / t.inputTimeScale;
                                h += Math.max(0, f),
                                d += Math.max(0, -f)
                            }
                            if (u) {
                                e.timescale || (s.logger.warn("regenerate InitSegment as audio detected"),
                                this.generateIS(e, t, a));
                                var p, m = this.remuxAudio(e, h, o, l);
                                c && (m && (p = m.endPTS - m.startPTS),
                                t.timescale || (s.logger.warn("regenerate InitSegment as video detected"),
                                this.generateIS(e, t, a)),
                                this.remuxVideo(t, d, o, p, l))
                            } else if (c) {
                                var g = this.remuxVideo(t, d, o, 0, l);
                                g && e.codec && this.remuxEmptyAudio(e, h, o, g)
                            }
                        }
                        n.samples.length && this.remuxID3(n, a),
                        i.samples.length && this.remuxText(i, a),
                        this.observer.trigger(r.default.FRAG_PARSED)
                    }
                    ,
                    t.generateIS = function(e, t, n) {
                        var a, o, l = this.observer, u = e.samples, c = t.samples, h = this.typeSupported, d = "audio/mp4", f = {}, p = {
                            tracks: f
                        }, m = void 0 === this._initPTS;
                        if (m && (a = o = 1 / 0),
                        e.config && u.length && (e.timescale = e.samplerate,
                        s.logger.log("audio sampling rate : " + e.samplerate),
                        e.isAAC || (h.mpeg ? (d = "audio/mpeg",
                        e.codec = "") : h.mp3 && (e.codec = "mp3")),
                        f.audio = {
                            container: d,
                            codec: e.codec,
                            initSegment: !e.isAAC && h.mpeg ? new Uint8Array : L.initSegment([e]),
                            metadata: {
                                channelCount: e.channelCount
                            }
                        },
                        m && (a = o = u[0].pts - e.inputTimeScale * n)),
                        t.sps && t.pps && c.length) {
                            var g = t.inputTimeScale;
                            t.timescale = g,
                            f.video = {
                                container: "video/mp4",
                                codec: t.codec,
                                initSegment: L.initSegment([t]),
                                metadata: {
                                    width: t.width,
                                    height: t.height
                                }
                            },
                            m && (a = Math.min(a, c[0].pts - g * n),
                            o = Math.min(o, c[0].dts - g * n),
                            this.observer.trigger(r.default.INIT_PTS_FOUND, {
                                initPTS: a
                            }))
                        }
                        Object.keys(f).length ? (l.trigger(r.default.FRAG_PARSING_INIT_SEGMENT, p),
                        this.ISGenerated = !0,
                        m && (this._initPTS = a,
                        this._initDTS = o)) : l.trigger(r.default.ERROR, {
                            type: i.ErrorTypes.MEDIA_ERROR,
                            details: i.ErrorDetails.FRAG_PARSING_ERROR,
                            fatal: !1,
                            reason: "no audio/video samples found"
                        })
                    }
                    ,
                    t.remuxVideo = function(e, t, n, a, o) {
                        var l, u, c, h, d, f, p, m = 8, g = e.timescale, v = e.samples, y = [], b = v.length, x = this._PTSNormalize, w = this._initPTS, _ = this.nextAvcDts, E = this.isSafari;
                        if (0 !== b) {
                            E && (n |= v.length && _ && (o && Math.abs(t - _ / g) < .1 || Math.abs(v[0].pts - _ - w) < g / 5)),
                            n || (_ = t * g),
                            v.forEach((function(e) {
                                e.pts = x(e.pts - w, _),
                                e.dts = x(e.dts - w, _)
                            }
                            )),
                            v.sort((function(e, t) {
                                var n = e.dts - t.dts
                                  , r = e.pts - t.pts;
                                return n || r || e.id - t.id
                            }
                            ));
                            var T = v.reduce((function(e, t) {
                                return Math.max(Math.min(e, t.pts - t.dts), -1 * I)
                            }
                            ), 0);
                            if (T < 0) {
                                s.logger.warn("PTS < DTS detected in video samples, shifting DTS by " + P(T, !0) + " ms to overcome this issue");
                                for (var S = 0; S < v.length; S++)
                                    v[S].dts += T
                            }
                            var M = v[0];
                            d = Math.max(M.dts, 0),
                            h = Math.max(M.pts, 0);
                            var A = d - _;
                            n && A && (A > 1 ? s.logger.log("AVC: " + P(A, !0) + " ms hole between fragments detected,filling it") : A < -1 && s.logger.log("AVC: " + P(-A, !0) + " ms overlapping between fragments detected"),
                            d = _,
                            v[0].dts = d,
                            h = Math.max(h - A, _),
                            v[0].pts = h,
                            s.logger.log("Video: PTS/DTS adjusted: " + P(h, !0) + "/" + P(d, !0) + ", delta: " + P(A, !0) + " ms")),
                            M = v[v.length - 1],
                            p = Math.max(M.dts, 0),
                            f = Math.max(M.pts, 0, p),
                            E && (l = Math.round((p - d) / (v.length - 1)));
                            for (var R = 0, C = 0, O = 0; O < b; O++) {
                                for (var k = v[O], D = k.units, N = D.length, F = 0, U = 0; U < N; U++)
                                    F += D[U].data.length;
                                C += F,
                                R += N,
                                k.length = F,
                                k.dts = E ? d + O * l : Math.max(k.dts, d),
                                k.pts = Math.max(k.pts, k.dts)
                            }
                            var B = C + 4 * R + 8;
                            try {
                                u = new Uint8Array(B)
                            } catch (e) {
                                return void this.observer.trigger(r.default.ERROR, {
                                    type: i.ErrorTypes.MUX_ERROR,
                                    details: i.ErrorDetails.REMUX_ALLOC_ERROR,
                                    fatal: !1,
                                    bytes: B,
                                    reason: "fail allocating video mdat " + B
                                })
                            }
                            var z = new DataView(u.buffer);
                            z.setUint32(0, B),
                            u.set(L.types.mdat, 4);
                            for (var G = 0; G < b; G++) {
                                for (var H = v[G], j = H.units, V = 0, W = void 0, q = 0, K = j.length; q < K; q++) {
                                    var Y = j[q]
                                      , X = Y.data
                                      , Z = Y.data.byteLength;
                                    z.setUint32(m, Z),
                                    m += 4,
                                    u.set(X, m),
                                    m += Z,
                                    V += 4 + Z
                                }
                                if (E)
                                    W = Math.max(0, l * Math.round((H.pts - H.dts) / l));
                                else {
                                    if (G < b - 1)
                                        l = v[G + 1].dts - H.dts;
                                    else {
                                        var J = this.config
                                          , Q = H.dts - v[G > 0 ? G - 1 : G].dts;
                                        if (J.stretchShortVideoTrack) {
                                            var $ = J.maxBufferHole
                                              , ee = Math.floor($ * g)
                                              , te = (a ? h + a * g : this.nextAudioPts) - H.pts;
                                            te > ee ? ((l = te - Q) < 0 && (l = Q),
                                            s.logger.log("It is approximately " + P(te, !1) + " ms to the next segment; using duration " + P(l, !1) + " ms for the last video frame.")) : l = Q
                                        } else
                                            l = Q
                                    }
                                    W = Math.round(H.pts - H.dts)
                                }
                                y.push({
                                    size: V,
                                    duration: l,
                                    cts: W,
                                    flags: {
                                        isLeading: 0,
                                        isDependedOn: 0,
                                        hasRedundancy: 0,
                                        degradPrio: 0,
                                        dependsOn: H.key ? 2 : 1,
                                        isNonSync: H.key ? 0 : 1
                                    }
                                })
                            }
                            this.nextAvcDts = p + l;
                            var ne = e.dropped;
                            if (e.nbNalu = 0,
                            e.dropped = 0,
                            y.length && navigator.userAgent.toLowerCase().indexOf("chrome") > -1) {
                                var re = y[0].flags;
                                re.dependsOn = 2,
                                re.isNonSync = 0
                            }
                            e.samples = y,
                            c = L.moof(e.sequenceNumber++, d, e),
                            e.samples = [];
                            var ie = {
                                data1: c,
                                data2: u,
                                startPTS: h / g,
                                endPTS: (f + l) / g,
                                startDTS: d / g,
                                endDTS: this.nextAvcDts / g,
                                type: "video",
                                hasAudio: !1,
                                hasVideo: !0,
                                nb: y.length,
                                dropped: ne
                            };
                            return this.observer.trigger(r.default.FRAG_PARSING_DATA, ie),
                            ie
                        }
                    }
                    ,
                    t.remuxAudio = function(e, t, n, a) {
                        var o, l, u, c, h, d, f = e.inputTimeScale, p = e.timescale, m = f / p, g = (e.isAAC ? 1024 : 1152) * m, v = this._PTSNormalize, y = this._initPTS, b = !e.isAAC && this.typeSupported.mpeg, x = b ? 0 : 8, w = e.samples, _ = [], E = this.nextAudioPts;
                        if (n |= w.length && E && (a && Math.abs(t - E / f) < .1 || Math.abs(w[0].pts - E - y) < 20 * g),
                        w.forEach((function(e) {
                            e.pts = e.dts = v(e.pts - y, t * f)
                        }
                        )),
                        0 !== (w = w.filter((function(e) {
                            return e.pts >= 0
                        }
                        ))).length) {
                            if (n || (E = a ? t * f : w[0].pts),
                            e.isAAC)
                                for (var T = this.config.maxAudioFramesDrift, S = 0, M = E; S < w.length; ) {
                                    var R, C = w[S];
                                    if ((R = C.pts - M) <= -T * g)
                                        s.logger.warn("Dropping 1 audio frame @ " + P(M, !0) + " ms due to " + P(R, !0) + " ms overlap."),
                                        w.splice(S, 1);
                                    else if (R >= T * g && R < D && M) {
                                        var O = Math.round(R / g);
                                        s.logger.warn("Injecting " + O + " audio frames @ " + P(M, !0) + " ms due to " + P(M, !0) + " ms gap.");
                                        for (var k = 0; k < O; k++) {
                                            var I = Math.max(M, 0);
                                            (l = A.getSilentFrame(e.manifestCodec || e.codec, e.channelCount)) || (s.logger.log("Unable to get silent frame for given audio codec; duplicating last frame instead."),
                                            l = C.unit.subarray()),
                                            w.splice(S, 0, {
                                                unit: l,
                                                pts: I,
                                                dts: I
                                            }),
                                            M += g,
                                            S++
                                        }
                                        C.pts = C.dts = M,
                                        M += g,
                                        S++
                                    } else
                                        Math.abs(R),
                                        C.pts = C.dts = M,
                                        M += g,
                                        S++
                                }
                            for (var N = w.length, F = 0; N--; )
                                F += w[N].unit.byteLength;
                            for (var U = 0, B = w.length; U < B; U++) {
                                var z = w[U]
                                  , G = z.unit
                                  , H = z.pts;
                                if (void 0 !== d)
                                    o.duration = Math.round((H - d) / m);
                                else {
                                    var j = H - E
                                      , V = 0;
                                    if (n && e.isAAC && j) {
                                        if (j > 0 && j < D)
                                            V = Math.round((H - E) / g),
                                            s.logger.log(P(j, !0) + " ms hole between AAC samples detected,filling it"),
                                            V > 0 && ((l = A.getSilentFrame(e.manifestCodec || e.codec, e.channelCount)) || (l = G.subarray()),
                                            F += V * l.length);
                                        else if (j < -12) {
                                            s.logger.log("drop overlapping AAC sample, expected/parsed/delta: " + P(E, !0) + " ms / " + P(H, !0) + " ms / " + P(-j, !0) + " ms"),
                                            F -= G.byteLength;
                                            continue
                                        }
                                        H = E
                                    }
                                    if (h = H,
                                    !(F > 0))
                                        return;
                                    F += x;
                                    try {
                                        u = new Uint8Array(F)
                                    } catch (e) {
                                        return void this.observer.trigger(r.default.ERROR, {
                                            type: i.ErrorTypes.MUX_ERROR,
                                            details: i.ErrorDetails.REMUX_ALLOC_ERROR,
                                            fatal: !1,
                                            bytes: F,
                                            reason: "fail allocating audio mdat " + F
                                        })
                                    }
                                    b || (new DataView(u.buffer).setUint32(0, F),
                                    u.set(L.types.mdat, 4));
                                    for (var W = 0; W < V; W++)
                                        (l = A.getSilentFrame(e.manifestCodec || e.codec, e.channelCount)) || (s.logger.log("Unable to get silent frame for given audio codec; duplicating this frame instead."),
                                        l = G.subarray()),
                                        u.set(l, x),
                                        x += l.byteLength,
                                        o = {
                                            size: l.byteLength,
                                            cts: 0,
                                            duration: 1024,
                                            flags: {
                                                isLeading: 0,
                                                isDependedOn: 0,
                                                hasRedundancy: 0,
                                                degradPrio: 0,
                                                dependsOn: 1
                                            }
                                        },
                                        _.push(o)
                                }
                                u.set(G, x);
                                var q = G.byteLength;
                                x += q,
                                o = {
                                    size: q,
                                    cts: 0,
                                    duration: 0,
                                    flags: {
                                        isLeading: 0,
                                        isDependedOn: 0,
                                        hasRedundancy: 0,
                                        degradPrio: 0,
                                        dependsOn: 1
                                    }
                                },
                                _.push(o),
                                d = H
                            }
                            var K = 0;
                            if ((N = _.length) >= 2 && (K = _[N - 2].duration,
                            o.duration = K),
                            N) {
                                this.nextAudioPts = E = d + m * K,
                                e.samples = _,
                                c = b ? new Uint8Array : L.moof(e.sequenceNumber++, h / m, e),
                                e.samples = [];
                                var Y = h / f
                                  , X = E / f
                                  , Z = {
                                    data1: c,
                                    data2: u,
                                    startPTS: Y,
                                    endPTS: X,
                                    startDTS: Y,
                                    endDTS: X,
                                    type: "audio",
                                    hasAudio: !0,
                                    hasVideo: !1,
                                    nb: N
                                };
                                return this.observer.trigger(r.default.FRAG_PARSING_DATA, Z),
                                Z
                            }
                            return null
                        }
                    }
                    ,
                    t.remuxEmptyAudio = function(e, t, n, r) {
                        var i = e.inputTimeScale
                          , a = i / (e.samplerate ? e.samplerate : i)
                          , o = this.nextAudioPts
                          , l = (void 0 !== o ? o : r.startDTS * i) + this._initDTS
                          , u = r.endDTS * i + this._initDTS
                          , c = 1024 * a
                          , h = Math.ceil((u - l) / c)
                          , d = A.getSilentFrame(e.manifestCodec || e.codec, e.channelCount);
                        if (s.logger.warn("remux empty Audio"),
                        d) {
                            for (var f = [], p = 0; p < h; p++) {
                                var m = l + p * c;
                                f.push({
                                    unit: d,
                                    pts: m,
                                    dts: m
                                })
                            }
                            e.samples = f,
                            this.remuxAudio(e, t, n)
                        } else
                            s.logger.trace("Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!")
                    }
                    ,
                    t.remuxID3 = function(e) {
                        var t, n = e.samples.length, i = e.inputTimeScale, a = this._initPTS, o = this._initDTS;
                        if (n) {
                            for (var s = 0; s < n; s++)
                                (t = e.samples[s]).pts = (t.pts - a) / i,
                                t.dts = (t.dts - o) / i;
                            this.observer.trigger(r.default.FRAG_PARSING_METADATA, {
                                samples: e.samples
                            })
                        }
                        e.samples = []
                    }
                    ,
                    t.remuxText = function(e) {
                        e.samples.sort((function(e, t) {
                            return e.pts - t.pts
                        }
                        ));
                        var t, n = e.samples.length, i = e.inputTimeScale, a = this._initPTS;
                        if (n) {
                            for (var o = 0; o < n; o++)
                                (t = e.samples[o]).pts = (t.pts - a) / i;
                            this.observer.trigger(r.default.FRAG_PARSING_USERDATA, {
                                samples: e.samples
                            })
                        }
                        e.samples = []
                    }
                    ,
                    t._PTSNormalize = function(e, t) {
                        var n;
                        if (void 0 === t)
                            return e;
                        for (n = t < e ? -8589934592 : 8589934592; Math.abs(e - t) > 4294967296; )
                            e += n;
                        return e
                    }
                    ,
                    e
                }(), F = function() {
                    function e(e) {
                        this.observer = e
                    }
                    var t = e.prototype;
                    return t.destroy = function() {}
                    ,
                    t.resetTimeStamp = function() {}
                    ,
                    t.resetInitSegment = function() {}
                    ,
                    t.remux = function(e, t, n, i, a, o, s, l) {
                        var u = this.observer
                          , c = "";
                        e && (c += "audio"),
                        t && (c += "video"),
                        u.trigger(r.default.FRAG_PARSING_DATA, {
                            data1: l,
                            startPTS: a,
                            startDTS: a,
                            type: c,
                            hasAudio: !!e,
                            hasVideo: !!t,
                            nb: 1,
                            dropped: 0
                        }),
                        u.trigger(r.default.FRAG_PARSED)
                    }
                    ,
                    e
                }(), U = Object(l.getSelfScope)();
                try {
                    k = U.performance.now.bind(U.performance)
                } catch (e) {
                    s.logger.debug("Unable to use Performance API on this environment"),
                    k = U.Date.now
                }
                var B = function() {
                    function e(e, t, n, r) {
                        this.observer = e,
                        this.typeSupported = t,
                        this.config = n,
                        this.vendor = r
                    }
                    var t = e.prototype;
                    return t.destroy = function() {
                        var e = this.demuxer;
                        e && e.destroy()
                    }
                    ,
                    t.push = function(e, t, n, i, o, s, l, u, c, h, d, f) {
                        var p = this;
                        if (e.byteLength > 0 && null != t && null != t.key && "AES-128" === t.method) {
                            var m = this.decrypter;
                            null == m && (m = this.decrypter = new a.default(this.observer,this.config));
                            var g = k();
                            m.decrypt(e, t.key.buffer, t.iv.buffer, (function(e) {
                                var a = k();
                                p.observer.trigger(r.default.FRAG_DECRYPTED, {
                                    stats: {
                                        tstart: g,
                                        tdecrypt: a
                                    }
                                }),
                                p.pushDecrypted(new Uint8Array(e), t, new Uint8Array(n), i, o, s, l, u, c, h, d, f)
                            }
                            ))
                        } else
                            this.pushDecrypted(new Uint8Array(e), t, new Uint8Array(n), i, o, s, l, u, c, h, d, f)
                    }
                    ,
                    t.pushDecrypted = function(e, t, n, a, o, s, l, u, c, h, d, f) {
                        var p = this.demuxer;
                        if (!p || (l || u) && !this.probe(e)) {
                            for (var m = this.observer, g = this.typeSupported, v = this.config, x = [{
                                demux: S,
                                remux: N
                            }, {
                                demux: b.default,
                                remux: F
                            }, {
                                demux: y,
                                remux: N
                            }, {
                                demux: M,
                                remux: N
                            }], w = 0, _ = x.length; w < _; w++) {
                                var E = x[w]
                                  , T = E.demux.probe;
                                if (T(e)) {
                                    var A = this.remuxer = new E.remux(m,v,g,this.vendor);
                                    p = new E.demux(m,A,v,g),
                                    this.probe = T;
                                    break
                                }
                            }
                            if (!p)
                                return void m.trigger(r.default.ERROR, {
                                    type: i.ErrorTypes.MEDIA_ERROR,
                                    details: i.ErrorDetails.FRAG_PARSING_ERROR,
                                    fatal: !0,
                                    reason: "no demux matching with content found"
                                });
                            this.demuxer = p
                        }
                        var R = this.remuxer;
                        (l || u) && (p.resetInitSegment(n, a, o, h),
                        R.resetInitSegment()),
                        l && (p.resetTimeStamp(f),
                        R.resetTimeStamp(f)),
                        "function" == typeof p.setDecryptData && p.setDecryptData(t),
                        p.append(e, s, c, d)
                    }
                    ,
                    e
                }();
                t.default = B
            },
            "./src/demux/demuxer-worker.js": /*!*************************************!*\
  !*** ./src/demux/demuxer-worker.js ***!
  \*************************************/
            /*! exports provided: default */
            /*! ModuleConcatenation bailout: Module is referenced from these modules with unsupported syntax: ./src/demux/demuxer.js (referenced with require.resolve) */
            function(e, t, n) {
                "use strict";
                n.r(t);
                var r = n(/*! ../demux/demuxer-inline */
                "./src/demux/demuxer-inline.js")
                  , i = n(/*! ../events */
                "./src/events.js")
                  , a = n(/*! ../utils/logger */
                "./src/utils/logger.js")
                  , o = n(/*! eventemitter3 */
                "./node_modules/eventemitter3/index.js");
                t.default = function(e) {
                    var t = new o.EventEmitter;
                    t.trigger = function(e) {
                        for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++)
                            r[i - 1] = arguments[i];
                        t.emit.apply(t, [e, e].concat(r))
                    }
                    ,
                    t.off = function(e) {
                        for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++)
                            r[i - 1] = arguments[i];
                        t.removeListener.apply(t, [e].concat(r))
                    }
                    ;
                    var n = function(t, n) {
                        e.postMessage({
                            event: t,
                            data: n
                        })
                    };
                    e.addEventListener("message", (function(i) {
                        var o = i.data;
                        switch (o.cmd) {
                        case "init":
                            var s = JSON.parse(o.config);
                            e.demuxer = new r.default(t,o.typeSupported,s,o.vendor),
                            Object(a.enableLogs)(s.debug),
                            n("init", null);
                            break;
                        case "demux":
                            e.demuxer.push(o.data, o.decryptdata, o.initSegment, o.audioCodec, o.videoCodec, o.timeOffset, o.discontinuity, o.trackSwitch, o.contiguous, o.duration, o.accurateTimeOffset, o.defaultInitPTS)
                        }
                    }
                    )),
                    t.on(i.default.FRAG_DECRYPTED, n),
                    t.on(i.default.FRAG_PARSING_INIT_SEGMENT, n),
                    t.on(i.default.FRAG_PARSED, n),
                    t.on(i.default.ERROR, n),
                    t.on(i.default.FRAG_PARSING_METADATA, n),
                    t.on(i.default.FRAG_PARSING_USERDATA, n),
                    t.on(i.default.INIT_PTS_FOUND, n),
                    t.on(i.default.FRAG_PARSING_DATA, (function(t, n) {
                        var r = []
                          , i = {
                            event: t,
                            data: n
                        };
                        n.data1 && (i.data1 = n.data1.buffer,
                        r.push(n.data1.buffer),
                        delete n.data1),
                        n.data2 && (i.data2 = n.data2.buffer,
                        r.push(n.data2.buffer),
                        delete n.data2),
                        e.postMessage(i, r)
                    }
                    ))
                }
            },
            "./src/demux/id3.js": /*!**************************!*\
  !*** ./src/demux/id3.js ***!
  \**************************/
            /*! exports provided: default, utf8ArrayToStr */
            function(e, t, n) {
                "use strict";
                n.r(t),
                n.d(t, "utf8ArrayToStr", (function() {
                    return s
                }
                ));
                var r, i = n(/*! ../utils/get-self-scope */
                "./src/utils/get-self-scope.js"), a = function() {
                    function e() {}
                    return e.isHeader = function(e, t) {
                        return t + 10 <= e.length && 73 === e[t] && 68 === e[t + 1] && 51 === e[t + 2] && e[t + 3] < 255 && e[t + 4] < 255 && e[t + 6] < 128 && e[t + 7] < 128 && e[t + 8] < 128 && e[t + 9] < 128
                    }
                    ,
                    e.isFooter = function(e, t) {
                        return t + 10 <= e.length && 51 === e[t] && 68 === e[t + 1] && 73 === e[t + 2] && e[t + 3] < 255 && e[t + 4] < 255 && e[t + 6] < 128 && e[t + 7] < 128 && e[t + 8] < 128 && e[t + 9] < 128
                    }
                    ,
                    e.getID3Data = function(t, n) {
                        for (var r = n, i = 0; e.isHeader(t, n); )
                            i += 10,
                            i += e._readSize(t, n + 6),
                            e.isFooter(t, n + 10) && (i += 10),
                            n += i;
                        if (i > 0)
                            return t.subarray(r, r + i)
                    }
                    ,
                    e._readSize = function(e, t) {
                        var n = 0;
                        return n = (127 & e[t]) << 21,
                        n |= (127 & e[t + 1]) << 14,
                        n |= (127 & e[t + 2]) << 7,
                        n |= 127 & e[t + 3]
                    }
                    ,
                    e.getTimeStamp = function(t) {
                        for (var n = e.getID3Frames(t), r = 0; r < n.length; r++) {
                            var i = n[r];
                            if (e.isTimeStampFrame(i))
                                return e._readTimeStamp(i)
                        }
                    }
                    ,
                    e.isTimeStampFrame = function(e) {
                        return e && "PRIV" === e.key && "com.apple.streaming.transportStreamTimestamp" === e.info
                    }
                    ,
                    e._getFrameData = function(t) {
                        var n = String.fromCharCode(t[0], t[1], t[2], t[3])
                          , r = e._readSize(t, 4);
                        return {
                            type: n,
                            size: r,
                            data: t.subarray(10, 10 + r)
                        }
                    }
                    ,
                    e.getID3Frames = function(t) {
                        for (var n = 0, r = []; e.isHeader(t, n); ) {
                            for (var i = e._readSize(t, n + 6), a = (n += 10) + i; n + 8 < a; ) {
                                var o = e._getFrameData(t.subarray(n))
                                  , s = e._decodeFrame(o);
                                s && r.push(s),
                                n += o.size + 10
                            }
                            e.isFooter(t, n) && (n += 10)
                        }
                        return r
                    }
                    ,
                    e._decodeFrame = function(t) {
                        return "PRIV" === t.type ? e._decodePrivFrame(t) : "T" === t.type[0] ? e._decodeTextFrame(t) : "W" === t.type[0] ? e._decodeURLFrame(t) : void 0
                    }
                    ,
                    e._readTimeStamp = function(e) {
                        if (8 === e.data.byteLength) {
                            var t = new Uint8Array(e.data)
                              , n = 1 & t[3]
                              , r = (t[4] << 23) + (t[5] << 15) + (t[6] << 7) + t[7];
                            return r /= 45,
                            n && (r += 47721858.84),
                            Math.round(r)
                        }
                    }
                    ,
                    e._decodePrivFrame = function(t) {
                        if (!(t.size < 2)) {
                            var n = e._utf8ArrayToStr(t.data, !0)
                              , r = new Uint8Array(t.data.subarray(n.length + 1));
                            return {
                                key: t.type,
                                info: n,
                                data: r.buffer
                            }
                        }
                    }
                    ,
                    e._decodeTextFrame = function(t) {
                        if (!(t.size < 2)) {
                            if ("TXXX" === t.type) {
                                var n = 1
                                  , r = e._utf8ArrayToStr(t.data.subarray(n), !0);
                                n += r.length + 1;
                                var i = e._utf8ArrayToStr(t.data.subarray(n));
                                return {
                                    key: t.type,
                                    info: r,
                                    data: i
                                }
                            }
                            var a = e._utf8ArrayToStr(t.data.subarray(1));
                            return {
                                key: t.type,
                                data: a
                            }
                        }
                    }
                    ,
                    e._decodeURLFrame = function(t) {
                        if ("WXXX" === t.type) {
                            if (t.size < 2)
                                return;
                            var n = 1
                              , r = e._utf8ArrayToStr(t.data.subarray(n));
                            n += r.length + 1;
                            var i = e._utf8ArrayToStr(t.data.subarray(n));
                            return {
                                key: t.type,
                                info: r,
                                data: i
                            }
                        }
                        var a = e._utf8ArrayToStr(t.data);
                        return {
                            key: t.type,
                            data: a
                        }
                    }
                    ,
                    e._utf8ArrayToStr = function(e, t) {
                        void 0 === t && (t = !1);
                        var n = o();
                        if (n) {
                            var r = n.decode(e);
                            if (t) {
                                var i = r.indexOf("\0");
                                return -1 !== i ? r.substring(0, i) : r
                            }
                            return r.replace(/\0/g, "")
                        }
                        for (var a, s, l, u = e.length, c = "", h = 0; h < u; ) {
                            if (0 === (a = e[h++]) && t)
                                return c;
                            if (0 !== a && 3 !== a)
                                switch (a >> 4) {
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    c += String.fromCharCode(a);
                                    break;
                                case 12:
                                case 13:
                                    s = e[h++],
                                    c += String.fromCharCode((31 & a) << 6 | 63 & s);
                                    break;
                                case 14:
                                    s = e[h++],
                                    l = e[h++],
                                    c += String.fromCharCode((15 & a) << 12 | (63 & s) << 6 | (63 & l) << 0)
                                }
                        }
                        return c
                    }
                    ,
                    e
                }();
                function o() {
                    var e = Object(i.getSelfScope)();
                    return r || void 0 === e.TextDecoder || (r = new e.TextDecoder("utf-8")),
                    r
                }
                var s = a._utf8ArrayToStr;
                t.default = a
            },
            "./src/demux/mp4demuxer.js": /*!*********************************!*\
  !*** ./src/demux/mp4demuxer.js ***!
  \*********************************/
            /*! exports provided: default */
            function(e, t, n) {
                "use strict";
                n.r(t);
                var r = n(/*! ../utils/logger */
                "./src/utils/logger.js")
                  , i = n(/*! ../events */
                "./src/events.js")
                  , a = Math.pow(2, 32) - 1
                  , o = function() {
                    function e(e, t) {
                        this.observer = e,
                        this.remuxer = t
                    }
                    var t = e.prototype;
                    return t.resetTimeStamp = function(e) {
                        this.initPTS = e
                    }
                    ,
                    t.resetInitSegment = function(t, n, r, a) {
                        if (t && t.byteLength) {
                            var o = this.initData = e.parseInitSegment(t);
                            null == n && (n = "mp4a.40.5"),
                            null == r && (r = "avc1.42e01e");
                            var s = {};
                            o.audio && o.video ? s.audiovideo = {
                                container: "video/mp4",
                                codec: n + "," + r,
                                initSegment: a ? t : null
                            } : (o.audio && (s.audio = {
                                container: "audio/mp4",
                                codec: n,
                                initSegment: a ? t : null
                            }),
                            o.video && (s.video = {
                                container: "video/mp4",
                                codec: r,
                                initSegment: a ? t : null
                            })),
                            this.observer.trigger(i.default.FRAG_PARSING_INIT_SEGMENT, {
                                tracks: s
                            })
                        } else
                            n && (this.audioCodec = n),
                            r && (this.videoCodec = r)
                    }
                    ,
                    e.probe = function(t) {
                        return e.findBox({
                            data: t,
                            start: 0,
                            end: Math.min(t.length, 16384)
                        }, ["moof"]).length > 0
                    }
                    ,
                    e.bin2str = function(e) {
                        return String.fromCharCode.apply(null, e)
                    }
                    ,
                    e.readUint16 = function(e, t) {
                        e.data && (t += e.start,
                        e = e.data);
                        var n = e[t] << 8 | e[t + 1];
                        return n < 0 ? 65536 + n : n
                    }
                    ,
                    e.readUint32 = function(e, t) {
                        e.data && (t += e.start,
                        e = e.data);
                        var n = e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3];
                        return n < 0 ? 4294967296 + n : n
                    }
                    ,
                    e.writeUint32 = function(e, t, n) {
                        e.data && (t += e.start,
                        e = e.data),
                        e[t] = n >> 24,
                        e[t + 1] = n >> 16 & 255,
                        e[t + 2] = n >> 8 & 255,
                        e[t + 3] = 255 & n
                    }
                    ,
                    e.findBox = function(t, n) {
                        var r, i, a, o, s, l, u = [];
                        if (t.data ? (s = t.start,
                        a = t.end,
                        t = t.data) : (s = 0,
                        a = t.byteLength),
                        !n.length)
                            return null;
                        for (r = s; r < a; )
                            l = (i = e.readUint32(t, r)) > 1 ? r + i : a,
                            e.bin2str(t.subarray(r + 4, r + 8)) === n[0] && (1 === n.length ? u.push({
                                data: t,
                                start: r + 8,
                                end: l
                            }) : (o = e.findBox({
                                data: t,
                                start: r + 8,
                                end: l
                            }, n.slice(1))).length && (u = u.concat(o))),
                            r = l;
                        return u
                    }
                    ,
                    e.parseSegmentIndex = function(t) {
                        var n, r = e.findBox(t, ["moov"])[0], i = r ? r.end : null, a = 0, o = e.findBox(t, ["sidx"]);
                        if (!o || !o[0])
                            return null;
                        n = [];
                        var s = (o = o[0]).data[0];
                        a = 0 === s ? 8 : 16;
                        var l = e.readUint32(o, a);
                        a += 4,
                        a += 0 === s ? 8 : 16,
                        a += 2;
                        var u = o.end + 0
                          , c = e.readUint16(o, a);
                        a += 2;
                        for (var h = 0; h < c; h++) {
                            var d = a
                              , f = e.readUint32(o, d);
                            d += 4;
                            var p = 2147483647 & f;
                            if (1 == (2147483648 & f) >>> 31)
                                return void console.warn("SIDX has hierarchical references (not supported)");
                            var m = e.readUint32(o, d);
                            d += 4,
                            n.push({
                                referenceSize: p,
                                subsegmentDuration: m,
                                info: {
                                    duration: m / l,
                                    start: u,
                                    end: u + p - 1
                                }
                            }),
                            u += p,
                            a = d += 4
                        }
                        return {
                            earliestPresentationTime: 0,
                            timescale: l,
                            version: s,
                            referencesCount: c,
                            references: n,
                            moovEndOffset: i
                        }
                    }
                    ,
                    e.parseInitSegment = function(t) {
                        var n = [];
                        return e.findBox(t, ["moov", "trak"]).forEach((function(t) {
                            var i = e.findBox(t, ["tkhd"])[0];
                            if (i) {
                                var a = i.data[i.start]
                                  , o = 0 === a ? 12 : 20
                                  , s = e.readUint32(i, o)
                                  , l = e.findBox(t, ["mdia", "mdhd"])[0];
                                if (l) {
                                    o = 0 === (a = l.data[l.start]) ? 12 : 20;
                                    var u = e.readUint32(l, o)
                                      , c = e.findBox(t, ["mdia", "hdlr"])[0];
                                    if (c) {
                                        var h = {
                                            soun: "audio",
                                            vide: "video"
                                        }[e.bin2str(c.data.subarray(c.start + 8, c.start + 12))];
                                        if (h) {
                                            var d = e.findBox(t, ["mdia", "minf", "stbl", "stsd"]);
                                            if (d.length) {
                                                d = d[0];
                                                var f = e.bin2str(d.data.subarray(d.start + 12, d.start + 16));
                                                r.logger.log("MP4Demuxer:" + h + ":" + f + " found")
                                            }
                                            n[s] = {
                                                timescale: u,
                                                type: h
                                            },
                                            n[h] = {
                                                timescale: u,
                                                id: s
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        )),
                        n
                    }
                    ,
                    e.getStartDTS = function(t, n) {
                        var r, i, a;
                        return r = e.findBox(n, ["moof", "traf"]),
                        i = [].concat.apply([], r.map((function(n) {
                            return e.findBox(n, ["tfhd"]).map((function(r) {
                                var i, a;
                                return i = e.readUint32(r, 4),
                                a = t[i].timescale || 9e4,
                                e.findBox(n, ["tfdt"]).map((function(t) {
                                    var n, r;
                                    return n = t.data[t.start],
                                    r = e.readUint32(t, 4),
                                    1 === n && (r *= Math.pow(2, 32),
                                    r += e.readUint32(t, 8)),
                                    r
                                }
                                ))[0] / a
                            }
                            ))
                        }
                        ))),
                        a = Math.min.apply(null, i),
                        isFinite(a) ? a : 0
                    }
                    ,
                    e.offsetStartDTS = function(t, n, r) {
                        e.findBox(n, ["moof", "traf"]).map((function(n) {
                            return e.findBox(n, ["tfhd"]).map((function(i) {
                                var o = e.readUint32(i, 4)
                                  , s = t[o].timescale || 9e4;
                                e.findBox(n, ["tfdt"]).map((function(t) {
                                    var n = t.data[t.start]
                                      , i = e.readUint32(t, 4);
                                    if (0 === n)
                                        e.writeUint32(t, 4, i - r * s);
                                    else {
                                        i *= Math.pow(2, 32),
                                        i += e.readUint32(t, 8),
                                        i -= r * s,
                                        i = Math.max(i, 0);
                                        var o = Math.floor(i / (a + 1))
                                          , l = Math.floor(i % (a + 1));
                                        e.writeUint32(t, 4, o),
                                        e.writeUint32(t, 8, l)
                                    }
                                }
                                ))
                            }
                            ))
                        }
                        ))
                    }
                    ,
                    t.append = function(t, n, r, a) {
                        var o = this.initData;
                        o || (this.resetInitSegment(t, this.audioCodec, this.videoCodec, !1),
                        o = this.initData);
                        var s, l = this.initPTS;
                        if (void 0 === l) {
                            var u = e.getStartDTS(o, t);
                            this.initPTS = l = u - n,
                            this.observer.trigger(i.default.INIT_PTS_FOUND, {
                                initPTS: l
                            })
                        }
                        e.offsetStartDTS(o, t, l),
                        s = e.getStartDTS(o, t),
                        this.remuxer.remux(o.audio, o.video, null, null, s, r, a, t)
                    }
                    ,
                    t.destroy = function() {}
                    ,
                    e
                }();
                t.default = o
            },
            "./src/errors.ts": /*!***********************!*\
  !*** ./src/errors.ts ***!
  \***********************/
            /*! exports provided: ErrorTypes, ErrorDetails */
            function(e, t, n) {
                "use strict";
                var r, i;
                n.r(t),
                n.d(t, "ErrorTypes", (function() {
                    return r
                }
                )),
                n.d(t, "ErrorDetails", (function() {
                    return i
                }
                )),
                function(e) {
                    e.NETWORK_ERROR = "networkError",
                    e.MEDIA_ERROR = "mediaError",
                    e.KEY_SYSTEM_ERROR = "keySystemError",
                    e.MUX_ERROR = "muxError",
                    e.OTHER_ERROR = "otherError"
                }(r || (r = {})),
                function(e) {
                    e.KEY_SYSTEM_NO_KEYS = "keySystemNoKeys",
                    e.KEY_SYSTEM_NO_ACCESS = "keySystemNoAccess",
                    e.KEY_SYSTEM_NO_SESSION = "keySystemNoSession",
                    e.KEY_SYSTEM_LICENSE_REQUEST_FAILED = "keySystemLicenseRequestFailed",
                    e.KEY_SYSTEM_NO_INIT_DATA = "keySystemNoInitData",
                    e.MANIFEST_LOAD_ERROR = "manifestLoadError",
                    e.MANIFEST_LOAD_TIMEOUT = "manifestLoadTimeOut",
                    e.MANIFEST_PARSING_ERROR = "manifestParsingError",
                    e.MANIFEST_INCOMPATIBLE_CODECS_ERROR = "manifestIncompatibleCodecsError",
                    e.LEVEL_LOAD_ERROR = "levelLoadError",
                    e.LEVEL_LOAD_TIMEOUT = "levelLoadTimeOut",
                    e.LEVEL_SWITCH_ERROR = "levelSwitchError",
                    e.AUDIO_TRACK_LOAD_ERROR = "audioTrackLoadError",
                    e.AUDIO_TRACK_LOAD_TIMEOUT = "audioTrackLoadTimeOut",
                    e.FRAG_LOAD_ERROR = "fragLoadError",
                    e.FRAG_LOAD_TIMEOUT = "fragLoadTimeOut",
                    e.FRAG_DECRYPT_ERROR = "fragDecryptError",
                    e.FRAG_PARSING_ERROR = "fragParsingError",
                    e.REMUX_ALLOC_ERROR = "remuxAllocError",
                    e.KEY_LOAD_ERROR = "keyLoadError",
                    e.KEY_LOAD_TIMEOUT = "keyLoadTimeOut",
                    e.BUFFER_ADD_CODEC_ERROR = "bufferAddCodecError",
                    e.BUFFER_APPEND_ERROR = "bufferAppendError",
                    e.BUFFER_APPENDING_ERROR = "bufferAppendingError",
                    e.BUFFER_STALLED_ERROR = "bufferStalledError",
                    e.BUFFER_FULL_ERROR = "bufferFullError",
                    e.BUFFER_SEEK_OVER_HOLE = "bufferSeekOverHole",
                    e.BUFFER_NUDGE_ON_STALL = "bufferNudgeOnStall",
                    e.INTERNAL_EXCEPTION = "internalException"
                }(i || (i = {}))
            },
            "./src/events.js": /*!***********************!*\
  !*** ./src/events.js ***!
  \***********************/
            /*! exports provided: default */
            function(e, t, n) {
                "use strict";
                n.r(t),
                t.default = {
                    MEDIA_ATTACHING: "hlsMediaAttaching",
                    MEDIA_ATTACHED: "hlsMediaAttached",
                    MEDIA_DETACHING: "hlsMediaDetaching",
                    MEDIA_DETACHED: "hlsMediaDetached",
                    BUFFER_RESET: "hlsBufferReset",
                    BUFFER_CODECS: "hlsBufferCodecs",
                    BUFFER_CREATED: "hlsBufferCreated",
                    BUFFER_APPENDING: "hlsBufferAppending",
                    BUFFER_APPENDED: "hlsBufferAppended",
                    BUFFER_EOS: "hlsBufferEos",
                    BUFFER_FLUSHING: "hlsBufferFlushing",
                    BUFFER_FLUSHED: "hlsBufferFlushed",
                    MANIFEST_LOADING: "hlsManifestLoading",
                    MANIFEST_LOADED: "hlsManifestLoaded",
                    MANIFEST_PARSED: "hlsManifestParsed",
                    LEVEL_SWITCHING: "hlsLevelSwitching",
                    LEVEL_SWITCHED: "hlsLevelSwitched",
                    LEVEL_LOADING: "hlsLevelLoading",
                    LEVEL_LOADED: "hlsLevelLoaded",
                    LEVEL_UPDATED: "hlsLevelUpdated",
                    LEVEL_PTS_UPDATED: "hlsLevelPtsUpdated",
                    AUDIO_TRACKS_UPDATED: "hlsAudioTracksUpdated",
                    AUDIO_TRACK_SWITCHING: "hlsAudioTrackSwitching",
                    AUDIO_TRACK_SWITCHED: "hlsAudioTrackSwitched",
                    AUDIO_TRACK_LOADING: "hlsAudioTrackLoading",
                    AUDIO_TRACK_LOADED: "hlsAudioTrackLoaded",
                    SUBTITLE_TRACKS_UPDATED: "hlsSubtitleTracksUpdated",
                    SUBTITLE_TRACK_SWITCH: "hlsSubtitleTrackSwitch",
                    SUBTITLE_TRACK_LOADING: "hlsSubtitleTrackLoading",
                    SUBTITLE_TRACK_LOADED: "hlsSubtitleTrackLoaded",
                    SUBTITLE_FRAG_PROCESSED: "hlsSubtitleFragProcessed",
                    INIT_PTS_FOUND: "hlsInitPtsFound",
                    FRAG_LOADING: "hlsFragLoading",
                    FRAG_LOAD_PROGRESS: "hlsFragLoadProgress",
                    FRAG_LOAD_EMERGENCY_ABORTED: "hlsFragLoadEmergencyAborted",
                    FRAG_LOADED: "hlsFragLoaded",
                    FRAG_DECRYPTED: "hlsFragDecrypted",
                    FRAG_PARSING_INIT_SEGMENT: "hlsFragParsingInitSegment",
                    FRAG_PARSING_USERDATA: "hlsFragParsingUserdata",
                    FRAG_PARSING_METADATA: "hlsFragParsingMetadata",
                    FRAG_PARSING_DATA: "hlsFragParsingData",
                    FRAG_PARSED: "hlsFragParsed",
                    FRAG_BUFFERED: "hlsFragBuffered",
                    FRAG_CHANGED: "hlsFragChanged",
                    FPS_DROP: "hlsFpsDrop",
                    FPS_DROP_LEVEL_CAPPING: "hlsFpsDropLevelCapping",
                    ERROR: "hlsError",
                    DESTROYING: "hlsDestroying",
                    KEY_LOADING: "hlsKeyLoading",
                    KEY_LOADED: "hlsKeyLoaded",
                    STREAM_STATE_TRANSITION: "hlsStreamStateTransition",
                    LIVE_BACK_BUFFER_REACHED: "hlsLiveBackBufferReached"
                }
            },
            "./src/hls.ts": /*!*********************************!*\
  !*** ./src/hls.ts + 50 modules ***!
  \*********************************/
            /*! exports provided: default */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/crypt/decrypter.js because of ./src/demux/demuxer-worker.js */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/demux/demuxer-inline.js because of ./src/demux/demuxer-worker.js */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/demux/id3.js because of ./src/demux/demuxer-worker.js */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/demux/mp4demuxer.js because of ./src/demux/demuxer-worker.js */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/errors.ts because of ./src/demux/demuxer-worker.js */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/events.js because of ./src/demux/demuxer-worker.js */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/polyfills/number-isFinite.js because of ./src/demux/demuxer-worker.js */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/utils/get-self-scope.js because of ./src/demux/demuxer-worker.js */
            /*! ModuleConcatenation bailout: Cannot concat with ./src/utils/logger.js because of ./src/demux/demuxer-worker.js */
            /*! ModuleConcatenation bailout: Cannot concat with ./node_modules/eventemitter3/index.js (<- Module is not an ECMAScript module) */
            /*! ModuleConcatenation bailout: Cannot concat with ./node_modules/url-toolkit/src/url-toolkit.js (<- Module is not an ECMAScript module) */
            function(e, t, n) {
                "use strict";
                n.r(t);
                var r = {};
                n.r(r),
                n.d(r, "newCue", (function() {
                    return gt
                }
                ));
                var i, a, o = n("./node_modules/url-toolkit/src/url-toolkit.js"), s = n("./src/errors.ts"), l = n("./src/polyfills/number-isFinite.js"), u = n("./src/events.js"), c = n("./src/utils/logger.js"), h = {
                    hlsEventGeneric: !0,
                    hlsHandlerDestroying: !0,
                    hlsHandlerDestroyed: !0
                }, d = function() {
                    function e(e) {
                        this.hls = void 0,
                        this.handledEvents = void 0,
                        this.useGenericHandler = void 0,
                        this.hls = e,
                        this.onEvent = this.onEvent.bind(this);
                        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)
                            n[r - 1] = arguments[r];
                        this.handledEvents = n,
                        this.useGenericHandler = !0,
                        this.registerListeners()
                    }
                    var t = e.prototype;
                    return t.destroy = function() {
                        this.onHandlerDestroying(),
                        this.unregisterListeners(),
                        this.onHandlerDestroyed()
                    }
                    ,
                    t.onHandlerDestroying = function() {}
                    ,
                    t.onHandlerDestroyed = function() {}
                    ,
                    t.isEventHandler = function() {
                        return "object" == typeof this.handledEvents && this.handledEvents.length && "function" == typeof this.onEvent
                    }
                    ,
                    t.registerListeners = function() {
                        this.isEventHandler() && this.handledEvents.forEach((function(e) {
                            if (h[e])
                                throw new Error("Forbidden event-name: " + e);
                            this.hls.on(e, this.onEvent)
                        }
                        ), this)
                    }
                    ,
                    t.unregisterListeners = function() {
                        this.isEventHandler() && this.handledEvents.forEach((function(e) {
                            this.hls.off(e, this.onEvent)
                        }
                        ), this)
                    }
                    ,
                    t.onEvent = function(e, t) {
                        this.onEventGeneric(e, t)
                    }
                    ,
                    t.onEventGeneric = function(e, t) {
                        try {
                            (function(e, t) {
                                var n = "on" + e.replace("hls", "");
                                if ("function" != typeof this[n])
                                    throw new Error("Event " + e + " has no generic handler in this " + this.constructor.name + " class (tried " + n + ")");
                                return this[n].bind(this, t)
                            }
                            ).call(this, e, t).call()
                        } catch (t) {
                            c.logger.error("An internal error happened while handling event " + e + '. Error message: "' + t.message + '". Here is a stacktrace:', t),
                            this.hls.trigger(u.default.ERROR, {
                                type: s.ErrorTypes.OTHER_ERROR,
                                details: s.ErrorDetails.INTERNAL_EXCEPTION,
                                fatal: !1,
                                event: e,
                                err: t
                            })
                        }
                    }
                    ,
                    e
                }();
                !function(e) {
                    e.MANIFEST = "manifest",
                    e.LEVEL = "level",
                    e.AUDIO_TRACK = "audioTrack",
                    e.SUBTITLE_TRACK = "subtitleTrack"
                }(i || (i = {})),
                function(e) {
                    e.MAIN = "main",
                    e.AUDIO = "audio",
                    e.SUBTITLE = "subtitle"
                }(a || (a = {}));
                var f = n("./src/demux/mp4demuxer.js");
                function p(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                var m, g = function() {
                    function e(e, t) {
                        this._uri = null,
                        this.baseuri = void 0,
                        this.reluri = void 0,
                        this.method = null,
                        this.key = null,
                        this.iv = null,
                        this.baseuri = e,
                        this.reluri = t
                    }
                    var t, n, r;
                    return t = e,
                    (n = [{
                        key: "uri",
                        get: function() {
                            return !this._uri && this.reluri && (this._uri = Object(o.buildAbsoluteURL)(this.baseuri, this.reluri, {
                                alwaysNormalize: !0
                            })),
                            this._uri
                        }
                    }]) && p(t.prototype, n),
                    r && p(t, r),
                    e
                }();
                function v(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                !function(e) {
                    e.AUDIO = "audio",
                    e.VIDEO = "video"
                }(m || (m = {}));
                var y = function() {
                    function e() {
                        var e;
                        this._url = null,
                        this._byteRange = null,
                        this._decryptdata = null,
                        this._elementaryStreams = ((e = {})[m.AUDIO] = !1,
                        e[m.VIDEO] = !1,
                        e),
                        this.deltaPTS = 0,
                        this.rawProgramDateTime = null,
                        this.programDateTime = null,
                        this.title = null,
                        this.tagList = [],
                        this.cc = void 0,
                        this.type = void 0,
                        this.relurl = void 0,
                        this.baseurl = void 0,
                        this.duration = void 0,
                        this.start = void 0,
                        this.sn = 0,
                        this.urlId = 0,
                        this.level = 0,
                        this.levelkey = void 0,
                        this.loader = void 0
                    }
                    var t, n, r, i = e.prototype;
                    return i.setByteRange = function(e, t) {
                        var n = e.split("@", 2)
                          , r = [];
                        1 === n.length ? r[0] = t ? t.byteRangeEndOffset : 0 : r[0] = parseInt(n[1]),
                        r[1] = parseInt(n[0]) + r[0],
                        this._byteRange = r
                    }
                    ,
                    i.addElementaryStream = function(e) {
                        this._elementaryStreams[e] = !0
                    }
                    ,
                    i.hasElementaryStream = function(e) {
                        return !0 === this._elementaryStreams[e]
                    }
                    ,
                    i.createInitializationVector = function(e) {
                        for (var t = new Uint8Array(16), n = 12; n < 16; n++)
                            t[n] = e >> 8 * (15 - n) & 255;
                        return t
                    }
                    ,
                    i.setDecryptDataFromLevelKey = function(e, t) {
                        var n = e;
                        return e && e.method && e.uri && !e.iv && ((n = new g(e.baseuri,e.reluri)).method = e.method,
                        n.iv = this.createInitializationVector(t)),
                        n
                    }
                    ,
                    t = e,
                    (n = [{
                        key: "url",
                        get: function() {
                            return !this._url && this.relurl && (this._url = Object(o.buildAbsoluteURL)(this.baseurl, this.relurl, {
                                alwaysNormalize: !0
                            })),
                            this._url
                        },
                        set: function(e) {
                            this._url = e
                        }
                    }, {
                        key: "byteRange",
                        get: function() {
                            return this._byteRange ? this._byteRange : []
                        }
                    }, {
                        key: "byteRangeStartOffset",
                        get: function() {
                            return this.byteRange[0]
                        }
                    }, {
                        key: "byteRangeEndOffset",
                        get: function() {
                            return this.byteRange[1]
                        }
                    }, {
                        key: "decryptdata",
                        get: function() {
                            if (!this.levelkey && !this._decryptdata)
                                return null;
                            if (!this._decryptdata && this.levelkey) {
                                var e = this.sn;
                                "number" != typeof e && (this.levelkey && "AES-128" === this.levelkey.method && !this.levelkey.iv && c.logger.warn('missing IV for initialization segment with method="' + this.levelkey.method + '" - compliance issue'),
                                e = 0),
                                this._decryptdata = this.setDecryptDataFromLevelKey(this.levelkey, e)
                            }
                            return this._decryptdata
                        }
                    }, {
                        key: "endProgramDateTime",
                        get: function() {
                            if (null === this.programDateTime)
                                return null;
                            if (!Object(l.isFiniteNumber)(this.programDateTime))
                                return null;
                            var e = Object(l.isFiniteNumber)(this.duration) ? this.duration : 0;
                            return this.programDateTime + 1e3 * e
                        }
                    }, {
                        key: "encrypted",
                        get: function() {
                            return !(!this.decryptdata || null === this.decryptdata.uri || null !== this.decryptdata.key)
                        }
                    }]) && v(t.prototype, n),
                    r && v(t, r),
                    e
                }();
                function b(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                var x = function() {
                    function e(e) {
                        this.endCC = 0,
                        this.endSN = 0,
                        this.fragments = [],
                        this.initSegment = null,
                        this.live = !0,
                        this.needSidxRanges = !1,
                        this.startCC = 0,
                        this.startSN = 0,
                        this.startTimeOffset = null,
                        this.targetduration = 0,
                        this.totalduration = 0,
                        this.type = null,
                        this.url = e,
                        this.version = null
                    }
                    var t, n, r;
                    return t = e,
                    (n = [{
                        key: "hasProgramDateTime",
                        get: function() {
                            return !(!this.fragments[0] || !Object(l.isFiniteNumber)(this.fragments[0].programDateTime))
                        }
                    }]) && b(t.prototype, n),
                    r && b(t, r),
                    e
                }()
                  , w = /^(\d+)x(\d+)$/
                  , _ = /\s*(.+?)\s*=((?:\".*?\")|.*?)(?:,|$)/g
                  , E = function() {
                    function e(t) {
                        for (var n in "string" == typeof t && (t = e.parseAttrList(t)),
                        t)
                            t.hasOwnProperty(n) && (this[n] = t[n])
                    }
                    var t = e.prototype;
                    return t.decimalInteger = function(e) {
                        var t = parseInt(this[e], 10);
                        return t > Number.MAX_SAFE_INTEGER ? 1 / 0 : t
                    }
                    ,
                    t.hexadecimalInteger = function(e) {
                        if (this[e]) {
                            var t = (this[e] || "0x").slice(2);
                            t = (1 & t.length ? "0" : "") + t;
                            for (var n = new Uint8Array(t.length / 2), r = 0; r < t.length / 2; r++)
                                n[r] = parseInt(t.slice(2 * r, 2 * r + 2), 16);
                            return n
                        }
                        return null
                    }
                    ,
                    t.hexadecimalIntegerAsNumber = function(e) {
                        var t = parseInt(this[e], 16);
                        return t > Number.MAX_SAFE_INTEGER ? 1 / 0 : t
                    }
                    ,
                    t.decimalFloatingPoint = function(e) {
                        return parseFloat(this[e])
                    }
                    ,
                    t.enumeratedString = function(e) {
                        return this[e]
                    }
                    ,
                    t.decimalResolution = function(e) {
                        var t = w.exec(this[e]);
                        if (null !== t)
                            return {
                                width: parseInt(t[1], 10),
                                height: parseInt(t[2], 10)
                            }
                    }
                    ,
                    e.parseAttrList = function(e) {
                        var t, n = {};
                        for (_.lastIndex = 0; null !== (t = _.exec(e)); ) {
                            var r = t[2];
                            0 === r.indexOf('"') && r.lastIndexOf('"') === r.length - 1 && (r = r.slice(1, -1)),
                            n[t[1]] = r
                        }
                        return n
                    }
                    ,
                    e
                }()
                  , T = {
                    audio: {
                        a3ds: !0,
                        "ac-3": !0,
                        "ac-4": !0,
                        alac: !0,
                        alaw: !0,
                        dra1: !0,
                        "dts+": !0,
                        "dts-": !0,
                        dtsc: !0,
                        dtse: !0,
                        dtsh: !0,
                        "ec-3": !0,
                        enca: !0,
                        g719: !0,
                        g726: !0,
                        m4ae: !0,
                        mha1: !0,
                        mha2: !0,
                        mhm1: !0,
                        mhm2: !0,
                        mlpa: !0,
                        mp4a: !0,
                        "raw ": !0,
                        Opus: !0,
                        samr: !0,
                        sawb: !0,
                        sawp: !0,
                        sevc: !0,
                        sqcp: !0,
                        ssmv: !0,
                        twos: !0,
                        ulaw: !0
                    },
                    video: {
                        avc1: !0,
                        avc2: !0,
                        avc3: !0,
                        avc4: !0,
                        avcp: !0,
                        drac: !0,
                        dvav: !0,
                        dvhe: !0,
                        encv: !0,
                        hev1: !0,
                        hvc1: !0,
                        mjp2: !0,
                        mp4v: !0,
                        mvc1: !0,
                        mvc2: !0,
                        mvc3: !0,
                        mvc4: !0,
                        resv: !0,
                        rv60: !0,
                        s263: !0,
                        svc1: !0,
                        svc2: !0,
                        "vc-1": !0,
                        vp08: !0,
                        vp09: !0
                    }
                };
                function S(e, t) {
                    return MediaSource.isTypeSupported((t || "video") + '/mp4;codecs="' + e + '"')
                }
                var M = /#EXT-X-STREAM-INF:([^\n\r]*)[\r\n]+([^\r\n]+)/g
                  , A = /#EXT-X-MEDIA:(.*)/g
                  , R = new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /|(?!#)([\S+ ?]+)/.source, /|#EXT-X-BYTERANGE:*(.+)/.source, /|#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /|#.*/.source].join(""),"g")
                  , L = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\d+))|(?:#EXT-X-(TARGETDURATION): *(\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)([^:]*):(.*))|(?:(#)(.*))(?:.*)\r?\n?/
                  , C = /\.(mp4|m4s|m4v|m4a)$/i
                  , P = function() {
                    function e() {}
                    return e.findGroup = function(e, t) {
                        for (var n = 0; n < e.length; n++) {
                            var r = e[n];
                            if (r.id === t)
                                return r
                        }
                    }
                    ,
                    e.convertAVC1ToAVCOTI = function(e) {
                        var t, n = e.split(".");
                        return n.length > 2 ? (t = n.shift() + ".",
                        t += parseInt(n.shift()).toString(16),
                        t += ("000" + parseInt(n.shift()).toString(16)).substr(-4)) : t = e,
                        t
                    }
                    ,
                    e.resolve = function(e, t) {
                        return o.buildAbsoluteURL(t, e, {
                            alwaysNormalize: !0
                        })
                    }
                    ,
                    e.parseMasterPlaylist = function(t, n) {
                        var r, i = [];
                        function a(e, t) {
                            ["video", "audio"].forEach((function(n) {
                                var r = e.filter((function(e) {
                                    return function(e, t) {
                                        var n = T[t];
                                        return !!n && !0 === n[e.slice(0, 4)]
                                    }(e, n)
                                }
                                ));
                                if (r.length) {
                                    var i = r.filter((function(e) {
                                        return 0 === e.lastIndexOf("avc1", 0) || 0 === e.lastIndexOf("mp4a", 0)
                                    }
                                    ));
                                    t[n + "Codec"] = i.length > 0 ? i[0] : r[0],
                                    e = e.filter((function(e) {
                                        return -1 === r.indexOf(e)
                                    }
                                    ))
                                }
                            }
                            )),
                            t.unknownCodecs = e
                        }
                        for (M.lastIndex = 0; null != (r = M.exec(t)); ) {
                            var o = {}
                              , s = o.attrs = new E(r[1]);
                            o.url = e.resolve(r[2], n);
                            var l = s.decimalResolution("RESOLUTION");
                            l && (o.width = l.width,
                            o.height = l.height),
                            o.bitrate = s.decimalInteger("AVERAGE-BANDWIDTH") || s.decimalInteger("BANDWIDTH"),
                            o.name = s.NAME,
                            a([].concat((s.CODECS || "").split(/[ ,]+/)), o),
                            o.videoCodec && -1 !== o.videoCodec.indexOf("avc1") && (o.videoCodec = e.convertAVC1ToAVCOTI(o.videoCodec)),
                            i.push(o)
                        }
                        return i
                    }
                    ,
                    e.parseMasterPlaylistMedia = function(t, n, r, i) {
                        var a;
                        void 0 === i && (i = []);
                        var o = []
                          , s = 0;
                        for (A.lastIndex = 0; null !== (a = A.exec(t)); ) {
                            var l = new E(a[1]);
                            if (l.TYPE === r) {
                                var u = {
                                    id: s++,
                                    groupId: l["GROUP-ID"],
                                    name: l.NAME || l.LANGUAGE,
                                    type: r,
                                    default: "YES" === l.DEFAULT,
                                    autoselect: "YES" === l.AUTOSELECT,
                                    forced: "YES" === l.FORCED,
                                    lang: l.LANGUAGE
                                };
                                if (l.URI && (u.url = e.resolve(l.URI, n)),
                                i.length) {
                                    var c = e.findGroup(i, u.groupId);
                                    u.audioCodec = c ? c.codec : i[0].codec
                                }
                                o.push(u)
                            }
                        }
                        return o
                    }
                    ,
                    e.parseLevelPlaylist = function(e, t, n, r, i) {
                        var a, o, s, u = 0, h = 0, d = new x(t), f = 0, p = null, m = new y, v = null;
                        for (R.lastIndex = 0; null !== (a = R.exec(e)); ) {
                            var b = a[1];
                            if (b) {
                                m.duration = parseFloat(b);
                                var w = (" " + a[2]).slice(1);
                                m.title = w || null,
                                m.tagList.push(w ? ["INF", b, w] : ["INF", b])
                            } else if (a[3]) {
                                if (Object(l.isFiniteNumber)(m.duration)) {
                                    var _ = u++;
                                    m.type = r,
                                    m.start = h,
                                    s && (m.levelkey = s),
                                    m.sn = _,
                                    m.level = n,
                                    m.cc = f,
                                    m.urlId = i,
                                    m.baseurl = t,
                                    m.relurl = (" " + a[3]).slice(1),
                                    O(m, p),
                                    d.fragments.push(m),
                                    p = m,
                                    h += m.duration,
                                    m = new y
                                }
                            } else if (a[4]) {
                                var T = (" " + a[4]).slice(1);
                                p ? m.setByteRange(T, p) : m.setByteRange(T)
                            } else if (a[5])
                                m.rawProgramDateTime = (" " + a[5]).slice(1),
                                m.tagList.push(["PROGRAM-DATE-TIME", m.rawProgramDateTime]),
                                null === v && (v = d.fragments.length);
                            else {
                                if (!(a = a[0].match(L))) {
                                    c.logger.warn("No matches on slow regex match for level playlist!");
                                    continue
                                }
                                for (o = 1; o < a.length && void 0 === a[o]; o++)
                                    ;
                                var S = (" " + a[o + 1]).slice(1)
                                  , M = (" " + a[o + 2]).slice(1);
                                switch (a[o]) {
                                case "#":
                                    m.tagList.push(M ? [S, M] : [S]);
                                    break;
                                case "PLAYLIST-TYPE":
                                    d.type = S.toUpperCase();
                                    break;
                                case "MEDIA-SEQUENCE":
                                    u = d.startSN = parseInt(S);
                                    break;
                                case "TARGETDURATION":
                                    d.targetduration = parseFloat(S);
                                    break;
                                case "VERSION":
                                    d.version = parseInt(S);
                                    break;
                                case "EXTM3U":
                                    break;
                                case "ENDLIST":
                                    d.live = !1;
                                    break;
                                case "DIS":
                                    f++,
                                    m.tagList.push(["DIS"]);
                                    break;
                                case "DISCONTINUITY-SEQ":
                                    f = parseInt(S);
                                    break;
                                case "KEY":
                                    var A = new E(S)
                                      , P = A.enumeratedString("METHOD")
                                      , k = A.URI
                                      , D = A.hexadecimalInteger("IV");
                                    P && (s = new g(t,k),
                                    k && ["AES-128", "SAMPLE-AES", "SAMPLE-AES-CENC"].indexOf(P) >= 0 && (s.method = P,
                                    s.key = null,
                                    s.iv = D));
                                    break;
                                case "START":
                                    var I = new E(S).decimalFloatingPoint("TIME-OFFSET");
                                    Object(l.isFiniteNumber)(I) && (d.startTimeOffset = I);
                                    break;
                                case "MAP":
                                    var N = new E(S);
                                    m.relurl = N.URI,
                                    N.BYTERANGE && m.setByteRange(N.BYTERANGE),
                                    m.baseurl = t,
                                    m.level = n,
                                    m.type = r,
                                    m.sn = "initSegment",
                                    d.initSegment = m,
                                    (m = new y).rawProgramDateTime = d.initSegment.rawProgramDateTime;
                                    break;
                                default:
                                    c.logger.warn("line parsed but not handled: " + a)
                                }
                            }
                        }
                        return (m = p) && !m.relurl && (d.fragments.pop(),
                        h -= m.duration),
                        d.totalduration = h,
                        d.averagetargetduration = h / d.fragments.length,
                        d.endSN = u - 1,
                        d.startCC = d.fragments[0] ? d.fragments[0].cc : 0,
                        d.endCC = f,
                        !d.initSegment && d.fragments.length && d.fragments.every((function(e) {
                            return C.test(e.relurl)
                        }
                        )) && (c.logger.warn("MP4 fragments found but no init segment (probably no MAP, incomplete M3U8), trying to fetch SIDX"),
                        (m = new y).relurl = d.fragments[0].relurl,
                        m.baseurl = t,
                        m.level = n,
                        m.type = r,
                        m.sn = "initSegment",
                        d.initSegment = m,
                        d.needSidxRanges = !0),
                        v && function(e, t) {
                            for (var n = e[t], r = t - 1; r >= 0; r--) {
                                var i = e[r];
                                i.programDateTime = n.programDateTime - 1e3 * i.duration,
                                n = i
                            }
                        }(d.fragments, v),
                        d
                    }
                    ,
                    e
                }();
                function O(e, t) {
                    e.rawProgramDateTime ? e.programDateTime = Date.parse(e.rawProgramDateTime) : t && t.programDateTime && (e.programDateTime = t.endProgramDateTime),
                    Object(l.isFiniteNumber)(e.programDateTime) || (e.programDateTime = null,
                    e.rawProgramDateTime = null)
                }
                var k = window.performance
                  , D = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        return (n = e.call(this, t, u.default.MANIFEST_LOADING, u.default.LEVEL_LOADING, u.default.AUDIO_TRACK_LOADING, u.default.SUBTITLE_TRACK_LOADING) || this).loaders = {},
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n,
                    r.canHaveQualityLevels = function(e) {
                        return e !== i.AUDIO_TRACK && e !== i.SUBTITLE_TRACK
                    }
                    ,
                    r.mapContextToLevelType = function(e) {
                        switch (e.type) {
                        case i.AUDIO_TRACK:
                            return a.AUDIO;
                        case i.SUBTITLE_TRACK:
                            return a.SUBTITLE;
                        default:
                            return a.MAIN
                        }
                    }
                    ,
                    r.getResponseUrl = function(e, t) {
                        var n = e.url;
                        return void 0 !== n && 0 !== n.indexOf("data:") || (n = t.url),
                        n
                    }
                    ;
                    var o = r.prototype;
                    return o.createInternalLoader = function(e) {
                        var t = this.hls.config
                          , n = t.pLoader
                          , r = t.loader
                          , i = new (n || r)(t);
                        return e.loader = i,
                        this.loaders[e.type] = i,
                        i
                    }
                    ,
                    o.getInternalLoader = function(e) {
                        return this.loaders[e.type]
                    }
                    ,
                    o.resetInternalLoader = function(e) {
                        this.loaders[e] && delete this.loaders[e]
                    }
                    ,
                    o.destroyInternalLoaders = function() {
                        for (var e in this.loaders) {
                            var t = this.loaders[e];
                            t && t.destroy(),
                            this.resetInternalLoader(e)
                        }
                    }
                    ,
                    o.destroy = function() {
                        this.destroyInternalLoaders(),
                        e.prototype.destroy.call(this)
                    }
                    ,
                    o.onManifestLoading = function(e) {
                        this.load({
                            url: e.url,
                            type: i.MANIFEST,
                            level: 0,
                            id: null,
                            responseType: "text"
                        })
                    }
                    ,
                    o.onLevelLoading = function(e) {
                        this.load({
                            url: e.url,
                            type: i.LEVEL,
                            level: e.level,
                            id: e.id,
                            responseType: "text"
                        })
                    }
                    ,
                    o.onAudioTrackLoading = function(e) {
                        this.load({
                            url: e.url,
                            type: i.AUDIO_TRACK,
                            level: null,
                            id: e.id,
                            responseType: "text"
                        })
                    }
                    ,
                    o.onSubtitleTrackLoading = function(e) {
                        this.load({
                            url: e.url,
                            type: i.SUBTITLE_TRACK,
                            level: null,
                            id: e.id,
                            responseType: "text"
                        })
                    }
                    ,
                    o.load = function(e) {
                        var t = this.hls.config;
                        c.logger.debug("Loading playlist of type " + e.type + ", level: " + e.level + ", id: " + e.id);
                        var n, r, a, o, s = this.getInternalLoader(e);
                        if (s) {
                            var l = s.context;
                            if (l && l.url === e.url)
                                return c.logger.trace("playlist request ongoing"),
                                !1;
                            c.logger.warn("aborting previous loader for type: " + e.type),
                            s.abort()
                        }
                        switch (e.type) {
                        case i.MANIFEST:
                            n = t.manifestLoadingMaxRetry,
                            r = t.manifestLoadingTimeOut,
                            a = t.manifestLoadingRetryDelay,
                            o = t.manifestLoadingMaxRetryTimeout;
                            break;
                        case i.LEVEL:
                            n = 0,
                            o = 0,
                            a = 0,
                            r = t.levelLoadingTimeOut;
                            break;
                        default:
                            n = t.levelLoadingMaxRetry,
                            r = t.levelLoadingTimeOut,
                            a = t.levelLoadingRetryDelay,
                            o = t.levelLoadingMaxRetryTimeout
                        }
                        s = this.createInternalLoader(e);
                        var u = {
                            timeout: r,
                            maxRetry: n,
                            retryDelay: a,
                            maxRetryDelay: o
                        }
                          , h = {
                            onSuccess: this.loadsuccess.bind(this),
                            onError: this.loaderror.bind(this),
                            onTimeout: this.loadtimeout.bind(this)
                        };
                        return c.logger.debug("Calling internal loader delegate for URL: " + e.url),
                        s.load(e, u, h),
                        !0
                    }
                    ,
                    o.loadsuccess = function(e, t, n, r) {
                        if (void 0 === r && (r = null),
                        n.isSidxRequest)
                            return this._handleSidxRequest(e, n),
                            void this._handlePlaylistLoaded(e, t, n, r);
                        if (this.resetInternalLoader(n.type),
                        "string" != typeof e.data)
                            throw new Error('expected responseType of "text" for PlaylistLoader');
                        var i = e.data;
                        t.tload = k.now(),
                        0 === i.indexOf("#EXTM3U") ? i.indexOf("#EXTINF:") > 0 || i.indexOf("#EXT-X-TARGETDURATION:") > 0 ? this._handleTrackOrLevelPlaylist(e, t, n, r) : this._handleMasterPlaylist(e, t, n, r) : this._handleManifestParsingError(e, n, "no EXTM3U delimiter", r)
                    }
                    ,
                    o.loaderror = function(e, t, n) {
                        void 0 === n && (n = null),
                        this._handleNetworkError(t, n, !1, e)
                    }
                    ,
                    o.loadtimeout = function(e, t, n) {
                        void 0 === n && (n = null),
                        this._handleNetworkError(t, n, !0)
                    }
                    ,
                    o._handleMasterPlaylist = function(e, t, n, i) {
                        var a = this.hls
                          , o = e.data
                          , s = r.getResponseUrl(e, n)
                          , l = P.parseMasterPlaylist(o, s);
                        if (l.length) {
                            var h = l.map((function(e) {
                                return {
                                    id: e.attrs.AUDIO,
                                    codec: e.audioCodec
                                }
                            }
                            ))
                              , d = P.parseMasterPlaylistMedia(o, s, "AUDIO", h)
                              , f = P.parseMasterPlaylistMedia(o, s, "SUBTITLES");
                            if (d.length) {
                                var p = !1;
                                d.forEach((function(e) {
                                    e.url || (p = !0)
                                }
                                )),
                                !1 === p && l[0].audioCodec && !l[0].attrs.AUDIO && (c.logger.log("audio codec signaled in quality level, but no embedded audio track signaled, create one"),
                                d.unshift({
                                    type: "main",
                                    name: "main",
                                    default: !1,
                                    autoselect: !1,
                                    forced: !1,
                                    id: -1
                                }))
                            }
                            a.trigger(u.default.MANIFEST_LOADED, {
                                levels: l,
                                audioTracks: d,
                                subtitles: f,
                                url: s,
                                stats: t,
                                networkDetails: i
                            })
                        } else
                            this._handleManifestParsingError(e, n, "no level found in manifest", i)
                    }
                    ,
                    o._handleTrackOrLevelPlaylist = function(e, t, n, a) {
                        var o = this.hls
                          , s = n.id
                          , c = n.level
                          , h = n.type
                          , d = r.getResponseUrl(e, n)
                          , f = Object(l.isFiniteNumber)(s) ? s : 0
                          , p = Object(l.isFiniteNumber)(c) ? c : f
                          , m = r.mapContextToLevelType(n)
                          , g = P.parseLevelPlaylist(e.data, d, p, m, f);
                        if (g.tload = t.tload,
                        h === i.MANIFEST) {
                            var v = {
                                url: d,
                                details: g
                            };
                            o.trigger(u.default.MANIFEST_LOADED, {
                                levels: [v],
                                audioTracks: [],
                                url: d,
                                stats: t,
                                networkDetails: a
                            })
                        }
                        if (t.tparsed = k.now(),
                        g.needSidxRanges) {
                            var y = g.initSegment.url;
                            this.load({
                                url: y,
                                isSidxRequest: !0,
                                type: h,
                                level: c,
                                levelDetails: g,
                                id: s,
                                rangeStart: 0,
                                rangeEnd: 2048,
                                responseType: "arraybuffer"
                            })
                        } else
                            n.levelDetails = g,
                            this._handlePlaylistLoaded(e, t, n, a)
                    }
                    ,
                    o._handleSidxRequest = function(e, t) {
                        if ("string" == typeof e.data)
                            throw new Error("sidx request must be made with responseType of array buffer");
                        var n = f.default.parseSegmentIndex(new Uint8Array(e.data));
                        if (n) {
                            var r = n.references
                              , i = t.levelDetails;
                            r.forEach((function(e, t) {
                                var n = e.info;
                                if (i) {
                                    var r = i.fragments[t];
                                    0 === r.byteRange.length && r.setByteRange(String(1 + n.end - n.start) + "@" + String(n.start))
                                }
                            }
                            )),
                            i && i.initSegment.setByteRange(String(n.moovEndOffset) + "@0")
                        }
                    }
                    ,
                    o._handleManifestParsingError = function(e, t, n, r) {
                        this.hls.trigger(u.default.ERROR, {
                            type: s.ErrorTypes.NETWORK_ERROR,
                            details: s.ErrorDetails.MANIFEST_PARSING_ERROR,
                            fatal: !0,
                            url: e.url,
                            reason: n,
                            networkDetails: r
                        })
                    }
                    ,
                    o._handleNetworkError = function(e, t, n, r) {
                        var a, o;
                        void 0 === n && (n = !1),
                        void 0 === r && (r = null),
                        c.logger.info("A network error occured while loading a " + e.type + "-type playlist");
                        var l = this.getInternalLoader(e);
                        switch (e.type) {
                        case i.MANIFEST:
                            a = n ? s.ErrorDetails.MANIFEST_LOAD_TIMEOUT : s.ErrorDetails.MANIFEST_LOAD_ERROR,
                            o = !0;
                            break;
                        case i.LEVEL:
                            a = n ? s.ErrorDetails.LEVEL_LOAD_TIMEOUT : s.ErrorDetails.LEVEL_LOAD_ERROR,
                            o = !1;
                            break;
                        case i.AUDIO_TRACK:
                            a = n ? s.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT : s.ErrorDetails.AUDIO_TRACK_LOAD_ERROR,
                            o = !1;
                            break;
                        default:
                            o = !1
                        }
                        l && (l.abort(),
                        this.resetInternalLoader(e.type));
                        var h = {
                            type: s.ErrorTypes.NETWORK_ERROR,
                            details: a,
                            fatal: o,
                            url: e.url,
                            loader: l,
                            context: e,
                            networkDetails: t
                        };
                        r && (h.response = r),
                        this.hls.trigger(u.default.ERROR, h)
                    }
                    ,
                    o._handlePlaylistLoaded = function(e, t, n, a) {
                        var o = n.type
                          , s = n.level
                          , l = n.id
                          , c = n.levelDetails;
                        if (c && c.targetduration)
                            if (r.canHaveQualityLevels(n.type))
                                this.hls.trigger(u.default.LEVEL_LOADED, {
                                    details: c,
                                    level: s || 0,
                                    id: l || 0,
                                    stats: t,
                                    networkDetails: a
                                });
                            else
                                switch (o) {
                                case i.AUDIO_TRACK:
                                    this.hls.trigger(u.default.AUDIO_TRACK_LOADED, {
                                        details: c,
                                        id: l,
                                        stats: t,
                                        networkDetails: a
                                    });
                                    break;
                                case i.SUBTITLE_TRACK:
                                    this.hls.trigger(u.default.SUBTITLE_TRACK_LOADED, {
                                        details: c,
                                        id: l,
                                        stats: t,
                                        networkDetails: a
                                    })
                                }
                        else
                            this._handleManifestParsingError(e, n, "invalid target duration", a)
                    }
                    ,
                    r
                }(d)
                  , I = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        return (n = e.call(this, t, u.default.FRAG_LOADING) || this).loaders = {},
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i = r.prototype;
                    return i.destroy = function() {
                        var t = this.loaders;
                        for (var n in t) {
                            var r = t[n];
                            r && r.destroy()
                        }
                        this.loaders = {},
                        e.prototype.destroy.call(this)
                    }
                    ,
                    i.onFragLoading = function(e) {
                        var t = e.frag
                          , n = t.type
                          , r = this.loaders
                          , i = this.hls.config
                          , a = i.fLoader
                          , o = i.loader;
                        t.loaded = 0;
                        var s, u, h, d = r[n];
                        d && (c.logger.warn("abort previous fragment loader for type: " + n),
                        d.abort()),
                        d = r[n] = t.loader = i.fLoader ? new a(i) : new o(i),
                        s = {
                            url: t.url,
                            frag: t,
                            responseType: "arraybuffer",
                            progressData: !1
                        };
                        var f = t.byteRangeStartOffset
                          , p = t.byteRangeEndOffset;
                        Object(l.isFiniteNumber)(f) && Object(l.isFiniteNumber)(p) && (s.rangeStart = f,
                        s.rangeEnd = p),
                        u = {
                            timeout: i.fragLoadingTimeOut,
                            maxRetry: 0,
                            retryDelay: 0,
                            maxRetryDelay: i.fragLoadingMaxRetryTimeout
                        },
                        h = {
                            onSuccess: this.loadsuccess.bind(this),
                            onError: this.loaderror.bind(this),
                            onTimeout: this.loadtimeout.bind(this),
                            onProgress: this.loadprogress.bind(this)
                        },
                        d.load(s, u, h)
                    }
                    ,
                    i.loadsuccess = function(e, t, n, r) {
                        void 0 === r && (r = null);
                        var i = e.data
                          , a = n.frag;
                        a.loader = void 0,
                        this.loaders[a.type] = void 0,
                        this.hls.trigger(u.default.FRAG_LOADED, {
                            payload: i,
                            frag: a,
                            stats: t,
                            networkDetails: r
                        })
                    }
                    ,
                    i.loaderror = function(e, t, n) {
                        void 0 === n && (n = null);
                        var r = t.frag
                          , i = r.loader;
                        i && i.abort(),
                        this.loaders[r.type] = void 0,
                        this.hls.trigger(u.default.ERROR, {
                            type: s.ErrorTypes.NETWORK_ERROR,
                            details: s.ErrorDetails.FRAG_LOAD_ERROR,
                            fatal: !1,
                            frag: t.frag,
                            response: e,
                            networkDetails: n
                        })
                    }
                    ,
                    i.loadtimeout = function(e, t, n) {
                        void 0 === n && (n = null);
                        var r = t.frag
                          , i = r.loader;
                        i && i.abort(),
                        this.loaders[r.type] = void 0,
                        this.hls.trigger(u.default.ERROR, {
                            type: s.ErrorTypes.NETWORK_ERROR,
                            details: s.ErrorDetails.FRAG_LOAD_TIMEOUT,
                            fatal: !1,
                            frag: t.frag,
                            networkDetails: n
                        })
                    }
                    ,
                    i.loadprogress = function(e, t, n, r) {
                        void 0 === r && (r = null);
                        var i = t.frag;
                        i.loaded = e.loaded,
                        this.hls.trigger(u.default.FRAG_LOAD_PROGRESS, {
                            frag: i,
                            stats: e,
                            networkDetails: r
                        })
                    }
                    ,
                    r
                }(d)
                  , N = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        return (n = e.call(this, t, u.default.KEY_LOADING) || this).loaders = {},
                        n.decryptkey = null,
                        n.decrypturl = null,
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i = r.prototype;
                    return i.destroy = function() {
                        for (var t in this.loaders) {
                            var n = this.loaders[t];
                            n && n.destroy()
                        }
                        this.loaders = {},
                        e.prototype.destroy.call(this)
                    }
                    ,
                    i.onKeyLoading = function(e) {
                        var t = e.frag
                          , n = t.type
                          , r = this.loaders[n];
                        if (t.decryptdata) {
                            var i = t.decryptdata.uri;
                            if (i !== this.decrypturl || null === this.decryptkey) {
                                var a = this.hls.config;
                                if (r && (c.logger.warn("abort previous key loader for type:" + n),
                                r.abort()),
                                !i)
                                    return void c.logger.warn("key uri is falsy");
                                t.loader = this.loaders[n] = new a.loader(a),
                                this.decrypturl = i,
                                this.decryptkey = null;
                                var o = {
                                    url: i,
                                    frag: t,
                                    responseType: "arraybuffer"
                                }
                                  , s = {
                                    timeout: a.fragLoadingTimeOut,
                                    maxRetry: 0,
                                    retryDelay: a.fragLoadingRetryDelay,
                                    maxRetryDelay: a.fragLoadingMaxRetryTimeout
                                }
                                  , l = {
                                    onSuccess: this.loadsuccess.bind(this),
                                    onError: this.loaderror.bind(this),
                                    onTimeout: this.loadtimeout.bind(this)
                                };
                                t.loader.load(o, s, l)
                            } else
                                this.decryptkey && (t.decryptdata.key = this.decryptkey,
                                this.hls.trigger(u.default.KEY_LOADED, {
                                    frag: t
                                }))
                        } else
                            c.logger.warn("Missing decryption data on fragment in onKeyLoading")
                    }
                    ,
                    i.loadsuccess = function(e, t, n) {
                        var r = n.frag;
                        r.decryptdata ? (this.decryptkey = r.decryptdata.key = new Uint8Array(e.data),
                        r.loader = void 0,
                        delete this.loaders[r.type],
                        this.hls.trigger(u.default.KEY_LOADED, {
                            frag: r
                        })) : c.logger.error("after key load, decryptdata unset")
                    }
                    ,
                    i.loaderror = function(e, t) {
                        var n = t.frag
                          , r = n.loader;
                        r && r.abort(),
                        delete this.loaders[n.type],
                        this.hls.trigger(u.default.ERROR, {
                            type: s.ErrorTypes.NETWORK_ERROR,
                            details: s.ErrorDetails.KEY_LOAD_ERROR,
                            fatal: !1,
                            frag: n,
                            response: e
                        })
                    }
                    ,
                    i.loadtimeout = function(e, t) {
                        var n = t.frag
                          , r = n.loader;
                        r && r.abort(),
                        delete this.loaders[n.type],
                        this.hls.trigger(u.default.ERROR, {
                            type: s.ErrorTypes.NETWORK_ERROR,
                            details: s.ErrorDetails.KEY_LOAD_TIMEOUT,
                            fatal: !1,
                            frag: n
                        })
                    }
                    ,
                    r
                }(d)
                  , F = "NOT_LOADED"
                  , U = "APPENDING"
                  , B = "PARTIAL"
                  , z = "OK"
                  , G = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        return (n = e.call(this, t, u.default.BUFFER_APPENDED, u.default.FRAG_BUFFERED, u.default.FRAG_LOADED) || this).bufferPadding = .2,
                        n.fragments = Object.create(null),
                        n.timeRanges = Object.create(null),
                        n.config = t.config,
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i = r.prototype;
                    return i.destroy = function() {
                        this.fragments = Object.create(null),
                        this.timeRanges = Object.create(null),
                        this.config = null,
                        d.prototype.destroy.call(this),
                        e.prototype.destroy.call(this)
                    }
                    ,
                    i.getBufferedFrag = function(e, t) {
                        var n = this.fragments
                          , r = Object.keys(n).filter((function(r) {
                            var i = n[r];
                            if (i.body.type !== t)
                                return !1;
                            if (!i.buffered)
                                return !1;
                            var a = i.body;
                            return a.startPTS <= e && e <= a.endPTS
                        }
                        ));
                        if (0 === r.length)
                            return null;
                        var i = r.pop();
                        return n[i].body
                    }
                    ,
                    i.detectEvictedFragments = function(e, t) {
                        var n, r, i = this;
                        Object.keys(this.fragments).forEach((function(a) {
                            var o = i.fragments[a];
                            if (!0 === o.buffered) {
                                var s = o.range[e];
                                if (s) {
                                    n = s.time;
                                    for (var l = 0; l < n.length; l++)
                                        if (r = n[l],
                                        !1 === i.isTimeBuffered(r.startPTS, r.endPTS, t)) {
                                            i.removeFragment(o.body);
                                            break
                                        }
                                }
                            }
                        }
                        ))
                    }
                    ,
                    i.detectPartialFragments = function(e) {
                        var t = this
                          , n = this.getFragmentKey(e)
                          , r = this.fragments[n];
                        r && (r.buffered = !0,
                        Object.keys(this.timeRanges).forEach((function(n) {
                            if (e.hasElementaryStream(n)) {
                                var i = t.timeRanges[n];
                                r.range[n] = t.getBufferedTimes(e.startPTS, e.endPTS, i)
                            }
                        }
                        )))
                    }
                    ,
                    i.getBufferedTimes = function(e, t, n) {
                        for (var r, i, a = [], o = !1, s = 0; s < n.length; s++) {
                            if (r = n.start(s) - this.bufferPadding,
                            i = n.end(s) + this.bufferPadding,
                            e >= r && t <= i) {
                                a.push({
                                    startPTS: Math.max(e, n.start(s)),
                                    endPTS: Math.min(t, n.end(s))
                                });
                                break
                            }
                            if (e < i && t > r)
                                a.push({
                                    startPTS: Math.max(e, n.start(s)),
                                    endPTS: Math.min(t, n.end(s))
                                }),
                                o = !0;
                            else if (t <= r)
                                break
                        }
                        return {
                            time: a,
                            partial: o
                        }
                    }
                    ,
                    i.getFragmentKey = function(e) {
                        return e.type + "_" + e.level + "_" + e.urlId + "_" + e.sn
                    }
                    ,
                    i.getPartialFragment = function(e) {
                        var t, n, r, i = this, a = null, o = 0;
                        return Object.keys(this.fragments).forEach((function(s) {
                            var l = i.fragments[s];
                            i.isPartial(l) && (n = l.body.startPTS - i.bufferPadding,
                            r = l.body.endPTS + i.bufferPadding,
                            e >= n && e <= r && (t = Math.min(e - n, r - e),
                            o <= t && (a = l.body,
                            o = t)))
                        }
                        )),
                        a
                    }
                    ,
                    i.getState = function(e) {
                        var t = this.getFragmentKey(e)
                          , n = this.fragments[t]
                          , r = F;
                        return void 0 !== n && (r = n.buffered ? !0 === this.isPartial(n) ? B : z : U),
                        r
                    }
                    ,
                    i.isPartial = function(e) {
                        return !0 === e.buffered && (void 0 !== e.range.video && !0 === e.range.video.partial || void 0 !== e.range.audio && !0 === e.range.audio.partial)
                    }
                    ,
                    i.isTimeBuffered = function(e, t, n) {
                        for (var r, i, a = 0; a < n.length; a++) {
                            if (r = n.start(a) - this.bufferPadding,
                            i = n.end(a) + this.bufferPadding,
                            e >= r && t <= i)
                                return !0;
                            if (t <= r)
                                return !1
                        }
                        return !1
                    }
                    ,
                    i.onFragLoaded = function(e) {
                        var t = e.frag;
                        Object(l.isFiniteNumber)(t.sn) && !t.bitrateTest && (this.fragments[this.getFragmentKey(t)] = {
                            body: t,
                            range: Object.create(null),
                            buffered: !1
                        })
                    }
                    ,
                    i.onBufferAppended = function(e) {
                        var t = this;
                        this.timeRanges = e.timeRanges,
                        Object.keys(this.timeRanges).forEach((function(e) {
                            var n = t.timeRanges[e];
                            t.detectEvictedFragments(e, n)
                        }
                        ))
                    }
                    ,
                    i.onFragBuffered = function(e) {
                        this.detectPartialFragments(e.frag)
                    }
                    ,
                    i.hasFragment = function(e) {
                        var t = this.getFragmentKey(e);
                        return void 0 !== this.fragments[t]
                    }
                    ,
                    i.removeFragment = function(e) {
                        var t = this.getFragmentKey(e);
                        delete this.fragments[t]
                    }
                    ,
                    i.removeAllFragments = function() {
                        this.fragments = Object.create(null)
                    }
                    ,
                    r
                }(d)
                  , H = {
                    search: function(e, t) {
                        for (var n = 0, r = e.length - 1, i = null, a = null; n <= r; ) {
                            var o = t(a = e[i = (n + r) / 2 | 0]);
                            if (o > 0)
                                n = i + 1;
                            else {
                                if (!(o < 0))
                                    return a;
                                r = i - 1
                            }
                        }
                        return null
                    }
                }
                  , j = function() {
                    function e() {}
                    return e.isBuffered = function(e, t) {
                        try {
                            if (e)
                                for (var n = e.buffered, r = 0; r < n.length; r++)
                                    if (t >= n.start(r) && t <= n.end(r))
                                        return !0
                        } catch (e) {}
                        return !1
                    }
                    ,
                    e.bufferInfo = function(e, t, n) {
                        try {
                            if (e) {
                                var r, i = e.buffered, a = [];
                                for (r = 0; r < i.length; r++)
                                    a.push({
                                        start: i.start(r),
                                        end: i.end(r)
                                    });
                                return this.bufferedInfo(a, t, n)
                            }
                        } catch (e) {}
                        return {
                            len: 0,
                            start: t,
                            end: t,
                            nextStart: void 0
                        }
                    }
                    ,
                    e.bufferedInfo = function(e, t, n) {
                        e.sort((function(e, t) {
                            var n = e.start - t.start;
                            return n || t.end - e.end
                        }
                        ));
                        var r = [];
                        if (n)
                            for (var i = 0; i < e.length; i++) {
                                var a = r.length;
                                if (a) {
                                    var o = r[a - 1].end;
                                    e[i].start - o < n ? e[i].end > o && (r[a - 1].end = e[i].end) : r.push(e[i])
                                } else
                                    r.push(e[i])
                            }
                        else
                            r = e;
                        for (var s, l = 0, u = t, c = t, h = 0; h < r.length; h++) {
                            var d = r[h].start
                              , f = r[h].end;
                            if (t + n >= d && t < f)
                                u = d,
                                l = (c = f) - t;
                            else if (t + n < d) {
                                s = d;
                                break
                            }
                        }
                        return {
                            len: l,
                            start: u,
                            end: c,
                            nextStart: s
                        }
                    }
                    ,
                    e
                }()
                  , V = n("./node_modules/eventemitter3/index.js")
                  , W = n("./node_modules/webworkify-webpack/index.js")
                  , q = n("./src/demux/demuxer-inline.js");
                function K() {
                    return window.MediaSource || window.WebKitMediaSource
                }
                var Y = n("./src/utils/get-self-scope.js")
                  , X = function(e) {
                    var t, n;
                    function r() {
                        return e.apply(this, arguments) || this
                    }
                    return n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n,
                    r.prototype.trigger = function(e) {
                        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)
                            n[r - 1] = arguments[r];
                        this.emit.apply(this, [e, e].concat(n))
                    }
                    ,
                    r
                }(V.EventEmitter)
                  , Z = Object(Y.getSelfScope)()
                  , J = K() || {
                    isTypeSupported: function() {
                        return !1
                    }
                }
                  , Q = function() {
                    function e(e, t) {
                        var n = this;
                        this.hls = e,
                        this.id = t;
                        var r = this.observer = new X
                          , i = e.config
                          , a = function(t, r) {
                            (r = r || {}).frag = n.frag,
                            r.id = n.id,
                            e.trigger(t, r)
                        };
                        r.on(u.default.FRAG_DECRYPTED, a),
                        r.on(u.default.FRAG_PARSING_INIT_SEGMENT, a),
                        r.on(u.default.FRAG_PARSING_DATA, a),
                        r.on(u.default.FRAG_PARSED, a),
                        r.on(u.default.ERROR, a),
                        r.on(u.default.FRAG_PARSING_METADATA, a),
                        r.on(u.default.FRAG_PARSING_USERDATA, a),
                        r.on(u.default.INIT_PTS_FOUND, a);
                        var o = {
                            mp4: J.isTypeSupported("video/mp4"),
                            mpeg: J.isTypeSupported("audio/mpeg"),
                            mp3: J.isTypeSupported('audio/mp4; codecs="mp3"')
                        }
                          , l = navigator.vendor;
                        if (i.enableWorker && "undefined" != typeof Worker) {
                            var h;
                            c.logger.log("demuxing in webworker");
                            try {
                                h = this.w = W(/*! ../demux/demuxer-worker.js */
                                "./src/demux/demuxer-worker.js"),
                                this.onwmsg = this.onWorkerMessage.bind(this),
                                h.addEventListener("message", this.onwmsg),
                                h.onerror = function(t) {
                                    e.trigger(u.default.ERROR, {
                                        type: s.ErrorTypes.OTHER_ERROR,
                                        details: s.ErrorDetails.INTERNAL_EXCEPTION,
                                        fatal: !0,
                                        event: "demuxerWorker",
                                        err: {
                                            message: t.message + " (" + t.filename + ":" + t.lineno + ")"
                                        }
                                    })
                                }
                                ,
                                h.postMessage({
                                    cmd: "init",
                                    typeSupported: o,
                                    vendor: l,
                                    id: t,
                                    config: JSON.stringify(i)
                                })
                            } catch (e) {
                                c.logger.warn("Error in worker:", e),
                                c.logger.error("Error while initializing DemuxerWorker, fallback on DemuxerInline"),
                                h && Z.URL.revokeObjectURL(h.objectURL),
                                this.demuxer = new q.default(r,o,i,l),
                                this.w = void 0
                            }
                        } else
                            this.demuxer = new q.default(r,o,i,l)
                    }
                    var t = e.prototype;
                    return t.destroy = function() {
                        var e = this.w;
                        if (e)
                            e.removeEventListener("message", this.onwmsg),
                            e.terminate(),
                            this.w = null;
                        else {
                            var t = this.demuxer;
                            t && (t.destroy(),
                            this.demuxer = null)
                        }
                        var n = this.observer;
                        n && (n.removeAllListeners(),
                        this.observer = null)
                    }
                    ,
                    t.push = function(e, t, n, r, i, a, o, s) {
                        var u = this.w
                          , h = Object(l.isFiniteNumber)(i.startPTS) ? i.startPTS : i.start
                          , d = i.decryptdata
                          , f = this.frag
                          , p = !(f && i.cc === f.cc)
                          , m = !(f && i.level === f.level)
                          , g = f && i.sn === f.sn + 1
                          , v = !m && g;
                        if (p && c.logger.log(this.id + ":discontinuity detected"),
                        m && c.logger.log(this.id + ":switch detected"),
                        this.frag = i,
                        u)
                            u.postMessage({
                                cmd: "demux",
                                data: e,
                                decryptdata: d,
                                initSegment: t,
                                audioCodec: n,
                                videoCodec: r,
                                timeOffset: h,
                                discontinuity: p,
                                trackSwitch: m,
                                contiguous: v,
                                duration: a,
                                accurateTimeOffset: o,
                                defaultInitPTS: s
                            }, e instanceof ArrayBuffer ? [e] : []);
                        else {
                            var y = this.demuxer;
                            y && y.push(e, d, t, n, r, h, p, m, v, a, o, s)
                        }
                    }
                    ,
                    t.onWorkerMessage = function(e) {
                        var t = e.data
                          , n = this.hls;
                        switch (t.event) {
                        case "init":
                            Z.URL.revokeObjectURL(this.w.objectURL);
                            break;
                        case u.default.FRAG_PARSING_DATA:
                            t.data.data1 = new Uint8Array(t.data1),
                            t.data2 && (t.data.data2 = new Uint8Array(t.data2));
                        default:
                            t.data = t.data || {},
                            t.data.frag = this.frag,
                            t.data.id = this.id,
                            n.trigger(t.event, t.data)
                        }
                    }
                    ,
                    e
                }();
                function $(e, t, n) {
                    switch (t) {
                    case "audio":
                        e.audioGroupIds || (e.audioGroupIds = []),
                        e.audioGroupIds.push(n);
                        break;
                    case "text":
                        e.textGroupIds || (e.textGroupIds = []),
                        e.textGroupIds.push(n)
                    }
                }
                function ee(e, t, n) {
                    var r = e[t]
                      , i = e[n]
                      , a = i.startPTS;
                    Object(l.isFiniteNumber)(a) ? n > t ? (r.duration = a - r.start,
                    r.duration < 0 && c.logger.warn("negative duration computed for frag " + r.sn + ",level " + r.level + ", there should be some duration drift between playlist and fragment!")) : (i.duration = r.start - a,
                    i.duration < 0 && c.logger.warn("negative duration computed for frag " + i.sn + ",level " + i.level + ", there should be some duration drift between playlist and fragment!")) : i.start = n > t ? r.start + r.duration : Math.max(r.start - i.duration, 0)
                }
                function te(e, t, n, r, i, a) {
                    var o = n;
                    if (Object(l.isFiniteNumber)(t.startPTS)) {
                        var s = Math.abs(t.startPTS - n);
                        Object(l.isFiniteNumber)(t.deltaPTS) ? t.deltaPTS = Math.max(s, t.deltaPTS) : t.deltaPTS = s,
                        o = Math.max(n, t.startPTS),
                        n = Math.min(n, t.startPTS),
                        r = Math.max(r, t.endPTS),
                        i = Math.min(i, t.startDTS),
                        a = Math.max(a, t.endDTS)
                    }
                    var u = n - t.start;
                    t.start = t.startPTS = n,
                    t.maxStartPTS = o,
                    t.endPTS = r,
                    t.startDTS = i,
                    t.endDTS = a,
                    t.duration = r - n;
                    var c, h, d, f = t.sn;
                    if (!e || f < e.startSN || f > e.endSN)
                        return 0;
                    for (c = f - e.startSN,
                    (h = e.fragments)[c] = t,
                    d = c; d > 0; d--)
                        ee(h, d, d - 1);
                    for (d = c; d < h.length - 1; d++)
                        ee(h, d, d + 1);
                    return e.PTSKnown = !0,
                    u
                }
                function ne(e, t) {
                    t.initSegment && e.initSegment && (t.initSegment = e.initSegment);
                    var n, r = 0;
                    if (re(e, t, (function(e, i) {
                        r = e.cc - i.cc,
                        Object(l.isFiniteNumber)(e.startPTS) && (i.start = i.startPTS = e.startPTS,
                        i.endPTS = e.endPTS,
                        i.duration = e.duration,
                        i.backtracked = e.backtracked,
                        i.dropped = e.dropped,
                        n = i),
                        t.PTSKnown = !0
                    }
                    )),
                    t.PTSKnown) {
                        if (r) {
                            c.logger.log("discontinuity sliding from playlist, take drift into account");
                            for (var i = t.fragments, a = 0; a < i.length; a++)
                                i[a].cc += r
                        }
                        n ? te(t, n, n.startPTS, n.endPTS, n.startDTS, n.endDTS) : function(e, t) {
                            var n = t.startSN - e.startSN
                              , r = e.fragments
                              , i = t.fragments;
                            if (!(n < 0 || n > r.length))
                                for (var a = 0; a < i.length; a++)
                                    i[a].start += r[n].start
                        }(e, t),
                        t.PTSKnown = e.PTSKnown
                    }
                }
                function re(e, t, n) {
                    if (e && t)
                        for (var r = Math.max(e.startSN, t.startSN) - t.startSN, i = Math.min(e.endSN, t.endSN) - t.startSN, a = t.startSN - e.startSN, o = r; o <= i; o++) {
                            var s = e.fragments[a + o]
                              , l = t.fragments[o];
                            if (!s || !l)
                                break;
                            n(s, l, o)
                        }
                }
                function ie(e, t, n) {
                    var r = 1e3 * (t.averagetargetduration ? t.averagetargetduration : t.targetduration)
                      , i = r / 2;
                    return e && t.endSN === e.endSN && (r = i),
                    n && (r = Math.max(i, r - (window.performance.now() - n))),
                    Math.round(r)
                }
                var ae = {
                    toString: function(e) {
                        for (var t = "", n = e.length, r = 0; r < n; r++)
                            t += "[" + e.start(r).toFixed(3) + "," + e.end(r).toFixed(3) + "]";
                        return t
                    }
                };
                function oe(e, t) {
                    t.fragments.forEach((function(t) {
                        if (t) {
                            var n = t.start + e;
                            t.start = t.startPTS = n,
                            t.endPTS = n + t.duration
                        }
                    }
                    )),
                    t.PTSKnown = !0
                }
                function se(e, t, n) {
                    !function(e, t, n) {
                        if (function(e, t, n) {
                            var r = !1;
                            return t && t.details && n && (n.endCC > n.startCC || e && e.cc < n.startCC) && (r = !0),
                            r
                        }(e, n, t)) {
                            var r = function(e, t) {
                                var n = e.fragments
                                  , r = t.fragments;
                                if (r.length && n.length) {
                                    var i = function(e, t) {
                                        for (var n = null, r = 0; r < e.length; r += 1) {
                                            var i = e[r];
                                            if (i && i.cc === t) {
                                                n = i;
                                                break
                                            }
                                        }
                                        return n
                                    }(n, r[0].cc);
                                    if (i && (!i || i.startPTS))
                                        return i;
                                    c.logger.log("No frag in previous level to align on")
                                } else
                                    c.logger.log("No fragments to align")
                            }(n.details, t);
                            r && (c.logger.log("Adjusting PTS using last level due to CC increase within current level"),
                            oe(r.start, t))
                        }
                    }(e, n, t),
                    !n.PTSKnown && t && function(e, t) {
                        if (t && t.fragments.length) {
                            if (!e.hasProgramDateTime || !t.hasProgramDateTime)
                                return;
                            var n = t.fragments[0].programDateTime
                              , r = (e.fragments[0].programDateTime - n) / 1e3 + t.fragments[0].start;
                            Object(l.isFiniteNumber)(r) && (c.logger.log("adjusting PTS using programDateTime delta, sliding:" + r.toFixed(3)),
                            oe(r, e))
                        }
                    }(n, t.details)
                }
                function le(e, t, n) {
                    if (null === t || !Array.isArray(e) || !e.length || !Object(l.isFiniteNumber)(t))
                        return null;
                    if (t < (e[0].programDateTime || 0))
                        return null;
                    if (t >= (e[e.length - 1].endProgramDateTime || 0))
                        return null;
                    n = n || 0;
                    for (var r = 0; r < e.length; ++r) {
                        var i = e[r];
                        if (he(t, n, i))
                            return i
                    }
                    return null
                }
                function ue(e, t, n, r) {
                    void 0 === n && (n = 0),
                    void 0 === r && (r = 0);
                    var i = e ? t[e.sn - t[0].sn + 1] : null;
                    return i && !ce(n, r, i) ? i : H.search(t, ce.bind(null, n, r))
                }
                function ce(e, t, n) {
                    void 0 === e && (e = 0),
                    void 0 === t && (t = 0);
                    var r = Math.min(t, n.duration + (n.deltaPTS ? n.deltaPTS : 0));
                    return n.start + n.duration - r <= e ? 1 : n.start - r > e && n.start ? -1 : 0
                }
                function he(e, t, n) {
                    var r = 1e3 * Math.min(t, n.duration + (n.deltaPTS ? n.deltaPTS : 0));
                    return (n.endProgramDateTime || 0) - r > e
                }
                var de = function() {
                    function e(e, t, n, r) {
                        this.config = e,
                        this.media = t,
                        this.fragmentTracker = n,
                        this.hls = r,
                        this.nudgeRetry = 0,
                        this.stallReported = !1,
                        this.stalled = null,
                        this.moved = !1,
                        this.seeking = !1
                    }
                    var t = e.prototype;
                    return t.poll = function(e) {
                        var t = this.config
                          , n = this.media
                          , r = this.stalled
                          , i = n.currentTime
                          , a = n.seeking
                          , o = this.seeking && !a
                          , s = !this.seeking && a;
                        if (this.seeking = a,
                        i === e) {
                            if ((s || o) && (this.stalled = null),
                            !n.paused && !n.ended && 0 !== n.playbackRate && n.buffered.length) {
                                var l = j.bufferInfo(n, i, 0)
                                  , u = l.len > 0
                                  , h = l.nextStart || 0;
                                if (u || h) {
                                    if (a) {
                                        if (l.len > 2 || !h || h - i > 2)
                                            return;
                                        this.moved = !1
                                    }
                                    if (!this.moved && this.stalled) {
                                        var d = Math.max(h, l.start || 0) - i;
                                        if (d > 0 && d <= 2)
                                            return void this._trySkipBufferHole(null)
                                    }
                                    var f = self.performance.now();
                                    if (null !== r) {
                                        var p = f - r;
                                        !a && p >= 250 && this._reportStall(l.len);
                                        var m = j.bufferInfo(n, i, t.maxBufferHole);
                                        this._tryFixBufferStall(m, p)
                                    } else
                                        this.stalled = f
                                }
                            }
                        } else if (this.moved = !0,
                        null !== r) {
                            if (this.stallReported) {
                                var g = self.performance.now() - r;
                                c.logger.warn("playback not stuck anymore @" + i + ", after " + Math.round(g) + "ms"),
                                this.stallReported = !1
                            }
                            this.stalled = null,
                            this.nudgeRetry = 0
                        }
                    }
                    ,
                    t._tryFixBufferStall = function(e, t) {
                        var n = this.config
                          , r = this.fragmentTracker
                          , i = this.media.currentTime
                          , a = r.getPartialFragment(i);
                        a && this._trySkipBufferHole(a) || e.len > n.maxBufferHole && t > 1e3 * n.highBufferWatchdogPeriod && (c.logger.warn("Trying to nudge playhead over buffer-hole"),
                        this.stalled = null,
                        this._tryNudgeBuffer())
                    }
                    ,
                    t._reportStall = function(e) {
                        var t = this.hls
                          , n = this.media;
                        this.stallReported || (this.stallReported = !0,
                        c.logger.warn("Playback stalling at @" + n.currentTime + " due to low buffer"),
                        t.trigger(u.default.ERROR, {
                            type: s.ErrorTypes.MEDIA_ERROR,
                            details: s.ErrorDetails.BUFFER_STALLED_ERROR,
                            fatal: !1,
                            buffer: e
                        }))
                    }
                    ,
                    t._trySkipBufferHole = function(e) {
                        for (var t = this.config, n = this.hls, r = this.media, i = r.currentTime, a = 0, o = 0; o < r.buffered.length; o++) {
                            var l = r.buffered.start(o);
                            if (i + t.maxBufferHole >= a && i < l) {
                                var h = Math.max(l + .05, r.currentTime + .1);
                                return c.logger.warn("skipping hole, adjusting currentTime from " + i + " to " + h),
                                this.moved = !0,
                                this.stalled = null,
                                r.currentTime = h,
                                e && n.trigger(u.default.ERROR, {
                                    type: s.ErrorTypes.MEDIA_ERROR,
                                    details: s.ErrorDetails.BUFFER_SEEK_OVER_HOLE,
                                    fatal: !1,
                                    reason: "fragment loaded with buffer holes, seeking from " + i + " to " + h,
                                    frag: e
                                }),
                                h
                            }
                            a = r.buffered.end(o)
                        }
                        return 0
                    }
                    ,
                    t._tryNudgeBuffer = function() {
                        var e = this.config
                          , t = this.hls
                          , n = this.media
                          , r = n.currentTime
                          , i = (this.nudgeRetry || 0) + 1;
                        if (this.nudgeRetry = i,
                        i < e.nudgeMaxRetry) {
                            var a = r + i * e.nudgeOffset;
                            c.logger.warn("Nudging 'currentTime' from " + r + " to " + a),
                            n.currentTime = a,
                            t.trigger(u.default.ERROR, {
                                type: s.ErrorTypes.MEDIA_ERROR,
                                details: s.ErrorDetails.BUFFER_NUDGE_ON_STALL,
                                fatal: !1
                            })
                        } else
                            c.logger.error("Playhead still not moving while enough data buffered @" + r + " after " + e.nudgeMaxRetry + " nudges"),
                            t.trigger(u.default.ERROR, {
                                type: s.ErrorTypes.MEDIA_ERROR,
                                details: s.ErrorDetails.BUFFER_STALLED_ERROR,
                                fatal: !0
                            })
                    }
                    ,
                    e
                }();
                function fe(e) {
                    if (void 0 === e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return e
                }
                var pe = function(e) {
                    var t, n;
                    function r(t) {
                        for (var n, r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), a = 1; a < r; a++)
                            i[a - 1] = arguments[a];
                        return (n = e.call.apply(e, [this, t].concat(i)) || this)._boundTick = void 0,
                        n._tickTimer = null,
                        n._tickInterval = null,
                        n._tickCallCount = 0,
                        n._boundTick = n.tick.bind(fe(n)),
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i = r.prototype;
                    return i.onHandlerDestroying = function() {
                        this.clearNextTick(),
                        this.clearInterval()
                    }
                    ,
                    i.hasInterval = function() {
                        return !!this._tickInterval
                    }
                    ,
                    i.hasNextTick = function() {
                        return !!this._tickTimer
                    }
                    ,
                    i.setInterval = function(e) {
                        return !this._tickInterval && (this._tickInterval = self.setInterval(this._boundTick, e),
                        !0)
                    }
                    ,
                    i.clearInterval = function() {
                        return !!this._tickInterval && (self.clearInterval(this._tickInterval),
                        this._tickInterval = null,
                        !0)
                    }
                    ,
                    i.clearNextTick = function() {
                        return !!this._tickTimer && (self.clearTimeout(this._tickTimer),
                        this._tickTimer = null,
                        !0)
                    }
                    ,
                    i.tick = function() {
                        this._tickCallCount++,
                        1 === this._tickCallCount && (this.doTick(),
                        this._tickCallCount > 1 && (this.clearNextTick(),
                        this._tickTimer = self.setTimeout(this._boundTick, 0)),
                        this._tickCallCount = 0)
                    }
                    ,
                    i.doTick = function() {}
                    ,
                    r
                }(d)
                  , me = "STOPPED"
                  , ge = "STARTING"
                  , ve = "IDLE"
                  , ye = "PAUSED"
                  , be = "KEY_LOADING"
                  , xe = "FRAG_LOADING"
                  , we = "FRAG_LOADING_WAITING_RETRY"
                  , _e = "WAITING_TRACK"
                  , Ee = "PARSING"
                  , Te = "PARSED"
                  , Se = "BUFFER_FLUSHING"
                  , Me = "ENDED"
                  , Ae = "ERROR"
                  , Re = "WAITING_INIT_PTS"
                  , Le = "WAITING_LEVEL"
                  , Ce = function(e) {
                    var t, n;
                    function r() {
                        return e.apply(this, arguments) || this
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i = r.prototype;
                    return i.doTick = function() {}
                    ,
                    i.startLoad = function() {}
                    ,
                    i.stopLoad = function() {
                        var e = this.fragCurrent;
                        e && (e.loader && e.loader.abort(),
                        this.fragmentTracker.removeFragment(e)),
                        this.demuxer && (this.demuxer.destroy(),
                        this.demuxer = null),
                        this.fragCurrent = null,
                        this.fragPrevious = null,
                        this.clearInterval(),
                        this.clearNextTick(),
                        this.state = me
                    }
                    ,
                    i._streamEnded = function(e, t) {
                        var n = this.fragCurrent
                          , r = this.fragmentTracker;
                        if (!t.live && n && !n.backtracked && n.sn === t.endSN && !e.nextStart) {
                            var i = r.getState(n);
                            return i === B || i === z
                        }
                        return !1
                    }
                    ,
                    i.onMediaSeeking = function() {
                        var e = this.config
                          , t = this.media
                          , n = this.mediaBuffer
                          , r = this.state
                          , i = t ? t.currentTime : null
                          , a = j.bufferInfo(n || t, i, this.config.maxBufferHole);
                        if (Object(l.isFiniteNumber)(i) && c.logger.log("media seeking to " + i.toFixed(3)),
                        r === xe) {
                            var o = this.fragCurrent;
                            if (0 === a.len && o) {
                                var s = e.maxFragLookUpTolerance
                                  , u = o.start - s
                                  , h = o.start + o.duration + s;
                                i < u || i > h ? (o.loader && (c.logger.log("seeking outside of buffer while fragment load in progress, cancel fragment load"),
                                o.loader.abort()),
                                this.fragCurrent = null,
                                this.fragPrevious = null,
                                this.state = ve) : c.logger.log("seeking outside of buffer but within currently loaded fragment range")
                            }
                        } else
                            r === Me && (0 === a.len && (this.fragPrevious = null,
                            this.fragCurrent = null),
                            this.state = ve);
                        t && (this.lastCurrentTime = i),
                        this.loadedmetadata || (this.nextLoadPosition = this.startPosition = i),
                        this.tick()
                    }
                    ,
                    i.onMediaEnded = function() {
                        this.startPosition = this.lastCurrentTime = 0
                    }
                    ,
                    i.onHandlerDestroying = function() {
                        this.stopLoad(),
                        e.prototype.onHandlerDestroying.call(this)
                    }
                    ,
                    i.onHandlerDestroyed = function() {
                        this.state = me,
                        this.fragmentTracker = null
                    }
                    ,
                    i.computeLivePosition = function(e, t) {
                        var n = void 0 !== this.config.liveSyncDuration ? this.config.liveSyncDuration : this.config.liveSyncDurationCount * t.targetduration;
                        return e + Math.max(0, t.totalduration - n)
                    }
                    ,
                    r
                }(pe);
                function Pe(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                var Oe = function(e) {
                    var t, n;
                    function r(t, n) {
                        var r;
                        return (r = e.call(this, t, u.default.MEDIA_ATTACHED, u.default.MEDIA_DETACHING, u.default.MANIFEST_LOADING, u.default.MANIFEST_PARSED, u.default.LEVEL_LOADED, u.default.KEY_LOADED, u.default.FRAG_LOADED, u.default.FRAG_LOAD_EMERGENCY_ABORTED, u.default.FRAG_PARSING_INIT_SEGMENT, u.default.FRAG_PARSING_DATA, u.default.FRAG_PARSED, u.default.ERROR, u.default.AUDIO_TRACK_SWITCHING, u.default.AUDIO_TRACK_SWITCHED, u.default.BUFFER_CREATED, u.default.BUFFER_APPENDED, u.default.BUFFER_FLUSHED) || this).fragmentTracker = n,
                        r.config = t.config,
                        r.audioCodecSwap = !1,
                        r._state = me,
                        r.stallReported = !1,
                        r.gapController = null,
                        r.altAudio = !1,
                        r
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i, o, h, d = r.prototype;
                    return d.startLoad = function(e) {
                        if (this.levels) {
                            var t = this.lastCurrentTime
                              , n = this.hls;
                            if (this.stopLoad(),
                            this.setInterval(100),
                            this.level = -1,
                            this.fragLoadError = 0,
                            !this.startFragRequested) {
                                var r = n.startLevel;
                                -1 === r && (r = 0,
                                this.bitrateTest = !0),
                                this.level = n.nextLoadLevel = r,
                                this.loadedmetadata = !1
                            }
                            t > 0 && -1 === e && (c.logger.log("override startPosition with lastCurrentTime @" + t.toFixed(3)),
                            e = t),
                            this.state = ve,
                            this.nextLoadPosition = this.startPosition = this.lastCurrentTime = e,
                            this.tick()
                        } else
                            this.forceStartLoad = !0,
                            this.state = me
                    }
                    ,
                    d.stopLoad = function() {
                        this.forceStartLoad = !1,
                        e.prototype.stopLoad.call(this)
                    }
                    ,
                    d.doTick = function() {
                        switch (this.state) {
                        case Se:
                            this.fragLoadError = 0;
                            break;
                        case ve:
                            this._doTickIdle();
                            break;
                        case Le:
                            var e = this.levels[this.level];
                            e && e.details && (this.state = ve);
                            break;
                        case we:
                            var t = window.performance.now()
                              , n = this.retryDate;
                            (!n || t >= n || this.media && this.media.seeking) && (c.logger.log("mediaController: retryDate reached, switch back to IDLE state"),
                            this.state = ve)
                        }
                        this._checkBuffer(),
                        this._checkFragmentChanged()
                    }
                    ,
                    d._doTickIdle = function() {
                        var e = this.hls
                          , t = e.config
                          , n = this.media;
                        if (void 0 !== this.levelLastLoaded && (n || !this.startFragRequested && t.startFragPrefetch)) {
                            var r;
                            r = this.loadedmetadata ? n.currentTime : this.nextLoadPosition;
                            var i = e.nextLoadLevel
                              , a = this.levels[i];
                            if (a) {
                                var o, s = a.bitrate;
                                o = s ? Math.max(8 * t.maxBufferSize / s, t.maxBufferLength) : t.maxBufferLength,
                                o = Math.min(o, t.maxMaxBufferLength);
                                var l = j.bufferInfo(this.mediaBuffer ? this.mediaBuffer : n, r, t.maxBufferHole)
                                  , h = l.len;
                                if (!(h >= o)) {
                                    c.logger.trace("buffer length of " + h.toFixed(3) + " is below max of " + o.toFixed(3) + ". checking for more payload ..."),
                                    this.level = e.nextLoadLevel = i;
                                    var d = a.details;
                                    if (!d || d.live && this.levelLastLoaded !== i)
                                        this.state = Le;
                                    else {
                                        if (this._streamEnded(l, d)) {
                                            var f = {};
                                            return this.altAudio && (f.type = "video"),
                                            this.hls.trigger(u.default.BUFFER_EOS, f),
                                            void (this.state = Me)
                                        }
                                        this._fetchPayloadOrEos(r, l, d)
                                    }
                                }
                            }
                        }
                    }
                    ,
                    d._fetchPayloadOrEos = function(e, t, n) {
                        var r = this.fragPrevious
                          , i = this.level
                          , a = n.fragments
                          , o = a.length;
                        if (0 !== o) {
                            var s, l = a[0].start, u = a[o - 1].start + a[o - 1].duration, h = t.end;
                            if (n.initSegment && !n.initSegment.data)
                                s = n.initSegment;
                            else if (n.live) {
                                var d = this.config.initialLiveManifestSize;
                                if (o < d)
                                    return void c.logger.warn("Can not start playback of a level, reason: not enough fragments " + o + " < " + d);
                                if (null === (s = this._ensureFragmentAtLivePoint(n, h, l, u, r, a, o)))
                                    return
                            } else
                                h < l && (s = a[0]);
                            s || (s = this._findFragment(l, r, o, a, h, u, n)),
                            s && (s.encrypted ? (c.logger.log("Loading key for " + s.sn + " of [" + n.startSN + " ," + n.endSN + "],level " + i),
                            this._loadKey(s)) : (c.logger.log("Loading " + s.sn + " of [" + n.startSN + " ," + n.endSN + "],level " + i + ", currentTime:" + e.toFixed(3) + ",bufferEnd:" + h.toFixed(3)),
                            this._loadFragment(s)))
                        }
                    }
                    ,
                    d._ensureFragmentAtLivePoint = function(e, t, n, r, i, a, o) {
                        var s, l = this.hls.config, u = this.media, h = void 0 !== l.liveMaxLatencyDuration ? l.liveMaxLatencyDuration : l.liveMaxLatencyDurationCount * e.targetduration;
                        if (t < Math.max(n - l.maxFragLookUpTolerance, r - h)) {
                            var d = this.liveSyncPosition = this.computeLivePosition(n, e);
                            t = d,
                            u && !u.paused && u.readyState && u.duration > d && d > u.currentTime && (c.logger.log("buffer end: " + t.toFixed(3) + " is located too far from the end of live sliding playlist, reset currentTime to : " + d.toFixed(3)),
                            u.currentTime = d),
                            this.nextLoadPosition = d
                        }
                        if (e.PTSKnown && t > r && u && u.readyState)
                            return null;
                        if (this.startFragRequested && !e.PTSKnown) {
                            if (i)
                                if (e.hasProgramDateTime)
                                    c.logger.log("live playlist, switching playlist, load frag with same PDT: " + i.programDateTime),
                                    s = le(a, i.endProgramDateTime, l.maxFragLookUpTolerance);
                                else {
                                    var f = i.sn + 1;
                                    if (f >= e.startSN && f <= e.endSN) {
                                        var p = a[f - e.startSN];
                                        i.cc === p.cc && (s = p,
                                        c.logger.log("live playlist, switching playlist, load frag with next SN: " + s.sn))
                                    }
                                    s || (s = H.search(a, (function(e) {
                                        return i.cc - e.cc
                                    }
                                    ))) && c.logger.log("live playlist, switching playlist, load frag with same CC: " + s.sn)
                                }
                            s || (s = a[Math.min(o - 1, Math.round(o / 2))],
                            c.logger.log("live playlist, switching playlist, unknown, load middle frag : " + s.sn))
                        }
                        return s
                    }
                    ,
                    d._findFragment = function(e, t, n, r, i, a, o) {
                        var s, l = this.hls.config;
                        if (s = i < a ? ue(t, r, i, i > a - l.maxFragLookUpTolerance ? 0 : l.maxFragLookUpTolerance) : r[n - 1]) {
                            var u = s.sn - o.startSN
                              , h = t && s.level === t.level
                              , d = r[u - 1]
                              , f = r[u + 1];
                            if (t && s.sn === t.sn)
                                if (h && !s.backtracked)
                                    if (s.sn < o.endSN) {
                                        var p = t.deltaPTS;
                                        p && p > l.maxBufferHole && t.dropped && u ? (s = d,
                                        c.logger.warn("Previous fragment was dropped with large PTS gap between audio and video. Maybe fragment is not starting with a keyframe? Loading previous one to try to overcome this")) : (s = f,
                                        c.logger.log("Re-loading fragment with SN: " + s.sn))
                                    } else
                                        s = null;
                                else
                                    s.backtracked && (f && f.backtracked ? (c.logger.warn("Already backtracked from fragment " + f.sn + ", will not backtrack to fragment " + s.sn + ". Loading fragment " + f.sn),
                                    s = f) : (c.logger.warn("Loaded fragment with dropped frames, backtracking 1 segment to find a keyframe"),
                                    s.dropped = 0,
                                    d ? (s = d).backtracked = !0 : u && (s = null)))
                        }
                        return s
                    }
                    ,
                    d._loadKey = function(e) {
                        this.state = be,
                        this.hls.trigger(u.default.KEY_LOADING, {
                            frag: e
                        })
                    }
                    ,
                    d._loadFragment = function(e) {
                        var t = this.fragmentTracker.getState(e);
                        this.fragCurrent = e,
                        "initSegment" !== e.sn && (this.startFragRequested = !0),
                        Object(l.isFiniteNumber)(e.sn) && !e.bitrateTest && (this.nextLoadPosition = e.start + e.duration),
                        e.backtracked || t === F || t === B ? (e.autoLevel = this.hls.autoLevelEnabled,
                        e.bitrateTest = this.bitrateTest,
                        this.hls.trigger(u.default.FRAG_LOADING, {
                            frag: e
                        }),
                        this.demuxer || (this.demuxer = new Q(this.hls,"main")),
                        this.state = xe) : t === U && this._reduceMaxBufferLength(e.duration) && this.fragmentTracker.removeFragment(e)
                    }
                    ,
                    d.getBufferedFrag = function(e) {
                        return this.fragmentTracker.getBufferedFrag(e, a.MAIN)
                    }
                    ,
                    d.followingBufferedFrag = function(e) {
                        return e ? this.getBufferedFrag(e.endPTS + .5) : null
                    }
                    ,
                    d._checkFragmentChanged = function() {
                        var e, t, n = this.media;
                        if (n && n.readyState && !1 === n.seeking && ((t = n.currentTime) > this.lastCurrentTime && (this.lastCurrentTime = t),
                        j.isBuffered(n, t) ? e = this.getBufferedFrag(t) : j.isBuffered(n, t + .1) && (e = this.getBufferedFrag(t + .1)),
                        e)) {
                            var r = e;
                            if (r !== this.fragPlaying) {
                                this.hls.trigger(u.default.FRAG_CHANGED, {
                                    frag: r
                                });
                                var i = r.level;
                                this.fragPlaying && this.fragPlaying.level === i || this.hls.trigger(u.default.LEVEL_SWITCHED, {
                                    level: i
                                }),
                                this.fragPlaying = r
                            }
                        }
                    }
                    ,
                    d.immediateLevelSwitch = function() {
                        if (c.logger.log("immediateLevelSwitch"),
                        !this.immediateSwitch) {
                            this.immediateSwitch = !0;
                            var e, t = this.media;
                            t ? (e = t.paused,
                            t.pause()) : e = !0,
                            this.previouslyPaused = e
                        }
                        var n = this.fragCurrent;
                        n && n.loader && n.loader.abort(),
                        this.fragCurrent = null,
                        this.flushMainBuffer(0, Number.POSITIVE_INFINITY)
                    }
                    ,
                    d.immediateLevelSwitchEnd = function() {
                        var e = this.media;
                        e && e.buffered.length && (this.immediateSwitch = !1,
                        j.isBuffered(e, e.currentTime) && (e.currentTime -= 1e-4),
                        this.previouslyPaused || e.play())
                    }
                    ,
                    d.nextLevelSwitch = function() {
                        var e = this.media;
                        if (e && e.readyState) {
                            var t, n, r;
                            if ((n = this.getBufferedFrag(e.currentTime)) && n.startPTS > 1 && this.flushMainBuffer(0, n.startPTS - 1),
                            e.paused)
                                t = 0;
                            else {
                                var i = this.hls.nextLoadLevel
                                  , a = this.levels[i]
                                  , o = this.fragLastKbps;
                                t = o && this.fragCurrent ? this.fragCurrent.duration * a.bitrate / (1e3 * o) + 1 : 0
                            }
                            if ((r = this.getBufferedFrag(e.currentTime + t)) && (r = this.followingBufferedFrag(r))) {
                                var s = this.fragCurrent;
                                s && s.loader && s.loader.abort(),
                                this.fragCurrent = null,
                                this.flushMainBuffer(r.maxStartPTS, Number.POSITIVE_INFINITY)
                            }
                        }
                    }
                    ,
                    d.flushMainBuffer = function(e, t) {
                        this.state = Se;
                        var n = {
                            startOffset: e,
                            endOffset: t
                        };
                        this.altAudio && (n.type = "video"),
                        this.hls.trigger(u.default.BUFFER_FLUSHING, n)
                    }
                    ,
                    d.onMediaAttached = function(e) {
                        var t = this.media = this.mediaBuffer = e.media;
                        this.onvseeking = this.onMediaSeeking.bind(this),
                        this.onvseeked = this.onMediaSeeked.bind(this),
                        this.onvended = this.onMediaEnded.bind(this),
                        t.addEventListener("seeking", this.onvseeking),
                        t.addEventListener("seeked", this.onvseeked),
                        t.addEventListener("ended", this.onvended);
                        var n = this.config;
                        this.levels && n.autoStartLoad && this.hls.startLoad(n.startPosition),
                        this.gapController = new de(n,t,this.fragmentTracker,this.hls)
                    }
                    ,
                    d.onMediaDetaching = function() {
                        var e = this.media;
                        e && e.ended && (c.logger.log("MSE detaching and video ended, reset startPosition"),
                        this.startPosition = this.lastCurrentTime = 0);
                        var t = this.levels;
                        t && t.forEach((function(e) {
                            e.details && e.details.fragments.forEach((function(e) {
                                e.backtracked = void 0
                            }
                            ))
                        }
                        )),
                        e && (e.removeEventListener("seeking", this.onvseeking),
                        e.removeEventListener("seeked", this.onvseeked),
                        e.removeEventListener("ended", this.onvended),
                        this.onvseeking = this.onvseeked = this.onvended = null),
                        this.fragmentTracker.removeAllFragments(),
                        this.media = this.mediaBuffer = null,
                        this.loadedmetadata = !1,
                        this.stopLoad()
                    }
                    ,
                    d.onMediaSeeked = function() {
                        var e = this.media
                          , t = e ? e.currentTime : void 0;
                        Object(l.isFiniteNumber)(t) && c.logger.log("media seeked to " + t.toFixed(3)),
                        this.tick()
                    }
                    ,
                    d.onManifestLoading = function() {
                        c.logger.log("trigger BUFFER_RESET"),
                        this.hls.trigger(u.default.BUFFER_RESET),
                        this.fragmentTracker.removeAllFragments(),
                        this.stalled = !1,
                        this.startPosition = this.lastCurrentTime = 0
                    }
                    ,
                    d.onManifestParsed = function(e) {
                        var t, n = !1, r = !1;
                        e.levels.forEach((function(e) {
                            (t = e.audioCodec) && (-1 !== t.indexOf("mp4a.40.2") && (n = !0),
                            -1 !== t.indexOf("mp4a.40.5") && (r = !0))
                        }
                        )),
                        this.audioCodecSwitch = n && r,
                        this.audioCodecSwitch && c.logger.log("both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"),
                        this.altAudio = e.altAudio,
                        this.levels = e.levels,
                        this.startFragRequested = !1;
                        var i = this.config;
                        (i.autoStartLoad || this.forceStartLoad) && this.hls.startLoad(i.startPosition)
                    }
                    ,
                    d.onLevelLoaded = function(e) {
                        var t = e.details
                          , n = e.level
                          , r = this.levels[this.levelLastLoaded]
                          , i = this.levels[n]
                          , a = t.totalduration
                          , o = 0;
                        if (c.logger.log("level " + n + " loaded [" + t.startSN + "," + t.endSN + "],duration:" + a),
                        t.live) {
                            var s = i.details;
                            s && t.fragments.length > 0 ? (ne(s, t),
                            o = t.fragments[0].start,
                            this.liveSyncPosition = this.computeLivePosition(o, s),
                            t.PTSKnown && Object(l.isFiniteNumber)(o) ? c.logger.log("live playlist sliding:" + o.toFixed(3)) : (c.logger.log("live playlist - outdated PTS, unknown sliding"),
                            se(this.fragPrevious, r, t))) : (c.logger.log("live playlist - first load, unknown sliding"),
                            t.PTSKnown = !1,
                            se(this.fragPrevious, r, t))
                        } else
                            t.PTSKnown = !1;
                        if (i.details = t,
                        this.levelLastLoaded = n,
                        this.hls.trigger(u.default.LEVEL_UPDATED, {
                            details: t,
                            level: n
                        }),
                        !1 === this.startFragRequested) {
                            if (-1 === this.startPosition || -1 === this.lastCurrentTime) {
                                var h = t.startTimeOffset;
                                Object(l.isFiniteNumber)(h) ? (h < 0 && (c.logger.log("negative start time offset " + h + ", count from end of last fragment"),
                                h = o + a + h),
                                c.logger.log("start time offset found in playlist, adjust startPosition to " + h),
                                this.startPosition = h) : t.live ? (this.startPosition = this.computeLivePosition(o, t),
                                c.logger.log("configure startPosition to " + this.startPosition)) : this.startPosition = 0,
                                this.lastCurrentTime = this.startPosition
                            }
                            this.nextLoadPosition = this.startPosition
                        }
                        this.state === Le && (this.state = ve),
                        this.tick()
                    }
                    ,
                    d.onKeyLoaded = function() {
                        this.state === be && (this.state = ve,
                        this.tick())
                    }
                    ,
                    d.onFragLoaded = function(e) {
                        var t = this.fragCurrent
                          , n = this.hls
                          , r = this.levels
                          , i = this.media
                          , a = e.frag;
                        if (this.state === xe && t && "main" === a.type && a.level === t.level && a.sn === t.sn) {
                            var o = e.stats
                              , s = r[t.level]
                              , l = s.details;
                            if (this.bitrateTest = !1,
                            this.stats = o,
                            c.logger.log("Loaded " + t.sn + " of [" + l.startSN + " ," + l.endSN + "],level " + t.level),
                            a.bitrateTest && n.nextLoadLevel)
                                this.state = ve,
                                this.startFragRequested = !1,
                                o.tparsed = o.tbuffered = window.performance.now(),
                                n.trigger(u.default.FRAG_BUFFERED, {
                                    stats: o,
                                    frag: t,
                                    id: "main"
                                }),
                                this.tick();
                            else if ("initSegment" === a.sn)
                                this.state = ve,
                                o.tparsed = o.tbuffered = window.performance.now(),
                                l.initSegment.data = e.payload,
                                n.trigger(u.default.FRAG_BUFFERED, {
                                    stats: o,
                                    frag: t,
                                    id: "main"
                                }),
                                this.tick();
                            else {
                                c.logger.log("Parsing " + t.sn + " of [" + l.startSN + " ," + l.endSN + "],level " + t.level + ", cc " + t.cc),
                                this.state = Ee,
                                this.pendingBuffering = !0,
                                this.appended = !1,
                                a.bitrateTest && (a.bitrateTest = !1,
                                this.fragmentTracker.onFragLoaded({
                                    frag: a
                                }));
                                var h = !(i && i.seeking) && (l.PTSKnown || !l.live)
                                  , d = l.initSegment ? l.initSegment.data : []
                                  , f = this._getAudioCodec(s);
                                (this.demuxer = this.demuxer || new Q(this.hls,"main")).push(e.payload, d, f, s.videoCodec, t, l.totalduration, h)
                            }
                        }
                        this.fragLoadError = 0
                    }
                    ,
                    d.onFragParsingInitSegment = function(e) {
                        var t = this.fragCurrent
                          , n = e.frag;
                        if (t && "main" === e.id && n.sn === t.sn && n.level === t.level && this.state === Ee) {
                            var r, i, a = e.tracks;
                            if (a.audio && this.altAudio && delete a.audio,
                            i = a.audio) {
                                var o = this.levels[this.level].audioCodec
                                  , s = navigator.userAgent.toLowerCase();
                                o && this.audioCodecSwap && (c.logger.log("swapping playlist audio codec"),
                                o = -1 !== o.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5"),
                                this.audioCodecSwitch && 1 !== i.metadata.channelCount && -1 === s.indexOf("firefox") && (o = "mp4a.40.5"),
                                -1 !== s.indexOf("android") && "audio/mpeg" !== i.container && (o = "mp4a.40.2",
                                c.logger.log("Android: force audio codec to " + o)),
                                i.levelCodec = o,
                                i.id = e.id
                            }
                            for (r in (i = a.video) && (i.levelCodec = this.levels[this.level].videoCodec,
                            i.id = e.id),
                            this.hls.trigger(u.default.BUFFER_CODECS, a),
                            a) {
                                i = a[r],
                                c.logger.log("main track:" + r + ",container:" + i.container + ",codecs[level/parsed]=[" + i.levelCodec + "/" + i.codec + "]");
                                var l = i.initSegment;
                                l && (this.appended = !0,
                                this.pendingBuffering = !0,
                                this.hls.trigger(u.default.BUFFER_APPENDING, {
                                    type: r,
                                    data: l,
                                    parent: "main",
                                    content: "initSegment"
                                }))
                            }
                            this.tick()
                        }
                    }
                    ,
                    d.onFragParsingData = function(e) {
                        var t = this
                          , n = this.fragCurrent
                          , r = e.frag;
                        if (n && "main" === e.id && r.sn === n.sn && r.level === n.level && ("audio" !== e.type || !this.altAudio) && this.state === Ee) {
                            var i = this.levels[this.level]
                              , a = n;
                            if (Object(l.isFiniteNumber)(e.endPTS) || (e.endPTS = e.startPTS + n.duration,
                            e.endDTS = e.startDTS + n.duration),
                            !0 === e.hasAudio && a.addElementaryStream(m.AUDIO),
                            !0 === e.hasVideo && a.addElementaryStream(m.VIDEO),
                            c.logger.log("Parsed " + e.type + ",PTS:[" + e.startPTS.toFixed(3) + "," + e.endPTS.toFixed(3) + "],DTS:[" + e.startDTS.toFixed(3) + "/" + e.endDTS.toFixed(3) + "],nb:" + e.nb + ",dropped:" + (e.dropped || 0)),
                            "video" === e.type)
                                if (a.dropped = e.dropped,
                                a.dropped)
                                    if (a.backtracked)
                                        c.logger.warn("Already backtracked on this fragment, appending with the gap", a.sn);
                                    else {
                                        var o = i.details;
                                        if (!o || a.sn !== o.startSN)
                                            return c.logger.warn("missing video frame(s), backtracking fragment", a.sn),
                                            this.fragmentTracker.removeFragment(a),
                                            a.backtracked = !0,
                                            this.nextLoadPosition = e.startPTS,
                                            this.state = ve,
                                            this.fragPrevious = a,
                                            void this.tick();
                                        c.logger.warn("missing video frame(s) on first frag, appending with gap", a.sn)
                                    }
                                else
                                    a.backtracked = !1;
                            var s = te(i.details, a, e.startPTS, e.endPTS, e.startDTS, e.endDTS)
                              , h = this.hls;
                            h.trigger(u.default.LEVEL_PTS_UPDATED, {
                                details: i.details,
                                level: this.level,
                                drift: s,
                                type: e.type,
                                start: e.startPTS,
                                end: e.endPTS
                            }),
                            [e.data1, e.data2].forEach((function(n) {
                                n && n.length && t.state === Ee && (t.appended = !0,
                                t.pendingBuffering = !0,
                                h.trigger(u.default.BUFFER_APPENDING, {
                                    type: e.type,
                                    data: n,
                                    parent: "main",
                                    content: "data"
                                }))
                            }
                            )),
                            this.tick()
                        }
                    }
                    ,
                    d.onFragParsed = function(e) {
                        var t = this.fragCurrent
                          , n = e.frag;
                        t && "main" === e.id && n.sn === t.sn && n.level === t.level && this.state === Ee && (this.stats.tparsed = window.performance.now(),
                        this.state = Te,
                        this._checkAppendedParsed())
                    }
                    ,
                    d.onAudioTrackSwitching = function(e) {
                        var t = !!e.url
                          , n = e.id;
                        if (!t) {
                            if (this.mediaBuffer !== this.media) {
                                c.logger.log("switching on main audio, use media.buffered to schedule main fragment loading"),
                                this.mediaBuffer = this.media;
                                var r = this.fragCurrent;
                                r.loader && (c.logger.log("switching to main audio track, cancel main fragment load"),
                                r.loader.abort()),
                                this.fragCurrent = null,
                                this.fragPrevious = null,
                                this.demuxer && (this.demuxer.destroy(),
                                this.demuxer = null),
                                this.state = ve
                            }
                            var i = this.hls;
                            i.trigger(u.default.BUFFER_FLUSHING, {
                                startOffset: 0,
                                endOffset: Number.POSITIVE_INFINITY,
                                type: "audio"
                            }),
                            i.trigger(u.default.AUDIO_TRACK_SWITCHED, {
                                id: n
                            }),
                            this.altAudio = !1
                        }
                    }
                    ,
                    d.onAudioTrackSwitched = function(e) {
                        var t = e.id
                          , n = !!this.hls.audioTracks[t].url;
                        if (n) {
                            var r = this.videoBuffer;
                            r && this.mediaBuffer !== r && (c.logger.log("switching on alternate audio, use video.buffered to schedule main fragment loading"),
                            this.mediaBuffer = r)
                        }
                        this.altAudio = n,
                        this.tick()
                    }
                    ,
                    d.onBufferCreated = function(e) {
                        var t, n, r = e.tracks, i = !1;
                        for (var a in r) {
                            var o = r[a];
                            "main" === o.id ? (n = a,
                            t = o,
                            "video" === a && (this.videoBuffer = r[a].buffer)) : i = !0
                        }
                        i && t ? (c.logger.log("alternate track found, use " + n + ".buffered to schedule main fragment loading"),
                        this.mediaBuffer = t.buffer) : this.mediaBuffer = this.media
                    }
                    ,
                    d.onBufferAppended = function(e) {
                        if ("main" === e.parent) {
                            var t = this.state;
                            t !== Ee && t !== Te || (this.pendingBuffering = e.pending > 0,
                            this._checkAppendedParsed())
                        }
                    }
                    ,
                    d._checkAppendedParsed = function() {
                        if (!(this.state !== Te || this.appended && this.pendingBuffering)) {
                            var e = this.fragCurrent;
                            if (e) {
                                var t = this.mediaBuffer ? this.mediaBuffer : this.media;
                                c.logger.log("main buffered : " + ae.toString(t.buffered)),
                                this.fragPrevious = e;
                                var n = this.stats;
                                n.tbuffered = window.performance.now(),
                                this.fragLastKbps = Math.round(8 * n.total / (n.tbuffered - n.tfirst)),
                                this.hls.trigger(u.default.FRAG_BUFFERED, {
                                    stats: n,
                                    frag: e,
                                    id: "main"
                                }),
                                this.state = ve
                            }
                            this.tick()
                        }
                    }
                    ,
                    d.onError = function(e) {
                        var t = e.frag || this.fragCurrent;
                        if (!t || "main" === t.type) {
                            var n = !!this.media && j.isBuffered(this.media, this.media.currentTime) && j.isBuffered(this.media, this.media.currentTime + .5);
                            switch (e.details) {
                            case s.ErrorDetails.FRAG_LOAD_ERROR:
                            case s.ErrorDetails.FRAG_LOAD_TIMEOUT:
                            case s.ErrorDetails.KEY_LOAD_ERROR:
                            case s.ErrorDetails.KEY_LOAD_TIMEOUT:
                                if (!e.fatal)
                                    if (this.fragLoadError + 1 <= this.config.fragLoadingMaxRetry) {
                                        var r = Math.min(Math.pow(2, this.fragLoadError) * this.config.fragLoadingRetryDelay, this.config.fragLoadingMaxRetryTimeout);
                                        c.logger.warn("mediaController: frag loading failed, retry in " + r + " ms"),
                                        this.retryDate = window.performance.now() + r,
                                        this.loadedmetadata || (this.startFragRequested = !1,
                                        this.nextLoadPosition = this.startPosition),
                                        this.fragLoadError++,
                                        this.state = we
                                    } else
                                        c.logger.error("mediaController: " + e.details + " reaches max retry, redispatch as fatal ..."),
                                        e.fatal = !0,
                                        this.state = Ae;
                                break;
                            case s.ErrorDetails.LEVEL_LOAD_ERROR:
                            case s.ErrorDetails.LEVEL_LOAD_TIMEOUT:
                                this.state !== Ae && (e.fatal ? (this.state = Ae,
                                c.logger.warn("streamController: " + e.details + ",switch to " + this.state + " state ...")) : e.levelRetry || this.state !== Le || (this.state = ve));
                                break;
                            case s.ErrorDetails.BUFFER_FULL_ERROR:
                                "main" !== e.parent || this.state !== Ee && this.state !== Te || (n ? (this._reduceMaxBufferLength(this.config.maxBufferLength),
                                this.state = ve) : (c.logger.warn("buffer full error also media.currentTime is not buffered, flush everything"),
                                this.fragCurrent = null,
                                this.flushMainBuffer(0, Number.POSITIVE_INFINITY)))
                            }
                        }
                    }
                    ,
                    d._reduceMaxBufferLength = function(e) {
                        var t = this.config;
                        return t.maxMaxBufferLength >= e && (t.maxMaxBufferLength /= 2,
                        c.logger.warn("main:reduce max buffer length to " + t.maxMaxBufferLength + "s"),
                        !0)
                    }
                    ,
                    d._checkBuffer = function() {
                        var e = this.media;
                        if (e && 0 !== e.readyState) {
                            var t = (this.mediaBuffer ? this.mediaBuffer : e).buffered;
                            !this.loadedmetadata && t.length ? (this.loadedmetadata = !0,
                            this._seekToStartPos()) : this.immediateSwitch ? this.immediateLevelSwitchEnd() : this.gapController.poll(this.lastCurrentTime, t)
                        }
                    }
                    ,
                    d.onFragLoadEmergencyAborted = function() {
                        this.state = ve,
                        this.loadedmetadata || (this.startFragRequested = !1,
                        this.nextLoadPosition = this.startPosition),
                        this.tick()
                    }
                    ,
                    d.onBufferFlushed = function() {
                        var e = this.mediaBuffer ? this.mediaBuffer : this.media;
                        e && this.fragmentTracker.detectEvictedFragments(m.VIDEO, e.buffered),
                        this.state = ve,
                        this.fragPrevious = null
                    }
                    ,
                    d.swapAudioCodec = function() {
                        this.audioCodecSwap = !this.audioCodecSwap
                    }
                    ,
                    d._seekToStartPos = function() {
                        var e = this.media
                          , t = e.currentTime
                          , n = e.seeking ? t : this.startPosition;
                        t !== n && n >= 0 && (c.logger.log("target start position not buffered, seek to buffered.start(0) " + n + " from current time " + t + " "),
                        e.currentTime = n)
                    }
                    ,
                    d._getAudioCodec = function(e) {
                        var t = this.config.defaultAudioCodec || e.audioCodec;
                        return this.audioCodecSwap && (c.logger.log("swapping playlist audio codec"),
                        t && (t = -1 !== t.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5")),
                        t
                    }
                    ,
                    i = r,
                    (o = [{
                        key: "state",
                        set: function(e) {
                            if (this.state !== e) {
                                var t = this.state;
                                this._state = e,
                                c.logger.log("main stream-controller: " + t + "->" + e),
                                this.hls.trigger(u.default.STREAM_STATE_TRANSITION, {
                                    previousState: t,
                                    nextState: e
                                })
                            }
                        },
                        get: function() {
                            return this._state
                        }
                    }, {
                        key: "currentLevel",
                        get: function() {
                            var e = this.media;
                            if (e) {
                                var t = this.getBufferedFrag(e.currentTime);
                                if (t)
                                    return t.level
                            }
                            return -1
                        }
                    }, {
                        key: "nextBufferedFrag",
                        get: function() {
                            var e = this.media;
                            return e ? this.followingBufferedFrag(this.getBufferedFrag(e.currentTime)) : null
                        }
                    }, {
                        key: "nextLevel",
                        get: function() {
                            var e = this.nextBufferedFrag;
                            return e ? e.level : -1
                        }
                    }, {
                        key: "liveSyncPosition",
                        get: function() {
                            return this._liveSyncPosition
                        },
                        set: function(e) {
                            this._liveSyncPosition = e
                        }
                    }]) && Pe(i.prototype, o),
                    h && Pe(i, h),
                    r
                }(Ce);
                function ke(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                window.performance;
                var De, Ie = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        return (n = e.call(this, t, u.default.MANIFEST_LOADED, u.default.LEVEL_LOADED, u.default.AUDIO_TRACK_SWITCHED, u.default.FRAG_LOADED, u.default.ERROR) || this).canload = !1,
                        n.currentLevelIndex = null,
                        n.manualLevelIndex = -1,
                        n.timer = null,
                        De = /chrome|firefox/.test(navigator.userAgent.toLowerCase()),
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i, a, o, l = r.prototype;
                    return l.onHandlerDestroying = function() {
                        this.clearTimer(),
                        this.manualLevelIndex = -1
                    }
                    ,
                    l.clearTimer = function() {
                        null !== this.timer && (clearTimeout(this.timer),
                        this.timer = null)
                    }
                    ,
                    l.startLoad = function() {
                        var e = this._levels;
                        this.canload = !0,
                        this.levelRetryCount = 0,
                        e && e.forEach((function(e) {
                            e.loadError = 0;
                            var t = e.details;
                            t && t.live && (e.details = void 0)
                        }
                        )),
                        null !== this.timer && this.loadLevel()
                    }
                    ,
                    l.stopLoad = function() {
                        this.canload = !1
                    }
                    ,
                    l.onManifestLoaded = function(e) {
                        var t, n = [], r = [], i = {}, a = null, o = !1, l = !1;
                        if (e.levels.forEach((function(e) {
                            var t = e.attrs;
                            e.loadError = 0,
                            e.fragmentError = !1,
                            o = o || !!e.videoCodec,
                            l = l || !!e.audioCodec,
                            De && e.audioCodec && -1 !== e.audioCodec.indexOf("mp4a.40.34") && (e.audioCodec = void 0),
                            (a = i[e.bitrate]) ? a.url.push(e.url) : (e.url = [e.url],
                            e.urlId = 0,
                            i[e.bitrate] = e,
                            n.push(e)),
                            t && (t.AUDIO && (l = !0,
                            $(a || e, "audio", t.AUDIO)),
                            t.SUBTITLES && $(a || e, "text", t.SUBTITLES))
                        }
                        )),
                        o && l && (n = n.filter((function(e) {
                            return !!e.videoCodec
                        }
                        ))),
                        n = n.filter((function(e) {
                            var t = e.audioCodec
                              , n = e.videoCodec;
                            return (!t || S(t, "audio")) && (!n || S(n, "video"))
                        }
                        )),
                        e.audioTracks && (r = e.audioTracks.filter((function(e) {
                            return !e.audioCodec || S(e.audioCodec, "audio")
                        }
                        ))).forEach((function(e, t) {
                            e.id = t
                        }
                        )),
                        n.length > 0) {
                            t = n[0].bitrate,
                            n.sort((function(e, t) {
                                return e.bitrate - t.bitrate
                            }
                            )),
                            this._levels = n;
                            for (var h = 0; h < n.length; h++)
                                if (n[h].bitrate === t) {
                                    this._firstLevel = h,
                                    c.logger.log("manifest loaded," + n.length + " level(s) found, first bitrate:" + t);
                                    break
                                }
                            this.hls.trigger(u.default.MANIFEST_PARSED, {
                                levels: n,
                                audioTracks: r,
                                firstLevel: this._firstLevel,
                                stats: e.stats,
                                audio: l,
                                video: o,
                                altAudio: r.some((function(e) {
                                    return !!e.url
                                }
                                ))
                            })
                        } else
                            this.hls.trigger(u.default.ERROR, {
                                type: s.ErrorTypes.MEDIA_ERROR,
                                details: s.ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                                fatal: !0,
                                url: this.hls.url,
                                reason: "no level with compatible codecs found in manifest"
                            })
                    }
                    ,
                    l.setLevelInternal = function(e) {
                        var t = this._levels
                          , n = this.hls;
                        if (e >= 0 && e < t.length) {
                            if (this.clearTimer(),
                            this.currentLevelIndex !== e) {
                                c.logger.log("switching to level " + e),
                                this.currentLevelIndex = e;
                                var r = t[e];
                                r.level = e,
                                n.trigger(u.default.LEVEL_SWITCHING, r)
                            }
                            var i = t[e]
                              , a = i.details;
                            if (!a || a.live) {
                                var o = i.urlId;
                                n.trigger(u.default.LEVEL_LOADING, {
                                    url: i.url[o],
                                    level: e,
                                    id: o
                                })
                            }
                        } else
                            n.trigger(u.default.ERROR, {
                                type: s.ErrorTypes.OTHER_ERROR,
                                details: s.ErrorDetails.LEVEL_SWITCH_ERROR,
                                level: e,
                                fatal: !1,
                                reason: "invalid level idx"
                            })
                    }
                    ,
                    l.onError = function(e) {
                        if (e.fatal)
                            e.type === s.ErrorTypes.NETWORK_ERROR && this.clearTimer();
                        else {
                            var t, n = !1, r = !1;
                            switch (e.details) {
                            case s.ErrorDetails.FRAG_LOAD_ERROR:
                            case s.ErrorDetails.FRAG_LOAD_TIMEOUT:
                            case s.ErrorDetails.KEY_LOAD_ERROR:
                            case s.ErrorDetails.KEY_LOAD_TIMEOUT:
                                t = e.frag.level,
                                r = !0;
                                break;
                            case s.ErrorDetails.LEVEL_LOAD_ERROR:
                            case s.ErrorDetails.LEVEL_LOAD_TIMEOUT:
                                t = e.context.level,
                                n = !0;
                                break;
                            case s.ErrorDetails.REMUX_ALLOC_ERROR:
                                t = e.level,
                                n = !0
                            }
                            void 0 !== t && this.recoverLevel(e, t, n, r)
                        }
                    }
                    ,
                    l.recoverLevel = function(e, t, n, r) {
                        var i, a, o, s = this, l = this.hls.config, u = e.details, h = this._levels[t];
                        if (h.loadError++,
                        h.fragmentError = r,
                        n) {
                            if (!(this.levelRetryCount + 1 <= l.levelLoadingMaxRetry))
                                return c.logger.error("level controller, cannot recover from " + u + " error"),
                                this.currentLevelIndex = null,
                                this.clearTimer(),
                                void (e.fatal = !0);
                            a = Math.min(Math.pow(2, this.levelRetryCount) * l.levelLoadingRetryDelay, l.levelLoadingMaxRetryTimeout),
                            this.timer = setTimeout((function() {
                                return s.loadLevel()
                            }
                            ), a),
                            e.levelRetry = !0,
                            this.levelRetryCount++,
                            c.logger.warn("level controller, " + u + ", retry in " + a + " ms, current retry count is " + this.levelRetryCount)
                        }
                        (n || r) && ((i = h.url.length) > 1 && h.loadError < i ? (h.urlId = (h.urlId + 1) % i,
                        h.details = void 0,
                        c.logger.warn("level controller, " + u + " for level " + t + ": switching to redundant URL-id " + h.urlId)) : -1 === this.manualLevelIndex ? (o = 0 === t ? this._levels.length - 1 : t - 1,
                        c.logger.warn("level controller, " + u + ": switch to " + o),
                        this.hls.nextAutoLevel = this.currentLevelIndex = o) : r && (c.logger.warn("level controller, " + u + ": reload a fragment"),
                        this.currentLevelIndex = null))
                    }
                    ,
                    l.onFragLoaded = function(e) {
                        var t = e.frag;
                        if (void 0 !== t && "main" === t.type) {
                            var n = this._levels[t.level];
                            void 0 !== n && (n.fragmentError = !1,
                            n.loadError = 0,
                            this.levelRetryCount = 0)
                        }
                    }
                    ,
                    l.onLevelLoaded = function(e) {
                        var t = this
                          , n = e.level
                          , r = e.details;
                        if (n === this.currentLevelIndex) {
                            var i = this._levels[n];
                            if (i.fragmentError || (i.loadError = 0,
                            this.levelRetryCount = 0),
                            r.live) {
                                var a = ie(i.details, r, e.stats.trequest);
                                c.logger.log("live playlist, reload in " + Math.round(a) + " ms"),
                                this.timer = setTimeout((function() {
                                    return t.loadLevel()
                                }
                                ), a)
                            } else
                                this.clearTimer()
                        }
                    }
                    ,
                    l.onAudioTrackSwitched = function(e) {
                        var t = this.hls.audioTracks[e.id].groupId
                          , n = this.hls.levels[this.currentLevelIndex];
                        if (n && n.audioGroupIds) {
                            for (var r = -1, i = 0; i < n.audioGroupIds.length; i++)
                                if (n.audioGroupIds[i] === t) {
                                    r = i;
                                    break
                                }
                            r !== n.urlId && (n.urlId = r,
                            this.startLoad())
                        }
                    }
                    ,
                    l.loadLevel = function() {
                        if (c.logger.debug("call to loadLevel"),
                        null !== this.currentLevelIndex && this.canload) {
                            var e = this._levels[this.currentLevelIndex];
                            if ("object" == typeof e && e.url.length > 0) {
                                var t = this.currentLevelIndex
                                  , n = e.urlId
                                  , r = e.url[n];
                                c.logger.log("Attempt loading level index " + t + " with URL-id " + n),
                                this.hls.trigger(u.default.LEVEL_LOADING, {
                                    url: r,
                                    level: t,
                                    id: n
                                })
                            }
                        }
                    }
                    ,
                    i = r,
                    (a = [{
                        key: "levels",
                        get: function() {
                            return this._levels
                        }
                    }, {
                        key: "level",
                        get: function() {
                            return this.currentLevelIndex
                        },
                        set: function(e) {
                            var t = this._levels;
                            t && (e = Math.min(e, t.length - 1),
                            this.currentLevelIndex === e && t[e].details || this.setLevelInternal(e))
                        }
                    }, {
                        key: "manualLevel",
                        get: function() {
                            return this.manualLevelIndex
                        },
                        set: function(e) {
                            this.manualLevelIndex = e,
                            void 0 === this._startLevel && (this._startLevel = e),
                            -1 !== e && (this.level = e)
                        }
                    }, {
                        key: "firstLevel",
                        get: function() {
                            return this._firstLevel
                        },
                        set: function(e) {
                            this._firstLevel = e
                        }
                    }, {
                        key: "startLevel",
                        get: function() {
                            if (void 0 === this._startLevel) {
                                var e = this.hls.config.startLevel;
                                return void 0 !== e ? e : this._firstLevel
                            }
                            return this._startLevel
                        },
                        set: function(e) {
                            this._startLevel = e
                        }
                    }, {
                        key: "nextLoadLevel",
                        get: function() {
                            return -1 !== this.manualLevelIndex ? this.manualLevelIndex : this.hls.nextAutoLevel
                        },
                        set: function(e) {
                            this.level = e,
                            -1 === this.manualLevelIndex && (this.hls.nextAutoLevel = e)
                        }
                    }]) && ke(i.prototype, a),
                    o && ke(i, o),
                    r
                }(d), Ne = n("./src/demux/id3.js");
                function Fe(e, t) {
                    var n;
                    try {
                        n = new Event("addtrack")
                    } catch (e) {
                        (n = document.createEvent("Event")).initEvent("addtrack", !1, !1)
                    }
                    n.track = e,
                    t.dispatchEvent(n)
                }
                function Ue(e) {
                    if (e && e.cues)
                        for (; e.cues.length > 0; )
                            e.removeCue(e.cues[0])
                }
                var Be = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        return (n = e.call(this, t, u.default.MEDIA_ATTACHED, u.default.MEDIA_DETACHING, u.default.FRAG_PARSING_METADATA, u.default.LIVE_BACK_BUFFER_REACHED) || this).id3Track = void 0,
                        n.media = void 0,
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i = r.prototype;
                    return i.destroy = function() {
                        d.prototype.destroy.call(this)
                    }
                    ,
                    i.onMediaAttached = function(e) {
                        this.media = e.media,
                        this.media
                    }
                    ,
                    i.onMediaDetaching = function() {
                        Ue(this.id3Track),
                        this.id3Track = void 0,
                        this.media = void 0
                    }
                    ,
                    i.getID3Track = function(e) {
                        for (var t = 0; t < e.length; t++) {
                            var n = e[t];
                            if ("metadata" === n.kind && "id3" === n.label)
                                return Fe(n, this.media),
                                n
                        }
                        return this.media.addTextTrack("metadata", "id3")
                    }
                    ,
                    i.onFragParsingMetadata = function(e) {
                        var t = e.frag
                          , n = e.samples;
                        this.id3Track || (this.id3Track = this.getID3Track(this.media.textTracks),
                        this.id3Track.mode = "hidden");
                        for (var r = window.WebKitDataCue || window.VTTCue || window.TextTrackCue, i = 0; i < n.length; i++) {
                            var a = Ne.default.getID3Frames(n[i].data);
                            if (a) {
                                var o = n[i].pts
                                  , s = i < n.length - 1 ? n[i + 1].pts : t.endPTS;
                                o === s ? s += 1e-4 : o > s && (c.logger.warn("detected an id3 sample with endTime < startTime, adjusting endTime to (startTime + 0.25)"),
                                s = o + .25);
                                for (var l = 0; l < a.length; l++) {
                                    var u = a[l];
                                    if (!Ne.default.isTimeStampFrame(u)) {
                                        var h = new r(o,s,"");
                                        h.value = u,
                                        this.id3Track.addCue(h)
                                    }
                                }
                            }
                        }
                    }
                    ,
                    i.onLiveBackBufferReached = function(e) {
                        var t = e.bufferEnd
                          , n = this.id3Track;
                        if (n && n.cues && n.cues.length) {
                            var r = function(e, t) {
                                if (t < e[0].endTime)
                                    return e[0];
                                if (t > e[e.length - 1].endTime)
                                    return e[e.length - 1];
                                for (var n = 0, r = e.length - 1; n <= r; ) {
                                    var i = Math.floor((r + n) / 2);
                                    if (t < e[i].endTime)
                                        r = i - 1;
                                    else {
                                        if (!(t > e[i].endTime))
                                            return e[i];
                                        n = i + 1
                                    }
                                }
                                return e[n].endTime - t < t - e[r].endTime ? e[n] : e[r]
                            }(n.cues, t);
                            if (r)
                                for (; n.cues[0] !== r; )
                                    n.removeCue(n.cues[0])
                        }
                    }
                    ,
                    r
                }(d)
                  , ze = function() {
                    function e(e) {
                        this.alpha_ = void 0,
                        this.estimate_ = void 0,
                        this.totalWeight_ = void 0,
                        this.alpha_ = e ? Math.exp(Math.log(.5) / e) : 0,
                        this.estimate_ = 0,
                        this.totalWeight_ = 0
                    }
                    var t = e.prototype;
                    return t.sample = function(e, t) {
                        var n = Math.pow(this.alpha_, e);
                        this.estimate_ = t * (1 - n) + n * this.estimate_,
                        this.totalWeight_ += e
                    }
                    ,
                    t.getTotalWeight = function() {
                        return this.totalWeight_
                    }
                    ,
                    t.getEstimate = function() {
                        if (this.alpha_) {
                            var e = 1 - Math.pow(this.alpha_, this.totalWeight_);
                            return this.estimate_ / e
                        }
                        return this.estimate_
                    }
                    ,
                    e
                }()
                  , Ge = function() {
                    function e(e, t, n, r) {
                        this.hls = void 0,
                        this.defaultEstimate_ = void 0,
                        this.minWeight_ = void 0,
                        this.minDelayMs_ = void 0,
                        this.slow_ = void 0,
                        this.fast_ = void 0,
                        this.hls = e,
                        this.defaultEstimate_ = r,
                        this.minWeight_ = .001,
                        this.minDelayMs_ = 50,
                        this.slow_ = new ze(t),
                        this.fast_ = new ze(n)
                    }
                    var t = e.prototype;
                    return t.sample = function(e, t) {
                        var n = (e = Math.max(e, this.minDelayMs_)) / 1e3
                          , r = 8 * t / n;
                        this.fast_.sample(n, r),
                        this.slow_.sample(n, r)
                    }
                    ,
                    t.canEstimate = function() {
                        var e = this.fast_;
                        return e && e.getTotalWeight() >= this.minWeight_
                    }
                    ,
                    t.getEstimate = function() {
                        return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_
                    }
                    ,
                    t.destroy = function() {}
                    ,
                    e
                }();
                function He(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                var je = window.performance
                  , Ve = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        return (n = e.call(this, t, u.default.FRAG_LOADING, u.default.FRAG_LOADED, u.default.FRAG_BUFFERED, u.default.ERROR) || this).lastLoadedFragLevel = 0,
                        n._nextAutoLevel = -1,
                        n.hls = t,
                        n.timer = null,
                        n._bwEstimator = null,
                        n.onCheck = n._abandonRulesCheck.bind(function(e) {
                            if (void 0 === e)
                                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return e
                        }(n)),
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i, a, o, h = r.prototype;
                    return h.destroy = function() {
                        this.clearTimer(),
                        d.prototype.destroy.call(this)
                    }
                    ,
                    h.onFragLoading = function(e) {
                        var t = e.frag;
                        if ("main" === t.type && (this.timer || (this.fragCurrent = t,
                        this.timer = setInterval(this.onCheck, 100)),
                        !this._bwEstimator)) {
                            var n, r, i = this.hls, a = i.config, o = t.level;
                            i.levels[o].details.live ? (n = a.abrEwmaFastLive,
                            r = a.abrEwmaSlowLive) : (n = a.abrEwmaFastVoD,
                            r = a.abrEwmaSlowVoD),
                            this._bwEstimator = new Ge(i,r,n,a.abrEwmaDefaultEstimate)
                        }
                    }
                    ,
                    h._abandonRulesCheck = function() {
                        var e = this.hls
                          , t = e.media
                          , n = this.fragCurrent;
                        if (n) {
                            var r = n.loader
                              , i = e.minAutoLevel;
                            if (!r || r.stats && r.stats.aborted)
                                return c.logger.warn("frag loader destroy or aborted, disarm abandonRules"),
                                this.clearTimer(),
                                void (this._nextAutoLevel = -1);
                            var a = r.stats;
                            if (t && a && (!t.paused && 0 !== t.playbackRate || !t.readyState) && n.autoLevel && n.level) {
                                var o = je.now() - a.trequest
                                  , s = Math.abs(t.playbackRate);
                                if (o > 500 * n.duration / s) {
                                    var l = e.levels
                                      , h = Math.max(1, a.bw ? a.bw / 8 : 1e3 * a.loaded / o)
                                      , d = l[n.level]
                                      , f = d.realBitrate ? Math.max(d.realBitrate, d.bitrate) : d.bitrate
                                      , p = a.total ? a.total : Math.max(a.loaded, Math.round(n.duration * f / 8))
                                      , m = t.currentTime
                                      , g = (p - a.loaded) / h
                                      , v = (j.bufferInfo(t, m, e.config.maxBufferHole).end - m) / s;
                                    if (v < 2 * n.duration / s && g > v) {
                                        var y;
                                        for (y = n.level - 1; y > i; y--) {
                                            var b = l[y].realBitrate ? Math.max(l[y].realBitrate, l[y].bitrate) : l[y].bitrate;
                                            if (n.duration * b / (6.4 * h) < v)
                                                break
                                        }
                                        void 0 < g && (c.logger.warn("loading too slow, abort fragment loading and switch to level " + y + ":fragLoadedDelay[" + y + "]<fragLoadedDelay[" + (n.level - 1) + "];bufferStarvationDelay:" + (void 0).toFixed(1) + "<" + g.toFixed(1) + ":" + v.toFixed(1)),
                                        e.nextLoadLevel = y,
                                        this._bwEstimator.sample(o, a.loaded),
                                        r.abort(),
                                        this.clearTimer(),
                                        e.trigger(u.default.FRAG_LOAD_EMERGENCY_ABORTED, {
                                            frag: n,
                                            stats: a
                                        }))
                                    }
                                }
                            }
                        }
                    }
                    ,
                    h.onFragLoaded = function(e) {
                        var t = e.frag;
                        if ("main" === t.type && Object(l.isFiniteNumber)(t.sn)) {
                            if (this.clearTimer(),
                            this.lastLoadedFragLevel = t.level,
                            this._nextAutoLevel = -1,
                            this.hls.config.abrMaxWithRealBitrate) {
                                var n = this.hls.levels[t.level]
                                  , r = (n.loaded ? n.loaded.bytes : 0) + e.stats.loaded
                                  , i = (n.loaded ? n.loaded.duration : 0) + e.frag.duration;
                                n.loaded = {
                                    bytes: r,
                                    duration: i
                                },
                                n.realBitrate = Math.round(8 * r / i)
                            }
                            if (e.frag.bitrateTest) {
                                var a = e.stats;
                                a.tparsed = a.tbuffered = a.tload,
                                this.onFragBuffered(e)
                            }
                        }
                    }
                    ,
                    h.onFragBuffered = function(e) {
                        var t = e.stats
                          , n = e.frag;
                        if (!0 !== t.aborted && "main" === n.type && Object(l.isFiniteNumber)(n.sn) && (!n.bitrateTest || t.tload === t.tbuffered)) {
                            var r = t.tparsed - t.trequest;
                            c.logger.log("latency/loading/parsing/append/kbps:" + Math.round(t.tfirst - t.trequest) + "/" + Math.round(t.tload - t.tfirst) + "/" + Math.round(t.tparsed - t.tload) + "/" + Math.round(t.tbuffered - t.tparsed) + "/" + Math.round(8 * t.loaded / (t.tbuffered - t.trequest))),
                            this._bwEstimator.sample(r, t.loaded),
                            t.bwEstimate = this._bwEstimator.getEstimate(),
                            n.bitrateTest ? this.bitrateTestDelay = r / 1e3 : this.bitrateTestDelay = 0
                        }
                    }
                    ,
                    h.onError = function(e) {
                        switch (e.details) {
                        case s.ErrorDetails.FRAG_LOAD_ERROR:
                        case s.ErrorDetails.FRAG_LOAD_TIMEOUT:
                            this.clearTimer()
                        }
                    }
                    ,
                    h.clearTimer = function() {
                        clearInterval(this.timer),
                        this.timer = null
                    }
                    ,
                    h._findBestLevel = function(e, t, n, r, i, a, o, s, l) {
                        for (var u = i; u >= r; u--) {
                            var h = l[u];
                            if (h) {
                                var d = h.details
                                  , f = d ? d.totalduration / d.fragments.length : t
                                  , p = !!d && d.live
                                  , m = void 0;
                                m = u <= e ? o * n : s * n;
                                var g = l[u].realBitrate ? Math.max(l[u].realBitrate, l[u].bitrate) : l[u].bitrate
                                  , v = g * f / m;
                                if (c.logger.trace("level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: " + u + "/" + Math.round(m) + "/" + g + "/" + f + "/" + a + "/" + v),
                                m > g && (!v || p && !this.bitrateTestDelay || v < a))
                                    return u
                            }
                        }
                        return -1
                    }
                    ,
                    i = r,
                    (a = [{
                        key: "nextAutoLevel",
                        get: function() {
                            var e = this._nextAutoLevel
                              , t = this._bwEstimator;
                            if (!(-1 === e || t && t.canEstimate()))
                                return e;
                            var n = this._nextABRAutoLevel;
                            return -1 !== e && (n = Math.min(e, n)),
                            n
                        },
                        set: function(e) {
                            this._nextAutoLevel = e
                        }
                    }, {
                        key: "_nextABRAutoLevel",
                        get: function() {
                            var e = this.hls
                              , t = e.maxAutoLevel
                              , n = e.levels
                              , r = e.config
                              , i = e.minAutoLevel
                              , a = e.media
                              , o = this.lastLoadedFragLevel
                              , s = this.fragCurrent ? this.fragCurrent.duration : 0
                              , l = a ? a.currentTime : 0
                              , u = a && 0 !== a.playbackRate ? Math.abs(a.playbackRate) : 1
                              , h = this._bwEstimator ? this._bwEstimator.getEstimate() : r.abrEwmaDefaultEstimate
                              , d = (j.bufferInfo(a, l, r.maxBufferHole).end - l) / u
                              , f = this._findBestLevel(o, s, h, i, t, d, r.abrBandWidthFactor, r.abrBandWidthUpFactor, n);
                            if (f >= 0)
                                return f;
                            c.logger.trace("rebuffering expected to happen, lets try to find a quality level minimizing the rebuffering");
                            var p = s ? Math.min(s, r.maxStarvationDelay) : r.maxStarvationDelay
                              , m = r.abrBandWidthFactor
                              , g = r.abrBandWidthUpFactor;
                            if (0 === d) {
                                var v = this.bitrateTestDelay;
                                v && (p = (s ? Math.min(s, r.maxLoadingDelay) : r.maxLoadingDelay) - v,
                                c.logger.trace("bitrate test took " + Math.round(1e3 * v) + "ms, set first fragment max fetchDuration to " + Math.round(1e3 * p) + " ms"),
                                m = g = 1)
                            }
                            return f = this._findBestLevel(o, s, h, i, t, d + p, m, g, n),
                            Math.max(f, 0)
                        }
                    }]) && He(i.prototype, a),
                    o && He(i, o),
                    r
                }(d)
                  , We = K()
                  , qe = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        return (n = e.call(this, t, u.default.MEDIA_ATTACHING, u.default.MEDIA_DETACHING, u.default.MANIFEST_PARSED, u.default.BUFFER_RESET, u.default.BUFFER_APPENDING, u.default.BUFFER_CODECS, u.default.BUFFER_EOS, u.default.BUFFER_FLUSHING, u.default.LEVEL_PTS_UPDATED, u.default.LEVEL_UPDATED) || this)._msDuration = null,
                        n._levelDuration = null,
                        n._levelTargetDuration = 10,
                        n._live = null,
                        n._objectUrl = null,
                        n._needsFlush = !1,
                        n._needsEos = !1,
                        n.config = void 0,
                        n.audioTimestampOffset = void 0,
                        n.bufferCodecEventsExpected = 0,
                        n._bufferCodecEventsTotal = 0,
                        n.media = null,
                        n.mediaSource = null,
                        n.segments = [],
                        n.parent = void 0,
                        n.appending = !1,
                        n.appended = 0,
                        n.appendError = 0,
                        n.flushBufferCounter = 0,
                        n.tracks = {},
                        n.pendingTracks = {},
                        n.sourceBuffer = {},
                        n.flushRange = [],
                        n._onMediaSourceOpen = function() {
                            c.logger.log("media source opened"),
                            n.hls.trigger(u.default.MEDIA_ATTACHED, {
                                media: n.media
                            });
                            var e = n.mediaSource;
                            e && e.removeEventListener("sourceopen", n._onMediaSourceOpen),
                            n.checkPendingTracks()
                        }
                        ,
                        n._onMediaSourceClose = function() {
                            c.logger.log("media source closed")
                        }
                        ,
                        n._onMediaSourceEnded = function() {
                            c.logger.log("media source ended")
                        }
                        ,
                        n._onSBUpdateEnd = function() {
                            if (n.audioTimestampOffset && n.sourceBuffer.audio) {
                                var e = n.sourceBuffer.audio;
                                c.logger.warn("change mpeg audio timestamp offset from " + e.timestampOffset + " to " + n.audioTimestampOffset),
                                e.timestampOffset = n.audioTimestampOffset,
                                delete n.audioTimestampOffset
                            }
                            n._needsFlush && n.doFlush(),
                            n._needsEos && n.checkEos(),
                            n.appending = !1;
                            var t = n.parent
                              , r = n.segments.reduce((function(e, n) {
                                return n.parent === t ? e + 1 : e
                            }
                            ), 0)
                              , i = {}
                              , a = n.sourceBuffer;
                            for (var o in a) {
                                var s = a[o];
                                if (!s)
                                    throw Error("handling source buffer update end error: source buffer for " + o + " uninitilized and unable to update buffered TimeRanges.");
                                i[o] = s.buffered
                            }
                            n.hls.trigger(u.default.BUFFER_APPENDED, {
                                parent: t,
                                pending: r,
                                timeRanges: i
                            }),
                            n._needsFlush || n.doAppending(),
                            n.updateMediaElementDuration(),
                            0 === r && n.flushLiveBackBuffer()
                        }
                        ,
                        n._onSBUpdateError = function(e) {
                            c.logger.error("sourceBuffer error:", e),
                            n.hls.trigger(u.default.ERROR, {
                                type: s.ErrorTypes.MEDIA_ERROR,
                                details: s.ErrorDetails.BUFFER_APPENDING_ERROR,
                                fatal: !1
                            })
                        }
                        ,
                        n.config = t.config,
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i = r.prototype;
                    return i.destroy = function() {
                        d.prototype.destroy.call(this)
                    }
                    ,
                    i.onLevelPtsUpdated = function(e) {
                        var t = e.type
                          , n = this.tracks.audio;
                        if ("audio" === t && n && "audio/mpeg" === n.container) {
                            var r = this.sourceBuffer.audio;
                            if (!r)
                                throw Error("Level PTS Updated and source buffer for audio uninitalized");
                            if (Math.abs(r.timestampOffset - e.start) > .1) {
                                var i = r.updating;
                                try {
                                    r.abort()
                                } catch (e) {
                                    c.logger.warn("can not abort audio buffer: " + e)
                                }
                                i ? this.audioTimestampOffset = e.start : (c.logger.warn("change mpeg audio timestamp offset from " + r.timestampOffset + " to " + e.start),
                                r.timestampOffset = e.start)
                            }
                        }
                    }
                    ,
                    i.onManifestParsed = function(e) {
                        this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = e.altAudio ? 2 : 1,
                        c.logger.log(this.bufferCodecEventsExpected + " bufferCodec event(s) expected")
                    }
                    ,
                    i.onMediaAttaching = function(e) {
                        var t = this.media = e.media;
                        if (t && We) {
                            var n = this.mediaSource = new We;
                            n.addEventListener("sourceopen", this._onMediaSourceOpen),
                            n.addEventListener("sourceended", this._onMediaSourceEnded),
                            n.addEventListener("sourceclose", this._onMediaSourceClose),
                            t.src = window.URL.createObjectURL(n),
                            this._objectUrl = t.src
                        }
                    }
                    ,
                    i.onMediaDetaching = function() {
                        c.logger.log("media source detaching");
                        var e = this.mediaSource;
                        if (e) {
                            if ("open" === e.readyState)
                                try {
                                    e.endOfStream()
                                } catch (e) {
                                    c.logger.warn("onMediaDetaching:" + e.message + " while calling endOfStream")
                                }
                            e.removeEventListener("sourceopen", this._onMediaSourceOpen),
                            e.removeEventListener("sourceended", this._onMediaSourceEnded),
                            e.removeEventListener("sourceclose", this._onMediaSourceClose),
                            this.media && (this._objectUrl && window.URL.revokeObjectURL(this._objectUrl),
                            this.media.src === this._objectUrl ? (this.media.removeAttribute("src"),
                            this.media.load()) : c.logger.warn("media.src was changed by a third party - skip cleanup")),
                            this.mediaSource = null,
                            this.media = null,
                            this._objectUrl = null,
                            this.bufferCodecEventsExpected = this._bufferCodecEventsTotal,
                            this.pendingTracks = {},
                            this.tracks = {},
                            this.sourceBuffer = {},
                            this.flushRange = [],
                            this.segments = [],
                            this.appended = 0
                        }
                        this.hls.trigger(u.default.MEDIA_DETACHED)
                    }
                    ,
                    i.checkPendingTracks = function() {
                        var e = this.bufferCodecEventsExpected
                          , t = this.pendingTracks
                          , n = Object.keys(t).length;
                        (n && !e || 2 === n) && (this.createSourceBuffers(t),
                        this.pendingTracks = {},
                        this.doAppending())
                    }
                    ,
                    i.onBufferReset = function() {
                        var e = this.sourceBuffer;
                        for (var t in e) {
                            var n = e[t];
                            try {
                                n && (this.mediaSource && this.mediaSource.removeSourceBuffer(n),
                                n.removeEventListener("updateend", this._onSBUpdateEnd),
                                n.removeEventListener("error", this._onSBUpdateError))
                            } catch (e) {}
                        }
                        this.sourceBuffer = {},
                        this.flushRange = [],
                        this.segments = [],
                        this.appended = 0
                    }
                    ,
                    i.onBufferCodecs = function(e) {
                        var t = this;
                        Object.keys(this.sourceBuffer).length || (Object.keys(e).forEach((function(n) {
                            t.pendingTracks[n] = e[n]
                        }
                        )),
                        this.bufferCodecEventsExpected = Math.max(this.bufferCodecEventsExpected - 1, 0),
                        this.mediaSource && "open" === this.mediaSource.readyState && this.checkPendingTracks())
                    }
                    ,
                    i.createSourceBuffers = function(e) {
                        var t = this.sourceBuffer
                          , n = this.mediaSource;
                        if (!n)
                            throw Error("createSourceBuffers called when mediaSource was null");
                        for (var r in e)
                            if (!t[r]) {
                                var i = e[r];
                                if (!i)
                                    throw Error("source buffer exists for track " + r + ", however track does not");
                                var a = i.levelCodec || i.codec
                                  , o = i.container + ";codecs=" + a;
                                c.logger.log("creating sourceBuffer(" + o + ")");
                                try {
                                    var l = t[r] = n.addSourceBuffer(o);
                                    l.addEventListener("updateend", this._onSBUpdateEnd),
                                    l.addEventListener("error", this._onSBUpdateError),
                                    this.tracks[r] = {
                                        buffer: l,
                                        codec: a,
                                        id: i.id,
                                        container: i.container,
                                        levelCodec: i.levelCodec
                                    }
                                } catch (e) {
                                    c.logger.error("error while trying to add sourceBuffer:" + e.message),
                                    this.hls.trigger(u.default.ERROR, {
                                        type: s.ErrorTypes.MEDIA_ERROR,
                                        details: s.ErrorDetails.BUFFER_ADD_CODEC_ERROR,
                                        fatal: !1,
                                        err: e,
                                        mimeType: o
                                    })
                                }
                            }
                        this.hls.trigger(u.default.BUFFER_CREATED, {
                            tracks: this.tracks
                        })
                    }
                    ,
                    i.onBufferAppending = function(e) {
                        this._needsFlush || (this.segments ? this.segments.push(e) : this.segments = [e],
                        this.doAppending())
                    }
                    ,
                    i.onBufferEos = function(e) {
                        for (var t in this.sourceBuffer)
                            if (!e.type || e.type === t) {
                                var n = this.sourceBuffer[t];
                                n && !n.ended && (n.ended = !0,
                                c.logger.log(t + " sourceBuffer now EOS"))
                            }
                        this.checkEos()
                    }
                    ,
                    i.checkEos = function() {
                        var e = this.sourceBuffer
                          , t = this.mediaSource;
                        if (t && "open" === t.readyState) {
                            for (var n in e) {
                                var r = e[n];
                                if (r) {
                                    if (!r.ended)
                                        return;
                                    if (r.updating)
                                        return void (this._needsEos = !0)
                                }
                            }
                            c.logger.log("all media data are available, signal endOfStream() to MediaSource and stop loading fragment");
                            try {
                                t.endOfStream()
                            } catch (e) {
                                c.logger.warn("exception while calling mediaSource.endOfStream()")
                            }
                            this._needsEos = !1
                        } else
                            this._needsEos = !1
                    }
                    ,
                    i.onBufferFlushing = function(e) {
                        e.type ? this.flushRange.push({
                            start: e.startOffset,
                            end: e.endOffset,
                            type: e.type
                        }) : (this.flushRange.push({
                            start: e.startOffset,
                            end: e.endOffset,
                            type: "video"
                        }),
                        this.flushRange.push({
                            start: e.startOffset,
                            end: e.endOffset,
                            type: "audio"
                        })),
                        this.flushBufferCounter = 0,
                        this.doFlush()
                    }
                    ,
                    i.flushLiveBackBuffer = function() {
                        if (this._live) {
                            var e = this.config.liveBackBufferLength;
                            if (isFinite(e) && !(e < 0))
                                if (this.media)
                                    for (var t = this.media.currentTime, n = this.sourceBuffer, r = Object.keys(n), i = t - Math.max(e, this._levelTargetDuration), a = r.length - 1; a >= 0; a--) {
                                        var o = r[a]
                                          , s = n[o];
                                        if (s) {
                                            var l = s.buffered;
                                            l.length > 0 && i > l.start(0) && this.removeBufferRange(o, s, 0, i) && this.hls.trigger(u.default.LIVE_BACK_BUFFER_REACHED, {
                                                bufferEnd: i
                                            })
                                        }
                                    }
                                else
                                    c.logger.error("flushLiveBackBuffer called without attaching media")
                        }
                    }
                    ,
                    i.onLevelUpdated = function(e) {
                        var t = e.details;
                        t.fragments.length > 0 && (this._levelDuration = t.totalduration + t.fragments[0].start,
                        this._levelTargetDuration = t.averagetargetduration || t.targetduration || 10,
                        this._live = t.live,
                        this.updateMediaElementDuration())
                    }
                    ,
                    i.updateMediaElementDuration = function() {
                        var e, t = this.config;
                        if (null !== this._levelDuration && this.media && this.mediaSource && this.sourceBuffer && 0 !== this.media.readyState && "open" === this.mediaSource.readyState) {
                            for (var n in this.sourceBuffer) {
                                var r = this.sourceBuffer[n];
                                if (r && !0 === r.updating)
                                    return
                            }
                            e = this.media.duration,
                            null === this._msDuration && (this._msDuration = this.mediaSource.duration),
                            !0 === this._live && !0 === t.liveDurationInfinity ? (c.logger.log("Media Source duration is set to Infinity"),
                            this._msDuration = this.mediaSource.duration = 1 / 0) : (this._levelDuration > this._msDuration && this._levelDuration > e || !Object(l.isFiniteNumber)(e)) && (c.logger.log("Updating Media Source duration to " + this._levelDuration.toFixed(3)),
                            this._msDuration = this.mediaSource.duration = this._levelDuration)
                        }
                    }
                    ,
                    i.doFlush = function() {
                        for (; this.flushRange.length; ) {
                            var e = this.flushRange[0];
                            if (!this.flushBuffer(e.start, e.end, e.type))
                                return void (this._needsFlush = !0);
                            this.flushRange.shift(),
                            this.flushBufferCounter = 0
                        }
                        if (0 === this.flushRange.length) {
                            this._needsFlush = !1;
                            var t = 0
                              , n = this.sourceBuffer;
                            try {
                                for (var r in n) {
                                    var i = n[r];
                                    i && (t += i.buffered.length)
                                }
                            } catch (e) {
                                c.logger.error("error while accessing sourceBuffer.buffered")
                            }
                            this.appended = t,
                            this.hls.trigger(u.default.BUFFER_FLUSHED)
                        }
                    }
                    ,
                    i.doAppending = function() {
                        var e = this.config
                          , t = this.hls
                          , n = this.segments
                          , r = this.sourceBuffer;
                        if (Object.keys(r).length) {
                            if (!this.media || this.media.error)
                                return this.segments = [],
                                void c.logger.error("trying to append although a media error occured, flush segment and abort");
                            if (!this.appending) {
                                var i = n.shift();
                                if (i)
                                    try {
                                        var a = r[i.type];
                                        if (!a)
                                            return void this._onSBUpdateEnd();
                                        if (a.updating)
                                            return void n.unshift(i);
                                        a.ended = !1,
                                        this.parent = i.parent,
                                        a.appendBuffer(i.data),
                                        this.appendError = 0,
                                        this.appended++,
                                        this.appending = !0
                                    } catch (r) {
                                        c.logger.error("error while trying to append buffer:" + r.message),
                                        n.unshift(i);
                                        var o = {
                                            type: s.ErrorTypes.MEDIA_ERROR,
                                            parent: i.parent,
                                            details: "",
                                            fatal: !1
                                        };
                                        22 === r.code ? (this.segments = [],
                                        o.details = s.ErrorDetails.BUFFER_FULL_ERROR) : (this.appendError++,
                                        o.details = s.ErrorDetails.BUFFER_APPEND_ERROR,
                                        this.appendError > e.appendErrorMaxRetry && (c.logger.log("fail " + e.appendErrorMaxRetry + " times to append segment in sourceBuffer"),
                                        this.segments = [],
                                        o.fatal = !0)),
                                        t.trigger(u.default.ERROR, o)
                                    }
                            }
                        }
                    }
                    ,
                    i.flushBuffer = function(e, t, n) {
                        var r = this.sourceBuffer;
                        if (!Object.keys(r).length)
                            return !0;
                        var i = "null";
                        if (this.media && (i = this.media.currentTime.toFixed(3)),
                        c.logger.log("flushBuffer,pos/start/end: " + i + "/" + e + "/" + t),
                        this.flushBufferCounter >= this.appended)
                            return c.logger.warn("abort flushing too many retries"),
                            !0;
                        var a = r[n];
                        if (a) {
                            if (a.ended = !1,
                            a.updating)
                                return c.logger.warn("cannot flush, sb updating in progress"),
                                !1;
                            if (this.removeBufferRange(n, a, e, t))
                                return this.flushBufferCounter++,
                                !1
                        }
                        return c.logger.log("buffer flushed"),
                        !0
                    }
                    ,
                    i.removeBufferRange = function(e, t, n, r) {
                        try {
                            for (var i = 0; i < t.buffered.length; i++) {
                                var a = t.buffered.start(i)
                                  , o = t.buffered.end(i)
                                  , s = Math.max(a, n)
                                  , l = Math.min(o, r);
                                if (Math.min(l, o) - s > .5) {
                                    var u = "null";
                                    return this.media && (u = this.media.currentTime.toString()),
                                    c.logger.log("sb remove " + e + " [" + s + "," + l + "], of [" + a + "," + o + "], pos:" + u),
                                    t.remove(s, l),
                                    !0
                                }
                            }
                        } catch (e) {
                            c.logger.warn("removeBufferRange failed", e)
                        }
                        return !1
                    }
                    ,
                    r
                }(d);
                function Ke(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                var Ye = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        return (n = e.call(this, t, u.default.FPS_DROP_LEVEL_CAPPING, u.default.MEDIA_ATTACHING, u.default.MANIFEST_PARSED, u.default.BUFFER_CODECS, u.default.MEDIA_DETACHING) || this).autoLevelCapping = Number.POSITIVE_INFINITY,
                        n.firstLevel = null,
                        n.levels = [],
                        n.media = null,
                        n.restrictedLevels = [],
                        n.timer = null,
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i, a, o, s = r.prototype;
                    return s.destroy = function() {
                        this.hls.config.capLevelToPlayerSize && (this.media = null,
                        this.stopCapping())
                    }
                    ,
                    s.onFpsDropLevelCapping = function(e) {
                        r.isLevelAllowed(e.droppedLevel, this.restrictedLevels) && this.restrictedLevels.push(e.droppedLevel)
                    }
                    ,
                    s.onMediaAttaching = function(e) {
                        this.media = e.media instanceof window.HTMLVideoElement ? e.media : null
                    }
                    ,
                    s.onManifestParsed = function(e) {
                        var t = this.hls;
                        this.restrictedLevels = [],
                        this.levels = e.levels,
                        this.firstLevel = e.firstLevel,
                        t.config.capLevelToPlayerSize && e.video && this.startCapping()
                    }
                    ,
                    s.onBufferCodecs = function(e) {
                        this.hls.config.capLevelToPlayerSize && e.video && this.startCapping()
                    }
                    ,
                    s.onLevelsUpdated = function(e) {
                        this.levels = e.levels
                    }
                    ,
                    s.onMediaDetaching = function() {
                        this.stopCapping()
                    }
                    ,
                    s.detectPlayerSize = function() {
                        if (this.media) {
                            var e = this.levels ? this.levels.length : 0;
                            if (e) {
                                var t = this.hls;
                                t.autoLevelCapping = this.getMaxLevel(e - 1),
                                t.autoLevelCapping > this.autoLevelCapping && t.streamController.nextLevelSwitch(),
                                this.autoLevelCapping = t.autoLevelCapping
                            }
                        }
                    }
                    ,
                    s.getMaxLevel = function(e) {
                        var t = this;
                        if (!this.levels)
                            return -1;
                        var n = this.levels.filter((function(n, i) {
                            return r.isLevelAllowed(i, t.restrictedLevels) && i <= e
                        }
                        ));
                        return r.getMaxLevelByMediaSize(n, this.mediaWidth, this.mediaHeight)
                    }
                    ,
                    s.startCapping = function() {
                        this.timer || (this.autoLevelCapping = Number.POSITIVE_INFINITY,
                        this.hls.firstLevel = this.getMaxLevel(this.firstLevel),
                        clearInterval(this.timer),
                        this.timer = setInterval(this.detectPlayerSize.bind(this), 1e3),
                        this.detectPlayerSize())
                    }
                    ,
                    s.stopCapping = function() {
                        this.restrictedLevels = [],
                        this.firstLevel = null,
                        this.autoLevelCapping = Number.POSITIVE_INFINITY,
                        this.timer && (this.timer = clearInterval(this.timer),
                        this.timer = null)
                    }
                    ,
                    r.isLevelAllowed = function(e, t) {
                        return void 0 === t && (t = []),
                        -1 === t.indexOf(e)
                    }
                    ,
                    r.getMaxLevelByMediaSize = function(e, t, n) {
                        if (!e || e && !e.length)
                            return -1;
                        for (var r, i, a = e.length - 1, o = 0; o < e.length; o += 1) {
                            var s = e[o];
                            if ((s.width >= t || s.height >= n) && (r = s,
                            !(i = e[o + 1]) || r.width !== i.width || r.height !== i.height)) {
                                a = o;
                                break
                            }
                        }
                        return a
                    }
                    ,
                    i = r,
                    o = [{
                        key: "contentScaleFactor",
                        get: function() {
                            var e = 1;
                            try {
                                e = window.devicePixelRatio
                            } catch (e) {}
                            return e
                        }
                    }],
                    (a = [{
                        key: "mediaWidth",
                        get: function() {
                            var e, t = this.media;
                            return t && (e = t.width || t.clientWidth || t.offsetWidth,
                            e *= r.contentScaleFactor),
                            e
                        }
                    }, {
                        key: "mediaHeight",
                        get: function() {
                            var e, t = this.media;
                            return t && (e = t.height || t.clientHeight || t.offsetHeight,
                            e *= r.contentScaleFactor),
                            e
                        }
                    }]) && Ke(i.prototype, a),
                    o && Ke(i, o),
                    r
                }(d)
                  , Xe = window.performance
                  , Ze = function(e) {
                    var t, n;
                    function r(t) {
                        return e.call(this, t, u.default.MEDIA_ATTACHING) || this
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i = r.prototype;
                    return i.destroy = function() {
                        this.timer && clearInterval(this.timer),
                        this.isVideoPlaybackQualityAvailable = !1
                    }
                    ,
                    i.onMediaAttaching = function(e) {
                        var t = this.hls.config;
                        t.capLevelOnFPSDrop && ("function" == typeof (this.video = e.media instanceof window.HTMLVideoElement ? e.media : null).getVideoPlaybackQuality && (this.isVideoPlaybackQualityAvailable = !0),
                        clearInterval(this.timer),
                        this.timer = setInterval(this.checkFPSInterval.bind(this), t.fpsDroppedMonitoringPeriod))
                    }
                    ,
                    i.checkFPS = function(e, t, n) {
                        var r = Xe.now();
                        if (t) {
                            if (this.lastTime) {
                                var i = r - this.lastTime
                                  , a = n - this.lastDroppedFrames
                                  , o = t - this.lastDecodedFrames
                                  , s = 1e3 * a / i
                                  , l = this.hls;
                                if (l.trigger(u.default.FPS_DROP, {
                                    currentDropped: a,
                                    currentDecoded: o,
                                    totalDroppedFrames: n
                                }),
                                s > 0 && a > l.config.fpsDroppedMonitoringThreshold * o) {
                                    var h = l.currentLevel;
                                    c.logger.warn("drop FPS ratio greater than max allowed value for currentLevel: " + h),
                                    h > 0 && (-1 === l.autoLevelCapping || l.autoLevelCapping >= h) && (h -= 1,
                                    l.trigger(u.default.FPS_DROP_LEVEL_CAPPING, {
                                        level: h,
                                        droppedLevel: l.currentLevel
                                    }),
                                    l.autoLevelCapping = h,
                                    l.streamController.nextLevelSwitch())
                                }
                            }
                            this.lastTime = r,
                            this.lastDroppedFrames = n,
                            this.lastDecodedFrames = t
                        }
                    }
                    ,
                    i.checkFPSInterval = function() {
                        var e = this.video;
                        if (e)
                            if (this.isVideoPlaybackQualityAvailable) {
                                var t = e.getVideoPlaybackQuality();
                                this.checkFPS(e, t.totalVideoFrames, t.droppedVideoFrames)
                            } else
                                this.checkFPS(e, e.webkitDecodedFrameCount, e.webkitDroppedFrameCount)
                    }
                    ,
                    r
                }(d)
                  , Je = window
                  , Qe = Je.performance
                  , $e = Je.XMLHttpRequest
                  , et = function() {
                    function e(e) {
                        e && e.xhrSetup && (this.xhrSetup = e.xhrSetup)
                    }
                    var t = e.prototype;
                    return t.destroy = function() {
                        this.abort(),
                        this.loader = null
                    }
                    ,
                    t.abort = function() {
                        var e = this.loader;
                        e && 4 !== e.readyState && (this.stats.aborted = !0,
                        e.abort()),
                        window.clearTimeout(this.requestTimeout),
                        this.requestTimeout = null,
                        window.clearTimeout(this.retryTimeout),
                        this.retryTimeout = null
                    }
                    ,
                    t.load = function(e, t, n) {
                        this.context = e,
                        this.config = t,
                        this.callbacks = n,
                        this.stats = {
                            trequest: Qe.now(),
                            retry: 0
                        },
                        this.retryDelay = t.retryDelay,
                        this.loadInternal()
                    }
                    ,
                    t.loadInternal = function() {
                        var e, t = this.context;
                        e = this.loader = new $e;
                        var n = this.stats;
                        n.tfirst = 0,
                        n.loaded = 0;
                        var r = this.xhrSetup;
                        try {
                            if (r)
                                try {
                                    r(e, t.url)
                                } catch (n) {
                                    e.open("GET", t.url, !0),
                                    r(e, t.url)
                                }
                            e.readyState || e.open("GET", t.url, !0)
                        } catch (n) {
                            return void this.callbacks.onError({
                                code: e.status,
                                text: n.message
                            }, t, e)
                        }
                        t.rangeEnd && e.setRequestHeader("Range", "bytes=" + t.rangeStart + "-" + (t.rangeEnd - 1)),
                        e.onreadystatechange = this.readystatechange.bind(this),
                        e.onprogress = this.loadprogress.bind(this),
                        e.responseType = t.responseType,
                        this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout),
                        e.send()
                    }
                    ,
                    t.readystatechange = function(e) {
                        var t = e.currentTarget
                          , n = t.readyState
                          , r = this.stats
                          , i = this.context
                          , a = this.config;
                        if (!r.aborted && n >= 2)
                            if (window.clearTimeout(this.requestTimeout),
                            0 === r.tfirst && (r.tfirst = Math.max(Qe.now(), r.trequest)),
                            4 === n) {
                                var o = t.status;
                                if (o >= 200 && o < 300) {
                                    var s, l;
                                    r.tload = Math.max(r.tfirst, Qe.now()),
                                    l = "arraybuffer" === i.responseType ? (s = t.response).byteLength : (s = t.responseText).length,
                                    r.loaded = r.total = l;
                                    var u = {
                                        url: t.responseURL,
                                        data: s
                                    };
                                    this.callbacks.onSuccess(u, r, i, t)
                                } else
                                    r.retry >= a.maxRetry || o >= 400 && o < 499 ? (c.logger.error(o + " while loading " + i.url),
                                    this.callbacks.onError({
                                        code: o,
                                        text: t.statusText
                                    }, i, t)) : (c.logger.warn(o + " while loading " + i.url + ", retrying in " + this.retryDelay + "..."),
                                    this.destroy(),
                                    this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay),
                                    this.retryDelay = Math.min(2 * this.retryDelay, a.maxRetryDelay),
                                    r.retry++)
                            } else
                                this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), a.timeout)
                    }
                    ,
                    t.loadtimeout = function() {
                        c.logger.warn("timeout while loading " + this.context.url),
                        this.callbacks.onTimeout(this.stats, this.context, null)
                    }
                    ,
                    t.loadprogress = function(e) {
                        var t = e.currentTarget
                          , n = this.stats;
                        n.loaded = e.loaded,
                        e.lengthComputable && (n.total = e.total);
                        var r = this.callbacks.onProgress;
                        r && r(n, this.context, null, t)
                    }
                    ,
                    e
                }();
                function tt(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                var nt = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        return (n = e.call(this, t, u.default.MANIFEST_LOADING, u.default.MANIFEST_PARSED, u.default.AUDIO_TRACK_LOADED, u.default.AUDIO_TRACK_SWITCHED, u.default.LEVEL_LOADED, u.default.ERROR) || this)._trackId = -1,
                        n._selectDefaultTrack = !0,
                        n.tracks = [],
                        n.trackIdBlacklist = Object.create(null),
                        n.audioGroupId = null,
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i, a, o, l = r.prototype;
                    return l.onManifestLoading = function() {
                        this.tracks = [],
                        this._trackId = -1,
                        this._selectDefaultTrack = !0
                    }
                    ,
                    l.onManifestParsed = function(e) {
                        var t = this.tracks = e.audioTracks || [];
                        this.hls.trigger(u.default.AUDIO_TRACKS_UPDATED, {
                            audioTracks: t
                        }),
                        this._selectAudioGroup(this.hls.nextLoadLevel)
                    }
                    ,
                    l.onAudioTrackLoaded = function(e) {
                        if (e.id >= this.tracks.length)
                            c.logger.warn("Invalid audio track id:", e.id);
                        else {
                            if (c.logger.log("audioTrack " + e.id + " loaded"),
                            this.tracks[e.id].details = e.details,
                            e.details.live && !this.hasInterval()) {
                                var t = 1e3 * e.details.targetduration;
                                this.setInterval(t)
                            }
                            !e.details.live && this.hasInterval() && this.clearInterval()
                        }
                    }
                    ,
                    l.onAudioTrackSwitched = function(e) {
                        var t = this.tracks[e.id].groupId;
                        t && this.audioGroupId !== t && (this.audioGroupId = t)
                    }
                    ,
                    l.onLevelLoaded = function(e) {
                        this._selectAudioGroup(e.level)
                    }
                    ,
                    l.onError = function(e) {
                        e.type === s.ErrorTypes.NETWORK_ERROR && (e.fatal && this.clearInterval(),
                        e.details === s.ErrorDetails.AUDIO_TRACK_LOAD_ERROR && (c.logger.warn("Network failure on audio-track id:", e.context.id),
                        this._handleLoadError()))
                    }
                    ,
                    l._setAudioTrack = function(e) {
                        if (this._trackId === e && this.tracks[this._trackId].details)
                            c.logger.debug("Same id as current audio-track passed, and track details available -> no-op");
                        else if (e < 0 || e >= this.tracks.length)
                            c.logger.warn("Invalid id passed to audio-track controller");
                        else {
                            var t = this.tracks[e];
                            c.logger.log("Now switching to audio-track index " + e),
                            this.clearInterval(),
                            this._trackId = e;
                            var n = t.url
                              , r = t.type
                              , i = t.id;
                            this.hls.trigger(u.default.AUDIO_TRACK_SWITCHING, {
                                id: i,
                                type: r,
                                url: n
                            }),
                            this._loadTrackDetailsIfNeeded(t)
                        }
                    }
                    ,
                    l.doTick = function() {
                        this._updateTrack(this._trackId)
                    }
                    ,
                    l._selectAudioGroup = function(e) {
                        var t = this.hls.levels[e];
                        if (t && t.audioGroupIds) {
                            var n = t.audioGroupIds[t.urlId];
                            this.audioGroupId !== n && (this.audioGroupId = n,
                            this._selectInitialAudioTrack())
                        }
                    }
                    ,
                    l._selectInitialAudioTrack = function() {
                        var e = this
                          , t = this.tracks;
                        if (t.length) {
                            var n = this.tracks[this._trackId]
                              , r = null;
                            if (n && (r = n.name),
                            this._selectDefaultTrack) {
                                var i = t.filter((function(e) {
                                    return e.default
                                }
                                ));
                                i.length ? t = i : c.logger.warn("No default audio tracks defined")
                            }
                            var a = !1
                              , o = function() {
                                t.forEach((function(t) {
                                    a || e.audioGroupId && t.groupId !== e.audioGroupId || r && r !== t.name || (e._setAudioTrack(t.id),
                                    a = !0)
                                }
                                ))
                            };
                            o(),
                            a || (r = null,
                            o()),
                            a || (c.logger.error("No track found for running audio group-ID: " + this.audioGroupId),
                            this.hls.trigger(u.default.ERROR, {
                                type: s.ErrorTypes.MEDIA_ERROR,
                                details: s.ErrorDetails.AUDIO_TRACK_LOAD_ERROR,
                                fatal: !0
                            }))
                        }
                    }
                    ,
                    l._needsTrackLoading = function(e) {
                        var t = e.details
                          , n = e.url;
                        return !(t && !t.live || !n)
                    }
                    ,
                    l._loadTrackDetailsIfNeeded = function(e) {
                        if (this._needsTrackLoading(e)) {
                            var t = e.url
                              , n = e.id;
                            c.logger.log("loading audio-track playlist for id: " + n),
                            this.hls.trigger(u.default.AUDIO_TRACK_LOADING, {
                                url: t,
                                id: n
                            })
                        }
                    }
                    ,
                    l._updateTrack = function(e) {
                        if (!(e < 0 || e >= this.tracks.length)) {
                            this.clearInterval(),
                            this._trackId = e,
                            c.logger.log("trying to update audio-track " + e);
                            var t = this.tracks[e];
                            this._loadTrackDetailsIfNeeded(t)
                        }
                    }
                    ,
                    l._handleLoadError = function() {
                        this.trackIdBlacklist[this._trackId] = !0;
                        var e = this._trackId
                          , t = this.tracks[e]
                          , n = t.name
                          , r = t.language
                          , i = t.groupId;
                        c.logger.warn("Loading failed on audio track id: " + e + ", group-id: " + i + ', name/language: "' + n + '" / "' + r + '"');
                        for (var a = e, o = 0; o < this.tracks.length; o++)
                            if (!this.trackIdBlacklist[o] && this.tracks[o].name === n) {
                                a = o;
                                break
                            }
                        a !== e ? (c.logger.log("Attempting audio-track fallback id:", a, "group-id:", this.tracks[a].groupId),
                        this._setAudioTrack(a)) : c.logger.warn('No fallback audio-track found for name/language: "' + n + '" / "' + r + '"')
                    }
                    ,
                    i = r,
                    (a = [{
                        key: "audioTracks",
                        get: function() {
                            return this.tracks
                        }
                    }, {
                        key: "audioTrack",
                        get: function() {
                            return this._trackId
                        },
                        set: function(e) {
                            this._setAudioTrack(e),
                            this._selectDefaultTrack = !1
                        }
                    }]) && tt(i.prototype, a),
                    o && tt(i, o),
                    r
                }(pe);
                function rt(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                var it = window.performance
                  , at = function(e) {
                    var t, n;
                    function r(t, n) {
                        var r;
                        return (r = e.call(this, t, u.default.MEDIA_ATTACHED, u.default.MEDIA_DETACHING, u.default.AUDIO_TRACKS_UPDATED, u.default.AUDIO_TRACK_SWITCHING, u.default.AUDIO_TRACK_LOADED, u.default.KEY_LOADED, u.default.FRAG_LOADED, u.default.FRAG_PARSING_INIT_SEGMENT, u.default.FRAG_PARSING_DATA, u.default.FRAG_PARSED, u.default.ERROR, u.default.BUFFER_RESET, u.default.BUFFER_CREATED, u.default.BUFFER_APPENDED, u.default.BUFFER_FLUSHED, u.default.INIT_PTS_FOUND) || this).fragmentTracker = n,
                        r.config = t.config,
                        r.audioCodecSwap = !1,
                        r._state = me,
                        r.initPTS = [],
                        r.waitingFragment = null,
                        r.videoTrackCC = null,
                        r
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i, a, o, h = r.prototype;
                    return h.onInitPtsFound = function(e) {
                        var t = e.id
                          , n = e.frag.cc
                          , r = e.initPTS;
                        "main" === t && (this.initPTS[n] = r,
                        this.videoTrackCC = n,
                        c.logger.log("InitPTS for cc: " + n + " found from video track: " + r),
                        this.state === Re && this.tick())
                    }
                    ,
                    h.startLoad = function(e) {
                        if (this.tracks) {
                            var t = this.lastCurrentTime;
                            this.stopLoad(),
                            this.setInterval(100),
                            this.fragLoadError = 0,
                            t > 0 && -1 === e ? (c.logger.log("audio:override startPosition with lastCurrentTime @" + t.toFixed(3)),
                            this.state = ve) : (this.lastCurrentTime = this.startPosition ? this.startPosition : e,
                            this.state = ge),
                            this.nextLoadPosition = this.startPosition = this.lastCurrentTime,
                            this.tick()
                        } else
                            this.startPosition = e,
                            this.state = me
                    }
                    ,
                    h.doTick = function() {
                        var e, t, n, r = this.hls, i = r.config;
                        switch (this.state) {
                        case Ae:
                        case ye:
                        case Se:
                            break;
                        case ge:
                            this.state = _e,
                            this.loadedmetadata = !1;
                            break;
                        case ve:
                            var a = this.tracks;
                            if (!a)
                                break;
                            if (!this.media && (this.startFragRequested || !i.startFragPrefetch))
                                break;
                            if (this.loadedmetadata)
                                e = this.media.currentTime;
                            else if (void 0 === (e = this.nextLoadPosition))
                                break;
                            var o = this.mediaBuffer ? this.mediaBuffer : this.media
                              , s = this.videoBuffer ? this.videoBuffer : this.media
                              , h = j.bufferInfo(o, e, i.maxBufferHole)
                              , d = j.bufferInfo(s, e, i.maxBufferHole)
                              , f = h.len
                              , p = h.end
                              , m = this.fragPrevious
                              , g = Math.min(i.maxBufferLength, i.maxMaxBufferLength)
                              , v = Math.max(g, d.len)
                              , y = this.audioSwitch
                              , b = this.trackId;
                            if ((f < v || y) && b < a.length) {
                                if (void 0 === (n = a[b].details)) {
                                    this.state = _e;
                                    break
                                }
                                if (!y && this._streamEnded(h, n))
                                    return this.hls.trigger(u.default.BUFFER_EOS, {
                                        type: "audio"
                                    }),
                                    void (this.state = Me);
                                var x, w = n.fragments, _ = w.length, E = w[0].start, T = w[_ - 1].start + w[_ - 1].duration;
                                if (y)
                                    if (n.live && !n.PTSKnown)
                                        c.logger.log("switching audiotrack, live stream, unknown PTS,load first fragment"),
                                        p = 0;
                                    else if (p = e,
                                    n.PTSKnown && e < E) {
                                        if (!(h.end > E || h.nextStart))
                                            return;
                                        c.logger.log("alt audio track ahead of main track, seek to start of alt audio track"),
                                        this.media.currentTime = E + .05
                                    }
                                if (n.initSegment && !n.initSegment.data)
                                    x = n.initSegment;
                                else if (p <= E) {
                                    if (x = w[0],
                                    null !== this.videoTrackCC && x.cc !== this.videoTrackCC && (x = function(e, t) {
                                        return H.search(e, (function(e) {
                                            return e.cc < t ? 1 : e.cc > t ? -1 : 0
                                        }
                                        ))
                                    }(w, this.videoTrackCC)),
                                    n.live && x.loadIdx && x.loadIdx === this.fragLoadIdx) {
                                        var S = h.nextStart ? h.nextStart : E;
                                        return c.logger.log("no alt audio available @currentTime:" + this.media.currentTime + ", seeking @" + (S + .05)),
                                        void (this.media.currentTime = S + .05)
                                    }
                                } else {
                                    var M, A = i.maxFragLookUpTolerance, R = m ? w[m.sn - w[0].sn + 1] : void 0, L = function(e) {
                                        var t = Math.min(A, e.duration);
                                        return e.start + e.duration - t <= p ? 1 : e.start - t > p && e.start ? -1 : 0
                                    };
                                    p < T ? (p > T - A && (A = 0),
                                    M = R && !L(R) ? R : H.search(w, L)) : M = w[_ - 1],
                                    M && (x = M,
                                    E = M.start,
                                    m && x.level === m.level && x.sn === m.sn && (x.sn < n.endSN ? (x = w[x.sn + 1 - n.startSN],
                                    c.logger.log("SN just loaded, load next one: " + x.sn)) : x = null))
                                }
                                x && (x.encrypted ? (c.logger.log("Loading key for " + x.sn + " of [" + n.startSN + " ," + n.endSN + "],track " + b),
                                this.state = be,
                                r.trigger(u.default.KEY_LOADING, {
                                    frag: x
                                })) : (c.logger.log("Loading " + x.sn + ", cc: " + x.cc + " of [" + n.startSN + " ," + n.endSN + "],track " + b + ", currentTime:" + e + ",bufferEnd:" + p.toFixed(3)),
                                this.fragCurrent = x,
                                (y || this.fragmentTracker.getState(x) === F) && ("initSegment" !== x.sn && (this.startFragRequested = !0),
                                Object(l.isFiniteNumber)(x.sn) && (this.nextLoadPosition = x.start + x.duration),
                                r.trigger(u.default.FRAG_LOADING, {
                                    frag: x
                                }),
                                this.state = xe)))
                            }
                            break;
                        case _e:
                            (t = this.tracks[this.trackId]) && t.details && (this.state = ve);
                            break;
                        case we:
                            var C = it.now()
                              , P = this.retryDate
                              , O = (o = this.media) && o.seeking;
                            (!P || C >= P || O) && (c.logger.log("audioStreamController: retryDate reached, switch back to IDLE state"),
                            this.state = ve);
                            break;
                        case Re:
                            var k = this.videoTrackCC;
                            if (void 0 === this.initPTS[k])
                                break;
                            var D = this.waitingFragment;
                            if (D) {
                                var I = D.frag.cc;
                                k !== I ? (t = this.tracks[this.trackId]).details && t.details.live && (c.logger.warn("Waiting fragment CC (" + I + ") does not match video track CC (" + k + ")"),
                                this.waitingFragment = null,
                                this.state = ve) : (this.state = xe,
                                this.onFragLoaded(this.waitingFragment),
                                this.waitingFragment = null)
                            } else
                                this.state = ve
                        }
                    }
                    ,
                    h.onMediaAttached = function(e) {
                        var t = this.media = this.mediaBuffer = e.media;
                        this.onvseeking = this.onMediaSeeking.bind(this),
                        this.onvended = this.onMediaEnded.bind(this),
                        t.addEventListener("seeking", this.onvseeking),
                        t.addEventListener("ended", this.onvended);
                        var n = this.config;
                        this.tracks && n.autoStartLoad && this.startLoad(n.startPosition)
                    }
                    ,
                    h.onMediaDetaching = function() {
                        var e = this.media;
                        e && e.ended && (c.logger.log("MSE detaching and video ended, reset startPosition"),
                        this.startPosition = this.lastCurrentTime = 0),
                        e && (e.removeEventListener("seeking", this.onvseeking),
                        e.removeEventListener("ended", this.onvended),
                        this.onvseeking = this.onvseeked = this.onvended = null),
                        this.media = this.mediaBuffer = this.videoBuffer = null,
                        this.loadedmetadata = !1,
                        this.fragmentTracker.removeAllFragments(),
                        this.stopLoad()
                    }
                    ,
                    h.onAudioTracksUpdated = function(e) {
                        c.logger.log("audio tracks updated"),
                        this.tracks = e.audioTracks
                    }
                    ,
                    h.onAudioTrackSwitching = function(e) {
                        var t = !!e.url;
                        this.trackId = e.id,
                        this.fragCurrent = null,
                        this.state = ye,
                        this.waitingFragment = null,
                        t ? this.setInterval(100) : this.demuxer && (this.demuxer.destroy(),
                        this.demuxer = null),
                        t && (this.audioSwitch = !0,
                        this.state = ve),
                        this.tick()
                    }
                    ,
                    h.onAudioTrackLoaded = function(e) {
                        var t = e.details
                          , n = e.id
                          , r = this.tracks[n]
                          , i = t.totalduration
                          , a = 0;
                        if (c.logger.log("track " + n + " loaded [" + t.startSN + "," + t.endSN + "],duration:" + i),
                        t.live) {
                            var o = r.details;
                            o && t.fragments.length > 0 ? (ne(o, t),
                            a = t.fragments[0].start,
                            t.PTSKnown ? c.logger.log("live audio playlist sliding:" + a.toFixed(3)) : c.logger.log("live audio playlist - outdated PTS, unknown sliding")) : (t.PTSKnown = !1,
                            c.logger.log("live audio playlist - first load, unknown sliding"))
                        } else
                            t.PTSKnown = !1;
                        if (r.details = t,
                        !this.startFragRequested) {
                            if (-1 === this.startPosition) {
                                var s = t.startTimeOffset;
                                Object(l.isFiniteNumber)(s) ? (c.logger.log("start time offset found in playlist, adjust startPosition to " + s),
                                this.startPosition = s) : t.live ? (this.startPosition = this.computeLivePosition(a, t),
                                c.logger.log("compute startPosition for audio-track to " + this.startPosition)) : this.startPosition = 0
                            }
                            this.nextLoadPosition = this.startPosition
                        }
                        this.state === _e && (this.state = ve),
                        this.tick()
                    }
                    ,
                    h.onKeyLoaded = function() {
                        this.state === be && (this.state = ve,
                        this.tick())
                    }
                    ,
                    h.onFragLoaded = function(e) {
                        var t = this.fragCurrent
                          , n = e.frag;
                        if (this.state === xe && t && "audio" === n.type && n.level === t.level && n.sn === t.sn) {
                            var r = this.tracks[this.trackId]
                              , i = r.details
                              , a = i.totalduration
                              , o = t.level
                              , s = t.sn
                              , l = t.cc
                              , h = this.config.defaultAudioCodec || r.audioCodec || "mp4a.40.2"
                              , d = this.stats = e.stats;
                            if ("initSegment" === s)
                                this.state = ve,
                                d.tparsed = d.tbuffered = it.now(),
                                i.initSegment.data = e.payload,
                                this.hls.trigger(u.default.FRAG_BUFFERED, {
                                    stats: d,
                                    frag: t,
                                    id: "audio"
                                }),
                                this.tick();
                            else {
                                this.state = Ee,
                                this.appended = !1,
                                this.demuxer || (this.demuxer = new Q(this.hls,"audio"));
                                var f = this.initPTS[l]
                                  , p = i.initSegment ? i.initSegment.data : [];
                                i.initSegment || void 0 !== f ? (this.pendingBuffering = !0,
                                c.logger.log("Demuxing " + s + " of [" + i.startSN + " ," + i.endSN + "],track " + o),
                                this.demuxer.push(e.payload, p, h, null, t, a, !1, f)) : (c.logger.log("unknown video PTS for continuity counter " + l + ", waiting for video PTS before demuxing audio frag " + s + " of [" + i.startSN + " ," + i.endSN + "],track " + o),
                                this.waitingFragment = e,
                                this.state = Re)
                            }
                        }
                        this.fragLoadError = 0
                    }
                    ,
                    h.onFragParsingInitSegment = function(e) {
                        var t = this.fragCurrent
                          , n = e.frag;
                        if (t && "audio" === e.id && n.sn === t.sn && n.level === t.level && this.state === Ee) {
                            var r, i = e.tracks;
                            if (i.video && delete i.video,
                            r = i.audio) {
                                r.levelCodec = r.codec,
                                r.id = e.id,
                                this.hls.trigger(u.default.BUFFER_CODECS, i),
                                c.logger.log("audio track:audio,container:" + r.container + ",codecs[level/parsed]=[" + r.levelCodec + "/" + r.codec + "]");
                                var a = r.initSegment;
                                if (a) {
                                    var o = {
                                        type: "audio",
                                        data: a,
                                        parent: "audio",
                                        content: "initSegment"
                                    };
                                    this.audioSwitch ? this.pendingData = [o] : (this.appended = !0,
                                    this.pendingBuffering = !0,
                                    this.hls.trigger(u.default.BUFFER_APPENDING, o))
                                }
                                this.tick()
                            }
                        }
                    }
                    ,
                    h.onFragParsingData = function(e) {
                        var t = this
                          , n = this.fragCurrent
                          , r = e.frag;
                        if (n && "audio" === e.id && "audio" === e.type && r.sn === n.sn && r.level === n.level && this.state === Ee) {
                            var i = this.trackId
                              , a = this.tracks[i]
                              , o = this.hls;
                            Object(l.isFiniteNumber)(e.endPTS) || (e.endPTS = e.startPTS + n.duration,
                            e.endDTS = e.startDTS + n.duration),
                            n.addElementaryStream(m.AUDIO),
                            c.logger.log("parsed " + e.type + ",PTS:[" + e.startPTS.toFixed(3) + "," + e.endPTS.toFixed(3) + "],DTS:[" + e.startDTS.toFixed(3) + "/" + e.endDTS.toFixed(3) + "],nb:" + e.nb),
                            te(a.details, n, e.startPTS, e.endPTS);
                            var h = this.audioSwitch
                              , d = this.media
                              , f = !1;
                            if (h)
                                if (d && d.readyState) {
                                    var p = d.currentTime;
                                    c.logger.log("switching audio track : currentTime:" + p),
                                    p >= e.startPTS && (c.logger.log("switching audio track : flushing all audio"),
                                    this.state = Se,
                                    o.trigger(u.default.BUFFER_FLUSHING, {
                                        startOffset: 0,
                                        endOffset: Number.POSITIVE_INFINITY,
                                        type: "audio"
                                    }),
                                    f = !0,
                                    this.audioSwitch = !1,
                                    o.trigger(u.default.AUDIO_TRACK_SWITCHED, {
                                        id: i
                                    }))
                                } else
                                    this.audioSwitch = !1,
                                    o.trigger(u.default.AUDIO_TRACK_SWITCHED, {
                                        id: i
                                    });
                            var g = this.pendingData;
                            if (!g)
                                return c.logger.warn("Apparently attempt to enqueue media payload without codec initialization data upfront"),
                                void o.trigger(u.default.ERROR, {
                                    type: s.ErrorTypes.MEDIA_ERROR,
                                    details: null,
                                    fatal: !0
                                });
                            this.audioSwitch || ([e.data1, e.data2].forEach((function(t) {
                                t && t.length && g.push({
                                    type: e.type,
                                    data: t,
                                    parent: "audio",
                                    content: "data"
                                })
                            }
                            )),
                            !f && g.length && (g.forEach((function(e) {
                                t.state === Ee && (t.pendingBuffering = !0,
                                t.hls.trigger(u.default.BUFFER_APPENDING, e))
                            }
                            )),
                            this.pendingData = [],
                            this.appended = !0)),
                            this.tick()
                        }
                    }
                    ,
                    h.onFragParsed = function(e) {
                        var t = this.fragCurrent
                          , n = e.frag;
                        t && "audio" === e.id && n.sn === t.sn && n.level === t.level && this.state === Ee && (this.stats.tparsed = it.now(),
                        this.state = Te,
                        this._checkAppendedParsed())
                    }
                    ,
                    h.onBufferReset = function() {
                        this.mediaBuffer = this.videoBuffer = null,
                        this.loadedmetadata = !1
                    }
                    ,
                    h.onBufferCreated = function(e) {
                        var t = e.tracks.audio;
                        t && (this.mediaBuffer = t.buffer,
                        this.loadedmetadata = !0),
                        e.tracks.video && (this.videoBuffer = e.tracks.video.buffer)
                    }
                    ,
                    h.onBufferAppended = function(e) {
                        if ("audio" === e.parent) {
                            var t = this.state;
                            t !== Ee && t !== Te || (this.pendingBuffering = e.pending > 0,
                            this._checkAppendedParsed())
                        }
                    }
                    ,
                    h._checkAppendedParsed = function() {
                        if (!(this.state !== Te || this.appended && this.pendingBuffering)) {
                            var e = this.fragCurrent
                              , t = this.stats
                              , n = this.hls;
                            if (e) {
                                this.fragPrevious = e,
                                t.tbuffered = it.now(),
                                n.trigger(u.default.FRAG_BUFFERED, {
                                    stats: t,
                                    frag: e,
                                    id: "audio"
                                });
                                var r = this.mediaBuffer ? this.mediaBuffer : this.media;
                                r && c.logger.log("audio buffered : " + ae.toString(r.buffered)),
                                this.audioSwitch && this.appended && (this.audioSwitch = !1,
                                n.trigger(u.default.AUDIO_TRACK_SWITCHED, {
                                    id: this.trackId
                                })),
                                this.state = ve
                            }
                            this.tick()
                        }
                    }
                    ,
                    h.onError = function(e) {
                        var t = e.frag;
                        if (!t || "audio" === t.type)
                            switch (e.details) {
                            case s.ErrorDetails.FRAG_LOAD_ERROR:
                            case s.ErrorDetails.FRAG_LOAD_TIMEOUT:
                                var n = e.frag;
                                if (n && "audio" !== n.type)
                                    break;
                                if (!e.fatal) {
                                    var r = this.fragLoadError;
                                    r ? r++ : r = 1;
                                    var i = this.config;
                                    if (r <= i.fragLoadingMaxRetry) {
                                        this.fragLoadError = r;
                                        var a = Math.min(Math.pow(2, r - 1) * i.fragLoadingRetryDelay, i.fragLoadingMaxRetryTimeout);
                                        c.logger.warn("AudioStreamController: frag loading failed, retry in " + a + " ms"),
                                        this.retryDate = it.now() + a,
                                        this.state = we
                                    } else
                                        c.logger.error("AudioStreamController: " + e.details + " reaches max retry, redispatch as fatal ..."),
                                        e.fatal = !0,
                                        this.state = Ae
                                }
                                break;
                            case s.ErrorDetails.AUDIO_TRACK_LOAD_ERROR:
                            case s.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT:
                            case s.ErrorDetails.KEY_LOAD_ERROR:
                            case s.ErrorDetails.KEY_LOAD_TIMEOUT:
                                this.state !== Ae && (this.state = e.fatal ? Ae : ve,
                                c.logger.warn("AudioStreamController: " + e.details + " while loading frag, now switching to " + this.state + " state ..."));
                                break;
                            case s.ErrorDetails.BUFFER_FULL_ERROR:
                                if ("audio" === e.parent && (this.state === Ee || this.state === Te)) {
                                    var o = this.mediaBuffer
                                      , l = this.media.currentTime;
                                    if (o && j.isBuffered(o, l) && j.isBuffered(o, l + .5)) {
                                        var h = this.config;
                                        h.maxMaxBufferLength >= h.maxBufferLength && (h.maxMaxBufferLength /= 2,
                                        c.logger.warn("AudioStreamController: reduce max buffer length to " + h.maxMaxBufferLength + "s")),
                                        this.state = ve
                                    } else
                                        c.logger.warn("AudioStreamController: buffer full error also media.currentTime is not buffered, flush audio buffer"),
                                        this.fragCurrent = null,
                                        this.state = Se,
                                        this.hls.trigger(u.default.BUFFER_FLUSHING, {
                                            startOffset: 0,
                                            endOffset: Number.POSITIVE_INFINITY,
                                            type: "audio"
                                        })
                                }
                            }
                    }
                    ,
                    h.onBufferFlushed = function() {
                        var e = this
                          , t = this.pendingData;
                        t && t.length ? (c.logger.log("AudioStreamController: appending pending audio data after buffer flushed"),
                        t.forEach((function(t) {
                            e.hls.trigger(u.default.BUFFER_APPENDING, t)
                        }
                        )),
                        this.appended = !0,
                        this.pendingData = [],
                        this.state = Te) : (this.state = ve,
                        this.fragPrevious = null,
                        this.tick())
                    }
                    ,
                    i = r,
                    (a = [{
                        key: "state",
                        set: function(e) {
                            if (this.state !== e) {
                                var t = this.state;
                                this._state = e,
                                c.logger.log("audio stream:" + t + "->" + e)
                            }
                        },
                        get: function() {
                            return this._state
                        }
                    }]) && rt(i.prototype, a),
                    o && rt(i, o),
                    r
                }(Ce)
                  , ot = function() {
                    if ("undefined" != typeof window && window.VTTCue)
                        return window.VTTCue;
                    var e = {
                        "": !0,
                        lr: !0,
                        rl: !0
                    }
                      , t = {
                        start: !0,
                        middle: !0,
                        end: !0,
                        left: !0,
                        right: !0
                    };
                    function n(e) {
                        return "string" == typeof e && !!t[e.toLowerCase()] && e.toLowerCase()
                    }
                    function r(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = arguments[t];
                            for (var r in n)
                                e[r] = n[r]
                        }
                        return e
                    }
                    function i(t, i, a) {
                        var o = this
                          , s = {
                            enumerable: !0
                        };
                        o.hasBeenReset = !1;
                        var l = ""
                          , u = !1
                          , c = t
                          , h = i
                          , d = a
                          , f = null
                          , p = ""
                          , m = !0
                          , g = "auto"
                          , v = "start"
                          , y = 50
                          , b = "middle"
                          , x = 50
                          , w = "middle";
                        Object.defineProperty(o, "id", r({}, s, {
                            get: function() {
                                return l
                            },
                            set: function(e) {
                                l = "" + e
                            }
                        })),
                        Object.defineProperty(o, "pauseOnExit", r({}, s, {
                            get: function() {
                                return u
                            },
                            set: function(e) {
                                u = !!e
                            }
                        })),
                        Object.defineProperty(o, "startTime", r({}, s, {
                            get: function() {
                                return c
                            },
                            set: function(e) {
                                if ("number" != typeof e)
                                    throw new TypeError("Start time must be set to a number.");
                                c = e,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(o, "endTime", r({}, s, {
                            get: function() {
                                return h
                            },
                            set: function(e) {
                                if ("number" != typeof e)
                                    throw new TypeError("End time must be set to a number.");
                                h = e,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(o, "text", r({}, s, {
                            get: function() {
                                return d
                            },
                            set: function(e) {
                                d = "" + e,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(o, "region", r({}, s, {
                            get: function() {
                                return f
                            },
                            set: function(e) {
                                f = e,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(o, "vertical", r({}, s, {
                            get: function() {
                                return p
                            },
                            set: function(t) {
                                var n = function(t) {
                                    return "string" == typeof t && !!e[t.toLowerCase()] && t.toLowerCase()
                                }(t);
                                if (!1 === n)
                                    throw new SyntaxError("An invalid or illegal string was specified.");
                                p = n,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(o, "snapToLines", r({}, s, {
                            get: function() {
                                return m
                            },
                            set: function(e) {
                                m = !!e,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(o, "line", r({}, s, {
                            get: function() {
                                return g
                            },
                            set: function(e) {
                                if ("number" != typeof e && "auto" !== e)
                                    throw new SyntaxError("An invalid number or illegal string was specified.");
                                g = e,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(o, "lineAlign", r({}, s, {
                            get: function() {
                                return v
                            },
                            set: function(e) {
                                var t = n(e);
                                if (!t)
                                    throw new SyntaxError("An invalid or illegal string was specified.");
                                v = t,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(o, "position", r({}, s, {
                            get: function() {
                                return y
                            },
                            set: function(e) {
                                if (e < 0 || e > 100)
                                    throw new Error("Position must be between 0 and 100.");
                                y = e,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(o, "positionAlign", r({}, s, {
                            get: function() {
                                return b
                            },
                            set: function(e) {
                                var t = n(e);
                                if (!t)
                                    throw new SyntaxError("An invalid or illegal string was specified.");
                                b = t,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(o, "size", r({}, s, {
                            get: function() {
                                return x
                            },
                            set: function(e) {
                                if (e < 0 || e > 100)
                                    throw new Error("Size must be between 0 and 100.");
                                x = e,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(o, "align", r({}, s, {
                            get: function() {
                                return w
                            },
                            set: function(e) {
                                var t = n(e);
                                if (!t)
                                    throw new SyntaxError("An invalid or illegal string was specified.");
                                w = t,
                                this.hasBeenReset = !0
                            }
                        })),
                        o.displayState = void 0
                    }
                    return i.prototype.getCueAsHTML = function() {
                        return window.WebVTT.convertCueToDOMTree(window, this.text)
                    }
                    ,
                    i
                }()
                  , st = function() {
                    return {
                        decode: function(e) {
                            if (!e)
                                return "";
                            if ("string" != typeof e)
                                throw new Error("Error - expected string data.");
                            return decodeURIComponent(encodeURIComponent(e))
                        }
                    }
                };
                function lt() {
                    this.window = window,
                    this.state = "INITIAL",
                    this.buffer = "",
                    this.decoder = new st,
                    this.regionList = []
                }
                function ut() {
                    this.values = Object.create(null)
                }
                function ct(e, t, n, r) {
                    var i = r ? e.split(r) : [e];
                    for (var a in i)
                        if ("string" == typeof i[a]) {
                            var o = i[a].split(n);
                            2 === o.length && t(o[0], o[1])
                        }
                }
                ut.prototype = {
                    set: function(e, t) {
                        this.get(e) || "" === t || (this.values[e] = t)
                    },
                    get: function(e, t, n) {
                        return n ? this.has(e) ? this.values[e] : t[n] : this.has(e) ? this.values[e] : t
                    },
                    has: function(e) {
                        return e in this.values
                    },
                    alt: function(e, t, n) {
                        for (var r = 0; r < n.length; ++r)
                            if (t === n[r]) {
                                this.set(e, t);
                                break
                            }
                    },
                    integer: function(e, t) {
                        /^-?\d+$/.test(t) && this.set(e, parseInt(t, 10))
                    },
                    percent: function(e, t) {
                        return !!(t.match(/^([\d]{1,3})(\.[\d]*)?%$/) && (t = parseFloat(t)) >= 0 && t <= 100) && (this.set(e, t),
                        !0)
                    }
                };
                var ht = new ot(0,0,0)
                  , dt = "middle" === ht.align ? "middle" : "center";
                function ft(e, t, n) {
                    var r = e;
                    function i() {
                        var t = function(e) {
                            function t(e, t, n, r) {
                                return 3600 * (0 | e) + 60 * (0 | t) + (0 | n) + (0 | r) / 1e3
                            }
                            var n = e.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/);
                            return n ? n[3] ? t(n[1], n[2], n[3].replace(":", ""), n[4]) : n[1] > 59 ? t(n[1], n[2], 0, n[4]) : t(0, n[1], n[2], n[4]) : null
                        }(e);
                        if (null === t)
                            throw new Error("Malformed timestamp: " + r);
                        return e = e.replace(/^[^\sa-zA-Z-]+/, ""),
                        t
                    }
                    function a() {
                        e = e.replace(/^\s+/, "")
                    }
                    if (a(),
                    t.startTime = i(),
                    a(),
                    "--\x3e" !== e.substr(0, 3))
                        throw new Error("Malformed time stamp (time stamps must be separated by '--\x3e'): " + r);
                    e = e.substr(3),
                    a(),
                    t.endTime = i(),
                    a(),
                    function(e, t) {
                        var r = new ut;
                        ct(e, (function(e, t) {
                            switch (e) {
                            case "region":
                                for (var i = n.length - 1; i >= 0; i--)
                                    if (n[i].id === t) {
                                        r.set(e, n[i].region);
                                        break
                                    }
                                break;
                            case "vertical":
                                r.alt(e, t, ["rl", "lr"]);
                                break;
                            case "line":
                                var a = t.split(",")
                                  , o = a[0];
                                r.integer(e, o),
                                r.percent(e, o) && r.set("snapToLines", !1),
                                r.alt(e, o, ["auto"]),
                                2 === a.length && r.alt("lineAlign", a[1], ["start", dt, "end"]);
                                break;
                            case "position":
                                a = t.split(","),
                                r.percent(e, a[0]),
                                2 === a.length && r.alt("positionAlign", a[1], ["start", dt, "end", "line-left", "line-right", "auto"]);
                                break;
                            case "size":
                                r.percent(e, t);
                                break;
                            case "align":
                                r.alt(e, t, ["start", dt, "end", "left", "right"])
                            }
                        }
                        ), /:/, /\s/),
                        t.region = r.get("region", null),
                        t.vertical = r.get("vertical", "");
                        var i = r.get("line", "auto");
                        "auto" === i && -1 === ht.line && (i = -1),
                        t.line = i,
                        t.lineAlign = r.get("lineAlign", "start"),
                        t.snapToLines = r.get("snapToLines", !0),
                        t.size = r.get("size", 100),
                        t.align = r.get("align", dt);
                        var a = r.get("position", "auto");
                        "auto" === a && 50 === ht.position && (a = "start" === t.align || "left" === t.align ? 0 : "end" === t.align || "right" === t.align ? 100 : 50),
                        t.position = a
                    }(e, t)
                }
                function pt(e) {
                    return e.replace(/<br(?: \/)?>/gi, "\n")
                }
                lt.prototype = {
                    parse: function(e) {
                        var t = this;
                        function n() {
                            var e = t.buffer
                              , n = 0;
                            for (e = pt(e); n < e.length && "\r" !== e[n] && "\n" !== e[n]; )
                                ++n;
                            var r = e.substr(0, n);
                            return "\r" === e[n] && ++n,
                            "\n" === e[n] && ++n,
                            t.buffer = e.substr(n),
                            r
                        }
                        e && (t.buffer += t.decoder.decode(e, {
                            stream: !0
                        }));
                        try {
                            var r;
                            if ("INITIAL" === t.state) {
                                if (!/\r\n|\n/.test(t.buffer))
                                    return this;
                                var i = (r = n()).match(/^(ï»¿)?WEBVTT([ \t].*)?$/);
                                if (!i || !i[0])
                                    throw new Error("Malformed WebVTT signature.");
                                t.state = "HEADER"
                            }
                            for (var a = !1; t.buffer; ) {
                                if (!/\r\n|\n/.test(t.buffer))
                                    return this;
                                switch (a ? a = !1 : r = n(),
                                t.state) {
                                case "HEADER":
                                    /:/.test(r) ? ct(r, (function(e, t) {}
                                    ), /:/) : r || (t.state = "ID");
                                    continue;
                                case "NOTE":
                                    r || (t.state = "ID");
                                    continue;
                                case "ID":
                                    if (/^NOTE($|[ \t])/.test(r)) {
                                        t.state = "NOTE";
                                        break
                                    }
                                    if (!r)
                                        continue;
                                    if (t.cue = new ot(0,0,""),
                                    t.state = "CUE",
                                    -1 === r.indexOf("--\x3e")) {
                                        t.cue.id = r;
                                        continue
                                    }
                                case "CUE":
                                    try {
                                        ft(r, t.cue, t.regionList)
                                    } catch (e) {
                                        t.cue = null,
                                        t.state = "BADCUE";
                                        continue
                                    }
                                    t.state = "CUETEXT";
                                    continue;
                                case "CUETEXT":
                                    var o = -1 !== r.indexOf("--\x3e");
                                    if (!r || o && (a = !0)) {
                                        t.oncue && t.oncue(t.cue),
                                        t.cue = null,
                                        t.state = "ID";
                                        continue
                                    }
                                    t.cue.text && (t.cue.text += "\n"),
                                    t.cue.text += r;
                                    continue;
                                case "BADCUE":
                                    r || (t.state = "ID");
                                    continue
                                }
                            }
                        } catch (e) {
                            "CUETEXT" === t.state && t.cue && t.oncue && t.oncue(t.cue),
                            t.cue = null,
                            t.state = "INITIAL" === t.state ? "BADWEBVTT" : "BADCUE"
                        }
                        return this
                    },
                    flush: function() {
                        try {
                            if (this.buffer += this.decoder.decode(),
                            (this.cue || "HEADER" === this.state) && (this.buffer += "\n\n",
                            this.parse()),
                            "INITIAL" === this.state)
                                throw new Error("Malformed WebVTT signature.")
                        } catch (e) {
                            throw e
                        }
                        return this.onflush && this.onflush(),
                        this
                    }
                };
                var mt = lt;
                function gt(e, t, n, r) {
                    for (var i, a, o, s, l, u = window.VTTCue || TextTrackCue, c = 0; c < r.rows.length; c++)
                        if (o = !0,
                        s = 0,
                        l = "",
                        !(i = r.rows[c]).isEmpty()) {
                            for (var h = 0; h < i.chars.length; h++)
                                i.chars[h].uchar.match(/\s/) && o ? s++ : (l += i.chars[h].uchar,
                                o = !1);
                            i.cueStartTime = t,
                            t === n && (n += 1e-4),
                            a = new u(t,n,pt(l.trim())),
                            s >= 16 ? s-- : s++,
                            navigator.userAgent.match(/Firefox\//) ? a.line = c + 1 : a.line = c > 7 ? c - 2 : c + 1,
                            a.align = "left",
                            a.position = Math.max(0, Math.min(100, s / 32 * 100)),
                            e.addCue(a)
                        }
                }
                var vt, yt = {
                    42: 225,
                    92: 233,
                    94: 237,
                    95: 243,
                    96: 250,
                    123: 231,
                    124: 247,
                    125: 209,
                    126: 241,
                    127: 9608,
                    128: 174,
                    129: 176,
                    130: 189,
                    131: 191,
                    132: 8482,
                    133: 162,
                    134: 163,
                    135: 9834,
                    136: 224,
                    137: 32,
                    138: 232,
                    139: 226,
                    140: 234,
                    141: 238,
                    142: 244,
                    143: 251,
                    144: 193,
                    145: 201,
                    146: 211,
                    147: 218,
                    148: 220,
                    149: 252,
                    150: 8216,
                    151: 161,
                    152: 42,
                    153: 8217,
                    154: 9473,
                    155: 169,
                    156: 8480,
                    157: 8226,
                    158: 8220,
                    159: 8221,
                    160: 192,
                    161: 194,
                    162: 199,
                    163: 200,
                    164: 202,
                    165: 203,
                    166: 235,
                    167: 206,
                    168: 207,
                    169: 239,
                    170: 212,
                    171: 217,
                    172: 249,
                    173: 219,
                    174: 171,
                    175: 187,
                    176: 195,
                    177: 227,
                    178: 205,
                    179: 204,
                    180: 236,
                    181: 210,
                    182: 242,
                    183: 213,
                    184: 245,
                    185: 123,
                    186: 125,
                    187: 92,
                    188: 94,
                    189: 95,
                    190: 124,
                    191: 8764,
                    192: 196,
                    193: 228,
                    194: 214,
                    195: 246,
                    196: 223,
                    197: 165,
                    198: 164,
                    199: 9475,
                    200: 197,
                    201: 229,
                    202: 216,
                    203: 248,
                    204: 9487,
                    205: 9491,
                    206: 9495,
                    207: 9499
                }, bt = function(e) {
                    var t = e;
                    return yt.hasOwnProperty(e) && (t = yt[e]),
                    String.fromCharCode(t)
                }, xt = {
                    17: 1,
                    18: 3,
                    21: 5,
                    22: 7,
                    23: 9,
                    16: 11,
                    19: 12,
                    20: 14
                }, wt = {
                    17: 2,
                    18: 4,
                    21: 6,
                    22: 8,
                    23: 10,
                    19: 13,
                    20: 15
                }, _t = {
                    25: 1,
                    26: 3,
                    29: 5,
                    30: 7,
                    31: 9,
                    24: 11,
                    27: 12,
                    28: 14
                }, Et = {
                    25: 2,
                    26: 4,
                    29: 6,
                    30: 8,
                    31: 10,
                    27: 13,
                    28: 15
                }, Tt = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "black", "transparent"];
                !function(e) {
                    e[e.ERROR = 0] = "ERROR",
                    e[e.TEXT = 1] = "TEXT",
                    e[e.WARNING = 2] = "WARNING",
                    e[e.INFO = 2] = "INFO",
                    e[e.DEBUG = 3] = "DEBUG",
                    e[e.DATA = 3] = "DATA"
                }(vt || (vt = {}));
                var St = {
                    verboseFilter: {
                        DATA: 3,
                        DEBUG: 3,
                        INFO: 2,
                        WARNING: 2,
                        TEXT: 1,
                        ERROR: 0
                    },
                    time: null,
                    verboseLevel: 0,
                    setTime: function(e) {
                        this.time = e
                    },
                    log: function(e, t) {
                        this.verboseFilter[e],
                        this.verboseLevel
                    }
                }
                  , Mt = function(e) {
                    for (var t = [], n = 0; n < e.length; n++)
                        t.push(e[n].toString(16));
                    return t
                }
                  , At = function() {
                    function e(e, t, n, r, i) {
                        this.foreground = void 0,
                        this.underline = void 0,
                        this.italics = void 0,
                        this.background = void 0,
                        this.flash = void 0,
                        this.foreground = e || "white",
                        this.underline = t || !1,
                        this.italics = n || !1,
                        this.background = r || "black",
                        this.flash = i || !1
                    }
                    var t = e.prototype;
                    return t.reset = function() {
                        this.foreground = "white",
                        this.underline = !1,
                        this.italics = !1,
                        this.background = "black",
                        this.flash = !1
                    }
                    ,
                    t.setStyles = function(e) {
                        for (var t = ["foreground", "underline", "italics", "background", "flash"], n = 0; n < t.length; n++) {
                            var r = t[n];
                            e.hasOwnProperty(r) && (this[r] = e[r])
                        }
                    }
                    ,
                    t.isDefault = function() {
                        return "white" === this.foreground && !this.underline && !this.italics && "black" === this.background && !this.flash
                    }
                    ,
                    t.equals = function(e) {
                        return this.foreground === e.foreground && this.underline === e.underline && this.italics === e.italics && this.background === e.background && this.flash === e.flash
                    }
                    ,
                    t.copy = function(e) {
                        this.foreground = e.foreground,
                        this.underline = e.underline,
                        this.italics = e.italics,
                        this.background = e.background,
                        this.flash = e.flash
                    }
                    ,
                    t.toString = function() {
                        return "color=" + this.foreground + ", underline=" + this.underline + ", italics=" + this.italics + ", background=" + this.background + ", flash=" + this.flash
                    }
                    ,
                    e
                }()
                  , Rt = function() {
                    function e(e, t, n, r, i, a) {
                        this.uchar = void 0,
                        this.penState = void 0,
                        this.uchar = e || " ",
                        this.penState = new At(t,n,r,i,a)
                    }
                    var t = e.prototype;
                    return t.reset = function() {
                        this.uchar = " ",
                        this.penState.reset()
                    }
                    ,
                    t.setChar = function(e, t) {
                        this.uchar = e,
                        this.penState.copy(t)
                    }
                    ,
                    t.setPenState = function(e) {
                        this.penState.copy(e)
                    }
                    ,
                    t.equals = function(e) {
                        return this.uchar === e.uchar && this.penState.equals(e.penState)
                    }
                    ,
                    t.copy = function(e) {
                        this.uchar = e.uchar,
                        this.penState.copy(e.penState)
                    }
                    ,
                    t.isEmpty = function() {
                        return " " === this.uchar && this.penState.isDefault()
                    }
                    ,
                    e
                }()
                  , Lt = function() {
                    function e() {
                        this.chars = void 0,
                        this.pos = void 0,
                        this.currPenState = void 0,
                        this.cueStartTime = void 0,
                        this.chars = [];
                        for (var e = 0; e < 100; e++)
                            this.chars.push(new Rt);
                        this.pos = 0,
                        this.currPenState = new At
                    }
                    var t = e.prototype;
                    return t.equals = function(e) {
                        for (var t = !0, n = 0; n < 100; n++)
                            if (!this.chars[n].equals(e.chars[n])) {
                                t = !1;
                                break
                            }
                        return t
                    }
                    ,
                    t.copy = function(e) {
                        for (var t = 0; t < 100; t++)
                            this.chars[t].copy(e.chars[t])
                    }
                    ,
                    t.isEmpty = function() {
                        for (var e = !0, t = 0; t < 100; t++)
                            if (!this.chars[t].isEmpty()) {
                                e = !1;
                                break
                            }
                        return e
                    }
                    ,
                    t.setCursor = function(e) {
                        this.pos !== e && (this.pos = e),
                        this.pos < 0 ? (St.log("ERROR", "Negative cursor position " + this.pos),
                        this.pos = 0) : this.pos > 100 && (St.log("ERROR", "Too large cursor position " + this.pos),
                        this.pos = 100)
                    }
                    ,
                    t.moveCursor = function(e) {
                        var t = this.pos + e;
                        if (e > 1)
                            for (var n = this.pos + 1; n < t + 1; n++)
                                this.chars[n].setPenState(this.currPenState);
                        this.setCursor(t)
                    }
                    ,
                    t.backSpace = function() {
                        this.moveCursor(-1),
                        this.chars[this.pos].setChar(" ", this.currPenState)
                    }
                    ,
                    t.insertChar = function(e) {
                        e >= 144 && this.backSpace();
                        var t = bt(e);
                        this.pos >= 100 ? St.log("ERROR", "Cannot insert " + e.toString(16) + " (" + t + ") at position " + this.pos + ". Skipping it!") : (this.chars[this.pos].setChar(t, this.currPenState),
                        this.moveCursor(1))
                    }
                    ,
                    t.clearFromPos = function(e) {
                        var t;
                        for (t = e; t < 100; t++)
                            this.chars[t].reset()
                    }
                    ,
                    t.clear = function() {
                        this.clearFromPos(0),
                        this.pos = 0,
                        this.currPenState.reset()
                    }
                    ,
                    t.clearToEndOfRow = function() {
                        this.clearFromPos(this.pos)
                    }
                    ,
                    t.getTextString = function() {
                        for (var e = [], t = !0, n = 0; n < 100; n++) {
                            var r = this.chars[n].uchar;
                            " " !== r && (t = !1),
                            e.push(r)
                        }
                        return t ? "" : e.join("")
                    }
                    ,
                    t.setPenStyles = function(e) {
                        this.currPenState.setStyles(e),
                        this.chars[this.pos].setPenState(this.currPenState)
                    }
                    ,
                    e
                }()
                  , Ct = function() {
                    function e() {
                        this.rows = void 0,
                        this.currRow = void 0,
                        this.nrRollUpRows = void 0,
                        this.lastOutputScreen = void 0,
                        this.rows = [];
                        for (var e = 0; e < 15; e++)
                            this.rows.push(new Lt);
                        this.currRow = 14,
                        this.nrRollUpRows = null,
                        this.reset()
                    }
                    var t = e.prototype;
                    return t.reset = function() {
                        for (var e = 0; e < 15; e++)
                            this.rows[e].clear();
                        this.currRow = 14
                    }
                    ,
                    t.equals = function(e) {
                        for (var t = !0, n = 0; n < 15; n++)
                            if (!this.rows[n].equals(e.rows[n])) {
                                t = !1;
                                break
                            }
                        return t
                    }
                    ,
                    t.copy = function(e) {
                        for (var t = 0; t < 15; t++)
                            this.rows[t].copy(e.rows[t])
                    }
                    ,
                    t.isEmpty = function() {
                        for (var e = !0, t = 0; t < 15; t++)
                            if (!this.rows[t].isEmpty()) {
                                e = !1;
                                break
                            }
                        return e
                    }
                    ,
                    t.backSpace = function() {
                        this.rows[this.currRow].backSpace()
                    }
                    ,
                    t.clearToEndOfRow = function() {
                        this.rows[this.currRow].clearToEndOfRow()
                    }
                    ,
                    t.insertChar = function(e) {
                        this.rows[this.currRow].insertChar(e)
                    }
                    ,
                    t.setPen = function(e) {
                        this.rows[this.currRow].setPenStyles(e)
                    }
                    ,
                    t.moveCursor = function(e) {
                        this.rows[this.currRow].moveCursor(e)
                    }
                    ,
                    t.setCursor = function(e) {
                        St.log("INFO", "setCursor: " + e),
                        this.rows[this.currRow].setCursor(e)
                    }
                    ,
                    t.setPAC = function(e) {
                        St.log("INFO", "pacData = " + JSON.stringify(e));
                        var t = e.row - 1;
                        if (this.nrRollUpRows && t < this.nrRollUpRows - 1 && (t = this.nrRollUpRows - 1),
                        this.nrRollUpRows && this.currRow !== t) {
                            for (var n = 0; n < 15; n++)
                                this.rows[n].clear();
                            var r = this.currRow + 1 - this.nrRollUpRows
                              , i = this.lastOutputScreen;
                            if (i) {
                                var a = i.rows[r].cueStartTime;
                                if (a && St.time && a < St.time)
                                    for (var o = 0; o < this.nrRollUpRows; o++)
                                        this.rows[t - this.nrRollUpRows + o + 1].copy(i.rows[r + o])
                            }
                        }
                        this.currRow = t;
                        var s = this.rows[this.currRow];
                        if (null !== e.indent) {
                            var l = e.indent
                              , u = Math.max(l - 1, 0);
                            s.setCursor(e.indent),
                            e.color = s.chars[u].penState.foreground
                        }
                        var c = {
                            foreground: e.color,
                            underline: e.underline,
                            italics: e.italics,
                            background: "black",
                            flash: !1
                        };
                        this.setPen(c)
                    }
                    ,
                    t.setBkgData = function(e) {
                        St.log("INFO", "bkgData = " + JSON.stringify(e)),
                        this.backSpace(),
                        this.setPen(e),
                        this.insertChar(32)
                    }
                    ,
                    t.setRollUpRows = function(e) {
                        this.nrRollUpRows = e
                    }
                    ,
                    t.rollUp = function() {
                        if (null !== this.nrRollUpRows) {
                            St.log("TEXT", this.getDisplayText());
                            var e = this.currRow + 1 - this.nrRollUpRows
                              , t = this.rows.splice(e, 1)[0];
                            t.clear(),
                            this.rows.splice(this.currRow, 0, t),
                            St.log("INFO", "Rolling up")
                        } else
                            St.log("DEBUG", "roll_up but nrRollUpRows not set yet")
                    }
                    ,
                    t.getDisplayText = function(e) {
                        e = e || !1;
                        for (var t = [], n = "", r = -1, i = 0; i < 15; i++) {
                            var a = this.rows[i].getTextString();
                            a && (r = i + 1,
                            e ? t.push("Row " + r + ": '" + a + "'") : t.push(a.trim()))
                        }
                        return t.length > 0 && (n = e ? "[" + t.join(" | ") + "]" : t.join("\n")),
                        n
                    }
                    ,
                    t.getTextAndFormat = function() {
                        return this.rows
                    }
                    ,
                    e
                }()
                  , Pt = function() {
                    function e(e, t) {
                        this.chNr = void 0,
                        this.outputFilter = void 0,
                        this.mode = void 0,
                        this.verbose = void 0,
                        this.displayedMemory = void 0,
                        this.nonDisplayedMemory = void 0,
                        this.lastOutputScreen = void 0,
                        this.currRollUpRow = void 0,
                        this.writeScreen = void 0,
                        this.cueStartTime = void 0,
                        this.lastCueEndTime = void 0,
                        this.chNr = e,
                        this.outputFilter = t,
                        this.mode = null,
                        this.verbose = 0,
                        this.displayedMemory = new Ct,
                        this.nonDisplayedMemory = new Ct,
                        this.lastOutputScreen = new Ct,
                        this.currRollUpRow = this.displayedMemory.rows[14],
                        this.writeScreen = this.displayedMemory,
                        this.mode = null,
                        this.cueStartTime = null
                    }
                    var t = e.prototype;
                    return t.reset = function() {
                        this.mode = null,
                        this.displayedMemory.reset(),
                        this.nonDisplayedMemory.reset(),
                        this.lastOutputScreen.reset(),
                        this.currRollUpRow = this.displayedMemory.rows[14],
                        this.writeScreen = this.displayedMemory,
                        this.mode = null,
                        this.cueStartTime = null
                    }
                    ,
                    t.getHandler = function() {
                        return this.outputFilter
                    }
                    ,
                    t.setHandler = function(e) {
                        this.outputFilter = e
                    }
                    ,
                    t.setPAC = function(e) {
                        this.writeScreen.setPAC(e)
                    }
                    ,
                    t.setBkgData = function(e) {
                        this.writeScreen.setBkgData(e)
                    }
                    ,
                    t.setMode = function(e) {
                        e !== this.mode && (this.mode = e,
                        St.log("INFO", "MODE=" + e),
                        "MODE_POP-ON" === this.mode ? this.writeScreen = this.nonDisplayedMemory : (this.writeScreen = this.displayedMemory,
                        this.writeScreen.reset()),
                        "MODE_ROLL-UP" !== this.mode && (this.displayedMemory.nrRollUpRows = null,
                        this.nonDisplayedMemory.nrRollUpRows = null),
                        this.mode = e)
                    }
                    ,
                    t.insertChars = function(e) {
                        for (var t = 0; t < e.length; t++)
                            this.writeScreen.insertChar(e[t]);
                        var n = this.writeScreen === this.displayedMemory ? "DISP" : "NON_DISP";
                        St.log("INFO", n + ": " + this.writeScreen.getDisplayText(!0)),
                        "MODE_PAINT-ON" !== this.mode && "MODE_ROLL-UP" !== this.mode || (St.log("TEXT", "DISPLAYED: " + this.displayedMemory.getDisplayText(!0)),
                        this.outputDataUpdate())
                    }
                    ,
                    t.ccRCL = function() {
                        St.log("INFO", "RCL - Resume Caption Loading"),
                        this.setMode("MODE_POP-ON")
                    }
                    ,
                    t.ccBS = function() {
                        St.log("INFO", "BS - BackSpace"),
                        "MODE_TEXT" !== this.mode && (this.writeScreen.backSpace(),
                        this.writeScreen === this.displayedMemory && this.outputDataUpdate())
                    }
                    ,
                    t.ccAOF = function() {}
                    ,
                    t.ccAON = function() {}
                    ,
                    t.ccDER = function() {
                        St.log("INFO", "DER- Delete to End of Row"),
                        this.writeScreen.clearToEndOfRow(),
                        this.outputDataUpdate()
                    }
                    ,
                    t.ccRU = function(e) {
                        St.log("INFO", "RU(" + e + ") - Roll Up"),
                        this.writeScreen = this.displayedMemory,
                        this.setMode("MODE_ROLL-UP"),
                        this.writeScreen.setRollUpRows(e)
                    }
                    ,
                    t.ccFON = function() {
                        St.log("INFO", "FON - Flash On"),
                        this.writeScreen.setPen({
                            flash: !0
                        })
                    }
                    ,
                    t.ccRDC = function() {
                        St.log("INFO", "RDC - Resume Direct Captioning"),
                        this.setMode("MODE_PAINT-ON")
                    }
                    ,
                    t.ccTR = function() {
                        St.log("INFO", "TR"),
                        this.setMode("MODE_TEXT")
                    }
                    ,
                    t.ccRTD = function() {
                        St.log("INFO", "RTD"),
                        this.setMode("MODE_TEXT")
                    }
                    ,
                    t.ccEDM = function() {
                        St.log("INFO", "EDM - Erase Displayed Memory"),
                        this.displayedMemory.reset(),
                        this.outputDataUpdate(!0)
                    }
                    ,
                    t.ccCR = function() {
                        St.log("INFO", "CR - Carriage Return"),
                        this.writeScreen.rollUp(),
                        this.outputDataUpdate(!0)
                    }
                    ,
                    t.ccENM = function() {
                        St.log("INFO", "ENM - Erase Non-displayed Memory"),
                        this.nonDisplayedMemory.reset()
                    }
                    ,
                    t.ccEOC = function() {
                        if (St.log("INFO", "EOC - End Of Caption"),
                        "MODE_POP-ON" === this.mode) {
                            var e = this.displayedMemory;
                            this.displayedMemory = this.nonDisplayedMemory,
                            this.nonDisplayedMemory = e,
                            this.writeScreen = this.nonDisplayedMemory,
                            St.log("TEXT", "DISP: " + this.displayedMemory.getDisplayText())
                        }
                        this.outputDataUpdate(!0)
                    }
                    ,
                    t.ccTO = function(e) {
                        St.log("INFO", "TO(" + e + ") - Tab Offset"),
                        this.writeScreen.moveCursor(e)
                    }
                    ,
                    t.ccMIDROW = function(e) {
                        var t = {
                            flash: !1
                        };
                        if (t.underline = e % 2 == 1,
                        t.italics = e >= 46,
                        t.italics)
                            t.foreground = "white";
                        else {
                            var n = Math.floor(e / 2) - 16;
                            t.foreground = ["white", "green", "blue", "cyan", "red", "yellow", "magenta"][n]
                        }
                        St.log("INFO", "MIDROW: " + JSON.stringify(t)),
                        this.writeScreen.setPen(t)
                    }
                    ,
                    t.outputDataUpdate = function(e) {
                        void 0 === e && (e = !1);
                        var t = St.time;
                        null !== t && this.outputFilter && (null !== this.cueStartTime || this.displayedMemory.isEmpty() ? this.displayedMemory.equals(this.lastOutputScreen) || (this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen),
                        e && this.outputFilter.dispatchCue && this.outputFilter.dispatchCue(),
                        this.cueStartTime = this.displayedMemory.isEmpty() ? null : t) : this.cueStartTime = t,
                        this.lastOutputScreen.copy(this.displayedMemory))
                    }
                    ,
                    t.cueSplitAtTime = function(e) {
                        this.outputFilter && (this.displayedMemory.isEmpty() || (this.outputFilter.newCue && this.outputFilter.newCue(this.cueStartTime, e, this.displayedMemory),
                        this.cueStartTime = e))
                    }
                    ,
                    e
                }()
                  , Ot = function() {
                    function e(e, t, n) {
                        this.field = void 0,
                        this.outputs = void 0,
                        this.channels = void 0,
                        this.currChNr = void 0,
                        this.lastCmdA = void 0,
                        this.lastCmdB = void 0,
                        this.lastTime = void 0,
                        this.dataCounters = void 0,
                        this.field = e || 1,
                        this.outputs = [t, n],
                        this.channels = [new Pt(1,t), new Pt(2,n)],
                        this.currChNr = -1,
                        this.lastCmdA = null,
                        this.lastCmdB = null,
                        this.lastTime = null,
                        this.dataCounters = {
                            padding: 0,
                            char: 0,
                            cmd: 0,
                            other: 0
                        }
                    }
                    var t = e.prototype;
                    return t.getHandler = function(e) {
                        return this.channels[e].getHandler()
                    }
                    ,
                    t.setHandler = function(e, t) {
                        this.channels[e].setHandler(t)
                    }
                    ,
                    t.addData = function(e, t) {
                        var n, r, i, a = !1;
                        this.lastTime = e,
                        St.setTime(e);
                        for (var o = 0; o < t.length; o += 2)
                            r = 127 & t[o],
                            i = 127 & t[o + 1],
                            0 !== r || 0 !== i ? (St.log("DATA", "[" + Mt([t[o], t[o + 1]]) + "] -> (" + Mt([r, i]) + ")"),
                            (n = this.parseCmd(r, i)) || (n = this.parseMidrow(r, i)),
                            n || (n = this.parsePAC(r, i)),
                            n || (n = this.parseBackgroundAttributes(r, i)),
                            n || (a = this.parseChars(r, i)) && (this.currChNr && this.currChNr >= 0 ? this.channels[this.currChNr - 1].insertChars(a) : St.log("WARNING", "No channel found yet. TEXT-MODE?")),
                            n ? this.dataCounters.cmd += 2 : a ? this.dataCounters.char += 2 : (this.dataCounters.other += 2,
                            St.log("WARNING", "Couldn't parse cleaned data " + Mt([r, i]) + " orig: " + Mt([t[o], t[o + 1]])))) : this.dataCounters.padding += 2
                    }
                    ,
                    t.parseCmd = function(e, t) {
                        var n = null;
                        if (!((20 === e || 28 === e) && t >= 32 && t <= 47 || (23 === e || 31 === e) && t >= 33 && t <= 35))
                            return !1;
                        if (e === this.lastCmdA && t === this.lastCmdB)
                            return this.lastCmdA = null,
                            this.lastCmdB = null,
                            St.log("DEBUG", "Repeated command (" + Mt([e, t]) + ") is dropped"),
                            !0;
                        n = 20 === e || 23 === e ? 1 : 2;
                        var r = this.channels[n - 1];
                        return 20 === e || 28 === e ? 32 === t ? r.ccRCL() : 33 === t ? r.ccBS() : 34 === t ? r.ccAOF() : 35 === t ? r.ccAON() : 36 === t ? r.ccDER() : 37 === t ? r.ccRU(2) : 38 === t ? r.ccRU(3) : 39 === t ? r.ccRU(4) : 40 === t ? r.ccFON() : 41 === t ? r.ccRDC() : 42 === t ? r.ccTR() : 43 === t ? r.ccRTD() : 44 === t ? r.ccEDM() : 45 === t ? r.ccCR() : 46 === t ? r.ccENM() : 47 === t && r.ccEOC() : r.ccTO(t - 32),
                        this.lastCmdA = e,
                        this.lastCmdB = t,
                        this.currChNr = n,
                        !0
                    }
                    ,
                    t.parseMidrow = function(e, t) {
                        var n = null;
                        return (17 === e || 25 === e) && t >= 32 && t <= 47 && ((n = 17 === e ? 1 : 2) !== this.currChNr ? (St.log("ERROR", "Mismatch channel in midrow parsing"),
                        !1) : (this.channels[n - 1].ccMIDROW(t),
                        St.log("DEBUG", "MIDROW (" + Mt([e, t]) + ")"),
                        !0))
                    }
                    ,
                    t.parsePAC = function(e, t) {
                        var n, r = null;
                        if (!((e >= 17 && e <= 23 || e >= 25 && e <= 31) && t >= 64 && t <= 127 || (16 === e || 24 === e) && t >= 64 && t <= 95))
                            return !1;
                        if (e === this.lastCmdA && t === this.lastCmdB)
                            return this.lastCmdA = null,
                            this.lastCmdB = null,
                            !0;
                        n = e <= 23 ? 1 : 2,
                        r = t >= 64 && t <= 95 ? 1 === n ? xt[e] : _t[e] : 1 === n ? wt[e] : Et[e];
                        var i = this.interpretPAC(r, t);
                        return this.channels[n - 1].setPAC(i),
                        this.lastCmdA = e,
                        this.lastCmdB = t,
                        this.currChNr = n,
                        !0
                    }
                    ,
                    t.interpretPAC = function(e, t) {
                        var n = t
                          , r = {
                            color: null,
                            italics: !1,
                            indent: null,
                            underline: !1,
                            row: e
                        };
                        return n = t > 95 ? t - 96 : t - 64,
                        r.underline = 1 == (1 & n),
                        n <= 13 ? r.color = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "white"][Math.floor(n / 2)] : n <= 15 ? (r.italics = !0,
                        r.color = "white") : r.indent = 4 * Math.floor((n - 16) / 2),
                        r
                    }
                    ,
                    t.parseChars = function(e, t) {
                        var n = null
                          , r = null
                          , i = null;
                        if (e >= 25 ? (n = 2,
                        i = e - 8) : (n = 1,
                        i = e),
                        i >= 17 && i <= 19) {
                            var a = t;
                            a = 17 === i ? t + 80 : 18 === i ? t + 112 : t + 144,
                            St.log("INFO", "Special char '" + bt(a) + "' in channel " + n),
                            r = [a]
                        } else
                            e >= 32 && e <= 127 && (r = 0 === t ? [e] : [e, t]);
                        if (r) {
                            var o = Mt(r);
                            St.log("DEBUG", "Char codes =  " + o.join(",")),
                            this.lastCmdA = null,
                            this.lastCmdB = null
                        }
                        return r
                    }
                    ,
                    t.parseBackgroundAttributes = function(e, t) {
                        var n, r, i;
                        return ((16 === e || 24 === e) && t >= 32 && t <= 47 || (23 === e || 31 === e) && t >= 45 && t <= 47) && (n = {},
                        16 === e || 24 === e ? (r = Math.floor((t - 32) / 2),
                        n.background = Tt[r],
                        t % 2 == 1 && (n.background = n.background + "_semi")) : 45 === t ? n.background = "transparent" : (n.foreground = "black",
                        47 === t && (n.underline = !0)),
                        i = e < 24 ? 1 : 2,
                        this.channels[i - 1].setBkgData(n),
                        this.lastCmdA = null,
                        this.lastCmdB = null,
                        !0)
                    }
                    ,
                    t.reset = function() {
                        for (var e = 0; e < this.channels.length; e++)
                            this.channels[e] && this.channels[e].reset();
                        this.lastCmdA = null,
                        this.lastCmdB = null
                    }
                    ,
                    t.cueSplitAtTime = function(e) {
                        for (var t = 0; t < this.channels.length; t++)
                            this.channels[t] && this.channels[t].cueSplitAtTime(e)
                    }
                    ,
                    e
                }()
                  , kt = function() {
                    function e(e, t) {
                        this.timelineController = void 0,
                        this.trackName = void 0,
                        this.startTime = void 0,
                        this.endTime = void 0,
                        this.screen = void 0,
                        this.timelineController = e,
                        this.trackName = t,
                        this.startTime = null,
                        this.endTime = null,
                        this.screen = null
                    }
                    var t = e.prototype;
                    return t.dispatchCue = function() {
                        null !== this.startTime && (this.timelineController.addCues(this.trackName, this.startTime, this.endTime, this.screen),
                        this.startTime = null)
                    }
                    ,
                    t.newCue = function(e, t, n) {
                        (null === this.startTime || this.startTime > e) && (this.startTime = e),
                        this.endTime = t,
                        this.screen = n,
                        this.timelineController.createCaptionsTrack(this.trackName)
                    }
                    ,
                    e
                }()
                  , Dt = function(e, t, n) {
                    return e.substr(n || 0, t.length) === t
                }
                  , It = function(e) {
                    for (var t = 5381, n = e.length; n; )
                        t = 33 * t ^ e.charCodeAt(--n);
                    return (t >>> 0).toString()
                }
                  , Nt = {
                    parse: function(e, t, n, r, i, a) {
                        var o, s = Object(Ne.utf8ArrayToStr)(new Uint8Array(e)).trim().replace(/\r\n|\n\r|\n|\r/g, "\n").split("\n"), u = "00:00.000", c = 0, h = 0, d = 0, f = [], p = !0, m = !1, g = new mt;
                        g.oncue = function(e) {
                            var t = n[r]
                              , i = n.ccOffset;
                            t && t.new && (void 0 !== h ? i = n.ccOffset = t.start : function(e, t, n) {
                                var r = e[t]
                                  , i = e[r.prevCC];
                                if (!i || !i.new && r.new)
                                    return e.ccOffset = e.presentationOffset = r.start,
                                    void (r.new = !1);
                                for (; i && i.new; )
                                    e.ccOffset += r.start - i.start,
                                    r.new = !1,
                                    i = e[(r = i).prevCC];
                                e.presentationOffset = n
                            }(n, r, d)),
                            d && (i = d - n.presentationOffset),
                            m && (e.startTime += i - h,
                            e.endTime += i - h),
                            e.id = It(e.startTime.toString()) + It(e.endTime.toString()) + It(e.text),
                            e.text = decodeURIComponent(encodeURIComponent(e.text)),
                            e.endTime > 0 && f.push(e)
                        }
                        ,
                        g.onparsingerror = function(e) {
                            o = e
                        }
                        ,
                        g.onflush = function() {
                            o && a ? a(o) : i(f)
                        }
                        ,
                        s.forEach((function(e) {
                            if (p) {
                                if (Dt(e, "X-TIMESTAMP-MAP=")) {
                                    p = !1,
                                    m = !0,
                                    e.substr(16).split(",").forEach((function(e) {
                                        Dt(e, "LOCAL:") ? u = e.substr(6) : Dt(e, "MPEGTS:") && (c = parseInt(e.substr(7)))
                                    }
                                    ));
                                    try {
                                        t + (9e4 * n[r].start || 0) < 0 && (t += 8589934592),
                                        c -= t,
                                        h = function(e) {
                                            var t = parseInt(e.substr(-3))
                                              , n = parseInt(e.substr(-6, 2))
                                              , r = parseInt(e.substr(-9, 2))
                                              , i = e.length > 9 ? parseInt(e.substr(0, e.indexOf(":"))) : 0;
                                            if (!(Object(l.isFiniteNumber)(t) && Object(l.isFiniteNumber)(n) && Object(l.isFiniteNumber)(r) && Object(l.isFiniteNumber)(i)))
                                                throw Error("Malformed X-TIMESTAMP-MAP: Local:" + e);
                                            return t += 1e3 * n,
                                            t += 6e4 * r,
                                            t += 36e5 * i
                                        }(u) / 1e3,
                                        d = c / 9e4
                                    } catch (e) {
                                        m = !1,
                                        o = e
                                    }
                                    return
                                }
                                "" === e && (p = !1)
                            }
                            g.parse(e + "\n")
                        }
                        )),
                        g.flush()
                    }
                };
                function Ft(e) {
                    if (void 0 === e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return e
                }
                function Ut(e, t) {
                    return e && e.label === t.name && !(e.textTrack1 || e.textTrack2)
                }
                var Bt = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        if ((n = e.call(this, t, u.default.MEDIA_ATTACHING, u.default.MEDIA_DETACHING, u.default.FRAG_PARSING_USERDATA, u.default.FRAG_DECRYPTED, u.default.MANIFEST_LOADING, u.default.MANIFEST_LOADED, u.default.FRAG_LOADED, u.default.INIT_PTS_FOUND) || this).media = null,
                        n.config = void 0,
                        n.enabled = !0,
                        n.Cues = void 0,
                        n.textTracks = [],
                        n.tracks = [],
                        n.initPTS = [],
                        n.unparsedVttFrags = [],
                        n.cueRanges = [],
                        n.captionsTracks = {},
                        n.captionsProperties = void 0,
                        n.cea608Parser = void 0,
                        n.lastSn = -1,
                        n.prevCC = -1,
                        n.vttCCs = null,
                        n.hls = t,
                        n.config = t.config,
                        n.Cues = t.config.cueHandler,
                        n.captionsProperties = {
                            textTrack1: {
                                label: n.config.captionsTextTrack1Label,
                                languageCode: n.config.captionsTextTrack1LanguageCode
                            },
                            textTrack2: {
                                label: n.config.captionsTextTrack2Label,
                                languageCode: n.config.captionsTextTrack2LanguageCode
                            }
                        },
                        n.config.enableCEA708Captions) {
                            var r = new kt(Ft(n),"textTrack1")
                              , i = new kt(Ft(n),"textTrack2");
                            n.cea608Parser = new Ot(0,r,i)
                        }
                        return n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i = r.prototype;
                    return i.addCues = function(e, t, n, r) {
                        for (var i, a, o, s, l = this.cueRanges, u = !1, c = l.length; c--; ) {
                            var h = l[c]
                              , d = (i = h[0],
                            a = h[1],
                            o = t,
                            s = n,
                            Math.min(a, s) - Math.max(i, o));
                            if (d >= 0 && (h[0] = Math.min(h[0], t),
                            h[1] = Math.max(h[1], n),
                            u = !0,
                            d / (n - t) > .5))
                                return
                        }
                        u || l.push([t, n]),
                        this.Cues.newCue(this.captionsTracks[e], t, n, r)
                    }
                    ,
                    i.onInitPtsFound = function(e) {
                        var t = this
                          , n = e.frag
                          , r = e.id
                          , i = e.initPTS
                          , a = this.unparsedVttFrags;
                        "main" === r && (this.initPTS[n.cc] = i),
                        a.length && (this.unparsedVttFrags = [],
                        a.forEach((function(e) {
                            t.onFragLoaded(e)
                        }
                        )))
                    }
                    ,
                    i.getExistingTrack = function(e) {
                        var t = this.media;
                        if (t)
                            for (var n = 0; n < t.textTracks.length; n++) {
                                var r = t.textTracks[n];
                                if (r[e])
                                    return r
                            }
                        return null
                    }
                    ,
                    i.createCaptionsTrack = function(e) {
                        var t = this.captionsProperties
                          , n = this.captionsTracks
                          , r = this.media
                          , i = t[e]
                          , a = i.label
                          , o = i.languageCode;
                        if (!n[e]) {
                            var s = this.getExistingTrack(e);
                            if (s)
                                n[e] = s,
                                Ue(n[e]),
                                Fe(n[e], r);
                            else {
                                var l = this.createTextTrack("captions", a, o);
                                l && (l[e] = !0,
                                n[e] = l)
                            }
                        }
                    }
                    ,
                    i.createTextTrack = function(e, t, n) {
                        var r = this.media;
                        if (r)
                            return r.addTextTrack(e, t, n)
                    }
                    ,
                    i.destroy = function() {
                        e.prototype.destroy.call(this)
                    }
                    ,
                    i.onMediaAttaching = function(e) {
                        this.media = e.media,
                        this._cleanTracks()
                    }
                    ,
                    i.onMediaDetaching = function() {
                        var e = this.captionsTracks;
                        Object.keys(e).forEach((function(t) {
                            Ue(e[t]),
                            delete e[t]
                        }
                        ))
                    }
                    ,
                    i.onManifestLoading = function() {
                        this.lastSn = -1,
                        this.prevCC = -1,
                        this.vttCCs = {
                            ccOffset: 0,
                            presentationOffset: 0,
                            0: {
                                start: 0,
                                prevCC: -1,
                                new: !1
                            }
                        },
                        this._cleanTracks()
                    }
                    ,
                    i._cleanTracks = function() {
                        var e = this.media;
                        if (e) {
                            var t = e.textTracks;
                            if (t)
                                for (var n = 0; n < t.length; n++)
                                    Ue(t[n])
                        }
                    }
                    ,
                    i.onManifestLoaded = function(e) {
                        var t = this;
                        if (this.textTracks = [],
                        this.unparsedVttFrags = this.unparsedVttFrags || [],
                        this.initPTS = [],
                        this.cueRanges = [],
                        this.config.enableWebVTT) {
                            this.tracks = e.subtitles || [];
                            var n = this.media ? this.media.textTracks : [];
                            this.tracks.forEach((function(e, r) {
                                var i;
                                if (r < n.length) {
                                    for (var a = null, o = 0; o < n.length; o++)
                                        if (Ut(n[o], e)) {
                                            a = n[o];
                                            break
                                        }
                                    a && (i = a)
                                }
                                i || (i = t.createTextTrack("subtitles", e.name, e.lang)),
                                e.default ? i.mode = t.hls.subtitleDisplay ? "showing" : "hidden" : i.mode = "disabled",
                                t.textTracks.push(i)
                            }
                            ))
                        }
                    }
                    ,
                    i.onFragLoaded = function(e) {
                        var t = e.frag
                          , n = e.payload
                          , r = this.cea608Parser
                          , i = this.initPTS
                          , a = this.lastSn
                          , o = this.unparsedVttFrags;
                        if ("main" === t.type) {
                            var s = t.sn;
                            t.sn !== a + 1 && r && r.reset(),
                            this.lastSn = s
                        } else if ("subtitle" === t.type)
                            if (n.byteLength) {
                                if (!Object(l.isFiniteNumber)(i[t.cc]))
                                    return o.push(e),
                                    void (i.length && this.hls.trigger(u.default.SUBTITLE_FRAG_PROCESSED, {
                                        success: !1,
                                        frag: t
                                    }));
                                var c = t.decryptdata;
                                null != c && null != c.key && "AES-128" === c.method || this._parseVTTs(t, n)
                            } else
                                this.hls.trigger(u.default.SUBTITLE_FRAG_PROCESSED, {
                                    success: !1,
                                    frag: t
                                })
                    }
                    ,
                    i._parseVTTs = function(e, t) {
                        var n = this.hls
                          , r = this.prevCC
                          , i = this.textTracks
                          , a = this.vttCCs;
                        a[e.cc] || (a[e.cc] = {
                            start: e.start,
                            prevCC: r,
                            new: !0
                        },
                        this.prevCC = e.cc),
                        Nt.parse(t, this.initPTS[e.cc], a, e.cc, (function(t) {
                            var r = i[e.level];
                            "disabled" !== r.mode ? (t.forEach((function(e) {
                                if (!r.cues.getCueById(e.id))
                                    try {
                                        if (r.addCue(e),
                                        !r.cues.getCueById(e.id))
                                            throw new Error("addCue is failed for: " + e)
                                    } catch (n) {
                                        c.logger.debug("Failed occurred on adding cues: " + n);
                                        var t = new window.TextTrackCue(e.startTime,e.endTime,e.text);
                                        t.id = e.id,
                                        r.addCue(t)
                                    }
                            }
                            )),
                            n.trigger(u.default.SUBTITLE_FRAG_PROCESSED, {
                                success: !0,
                                frag: e
                            })) : n.trigger(u.default.SUBTITLE_FRAG_PROCESSED, {
                                success: !1,
                                frag: e
                            })
                        }
                        ), (function(t) {
                            c.logger.log("Failed to parse VTT cue: " + t),
                            n.trigger(u.default.SUBTITLE_FRAG_PROCESSED, {
                                success: !1,
                                frag: e
                            })
                        }
                        ))
                    }
                    ,
                    i.onFragDecrypted = function(e) {
                        var t = e.frag
                          , n = e.payload;
                        if ("subtitle" === t.type) {
                            if (!Object(l.isFiniteNumber)(this.initPTS[t.cc]))
                                return void this.unparsedVttFrags.push(e);
                            this._parseVTTs(t, n)
                        }
                    }
                    ,
                    i.onFragParsingUserdata = function(e) {
                        if (this.enabled && this.cea608Parser)
                            for (var t = 0; t < e.samples.length; t++) {
                                var n = e.samples[t].bytes;
                                if (n) {
                                    var r = this.extractCea608Data(n);
                                    this.cea608Parser.addData(e.samples[t].pts, r)
                                }
                            }
                    }
                    ,
                    i.extractCea608Data = function(e) {
                        for (var t, n, r, i = 31 & e[0], a = 2, o = [], s = 0; s < i; s++)
                            t = e[a++],
                            n = 127 & e[a++],
                            r = 127 & e[a++],
                            0 === n && 0 === r || 0 != (4 & t) && 0 == (3 & t) && (o.push(n),
                            o.push(r));
                        return o
                    }
                    ,
                    r
                }(d);
                function zt(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                function Gt(e) {
                    for (var t = [], n = 0; n < e.length; n++) {
                        var r = e[n];
                        "subtitles" === r.kind && r.label && t.push(e[n])
                    }
                    return t
                }
                var Ht, jt = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        return (n = e.call(this, t, u.default.MEDIA_ATTACHED, u.default.MEDIA_DETACHING, u.default.MANIFEST_LOADED, u.default.SUBTITLE_TRACK_LOADED) || this).tracks = [],
                        n.trackId = -1,
                        n.media = null,
                        n.stopped = !0,
                        n.subtitleDisplay = !0,
                        n.queuedDefaultTrack = null,
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i, a, o, s = r.prototype;
                    return s.destroy = function() {
                        d.prototype.destroy.call(this)
                    }
                    ,
                    s.onMediaAttached = function(e) {
                        var t = this;
                        this.media = e.media,
                        this.media && (Object(l.isFiniteNumber)(this.queuedDefaultTrack) && (this.subtitleTrack = this.queuedDefaultTrack,
                        this.queuedDefaultTrack = null),
                        this.trackChangeListener = this._onTextTracksChanged.bind(this),
                        this.useTextTrackPolling = !(this.media.textTracks && "onchange"in this.media.textTracks),
                        this.useTextTrackPolling ? this.subtitlePollingInterval = setInterval((function() {
                            t.trackChangeListener()
                        }
                        ), 500) : this.media.textTracks.addEventListener("change", this.trackChangeListener))
                    }
                    ,
                    s.onMediaDetaching = function() {
                        this.media && (this.useTextTrackPolling ? clearInterval(this.subtitlePollingInterval) : this.media.textTracks.removeEventListener("change", this.trackChangeListener),
                        Object(l.isFiniteNumber)(this.subtitleTrack) && (this.queuedDefaultTrack = this.subtitleTrack),
                        Gt(this.media.textTracks).forEach((function(e) {
                            Ue(e)
                        }
                        )),
                        this.subtitleTrack = -1,
                        this.media = null)
                    }
                    ,
                    s.onManifestLoaded = function(e) {
                        var t = this
                          , n = e.subtitles || [];
                        this.tracks = n,
                        this.hls.trigger(u.default.SUBTITLE_TRACKS_UPDATED, {
                            subtitleTracks: n
                        }),
                        n.forEach((function(e) {
                            e.default && (t.media ? t.subtitleTrack = e.id : t.queuedDefaultTrack = e.id)
                        }
                        ))
                    }
                    ,
                    s.onSubtitleTrackLoaded = function(e) {
                        var t = this
                          , n = e.id
                          , r = e.details
                          , i = this.trackId
                          , a = this.tracks
                          , o = a[i];
                        if (n >= a.length || n !== i || !o || this.stopped)
                            this._clearReloadTimer();
                        else if (c.logger.log("subtitle track " + n + " loaded"),
                        r.live) {
                            var s = ie(o.details, r, e.stats.trequest);
                            c.logger.log("Reloading live subtitle playlist in " + s + "ms"),
                            this.timer = setTimeout((function() {
                                t._loadCurrentTrack()
                            }
                            ), s)
                        } else
                            this._clearReloadTimer()
                    }
                    ,
                    s.startLoad = function() {
                        this.stopped = !1,
                        this._loadCurrentTrack()
                    }
                    ,
                    s.stopLoad = function() {
                        this.stopped = !0,
                        this._clearReloadTimer()
                    }
                    ,
                    s._clearReloadTimer = function() {
                        this.timer && (clearTimeout(this.timer),
                        this.timer = null)
                    }
                    ,
                    s._loadCurrentTrack = function() {
                        var e = this.trackId
                          , t = this.tracks
                          , n = this.hls
                          , r = t[e];
                        e < 0 || !r || r.details && !r.details.live || (c.logger.log("Loading subtitle track " + e),
                        n.trigger(u.default.SUBTITLE_TRACK_LOADING, {
                            url: r.url,
                            id: e
                        }))
                    }
                    ,
                    s._toggleTrackModes = function(e) {
                        var t = this.media
                          , n = this.subtitleDisplay
                          , r = this.trackId;
                        if (t) {
                            var i = Gt(t.textTracks);
                            if (-1 === e)
                                [].slice.call(i).forEach((function(e) {
                                    e.mode = "disabled"
                                }
                                ));
                            else {
                                var a = i[r];
                                a && (a.mode = "disabled")
                            }
                            var o = i[e];
                            o && (o.mode = n ? "showing" : "hidden")
                        }
                    }
                    ,
                    s._setSubtitleTrackInternal = function(e) {
                        var t = this.hls
                          , n = this.tracks;
                        !Object(l.isFiniteNumber)(e) || e < -1 || e >= n.length || (this.trackId = e,
                        c.logger.log("Switching to subtitle track " + e),
                        t.trigger(u.default.SUBTITLE_TRACK_SWITCH, {
                            id: e
                        }),
                        this._loadCurrentTrack())
                    }
                    ,
                    s._onTextTracksChanged = function() {
                        if (this.media) {
                            for (var e = -1, t = Gt(this.media.textTracks), n = 0; n < t.length; n++)
                                if ("hidden" === t[n].mode)
                                    e = n;
                                else if ("showing" === t[n].mode) {
                                    e = n;
                                    break
                                }
                            this.subtitleTrack = e
                        }
                    }
                    ,
                    i = r,
                    (a = [{
                        key: "subtitleTracks",
                        get: function() {
                            return this.tracks
                        }
                    }, {
                        key: "subtitleTrack",
                        get: function() {
                            return this.trackId
                        },
                        set: function(e) {
                            this.trackId !== e && (this._toggleTrackModes(e),
                            this._setSubtitleTrackInternal(e))
                        }
                    }]) && zt(i.prototype, a),
                    o && zt(i, o),
                    r
                }(d), Vt = n("./src/crypt/decrypter.js"), Wt = window.performance, qt = function(e) {
                    var t, n;
                    function r(t, n) {
                        var r;
                        return (r = e.call(this, t, u.default.MEDIA_ATTACHED, u.default.MEDIA_DETACHING, u.default.ERROR, u.default.KEY_LOADED, u.default.FRAG_LOADED, u.default.SUBTITLE_TRACKS_UPDATED, u.default.SUBTITLE_TRACK_SWITCH, u.default.SUBTITLE_TRACK_LOADED, u.default.SUBTITLE_FRAG_PROCESSED, u.default.LEVEL_UPDATED) || this).fragmentTracker = n,
                        r.config = t.config,
                        r.state = me,
                        r.tracks = [],
                        r.tracksBuffered = [],
                        r.currentTrackId = -1,
                        r.decrypter = new Vt.default(t,t.config),
                        r.lastAVStart = 0,
                        r._onMediaSeeking = r.onMediaSeeking.bind(function(e) {
                            if (void 0 === e)
                                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return e
                        }(r)),
                        r
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i = r.prototype;
                    return i.onSubtitleFragProcessed = function(e) {
                        var t = e.frag
                          , n = e.success;
                        if (this.fragPrevious = t,
                        this.state = ve,
                        n) {
                            var r = this.tracksBuffered[this.currentTrackId];
                            if (r) {
                                for (var i, a = t.start, o = 0; o < r.length; o++)
                                    if (a >= r[o].start && a <= r[o].end) {
                                        i = r[o];
                                        break
                                    }
                                var s = t.start + t.duration;
                                i ? i.end = s : (i = {
                                    start: a,
                                    end: s
                                },
                                r.push(i))
                            }
                        }
                    }
                    ,
                    i.onMediaAttached = function(e) {
                        var t = e.media;
                        this.media = t,
                        t.addEventListener("seeking", this._onMediaSeeking),
                        this.state = ve
                    }
                    ,
                    i.onMediaDetaching = function() {
                        var e = this;
                        this.media && (this.media.removeEventListener("seeking", this._onMediaSeeking),
                        this.fragmentTracker.removeAllFragments(),
                        this.currentTrackId = -1,
                        this.tracks.forEach((function(t) {
                            e.tracksBuffered[t.id] = []
                        }
                        )),
                        this.media = null,
                        this.state = me)
                    }
                    ,
                    i.onError = function(e) {
                        var t = e.frag;
                        t && "subtitle" === t.type && (this.state = ve)
                    }
                    ,
                    i.onSubtitleTracksUpdated = function(e) {
                        var t = this;
                        c.logger.log("subtitle tracks updated"),
                        this.tracksBuffered = [],
                        this.tracks = e.subtitleTracks,
                        this.tracks.forEach((function(e) {
                            t.tracksBuffered[e.id] = []
                        }
                        ))
                    }
                    ,
                    i.onSubtitleTrackSwitch = function(e) {
                        if (this.currentTrackId = e.id,
                        this.tracks && this.tracks.length && -1 !== this.currentTrackId) {
                            var t = this.tracks[this.currentTrackId];
                            t && t.details && this.setInterval(500)
                        } else
                            this.clearInterval()
                    }
                    ,
                    i.onSubtitleTrackLoaded = function(e) {
                        var t = e.id
                          , n = e.details
                          , r = this.currentTrackId
                          , i = this.tracks
                          , a = i[r];
                        t >= i.length || t !== r || !a || (n.live && function(e, t, n) {
                            void 0 === n && (n = 0);
                            var r = -1;
                            re(e, t, (function(e, t, n) {
                                t.start = e.start,
                                r = n
                            }
                            ));
                            var i = t.fragments;
                            if (r < 0)
                                i.forEach((function(e) {
                                    e.start += n
                                }
                                ));
                            else
                                for (var a = r + 1; a < i.length; a++)
                                    i[a].start = i[a - 1].start + i[a - 1].duration
                        }(a.details, n, this.lastAVStart),
                        a.details = n,
                        this.setInterval(500))
                    }
                    ,
                    i.onKeyLoaded = function() {
                        this.state === be && (this.state = ve)
                    }
                    ,
                    i.onFragLoaded = function(e) {
                        var t = this.fragCurrent
                          , n = e.frag.decryptdata
                          , r = e.frag
                          , i = this.hls;
                        if (this.state === xe && t && "subtitle" === e.frag.type && t.sn === e.frag.sn && e.payload.byteLength > 0 && n && n.key && "AES-128" === n.method) {
                            var a = Wt.now();
                            this.decrypter.decrypt(e.payload, n.key.buffer, n.iv.buffer, (function(e) {
                                var t = Wt.now();
                                i.trigger(u.default.FRAG_DECRYPTED, {
                                    frag: r,
                                    payload: e,
                                    stats: {
                                        tstart: a,
                                        tdecrypt: t
                                    }
                                })
                            }
                            ))
                        }
                    }
                    ,
                    i.onLevelUpdated = function(e) {
                        var t = e.details.fragments;
                        this.lastAVStart = t.length ? t[0].start : 0
                    }
                    ,
                    i.doTick = function() {
                        if (this.media)
                            switch (this.state) {
                            case ve:
                                var e = this.config
                                  , t = this.currentTrackId
                                  , n = this.fragmentTracker
                                  , r = this.media
                                  , i = this.tracks;
                                if (!i || !i[t] || !i[t].details)
                                    break;
                                var a, o = e.maxBufferHole, s = e.maxFragLookUpTolerance, l = Math.min(e.maxBufferLength, e.maxMaxBufferLength), h = j.bufferedInfo(this._getBuffered(), r.currentTime, o), d = h.end, f = h.len, p = i[t].details, m = p.fragments, g = m.length, v = m[g - 1].start + m[g - 1].duration;
                                if (f > l)
                                    return;
                                var y = this.fragPrevious;
                                d < v ? (y && p.hasProgramDateTime && (a = le(m, y.endProgramDateTime, s)),
                                a || (a = ue(y, m, d, s))) : a = m[g - 1],
                                a && a.encrypted ? (c.logger.log("Loading key for " + a.sn),
                                this.state = be,
                                this.hls.trigger(u.default.KEY_LOADING, {
                                    frag: a
                                })) : a && n.getState(a) === F && (this.fragCurrent = a,
                                this.state = xe,
                                this.hls.trigger(u.default.FRAG_LOADING, {
                                    frag: a
                                }))
                            }
                        else
                            this.state = ve
                    }
                    ,
                    i.stopLoad = function() {
                        this.lastAVStart = 0,
                        e.prototype.stopLoad.call(this)
                    }
                    ,
                    i._getBuffered = function() {
                        return this.tracksBuffered[this.currentTrackId] || []
                    }
                    ,
                    i.onMediaSeeking = function() {
                        this.fragPrevious = null
                    }
                    ,
                    r
                }(Ce);
                !function(e) {
                    e.WIDEVINE = "com.widevine.alpha",
                    e.PLAYREADY = "com.microsoft.playready"
                }(Ht || (Ht = {}));
                var Kt = "undefined" != typeof window && window.navigator && window.navigator.requestMediaKeySystemAccess ? window.navigator.requestMediaKeySystemAccess.bind(window.navigator) : null;
                function Yt(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                var Xt = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        return (n = e.call(this, t, u.default.MEDIA_ATTACHED, u.default.MEDIA_DETACHED, u.default.MANIFEST_PARSED) || this)._widevineLicenseUrl = void 0,
                        n._licenseXhrSetup = void 0,
                        n._emeEnabled = void 0,
                        n._requestMediaKeySystemAccess = void 0,
                        n._config = void 0,
                        n._mediaKeysList = [],
                        n._media = null,
                        n._hasSetMediaKeys = !1,
                        n._requestLicenseFailureCount = 0,
                        n._onMediaEncrypted = function(e) {
                            c.logger.log('Media is encrypted using "' + e.initDataType + '" init data type'),
                            n._attemptSetMediaKeys(),
                            n._generateRequestWithPreferredKeySession(e.initDataType, e.initData)
                        }
                        ,
                        n._config = t.config,
                        n._widevineLicenseUrl = n._config.widevineLicenseUrl,
                        n._licenseXhrSetup = n._config.licenseXhrSetup,
                        n._emeEnabled = n._config.emeEnabled,
                        n._requestMediaKeySystemAccess = n._config.requestMediaKeySystemAccessFunc,
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n;
                    var i, a, o, l = r.prototype;
                    return l.getLicenseServerUrl = function(e) {
                        switch (e) {
                        case Ht.WIDEVINE:
                            if (!this._widevineLicenseUrl)
                                break;
                            return this._widevineLicenseUrl
                        }
                        throw new Error('no license server URL configured for key-system "' + e + '"')
                    }
                    ,
                    l._attemptKeySystemAccess = function(e, t, n) {
                        var r = this
                          , i = function(e, t, n) {
                            switch (e) {
                            case Ht.WIDEVINE:
                                return function(e, t) {
                                    var n = {
                                        videoCapabilities: []
                                    };
                                    return t.forEach((function(e) {
                                        n.videoCapabilities.push({
                                            contentType: 'video/mp4; codecs="' + e + '"'
                                        })
                                    }
                                    )),
                                    [n]
                                }(0, n);
                            default:
                                throw new Error("Unknown key-system: " + e)
                            }
                        }(e, 0, n);
                        c.logger.log("Requesting encrypted media key-system access"),
                        this.requestMediaKeySystemAccess(e, i).then((function(t) {
                            r._onMediaKeySystemAccessObtained(e, t)
                        }
                        )).catch((function(t) {
                            c.logger.error('Failed to obtain key-system "' + e + '" access:', t)
                        }
                        ))
                    }
                    ,
                    l._onMediaKeySystemAccessObtained = function(e, t) {
                        var n = this;
                        c.logger.log('Access for key-system "' + e + '" obtained');
                        var r = {
                            mediaKeysSessionInitialized: !1,
                            mediaKeySystemAccess: t,
                            mediaKeySystemDomain: e
                        };
                        this._mediaKeysList.push(r),
                        t.createMediaKeys().then((function(t) {
                            r.mediaKeys = t,
                            c.logger.log('Media-keys created for key-system "' + e + '"'),
                            n._onMediaKeysCreated()
                        }
                        )).catch((function(e) {
                            c.logger.error("Failed to create media-keys:", e)
                        }
                        ))
                    }
                    ,
                    l._onMediaKeysCreated = function() {
                        var e = this;
                        this._mediaKeysList.forEach((function(t) {
                            t.mediaKeysSession || (t.mediaKeysSession = t.mediaKeys.createSession(),
                            e._onNewMediaKeySession(t.mediaKeysSession))
                        }
                        ))
                    }
                    ,
                    l._onNewMediaKeySession = function(e) {
                        var t = this;
                        c.logger.log("New key-system session " + e.sessionId),
                        e.addEventListener("message", (function(n) {
                            t._onKeySessionMessage(e, n.message)
                        }
                        ), !1)
                    }
                    ,
                    l._onKeySessionMessage = function(e, t) {
                        c.logger.log("Got EME message event, creating license request"),
                        this._requestLicense(t, (function(t) {
                            c.logger.log("Received license data (length: " + (t ? t.byteLength : t) + "), updating key-session"),
                            e.update(t)
                        }
                        ))
                    }
                    ,
                    l._attemptSetMediaKeys = function() {
                        if (!this._media)
                            throw new Error("Attempted to set mediaKeys without first attaching a media element");
                        if (!this._hasSetMediaKeys) {
                            var e = this._mediaKeysList[0];
                            if (!e || !e.mediaKeys)
                                return c.logger.error("Fatal: Media is encrypted but no CDM access or no keys have been obtained yet"),
                                void this.hls.trigger(u.default.ERROR, {
                                    type: s.ErrorTypes.KEY_SYSTEM_ERROR,
                                    details: s.ErrorDetails.KEY_SYSTEM_NO_KEYS,
                                    fatal: !0
                                });
                            c.logger.log("Setting keys for encrypted media"),
                            this._media.setMediaKeys(e.mediaKeys),
                            this._hasSetMediaKeys = !0
                        }
                    }
                    ,
                    l._generateRequestWithPreferredKeySession = function(e, t) {
                        var n = this
                          , r = this._mediaKeysList[0];
                        if (!r)
                            return c.logger.error("Fatal: Media is encrypted but not any key-system access has been obtained yet"),
                            void this.hls.trigger(u.default.ERROR, {
                                type: s.ErrorTypes.KEY_SYSTEM_ERROR,
                                details: s.ErrorDetails.KEY_SYSTEM_NO_ACCESS,
                                fatal: !0
                            });
                        if (r.mediaKeysSessionInitialized)
                            c.logger.warn("Key-Session already initialized but requested again");
                        else {
                            var i = r.mediaKeysSession;
                            if (!i)
                                return c.logger.error("Fatal: Media is encrypted but no key-session existing"),
                                void this.hls.trigger(u.default.ERROR, {
                                    type: s.ErrorTypes.KEY_SYSTEM_ERROR,
                                    details: s.ErrorDetails.KEY_SYSTEM_NO_SESSION,
                                    fatal: !0
                                });
                            if (!t)
                                return c.logger.warn("Fatal: initData required for generating a key session is null"),
                                void this.hls.trigger(u.default.ERROR, {
                                    type: s.ErrorTypes.KEY_SYSTEM_ERROR,
                                    details: s.ErrorDetails.KEY_SYSTEM_NO_INIT_DATA,
                                    fatal: !0
                                });
                            c.logger.log('Generating key-session request for "' + e + '" init data type'),
                            r.mediaKeysSessionInitialized = !0,
                            i.generateRequest(e, t).then((function() {
                                c.logger.debug("Key-session generation succeeded")
                            }
                            )).catch((function(e) {
                                c.logger.error("Error generating key-session request:", e),
                                n.hls.trigger(u.default.ERROR, {
                                    type: s.ErrorTypes.KEY_SYSTEM_ERROR,
                                    details: s.ErrorDetails.KEY_SYSTEM_NO_SESSION,
                                    fatal: !1
                                })
                            }
                            ))
                        }
                    }
                    ,
                    l._createLicenseXhr = function(e, t, n) {
                        var r = new XMLHttpRequest
                          , i = this._licenseXhrSetup;
                        try {
                            if (i)
                                try {
                                    i(r, e)
                                } catch (t) {
                                    r.open("POST", e, !0),
                                    i(r, e)
                                }
                            r.readyState || r.open("POST", e, !0)
                        } catch (e) {
                            throw new Error("issue setting up KeySystem license XHR " + e)
                        }
                        return r.responseType = "arraybuffer",
                        r.onreadystatechange = this._onLicenseRequestReadyStageChange.bind(this, r, e, t, n),
                        r
                    }
                    ,
                    l._onLicenseRequestReadyStageChange = function(e, t, n, r) {
                        switch (e.readyState) {
                        case 4:
                            if (200 === e.status)
                                this._requestLicenseFailureCount = 0,
                                c.logger.log("License request succeeded"),
                                "arraybuffer" !== e.responseType && c.logger.warn("xhr response type was not set to the expected arraybuffer for license request"),
                                r(e.response);
                            else {
                                if (c.logger.error("License Request XHR failed (" + t + "). Status: " + e.status + " (" + e.statusText + ")"),
                                this._requestLicenseFailureCount++,
                                this._requestLicenseFailureCount > 3)
                                    return void this.hls.trigger(u.default.ERROR, {
                                        type: s.ErrorTypes.KEY_SYSTEM_ERROR,
                                        details: s.ErrorDetails.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                        fatal: !0
                                    });
                                var i = 3 - this._requestLicenseFailureCount + 1;
                                c.logger.warn("Retrying license request, " + i + " attempts left"),
                                this._requestLicense(n, r)
                            }
                        }
                    }
                    ,
                    l._generateLicenseRequestChallenge = function(e, t) {
                        switch (e.mediaKeySystemDomain) {
                        case Ht.WIDEVINE:
                            return t
                        }
                        throw new Error("unsupported key-system: " + e.mediaKeySystemDomain)
                    }
                    ,
                    l._requestLicense = function(e, t) {
                        c.logger.log("Requesting content license for key-system");
                        var n = this._mediaKeysList[0];
                        if (!n)
                            return c.logger.error("Fatal error: Media is encrypted but no key-system access has been obtained yet"),
                            void this.hls.trigger(u.default.ERROR, {
                                type: s.ErrorTypes.KEY_SYSTEM_ERROR,
                                details: s.ErrorDetails.KEY_SYSTEM_NO_ACCESS,
                                fatal: !0
                            });
                        try {
                            var r = this.getLicenseServerUrl(n.mediaKeySystemDomain)
                              , i = this._createLicenseXhr(r, e, t);
                            c.logger.log("Sending license request to URL: " + r);
                            var a = this._generateLicenseRequestChallenge(n, e);
                            i.send(a)
                        } catch (e) {
                            c.logger.error("Failure requesting DRM license: " + e),
                            this.hls.trigger(u.default.ERROR, {
                                type: s.ErrorTypes.KEY_SYSTEM_ERROR,
                                details: s.ErrorDetails.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                fatal: !0
                            })
                        }
                    }
                    ,
                    l.onMediaAttached = function(e) {
                        if (this._emeEnabled) {
                            var t = e.media;
                            this._media = t,
                            t.addEventListener("encrypted", this._onMediaEncrypted)
                        }
                    }
                    ,
                    l.onMediaDetached = function() {
                        this._media && (this._media.removeEventListener("encrypted", this._onMediaEncrypted),
                        this._media = null)
                    }
                    ,
                    l.onManifestParsed = function(e) {
                        if (this._emeEnabled) {
                            var t = e.levels.map((function(e) {
                                return e.audioCodec
                            }
                            ))
                              , n = e.levels.map((function(e) {
                                return e.videoCodec
                            }
                            ));
                            this._attemptKeySystemAccess(Ht.WIDEVINE, t, n)
                        }
                    }
                    ,
                    i = r,
                    (a = [{
                        key: "requestMediaKeySystemAccess",
                        get: function() {
                            if (!this._requestMediaKeySystemAccess)
                                throw new Error("No requestMediaKeySystemAccess function configured");
                            return this._requestMediaKeySystemAccess
                        }
                    }]) && Yt(i.prototype, a),
                    o && Yt(i, o),
                    r
                }(d);
                function Zt(e, t, n) {
                    return t in e ? Object.defineProperty(e, t, {
                        value: n,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : e[t] = n,
                    e
                }
                var Jt = function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = null != arguments[t] ? arguments[t] : {}
                          , r = Object.keys(n);
                        "function" == typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(e) {
                            return Object.getOwnPropertyDescriptor(n, e).enumerable
                        }
                        )))),
                        r.forEach((function(t) {
                            Zt(e, t, n[t])
                        }
                        ))
                    }
                    return e
                }({
                    autoStartLoad: !0,
                    startPosition: -1,
                    defaultAudioCodec: void 0,
                    debug: !1,
                    capLevelOnFPSDrop: !1,
                    capLevelToPlayerSize: !1,
                    initialLiveManifestSize: 1,
                    maxBufferLength: 30,
                    maxBufferSize: 6e7,
                    maxBufferHole: .5,
                    lowBufferWatchdogPeriod: .5,
                    highBufferWatchdogPeriod: 3,
                    nudgeOffset: .1,
                    nudgeMaxRetry: 3,
                    maxFragLookUpTolerance: .25,
                    liveSyncDurationCount: 3,
                    liveMaxLatencyDurationCount: 1 / 0,
                    liveSyncDuration: void 0,
                    liveMaxLatencyDuration: void 0,
                    liveDurationInfinity: !1,
                    liveBackBufferLength: 1 / 0,
                    maxMaxBufferLength: 600,
                    enableWorker: !0,
                    enableSoftwareAES: !0,
                    manifestLoadingTimeOut: 1e4,
                    manifestLoadingMaxRetry: 1,
                    manifestLoadingRetryDelay: 1e3,
                    manifestLoadingMaxRetryTimeout: 64e3,
                    startLevel: void 0,
                    levelLoadingTimeOut: 1e4,
                    levelLoadingMaxRetry: 4,
                    levelLoadingRetryDelay: 1e3,
                    levelLoadingMaxRetryTimeout: 64e3,
                    fragLoadingTimeOut: 2e4,
                    fragLoadingMaxRetry: 6,
                    fragLoadingRetryDelay: 1e3,
                    fragLoadingMaxRetryTimeout: 64e3,
                    startFragPrefetch: !1,
                    fpsDroppedMonitoringPeriod: 5e3,
                    fpsDroppedMonitoringThreshold: .2,
                    appendErrorMaxRetry: 3,
                    loader: et,
                    fLoader: void 0,
                    pLoader: void 0,
                    xhrSetup: void 0,
                    licenseXhrSetup: void 0,
                    abrController: Ve,
                    bufferController: qe,
                    capLevelController: Ye,
                    fpsController: Ze,
                    stretchShortVideoTrack: !1,
                    maxAudioFramesDrift: 1,
                    forceKeyFrameOnDiscontinuity: !0,
                    abrEwmaFastLive: 3,
                    abrEwmaSlowLive: 9,
                    abrEwmaFastVoD: 3,
                    abrEwmaSlowVoD: 9,
                    abrEwmaDefaultEstimate: 5e5,
                    abrBandWidthFactor: .95,
                    abrBandWidthUpFactor: .7,
                    abrMaxWithRealBitrate: !1,
                    maxStarvationDelay: 4,
                    maxLoadingDelay: 4,
                    minAutoBitrate: 0,
                    emeEnabled: !1,
                    widevineLicenseUrl: void 0,
                    requestMediaKeySystemAccessFunc: Kt
                }, {
                    cueHandler: r,
                    enableCEA708Captions: !0,
                    enableWebVTT: !0,
                    captionsTextTrack1Label: "English",
                    captionsTextTrack1LanguageCode: "en",
                    captionsTextTrack2Label: "Spanish",
                    captionsTextTrack2LanguageCode: "es"
                }, {
                    subtitleStreamController: qt,
                    subtitleTrackController: jt,
                    timelineController: Bt,
                    audioStreamController: at,
                    audioTrackController: nt,
                    emeController: Xt
                });
                function Qt(e, t, n) {
                    return t in e ? Object.defineProperty(e, t, {
                        value: n,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : e[t] = n,
                    e
                }
                function $t(e) {
                    if (void 0 === e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return e
                }
                function en(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                function tn(e, t, n) {
                    return t && en(e.prototype, t),
                    n && en(e, n),
                    e
                }
                n.d(t, "default", (function() {
                    return nn
                }
                ));
                var nn = function(e) {
                    var t, n;
                    function r(t) {
                        var n;
                        void 0 === t && (t = {}),
                        (n = e.call(this) || this).config = void 0,
                        n._autoLevelCapping = void 0,
                        n.abrController = void 0,
                        n.capLevelController = void 0,
                        n.levelController = void 0,
                        n.streamController = void 0,
                        n.networkControllers = void 0,
                        n.audioTrackController = void 0,
                        n.subtitleTrackController = void 0,
                        n.emeController = void 0,
                        n.coreComponents = void 0,
                        n.media = null,
                        n.url = null;
                        var i = r.DefaultConfig;
                        if ((t.liveSyncDurationCount || t.liveMaxLatencyDurationCount) && (t.liveSyncDuration || t.liveMaxLatencyDuration))
                            throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration");
                        n.config = function(e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var n = null != arguments[t] ? arguments[t] : {}
                                  , r = Object.keys(n);
                                "function" == typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(e) {
                                    return Object.getOwnPropertyDescriptor(n, e).enumerable
                                }
                                )))),
                                r.forEach((function(t) {
                                    Qt(e, t, n[t])
                                }
                                ))
                            }
                            return e
                        }({}, i, t);
                        var a = $t(n).config;
                        if (void 0 !== a.liveMaxLatencyDurationCount && a.liveMaxLatencyDurationCount <= a.liveSyncDurationCount)
                            throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be gt "liveSyncDurationCount"');
                        if (void 0 !== a.liveMaxLatencyDuration && (void 0 === a.liveSyncDuration || a.liveMaxLatencyDuration <= a.liveSyncDuration))
                            throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be gt "liveSyncDuration"');
                        Object(c.enableLogs)(a.debug),
                        n._autoLevelCapping = -1;
                        var o = n.abrController = new a.abrController($t(n))
                          , s = new a.bufferController($t(n))
                          , l = n.capLevelController = new a.capLevelController($t(n))
                          , u = new a.fpsController($t(n))
                          , h = new D($t(n))
                          , d = new I($t(n))
                          , f = new N($t(n))
                          , p = new Be($t(n))
                          , m = n.levelController = new Ie($t(n))
                          , g = new G($t(n))
                          , v = [m, n.streamController = new Oe($t(n),g)]
                          , y = a.audioStreamController;
                        y && v.push(new y($t(n),g)),
                        n.networkControllers = v;
                        var b = [h, d, f, o, s, l, u, p, g];
                        if (y = a.audioTrackController) {
                            var x = new y($t(n));
                            n.audioTrackController = x,
                            b.push(x)
                        }
                        if (y = a.subtitleTrackController) {
                            var w = new y($t(n));
                            n.subtitleTrackController = w,
                            v.push(w)
                        }
                        if (y = a.emeController) {
                            var _ = new y($t(n));
                            n.emeController = _,
                            b.push(_)
                        }
                        return (y = a.subtitleStreamController) && v.push(new y($t(n),g)),
                        (y = a.timelineController) && b.push(new y($t(n))),
                        n.coreComponents = b,
                        n
                    }
                    n = e,
                    (t = r).prototype = Object.create(n.prototype),
                    t.prototype.constructor = t,
                    t.__proto__ = n,
                    r.isSupported = function() {
                        return function() {
                            var e = K();
                            if (!e)
                                return !1;
                            var t = self.SourceBuffer || self.WebKitSourceBuffer
                              , n = e && "function" == typeof e.isTypeSupported && e.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"')
                              , r = !t || t.prototype && "function" == typeof t.prototype.appendBuffer && "function" == typeof t.prototype.remove;
                            return !!n && !!r
                        }()
                    }
                    ,
                    tn(r, null, [{
                        key: "version",
                        get: function() {
                            return "0.13.2"
                        }
                    }, {
                        key: "Events",
                        get: function() {
                            return u.default
                        }
                    }, {
                        key: "ErrorTypes",
                        get: function() {
                            return s.ErrorTypes
                        }
                    }, {
                        key: "ErrorDetails",
                        get: function() {
                            return s.ErrorDetails
                        }
                    }, {
                        key: "DefaultConfig",
                        get: function() {
                            return r.defaultConfig ? r.defaultConfig : Jt
                        },
                        set: function(e) {
                            r.defaultConfig = e
                        }
                    }]);
                    var i = r.prototype;
                    return i.destroy = function() {
                        c.logger.log("destroy"),
                        this.trigger(u.default.DESTROYING),
                        this.detachMedia(),
                        this.coreComponents.concat(this.networkControllers).forEach((function(e) {
                            e.destroy()
                        }
                        )),
                        this.url = null,
                        this.removeAllListeners(),
                        this._autoLevelCapping = -1
                    }
                    ,
                    i.attachMedia = function(e) {
                        c.logger.log("attachMedia"),
                        this.media = e,
                        this.trigger(u.default.MEDIA_ATTACHING, {
                            media: e
                        })
                    }
                    ,
                    i.detachMedia = function() {
                        c.logger.log("detachMedia"),
                        this.trigger(u.default.MEDIA_DETACHING),
                        this.media = null
                    }
                    ,
                    i.loadSource = function(e) {
                        e = o.buildAbsoluteURL(window.location.href, e, {
                            alwaysNormalize: !0
                        }),
                        c.logger.log("loadSource:" + e),
                        this.url = e,
                        this.trigger(u.default.MANIFEST_LOADING, {
                            url: e
                        })
                    }
                    ,
                    i.startLoad = function(e) {
                        void 0 === e && (e = -1),
                        c.logger.log("startLoad(" + e + ")"),
                        this.networkControllers.forEach((function(t) {
                            t.startLoad(e)
                        }
                        ))
                    }
                    ,
                    i.stopLoad = function() {
                        c.logger.log("stopLoad"),
                        this.networkControllers.forEach((function(e) {
                            e.stopLoad()
                        }
                        ))
                    }
                    ,
                    i.swapAudioCodec = function() {
                        c.logger.log("swapAudioCodec"),
                        this.streamController.swapAudioCodec()
                    }
                    ,
                    i.recoverMediaError = function() {
                        c.logger.log("recoverMediaError");
                        var e = this.media;
                        this.detachMedia(),
                        e && this.attachMedia(e)
                    }
                    ,
                    tn(r, [{
                        key: "levels",
                        get: function() {
                            return this.levelController.levels
                        }
                    }, {
                        key: "currentLevel",
                        get: function() {
                            return this.streamController.currentLevel
                        },
                        set: function(e) {
                            c.logger.log("set currentLevel:" + e),
                            this.loadLevel = e,
                            this.streamController.immediateLevelSwitch()
                        }
                    }, {
                        key: "nextLevel",
                        get: function() {
                            return this.streamController.nextLevel
                        },
                        set: function(e) {
                            c.logger.log("set nextLevel:" + e),
                            this.levelController.manualLevel = e,
                            this.streamController.nextLevelSwitch()
                        }
                    }, {
                        key: "loadLevel",
                        get: function() {
                            return this.levelController.level
                        },
                        set: function(e) {
                            c.logger.log("set loadLevel:" + e),
                            this.levelController.manualLevel = e
                        }
                    }, {
                        key: "nextLoadLevel",
                        get: function() {
                            return this.levelController.nextLoadLevel
                        },
                        set: function(e) {
                            this.levelController.nextLoadLevel = e
                        }
                    }, {
                        key: "firstLevel",
                        get: function() {
                            return Math.max(this.levelController.firstLevel, this.minAutoLevel)
                        },
                        set: function(e) {
                            c.logger.log("set firstLevel:" + e),
                            this.levelController.firstLevel = e
                        }
                    }, {
                        key: "startLevel",
                        get: function() {
                            return this.levelController.startLevel
                        },
                        set: function(e) {
                            c.logger.log("set startLevel:" + e),
                            -1 !== e && (e = Math.max(e, this.minAutoLevel)),
                            this.levelController.startLevel = e
                        }
                    }, {
                        key: "capLevelToPlayerSize",
                        set: function(e) {
                            var t = !!e;
                            t !== this.config.capLevelToPlayerSize && (t ? this.capLevelController.startCapping() : (this.capLevelController.stopCapping(),
                            this.autoLevelCapping = -1,
                            this.streamController.nextLevelSwitch()),
                            this.config.capLevelToPlayerSize = t)
                        }
                    }, {
                        key: "autoLevelCapping",
                        get: function() {
                            return this._autoLevelCapping
                        },
                        set: function(e) {
                            c.logger.log("set autoLevelCapping:" + e),
                            this._autoLevelCapping = e
                        }
                    }, {
                        key: "bandwidthEstimate",
                        get: function() {
                            var e = this.abrController._bwEstimator;
                            return e ? e.getEstimate() : NaN
                        }
                    }, {
                        key: "autoLevelEnabled",
                        get: function() {
                            return -1 === this.levelController.manualLevel
                        }
                    }, {
                        key: "manualLevel",
                        get: function() {
                            return this.levelController.manualLevel
                        }
                    }, {
                        key: "minAutoLevel",
                        get: function() {
                            for (var e = this.levels, t = this.config.minAutoBitrate, n = e ? e.length : 0, r = 0; r < n; r++)
                                if ((e[r].realBitrate ? Math.max(e[r].realBitrate, e[r].bitrate) : e[r].bitrate) > t)
                                    return r;
                            return 0
                        }
                    }, {
                        key: "maxAutoLevel",
                        get: function() {
                            var e = this.levels
                              , t = this.autoLevelCapping;
                            return -1 === t && e && e.length ? e.length - 1 : t
                        }
                    }, {
                        key: "nextAutoLevel",
                        get: function() {
                            return Math.min(Math.max(this.abrController.nextAutoLevel, this.minAutoLevel), this.maxAutoLevel)
                        },
                        set: function(e) {
                            this.abrController.nextAutoLevel = Math.max(this.minAutoLevel, e)
                        }
                    }, {
                        key: "audioTracks",
                        get: function() {
                            var e = this.audioTrackController;
                            return e ? e.audioTracks : []
                        }
                    }, {
                        key: "audioTrack",
                        get: function() {
                            var e = this.audioTrackController;
                            return e ? e.audioTrack : -1
                        },
                        set: function(e) {
                            var t = this.audioTrackController;
                            t && (t.audioTrack = e)
                        }
                    }, {
                        key: "liveSyncPosition",
                        get: function() {
                            return this.streamController.liveSyncPosition
                        }
                    }, {
                        key: "subtitleTracks",
                        get: function() {
                            var e = this.subtitleTrackController;
                            return e ? e.subtitleTracks : []
                        }
                    }, {
                        key: "subtitleTrack",
                        get: function() {
                            var e = this.subtitleTrackController;
                            return e ? e.subtitleTrack : -1
                        },
                        set: function(e) {
                            var t = this.subtitleTrackController;
                            t && (t.subtitleTrack = e)
                        }
                    }, {
                        key: "subtitleDisplay",
                        get: function() {
                            var e = this.subtitleTrackController;
                            return !!e && e.subtitleDisplay
                        },
                        set: function(e) {
                            var t = this.subtitleTrackController;
                            t && (t.subtitleDisplay = e)
                        }
                    }]),
                    r
                }(X);
                nn.defaultConfig = void 0
            },
            "./src/polyfills/number-isFinite.js": /*!******************************************!*\
  !*** ./src/polyfills/number-isFinite.js ***!
  \******************************************/
            /*! exports provided: isFiniteNumber */
            function(e, t, n) {
                "use strict";
                n.r(t),
                n.d(t, "isFiniteNumber", (function() {
                    return r
                }
                ));
                var r = Number.isFinite || function(e) {
                    return "number" == typeof e && isFinite(e)
                }
            },
            "./src/utils/get-self-scope.js": /*!*************************************!*\
  !*** ./src/utils/get-self-scope.js ***!
  \*************************************/
            /*! exports provided: getSelfScope */
            function(e, t, n) {
                "use strict";
                function r() {
                    return "undefined" == typeof window ? self : window
                }
                n.r(t),
                n.d(t, "getSelfScope", (function() {
                    return r
                }
                ))
            },
            "./src/utils/logger.js": /*!*****************************!*\
  !*** ./src/utils/logger.js ***!
  \*****************************/
            /*! exports provided: enableLogs, logger */
            function(e, t, n) {
                "use strict";
                n.r(t),
                n.d(t, "enableLogs", (function() {
                    return c
                }
                )),
                n.d(t, "logger", (function() {
                    return h
                }
                ));
                var r = n(/*! ./get-self-scope */
                "./src/utils/get-self-scope.js");
                function i() {}
                var a = {
                    trace: i,
                    debug: i,
                    log: i,
                    warn: i,
                    info: i,
                    error: i
                }
                  , o = a;
                function s(e, t) {
                    return t = "[" + e + "] > " + t
                }
                var l = Object(r.getSelfScope)();
                function u(e) {
                    var t = l.console[e];
                    return t ? function() {
                        for (var n = arguments.length, r = new Array(n), i = 0; i < n; i++)
                            r[i] = arguments[i];
                        r[0] && (r[0] = s(e, r[0])),
                        t.apply(l.console, r)
                    }
                    : i
                }
                var c = function(e) {
                    if (l.console && !0 === e || "object" == typeof e) {
                        !function(e) {
                            for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)
                                n[r - 1] = arguments[r];
                            n.forEach((function(t) {
                                o[t] = e[t] ? e[t].bind(e) : u(t)
                            }
                            ))
                        }(e, "debug", "log", "info", "warn", "error");
                        try {
                            o.log()
                        } catch (e) {
                            o = a
                        }
                    } else
                        o = a
                }
                  , h = o
            }
        }).default
    }
    ,
    e.exports = r())
}
, function(e, t, n) {
    "use strict";
    /*
object-assign
(c) Sindre Sorhus
@license MIT
*/
    var r = Object.getOwnPropertySymbols
      , i = Object.prototype.hasOwnProperty
      , a = Object.prototype.propertyIsEnumerable;
    function o(e) {
        if (null == e)
            throw new TypeError("Object.assign cannot be called with null or undefined");
        return Object(e)
    }
    e.exports = function() {
        try {
            if (!Object.assign)
                return !1;
            var e = new String("abc");
            if (e[5] = "de",
            "5" === Object.getOwnPropertyNames(e)[0])
                return !1;
            for (var t = {}, n = 0; n < 10; n++)
                t["_" + String.fromCharCode(n)] = n;
            if ("0123456789" !== Object.getOwnPropertyNames(t).map((function(e) {
                return t[e]
            }
            )).join(""))
                return !1;
            var r = {};
            return "abcdefghijklmnopqrst".split("").forEach((function(e) {
                r[e] = e
            }
            )),
            "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, r)).join("")
        } catch (e) {
            return !1
        }
    }() ? Object.assign : function(e, t) {
        for (var n, s, l = o(e), u = 1; u < arguments.length; u++) {
            for (var c in n = Object(arguments[u]))
                i.call(n, c) && (l[c] = n[c]);
            if (r) {
                s = r(n);
                for (var h = 0; h < s.length; h++)
                    a.call(n, s[h]) && (l[s[h]] = n[s[h]])
            }
        }
        return l
    }
}
, function(e, t, n) {
    "use strict";
    !function e() {
        if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE) {
            0;
            try {
                __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)
            } catch (e) {
                console.error(e)
            }
        }
    }(),
    e.exports = n(17)
}
, function(e, t, n) {
    (function(t, n) {
        e.exports = function() {
            "use strict";
            var e = function() {
                return (e = Object.assign || function(e) {
                    for (var t, n = 1, r = arguments.length; n < r; n++)
                        for (var i in t = arguments[n])
                            Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }
                ).apply(this, arguments)
            };
            function r() {
                for (var e = 0, t = 0, n = arguments.length; t < n; t++)
                    e += arguments[t].length;
                var r = Array(e)
                  , i = 0;
                for (t = 0; t < n; t++)
                    for (var a = arguments[t], o = 0, s = a.length; o < s; o++,
                    i++)
                        r[i] = a[o];
                return r
            }
            var i = Object.keys
              , a = Array.isArray
              , o = "undefined" != typeof self ? self : "undefined" != typeof window ? window : t;
            function s(e, t) {
                return "object" != typeof t || i(t).forEach((function(n) {
                    e[n] = t[n]
                }
                )),
                e
            }
            "undefined" == typeof Promise || o.Promise || (o.Promise = Promise);
            var l = Object.getPrototypeOf
              , u = {}.hasOwnProperty;
            function c(e, t) {
                return u.call(e, t)
            }
            function h(e, t) {
                "function" == typeof t && (t = t(l(e))),
                i(t).forEach((function(n) {
                    f(e, n, t[n])
                }
                ))
            }
            var d = Object.defineProperty;
            function f(e, t, n, r) {
                d(e, t, s(n && c(n, "get") && "function" == typeof n.get ? {
                    get: n.get,
                    set: n.set,
                    configurable: !0
                } : {
                    value: n,
                    configurable: !0,
                    writable: !0
                }, r))
            }
            function p(e) {
                return {
                    from: function(t) {
                        return e.prototype = Object.create(t.prototype),
                        f(e.prototype, "constructor", e),
                        {
                            extend: h.bind(null, e.prototype)
                        }
                    }
                }
            }
            var m = Object.getOwnPropertyDescriptor
              , g = [].slice;
            function v(e, t, n) {
                return g.call(e, t, n)
            }
            function y(e, t) {
                return t(e)
            }
            function b(e) {
                if (!e)
                    throw new Error("Assertion Failed")
            }
            function x(e) {
                o.setImmediate ? n(e) : setTimeout(e, 0)
            }
            function w(e, t) {
                return e.reduce((function(e, n, r) {
                    var i = t(n, r);
                    return i && (e[i[0]] = i[1]),
                    e
                }
                ), {})
            }
            function _(e, t) {
                if (c(e, t))
                    return e[t];
                if (!t)
                    return e;
                if ("string" != typeof t) {
                    for (var n = [], r = 0, i = t.length; r < i; ++r) {
                        var a = _(e, t[r]);
                        n.push(a)
                    }
                    return n
                }
                var o = t.indexOf(".");
                if (-1 !== o) {
                    var s = e[t.substr(0, o)];
                    return void 0 === s ? void 0 : _(s, t.substr(o + 1))
                }
            }
            function E(e, t, n) {
                if (e && void 0 !== t && (!("isFrozen"in Object) || !Object.isFrozen(e)))
                    if ("string" != typeof t && "length"in t) {
                        b("string" != typeof n && "length"in n);
                        for (var r = 0, i = t.length; r < i; ++r)
                            E(e, t[r], n[r])
                    } else {
                        var o, s, l = t.indexOf(".");
                        -1 !== l ? (o = t.substr(0, l),
                        "" === (s = t.substr(l + 1)) ? void 0 === n ? a(e) && !isNaN(parseInt(o)) ? e.splice(o, 1) : delete e[o] : e[o] = n : E(e[o] || (e[o] = {}), s, n)) : void 0 === n ? a(e) && !isNaN(parseInt(t)) ? e.splice(t, 1) : delete e[t] : e[t] = n
                    }
            }
            function T(e) {
                var t = {};
                for (var n in e)
                    c(e, n) && (t[n] = e[n]);
                return t
            }
            var S = [].concat;
            function M(e) {
                return S.apply([], e)
            }
            var A = "Boolean,String,Date,RegExp,Blob,File,FileList,ArrayBuffer,DataView,Uint8ClampedArray,ImageData,Map,Set".split(",").concat(M([8, 16, 32, 64].map((function(e) {
                return ["Int", "Uint", "Float"].map((function(t) {
                    return t + e + "Array"
                }
                ))
            }
            )))).filter((function(e) {
                return o[e]
            }
            ))
              , R = A.map((function(e) {
                return o[e]
            }
            ))
              , L = w(A, (function(e) {
                return [e, !0]
            }
            ));
            function C(e) {
                if (!e || "object" != typeof e)
                    return e;
                var t;
                if (a(e)) {
                    t = [];
                    for (var n = 0, r = e.length; n < r; ++n)
                        t.push(C(e[n]))
                } else if (0 <= R.indexOf(e.constructor))
                    t = e;
                else
                    for (var i in t = e.constructor ? Object.create(e.constructor.prototype) : {},
                    e)
                        c(e, i) && (t[i] = C(e[i]));
                return t
            }
            var P = {}.toString;
            function O(e) {
                return P.call(e).slice(8, -1)
            }
            var k = function(e, t) {
                return "Array" === t ? "" + e.map((function(e) {
                    return k(e, O(e))
                }
                )) : "ArrayBuffer" === t ? "" + new Uint8Array(e) : "Date" === t ? e.getTime() : ArrayBuffer.isView(e) ? "" + new Uint8Array(e.buffer) : e
            };
            function D(e, t, n, r) {
                return n = n || {},
                r = r || "",
                i(e).forEach((function(i) {
                    var a, o, s, l;
                    c(t, i) ? (a = e[i],
                    o = t[i],
                    "object" == typeof a && "object" == typeof o && a && o ? (s = O(a)) === (l = O(o)) ? L[s] ? k(a, s) !== k(o, l) && (n[r + i] = t[i]) : D(a, o, n, r + i + ".") : n[r + i] = t[i] : a !== o && (n[r + i] = t[i])) : n[r + i] = void 0
                }
                )),
                i(t).forEach((function(i) {
                    c(e, i) || (n[r + i] = t[i])
                }
                )),
                n
            }
            var I = "undefined" != typeof Symbol && Symbol.iterator
              , N = I ? function(e) {
                var t;
                return null != e && (t = e[I]) && t.apply(e)
            }
            : function() {
                return null
            }
              , F = {};
            function U(e) {
                var t, n, r, i;
                if (1 === arguments.length) {
                    if (a(e))
                        return e.slice();
                    if (this === F && "string" == typeof e)
                        return [e];
                    if (i = N(e)) {
                        for (n = []; !(r = i.next()).done; )
                            n.push(r.value);
                        return n
                    }
                    if (null == e)
                        return [e];
                    if ("number" != typeof (t = e.length))
                        return [e];
                    for (n = new Array(t); t--; )
                        n[t] = e[t];
                    return n
                }
                for (t = arguments.length,
                n = new Array(t); t--; )
                    n[t] = arguments[t];
                return n
            }
            var B = "undefined" != typeof Symbol ? function(e) {
                return "AsyncFunction" === e[Symbol.toStringTag]
            }
            : function() {
                return !1
            }
              , z = "undefined" != typeof location && /^(http|https):\/\/(localhost|127\.0\.0\.1)/.test(location.href);
            function G(e, t) {
                z = e,
                H = t
            }
            var H = function() {
                return !0
            }
              , j = !new Error("").stack;
            function V() {
                if (j)
                    try {
                        throw new Error
                    } catch (e) {
                        return e
                    }
                return new Error
            }
            function W(e, t) {
                var n = e.stack;
                return n ? (t = t || 0,
                0 === n.indexOf(e.name) && (t += (e.name + e.message).split("\n").length),
                n.split("\n").slice(t).filter(H).map((function(e) {
                    return "\n" + e
                }
                )).join("")) : ""
            }
            var q = ["Unknown", "Constraint", "Data", "TransactionInactive", "ReadOnly", "Version", "NotFound", "InvalidState", "InvalidAccess", "Abort", "Timeout", "QuotaExceeded", "Syntax", "DataClone"]
              , K = ["Modify", "Bulk", "OpenFailed", "VersionChange", "Schema", "Upgrade", "InvalidTable", "MissingAPI", "NoSuchDatabase", "InvalidArgument", "SubTransaction", "Unsupported", "Internal", "DatabaseClosed", "PrematureCommit", "ForeignAwait"].concat(q)
              , Y = {
                VersionChanged: "Database version changed by other database connection",
                DatabaseClosed: "Database has been closed",
                Abort: "Transaction aborted",
                TransactionInactive: "Transaction has already completed or failed"
            };
            function X(e, t) {
                this._e = V(),
                this.name = e,
                this.message = t
            }
            function Z(e, t) {
                return e + ". Errors: " + Object.keys(t).map((function(e) {
                    return t[e].toString()
                }
                )).filter((function(e, t, n) {
                    return n.indexOf(e) === t
                }
                )).join("\n")
            }
            function J(e, t, n, r) {
                this._e = V(),
                this.failures = t,
                this.failedKeys = r,
                this.successCount = n,
                this.message = Z(e, t)
            }
            function Q(e, t) {
                this._e = V(),
                this.name = "BulkError",
                this.failures = t,
                this.message = Z(e, t)
            }
            p(X).from(Error).extend({
                stack: {
                    get: function() {
                        return this._stack || (this._stack = this.name + ": " + this.message + W(this._e, 2))
                    }
                },
                toString: function() {
                    return this.name + ": " + this.message
                }
            }),
            p(J).from(X),
            p(Q).from(X);
            var $ = K.reduce((function(e, t) {
                return e[t] = t + "Error",
                e
            }
            ), {})
              , ee = X
              , te = K.reduce((function(e, t) {
                var n = t + "Error";
                function r(e, r) {
                    this._e = V(),
                    this.name = n,
                    e ? "string" == typeof e ? (this.message = e + (r ? "\n " + r : ""),
                    this.inner = r || null) : "object" == typeof e && (this.message = e.name + " " + e.message,
                    this.inner = e) : (this.message = Y[t] || n,
                    this.inner = null)
                }
                return p(r).from(ee),
                e[t] = r,
                e
            }
            ), {});
            te.Syntax = SyntaxError,
            te.Type = TypeError,
            te.Range = RangeError;
            var ne = q.reduce((function(e, t) {
                return e[t + "Error"] = te[t],
                e
            }
            ), {})
              , re = K.reduce((function(e, t) {
                return -1 === ["Syntax", "Type", "Range"].indexOf(t) && (e[t + "Error"] = te[t]),
                e
            }
            ), {});
            function ie() {}
            function ae(e) {
                return e
            }
            function oe(e, t) {
                return null == e || e === ae ? t : function(n) {
                    return t(e(n))
                }
            }
            function se(e, t) {
                return function() {
                    e.apply(this, arguments),
                    t.apply(this, arguments)
                }
            }
            function le(e, t) {
                return e === ie ? t : function() {
                    var n = e.apply(this, arguments);
                    void 0 !== n && (arguments[0] = n);
                    var r = this.onsuccess
                      , i = this.onerror;
                    this.onsuccess = null,
                    this.onerror = null;
                    var a = t.apply(this, arguments);
                    return r && (this.onsuccess = this.onsuccess ? se(r, this.onsuccess) : r),
                    i && (this.onerror = this.onerror ? se(i, this.onerror) : i),
                    void 0 !== a ? a : n
                }
            }
            function ue(e, t) {
                return e === ie ? t : function() {
                    e.apply(this, arguments);
                    var n = this.onsuccess
                      , r = this.onerror;
                    this.onsuccess = this.onerror = null,
                    t.apply(this, arguments),
                    n && (this.onsuccess = this.onsuccess ? se(n, this.onsuccess) : n),
                    r && (this.onerror = this.onerror ? se(r, this.onerror) : r)
                }
            }
            function ce(e, t) {
                return e === ie ? t : function(n) {
                    var r = e.apply(this, arguments);
                    s(n, r);
                    var i = this.onsuccess
                      , a = this.onerror;
                    this.onsuccess = null,
                    this.onerror = null;
                    var o = t.apply(this, arguments);
                    return i && (this.onsuccess = this.onsuccess ? se(i, this.onsuccess) : i),
                    a && (this.onerror = this.onerror ? se(a, this.onerror) : a),
                    void 0 === r ? void 0 === o ? void 0 : o : s(r, o)
                }
            }
            function he(e, t) {
                return e === ie ? t : function() {
                    return !1 !== t.apply(this, arguments) && e.apply(this, arguments)
                }
            }
            function de(e, t) {
                return e === ie ? t : function() {
                    var n = e.apply(this, arguments);
                    if (n && "function" == typeof n.then) {
                        for (var r = this, i = arguments.length, a = new Array(i); i--; )
                            a[i] = arguments[i];
                        return n.then((function() {
                            return t.apply(r, a)
                        }
                        ))
                    }
                    return t.apply(this, arguments)
                }
            }
            re.ModifyError = J,
            re.DexieError = X,
            re.BulkError = Q;
            var fe = {}
              , pe = "undefined" == typeof Promise ? [] : function() {
                var e = Promise.resolve();
                if ("undefined" == typeof crypto || !crypto.subtle)
                    return [e, e.__proto__, e];
                var t = crypto.subtle.digest("SHA-512", new Uint8Array([0]));
                return [t, t.__proto__, e]
            }()
              , me = pe[0]
              , ge = pe[1]
              , ve = pe[2]
              , ye = ge && ge.then
              , be = me && me.constructor
              , xe = !!ve
              , we = !1
              , _e = ve ? function() {
                ve.then(je)
            }
            : o.setImmediate ? n.bind(null, je) : o.MutationObserver ? function() {
                var e = document.createElement("div");
                new MutationObserver((function() {
                    je(),
                    e = null
                }
                )).observe(e, {
                    attributes: !0
                }),
                e.setAttribute("i", "1")
            }
            : function() {
                setTimeout(je, 0)
            }
              , Ee = function(e, t) {
                Oe.push([e, t]),
                Se && (_e(),
                Se = !1)
            }
              , Te = !0
              , Se = !0
              , Me = []
              , Ae = []
              , Re = null
              , Le = ae
              , Ce = {
                id: "global",
                global: !0,
                ref: 0,
                unhandleds: [],
                onunhandled: dt,
                pgp: !1,
                env: {},
                finalize: function() {
                    this.unhandleds.forEach((function(e) {
                        try {
                            dt(e[0], e[1])
                        } catch (e) {}
                    }
                    ))
                }
            }
              , Pe = Ce
              , Oe = []
              , ke = 0
              , De = [];
            function Ie(e) {
                if ("object" != typeof this)
                    throw new TypeError("Promises must be constructed via new");
                this._listeners = [],
                this.onuncatched = ie,
                this._lib = !1;
                var t = this._PSD = Pe;
                if (z && (this._stackHolder = V(),
                this._prev = null,
                this._numPrev = 0),
                "function" != typeof e) {
                    if (e !== fe)
                        throw new TypeError("Not a function");
                    return this._state = arguments[1],
                    this._value = arguments[2],
                    void (!1 === this._state && Ue(this, this._value))
                }
                this._state = null,
                this._value = null,
                ++t.ref,
                function e(t, n) {
                    try {
                        n((function(n) {
                            if (null === t._state) {
                                if (n === t)
                                    throw new TypeError("A promise cannot be resolved with itself.");
                                var r = t._lib && Ve();
                                n && "function" == typeof n.then ? e(t, (function(e, t) {
                                    n instanceof Ie ? n._then(e, t) : n.then(e, t)
                                }
                                )) : (t._state = !0,
                                t._value = n,
                                Be(t)),
                                r && We()
                            }
                        }
                        ), Ue.bind(null, t))
                    } catch (n) {
                        Ue(t, n)
                    }
                }(this, e)
            }
            var Ne = {
                get: function() {
                    var e = Pe
                      , t = $e;
                    function n(n, r) {
                        var i = this
                          , a = !e.global && (e !== Pe || t !== $e);
                        a && rt();
                        var o = new Ie((function(t, o) {
                            ze(i, new Fe(ut(n, e, a),ut(r, e, a),t,o,e))
                        }
                        ));
                        return z && He(o, this),
                        o
                    }
                    return n.prototype = fe,
                    n
                },
                set: function(e) {
                    f(this, "then", e && e.prototype === fe ? Ne : {
                        get: function() {
                            return e
                        },
                        set: Ne.set
                    })
                }
            };
            function Fe(e, t, n, r, i) {
                this.onFulfilled = "function" == typeof e ? e : null,
                this.onRejected = "function" == typeof t ? t : null,
                this.resolve = n,
                this.reject = r,
                this.psd = i
            }
            function Ue(e, t) {
                var n, r;
                Ae.push(t),
                null === e._state && (n = e._lib && Ve(),
                t = Le(t),
                e._state = !1,
                e._value = t,
                z && null !== t && "object" == typeof t && !t._promise && function(e, t, n) {
                    try {
                        e.apply(null, void 0)
                    } catch (e) {}
                }((function() {
                    var n = function e(t, n) {
                        var r;
                        return m(t, n) || (r = l(t)) && e(r, n)
                    }(t, "stack");
                    t._promise = e,
                    f(t, "stack", {
                        get: function() {
                            return we ? n && (n.get ? n.get.apply(t) : n.value) : e.stack
                        }
                    })
                }
                )),
                r = e,
                Me.some((function(e) {
                    return e._value === r._value
                }
                )) || Me.push(r),
                Be(e),
                n && We())
            }
            function Be(e) {
                var t = e._listeners;
                e._listeners = [];
                for (var n = 0, r = t.length; n < r; ++n)
                    ze(e, t[n]);
                var i = e._PSD;
                --i.ref || i.finalize(),
                0 === ke && (++ke,
                Ee((function() {
                    0 == --ke && qe()
                }
                ), []))
            }
            function ze(e, t) {
                if (null !== e._state) {
                    var n = e._state ? t.onFulfilled : t.onRejected;
                    if (null === n)
                        return (e._state ? t.resolve : t.reject)(e._value);
                    ++t.psd.ref,
                    ++ke,
                    Ee(Ge, [n, e, t])
                } else
                    e._listeners.push(t)
            }
            function Ge(e, t, n) {
                try {
                    var r, i = (Re = t)._value;
                    t._state ? r = e(i) : (Ae.length && (Ae = []),
                    r = e(i),
                    -1 === Ae.indexOf(i) && function(e) {
                        for (var t = Me.length; t; )
                            if (Me[--t]._value === e._value)
                                return Me.splice(t, 1)
                    }(t)),
                    n.resolve(r)
                } catch (e) {
                    n.reject(e)
                } finally {
                    Re = null,
                    0 == --ke && qe(),
                    --n.psd.ref || n.psd.finalize()
                }
            }
            function He(e, t) {
                var n = t ? t._numPrev + 1 : 0;
                n < 100 && (e._prev = t,
                e._numPrev = n)
            }
            function je() {
                Ve() && We()
            }
            function Ve() {
                var e = Te;
                return Se = Te = !1,
                e
            }
            function We() {
                var e, t, n;
                do {
                    for (; 0 < Oe.length; )
                        for (e = Oe,
                        Oe = [],
                        n = e.length,
                        t = 0; t < n; ++t) {
                            var r = e[t];
                            r[0].apply(null, r[1])
                        }
                } while (0 < Oe.length);
                Se = Te = !0
            }
            function qe() {
                var e = Me;
                Me = [],
                e.forEach((function(e) {
                    e._PSD.onunhandled.call(null, e._value, e)
                }
                ));
                for (var t = De.slice(0), n = t.length; n; )
                    t[--n]()
            }
            function Ke(e) {
                return new Ie(fe,!1,e)
            }
            function Ye(e, t) {
                var n = Pe;
                return function() {
                    var r = Ve()
                      , i = Pe;
                    try {
                        return ot(n, !0),
                        e.apply(this, arguments)
                    } catch (r) {
                        t && t(r)
                    } finally {
                        ot(i, !1),
                        r && We()
                    }
                }
            }
            h(Ie.prototype, {
                then: Ne,
                _then: function(e, t) {
                    ze(this, new Fe(null,null,e,t,Pe))
                },
                catch: function(e) {
                    if (1 === arguments.length)
                        return this.then(null, e);
                    var t = e
                      , n = arguments[1];
                    return "function" == typeof t ? this.then(null, (function(e) {
                        return (e instanceof t ? n : Ke)(e)
                    }
                    )) : this.then(null, (function(e) {
                        return (e && e.name === t ? n : Ke)(e)
                    }
                    ))
                },
                finally: function(e) {
                    return this.then((function(t) {
                        return e(),
                        t
                    }
                    ), (function(t) {
                        return e(),
                        Ke(t)
                    }
                    ))
                },
                stack: {
                    get: function() {
                        if (this._stack)
                            return this._stack;
                        try {
                            we = !0;
                            var e = function e(t, n, r) {
                                if (n.length === r)
                                    return n;
                                var i, a, o, s = "";
                                return !1 === t._state && (null != (i = t._value) ? (a = i.name || "Error",
                                o = i.message || i,
                                s = W(i, 0)) : (a = i,
                                o = ""),
                                n.push(a + (o ? ": " + o : "") + s)),
                                z && ((s = W(t._stackHolder, 2)) && -1 === n.indexOf(s) && n.push(s),
                                t._prev && e(t._prev, n, r)),
                                n
                            }(this, [], 20).join("\nFrom previous: ");
                            return null !== this._state && (this._stack = e),
                            e
                        } finally {
                            we = !1
                        }
                    }
                },
                timeout: function(e, t) {
                    var n = this;
                    return e < 1 / 0 ? new Ie((function(r, i) {
                        var a = setTimeout((function() {
                            return i(new te.Timeout(t))
                        }
                        ), e);
                        n.then(r, i).finally(clearTimeout.bind(null, a))
                    }
                    )) : this
                }
            }),
            "undefined" != typeof Symbol && Symbol.toStringTag && f(Ie.prototype, Symbol.toStringTag, "Dexie.Promise"),
            Ce.env = st(),
            h(Ie, {
                all: function() {
                    var e = U.apply(null, arguments).map(it);
                    return new Ie((function(t, n) {
                        0 === e.length && t([]);
                        var r = e.length;
                        e.forEach((function(i, a) {
                            return Ie.resolve(i).then((function(n) {
                                e[a] = n,
                                --r || t(e)
                            }
                            ), n)
                        }
                        ))
                    }
                    ))
                },
                resolve: function(e) {
                    if (e instanceof Ie)
                        return e;
                    if (e && "function" == typeof e.then)
                        return new Ie((function(t, n) {
                            e.then(t, n)
                        }
                        ));
                    var t = new Ie(fe,!0,e);
                    return He(t, Re),
                    t
                },
                reject: Ke,
                race: function() {
                    var e = U.apply(null, arguments).map(it);
                    return new Ie((function(t, n) {
                        e.map((function(e) {
                            return Ie.resolve(e).then(t, n)
                        }
                        ))
                    }
                    ))
                },
                PSD: {
                    get: function() {
                        return Pe
                    },
                    set: function(e) {
                        return Pe = e
                    }
                },
                newPSD: tt,
                usePSD: lt,
                scheduler: {
                    get: function() {
                        return Ee
                    },
                    set: function(e) {
                        Ee = e
                    }
                },
                rejectionMapper: {
                    get: function() {
                        return Le
                    },
                    set: function(e) {
                        Le = e
                    }
                },
                follow: function(e, t) {
                    return new Ie((function(n, r) {
                        return tt((function(t, n) {
                            var r = Pe;
                            r.unhandleds = [],
                            r.onunhandled = n,
                            r.finalize = se((function() {
                                var e, r = this;
                                e = function() {
                                    0 === r.unhandleds.length ? t() : n(r.unhandleds[0])
                                }
                                ,
                                De.push((function t() {
                                    e(),
                                    De.splice(De.indexOf(t), 1)
                                }
                                )),
                                ++ke,
                                Ee((function() {
                                    0 == --ke && qe()
                                }
                                ), [])
                            }
                            ), r.finalize),
                            e()
                        }
                        ), t, n, r)
                    }
                    ))
                }
            }),
            be && (be.allSettled && f(Ie, "allSettled", (function() {
                var e = U.apply(null, arguments).map(it);
                return new Ie((function(t) {
                    0 === e.length && t([]);
                    var n = e.length
                      , r = new Array(n);
                    e.forEach((function(e, i) {
                        return Ie.resolve(e).then((function(e) {
                            return r[i] = {
                                status: "fulfilled",
                                value: e
                            }
                        }
                        ), (function(e) {
                            return r[i] = {
                                status: "rejected",
                                reason: e
                            }
                        }
                        )).then((function() {
                            return --n || t(r)
                        }
                        ))
                    }
                    ))
                }
                ))
            }
            )),
            be.any && "undefined" != typeof AggregateError && f(Ie, "any", (function() {
                var e = U.apply(null, arguments).map(it);
                return new Ie((function(t, n) {
                    0 === e.length && n(new AggregateError([]));
                    var r = e.length
                      , i = new Array(r);
                    e.forEach((function(e, a) {
                        return Ie.resolve(e).then((function(e) {
                            return t(e)
                        }
                        ), (function(e) {
                            i[a] = e,
                            --r || n(new AggregateError(i))
                        }
                        ))
                    }
                    ))
                }
                ))
            }
            )));
            var Xe = {
                awaits: 0,
                echoes: 0,
                id: 0
            }
              , Ze = 0
              , Je = []
              , Qe = 0
              , $e = 0
              , et = 0;
            function tt(e, t, n, r) {
                var i = Pe
                  , a = Object.create(i);
                a.parent = i,
                a.ref = 0,
                a.global = !1,
                a.id = ++et;
                var o = Ce.env;
                a.env = xe ? {
                    Promise: Ie,
                    PromiseProp: {
                        value: Ie,
                        configurable: !0,
                        writable: !0
                    },
                    all: Ie.all,
                    race: Ie.race,
                    allSettled: Ie.allSettled,
                    any: Ie.any,
                    resolve: Ie.resolve,
                    reject: Ie.reject,
                    nthen: ct(o.nthen, a),
                    gthen: ct(o.gthen, a)
                } : {},
                t && s(a, t),
                ++i.ref,
                a.finalize = function() {
                    --this.parent.ref || this.parent.finalize()
                }
                ;
                var l = lt(a, e, n, r);
                return 0 === a.ref && a.finalize(),
                l
            }
            function nt() {
                return Xe.id || (Xe.id = ++Ze),
                ++Xe.awaits,
                Xe.echoes += 100,
                Xe.id
            }
            function rt(e) {
                !Xe.awaits || e && e !== Xe.id || (0 == --Xe.awaits && (Xe.id = 0),
                Xe.echoes = 100 * Xe.awaits)
            }
            function it(e) {
                return Xe.echoes && e && e.constructor === be ? (nt(),
                e.then((function(e) {
                    return rt(),
                    e
                }
                ), (function(e) {
                    return rt(),
                    ft(e)
                }
                ))) : e
            }
            function at() {
                var e = Je[Je.length - 1];
                Je.pop(),
                ot(e, !1)
            }
            function ot(e, t) {
                var n, r, i, a = Pe;
                (t ? !Xe.echoes || Qe++ && e === Pe : !Qe || --Qe && e === Pe) || (n = t ? function(e) {
                    ++$e,
                    Xe.echoes && 0 != --Xe.echoes || (Xe.echoes = Xe.id = 0),
                    Je.push(Pe),
                    ot(e, !0)
                }
                .bind(null, e) : at,
                ye.call(me, n)),
                e !== Pe && (Pe = e,
                a === Ce && (Ce.env = st()),
                xe && (r = Ce.env.Promise,
                i = e.env,
                ge.then = i.nthen,
                r.prototype.then = i.gthen,
                (a.global || e.global) && (Object.defineProperty(o, "Promise", i.PromiseProp),
                r.all = i.all,
                r.race = i.race,
                r.resolve = i.resolve,
                r.reject = i.reject,
                i.allSettled && (r.allSettled = i.allSettled),
                i.any && (r.any = i.any))))
            }
            function st() {
                var e = o.Promise;
                return xe ? {
                    Promise: e,
                    PromiseProp: Object.getOwnPropertyDescriptor(o, "Promise"),
                    all: e.all,
                    race: e.race,
                    allSettled: e.allSettled,
                    any: e.any,
                    resolve: e.resolve,
                    reject: e.reject,
                    nthen: ge.then,
                    gthen: e.prototype.then
                } : {}
            }
            function lt(e, t, n, r, i) {
                var a = Pe;
                try {
                    return ot(e, !0),
                    t(n, r, i)
                } finally {
                    ot(a, !1)
                }
            }
            function ut(e, t, n) {
                return "function" != typeof e ? e : function() {
                    var r = Pe;
                    n && nt(),
                    ot(t, !0);
                    try {
                        return e.apply(this, arguments)
                    } finally {
                        ot(r, !1)
                    }
                }
            }
            function ct(e, t) {
                return function(n, r) {
                    return e.call(this, ut(n, t, !1), ut(r, t, !1))
                }
            }
            -1 === ("" + ye).indexOf("[native code]") && (nt = rt = ie);
            var ht = "unhandledrejection";
            function dt(e, t) {
                var n;
                try {
                    n = t.onuncatched(e)
                } catch (e) {}
                if (!1 !== n)
                    try {
                        var r, i = {
                            promise: t,
                            reason: e
                        };
                        if (o.document && document.createEvent ? ((r = document.createEvent("Event")).initEvent(ht, !0, !0),
                        s(r, i)) : o.CustomEvent && s(r = new CustomEvent(ht,{
                            detail: i
                        }), i),
                        r && o.dispatchEvent && (dispatchEvent(r),
                        !o.PromiseRejectionEvent && o.onunhandledrejection))
                            try {
                                o.onunhandledrejection(r)
                            } catch (e) {}
                        z && r && !r.defaultPrevented && console.warn("Unhandled rejection: " + (e.stack || e))
                    } catch (e) {}
            }
            var ft = Ie.reject;
            function pt(e) {
                return !/(dexie\.js|dexie\.min\.js)/.test(e)
            }
            var mt = String.fromCharCode(65535)
              , gt = "Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>."
              , vt = "String expected."
              , yt = []
              , bt = "undefined" != typeof navigator && /(MSIE|Trident|Edge)/.test(navigator.userAgent)
              , xt = bt
              , wt = bt
              , _t = "__dbnames"
              , Et = "readonly"
              , Tt = "readwrite";
            function St(e, t) {
                return e ? t ? function() {
                    return e.apply(this, arguments) && t.apply(this, arguments)
                }
                : e : t
            }
            var Mt = {
                type: 3,
                lower: -1 / 0,
                lowerOpen: !1,
                upper: [[]],
                upperOpen: !1
            }
              , At = (Rt.prototype._trans = function(e, t, n) {
                var r = this._tx || Pe.trans
                  , i = this.name;
                function a(e, n, r) {
                    if (!r.schema[i])
                        throw new te.NotFound("Table " + i + " not part of transaction");
                    return t(r.idbtrans, r)
                }
                var o = Ve();
                try {
                    return r && r.db === this.db ? r === Pe.trans ? r._promise(e, a, n) : tt((function() {
                        return r._promise(e, a, n)
                    }
                    ), {
                        trans: r,
                        transless: Pe.transless || Pe
                    }) : function e(t, n, r, i) {
                        if (t._state.openComplete || Pe.letThrough) {
                            var a = t._createTransaction(n, r, t._dbSchema);
                            try {
                                a.create()
                            } catch (e) {
                                return ft(e)
                            }
                            return a._promise(n, (function(e, t) {
                                return tt((function() {
                                    return Pe.trans = a,
                                    i(e, t, a)
                                }
                                ))
                            }
                            )).then((function(e) {
                                return a._completion.then((function() {
                                    return e
                                }
                                ))
                            }
                            ))
                        }
                        if (!t._state.isBeingOpened) {
                            if (!t._options.autoOpen)
                                return ft(new te.DatabaseClosed);
                            t.open().catch(ie)
                        }
                        return t._state.dbReadyPromise.then((function() {
                            return e(t, n, r, i)
                        }
                        ))
                    }(this.db, e, [this.name], a)
                } finally {
                    o && We()
                }
            }
            ,
            Rt.prototype.get = function(e, t) {
                var n = this;
                return e && e.constructor === Object ? this.where(e).first(t) : this._trans("readonly", (function(t) {
                    return n.core.get({
                        trans: t,
                        key: e
                    }).then((function(e) {
                        return n.hook.reading.fire(e)
                    }
                    ))
                }
                )).then(t)
            }
            ,
            Rt.prototype.where = function(e) {
                if ("string" == typeof e)
                    return new this.db.WhereClause(this,e);
                if (a(e))
                    return new this.db.WhereClause(this,"[" + e.join("+") + "]");
                var t = i(e);
                if (1 === t.length)
                    return this.where(t[0]).equals(e[t[0]]);
                var n = this.schema.indexes.concat(this.schema.primKey).filter((function(e) {
                    return e.compound && t.every((function(t) {
                        return 0 <= e.keyPath.indexOf(t)
                    }
                    )) && e.keyPath.every((function(e) {
                        return 0 <= t.indexOf(e)
                    }
                    ))
                }
                ))[0];
                if (n && this.db._maxKey !== mt)
                    return this.where(n.name).equals(n.keyPath.map((function(t) {
                        return e[t]
                    }
                    )));
                !n && z && console.warn("The query " + JSON.stringify(e) + " on " + this.name + " would benefit of a compound index [" + t.join("+") + "]");
                var r = this.schema.idxByName
                  , o = this.db._deps.indexedDB;
                function s(e, t) {
                    try {
                        return 0 === o.cmp(e, t)
                    } catch (e) {
                        return !1
                    }
                }
                var l = t.reduce((function(t, n) {
                    var i = t[0]
                      , o = t[1]
                      , l = r[n]
                      , u = e[n];
                    return [i || l, i || !l ? St(o, l && l.multi ? function(e) {
                        var t = _(e, n);
                        return a(t) && t.some((function(e) {
                            return s(u, e)
                        }
                        ))
                    }
                    : function(e) {
                        return s(u, _(e, n))
                    }
                    ) : o]
                }
                ), [null, null])
                  , u = l[0]
                  , c = l[1];
                return u ? this.where(u.name).equals(e[u.keyPath]).filter(c) : n ? this.filter(c) : this.where(t).equals("")
            }
            ,
            Rt.prototype.filter = function(e) {
                return this.toCollection().and(e)
            }
            ,
            Rt.prototype.count = function(e) {
                return this.toCollection().count(e)
            }
            ,
            Rt.prototype.offset = function(e) {
                return this.toCollection().offset(e)
            }
            ,
            Rt.prototype.limit = function(e) {
                return this.toCollection().limit(e)
            }
            ,
            Rt.prototype.each = function(e) {
                return this.toCollection().each(e)
            }
            ,
            Rt.prototype.toArray = function(e) {
                return this.toCollection().toArray(e)
            }
            ,
            Rt.prototype.toCollection = function() {
                return new this.db.Collection(new this.db.WhereClause(this))
            }
            ,
            Rt.prototype.orderBy = function(e) {
                return new this.db.Collection(new this.db.WhereClause(this,a(e) ? "[" + e.join("+") + "]" : e))
            }
            ,
            Rt.prototype.reverse = function() {
                return this.toCollection().reverse()
            }
            ,
            Rt.prototype.mapToClass = function(e) {
                function t(t) {
                    if (!t)
                        return t;
                    var n = Object.create(e.prototype);
                    for (var r in t)
                        if (c(t, r))
                            try {
                                n[r] = t[r]
                            } catch (t) {}
                    return n
                }
                return this.schema.mappedClass = e,
                this.schema.readHook && this.hook.reading.unsubscribe(this.schema.readHook),
                this.schema.readHook = t,
                this.hook("reading", t),
                e
            }
            ,
            Rt.prototype.defineClass = function() {
                return this.mapToClass((function(e) {
                    s(this, e)
                }
                ))
            }
            ,
            Rt.prototype.add = function(e, t) {
                var n = this;
                return this._trans("readwrite", (function(r) {
                    return n.core.mutate({
                        trans: r,
                        type: "add",
                        keys: null != t ? [t] : null,
                        values: [e]
                    })
                }
                )).then((function(e) {
                    return e.numFailures ? Ie.reject(e.failures[0]) : e.lastResult
                }
                )).then((function(t) {
                    if (!n.core.schema.primaryKey.outbound)
                        try {
                            E(e, n.core.schema.primaryKey.keyPath, t)
                        } catch (t) {}
                    return t
                }
                ))
            }
            ,
            Rt.prototype.update = function(e, t) {
                if ("object" != typeof t || a(t))
                    throw new te.InvalidArgument("Modifications must be an object.");
                if ("object" != typeof e || a(e))
                    return this.where(":id").equals(e).modify(t);
                i(t).forEach((function(n) {
                    E(e, n, t[n])
                }
                ));
                var n = _(e, this.schema.primKey.keyPath);
                return void 0 === n ? ft(new te.InvalidArgument("Given object does not contain its primary key")) : this.where(":id").equals(n).modify(t)
            }
            ,
            Rt.prototype.put = function(e, t) {
                var n = this;
                return this._trans("readwrite", (function(r) {
                    return n.core.mutate({
                        trans: r,
                        type: "put",
                        values: [e],
                        keys: null != t ? [t] : null
                    })
                }
                )).then((function(e) {
                    return e.numFailures ? Ie.reject(e.failures[0]) : e.lastResult
                }
                )).then((function(t) {
                    if (!n.core.schema.primaryKey.outbound)
                        try {
                            E(e, n.core.schema.primaryKey.keyPath, t)
                        } catch (t) {}
                    return t
                }
                ))
            }
            ,
            Rt.prototype.delete = function(e) {
                var t = this;
                return this._trans("readwrite", (function(n) {
                    return t.core.mutate({
                        trans: n,
                        type: "delete",
                        keys: [e]
                    })
                }
                )).then((function(e) {
                    return e.numFailures ? Ie.reject(e.failures[0]) : void 0
                }
                ))
            }
            ,
            Rt.prototype.clear = function() {
                var e = this;
                return this._trans("readwrite", (function(t) {
                    return e.core.mutate({
                        trans: t,
                        type: "deleteRange",
                        range: Mt
                    })
                }
                )).then((function(e) {
                    return e.numFailures ? Ie.reject(e.failures[0]) : void 0
                }
                ))
            }
            ,
            Rt.prototype.bulkGet = function(e) {
                var t = this;
                return this._trans("readonly", (function(n) {
                    return t.core.getMany({
                        keys: e,
                        trans: n
                    }).then((function(e) {
                        return e.map((function(e) {
                            return t.hook.reading.fire(e)
                        }
                        ))
                    }
                    ))
                }
                ))
            }
            ,
            Rt.prototype.bulkAdd = function(e, t, n) {
                var r = this
                  , i = Array.isArray(t) ? t : void 0
                  , a = (n = n || (i ? void 0 : t)) ? n.allKeys : void 0;
                return this._trans("readwrite", (function(t) {
                    if (!r.core.schema.primaryKey.outbound && i)
                        throw new te.InvalidArgument("bulkAdd(): keys argument invalid on tables with inbound keys");
                    if (i && i.length !== e.length)
                        throw new te.InvalidArgument("Arguments objects and keys must have the same length");
                    var n = e.length;
                    return r.core.mutate({
                        trans: t,
                        type: "add",
                        keys: i,
                        values: e,
                        wantResults: a
                    }).then((function(e) {
                        var t = e.numFailures
                          , i = e.results
                          , o = e.lastResult
                          , s = e.failures;
                        if (0 === t)
                            return a ? i : o;
                        throw new Q(r.name + ".bulkAdd(): " + t + " of " + n + " operations failed",Object.keys(s).map((function(e) {
                            return s[e]
                        }
                        )))
                    }
                    ))
                }
                ))
            }
            ,
            Rt.prototype.bulkPut = function(e, t, n) {
                var r = this
                  , i = Array.isArray(t) ? t : void 0
                  , a = (n = n || (i ? void 0 : t)) ? n.allKeys : void 0;
                return this._trans("readwrite", (function(t) {
                    if (!r.core.schema.primaryKey.outbound && i)
                        throw new te.InvalidArgument("bulkPut(): keys argument invalid on tables with inbound keys");
                    if (i && i.length !== e.length)
                        throw new te.InvalidArgument("Arguments objects and keys must have the same length");
                    var n = e.length;
                    return r.core.mutate({
                        trans: t,
                        type: "put",
                        keys: i,
                        values: e,
                        wantResults: a
                    }).then((function(e) {
                        var t = e.numFailures
                          , i = e.results
                          , o = e.lastResult
                          , s = e.failures;
                        if (0 === t)
                            return a ? i : o;
                        throw new Q(r.name + ".bulkPut(): " + t + " of " + n + " operations failed",Object.keys(s).map((function(e) {
                            return s[e]
                        }
                        )))
                    }
                    ))
                }
                ))
            }
            ,
            Rt.prototype.bulkDelete = function(e) {
                var t = this
                  , n = e.length;
                return this._trans("readwrite", (function(n) {
                    return t.core.mutate({
                        trans: n,
                        type: "delete",
                        keys: e
                    })
                }
                )).then((function(e) {
                    var r = e.numFailures
                      , i = e.lastResult
                      , a = e.failures;
                    if (0 === r)
                        return i;
                    throw new Q(t.name + ".bulkDelete(): " + r + " of " + n + " operations failed",a)
                }
                ))
            }
            ,
            Rt);
            function Rt() {}
            function Lt(e) {
                var t = {}
                  , n = function(n, r) {
                    if (r) {
                        for (var i = arguments.length, a = new Array(i - 1); --i; )
                            a[i - 1] = arguments[i];
                        return t[n].subscribe.apply(null, a),
                        e
                    }
                    if ("string" == typeof n)
                        return t[n]
                };
                n.addEventType = s;
                for (var r = 1, o = arguments.length; r < o; ++r)
                    s(arguments[r]);
                return n;
                function s(e, r, o) {
                    if ("object" != typeof e) {
                        var l;
                        r = r || he;
                        var u = {
                            subscribers: [],
                            fire: o = o || ie,
                            subscribe: function(e) {
                                -1 === u.subscribers.indexOf(e) && (u.subscribers.push(e),
                                u.fire = r(u.fire, e))
                            },
                            unsubscribe: function(e) {
                                u.subscribers = u.subscribers.filter((function(t) {
                                    return t !== e
                                }
                                )),
                                u.fire = u.subscribers.reduce(r, o)
                            }
                        };
                        return t[e] = n[e] = u,
                        u
                    }
                    i(l = e).forEach((function(e) {
                        var t = l[e];
                        if (a(t))
                            s(e, l[e][0], l[e][1]);
                        else {
                            if ("asap" !== t)
                                throw new te.InvalidArgument("Invalid event config");
                            var n = s(e, ae, (function() {
                                for (var e = arguments.length, t = new Array(e); e--; )
                                    t[e] = arguments[e];
                                n.subscribers.forEach((function(e) {
                                    x((function() {
                                        e.apply(null, t)
                                    }
                                    ))
                                }
                                ))
                            }
                            ))
                        }
                    }
                    ))
                }
            }
            function Ct(e, t) {
                return p(t).from({
                    prototype: e
                }),
                t
            }
            function Pt(e, t) {
                return !(e.filter || e.algorithm || e.or) && (t ? e.justLimit : !e.replayFilter)
            }
            function Ot(e, t) {
                e.filter = St(e.filter, t)
            }
            function kt(e, t, n) {
                var r = e.replayFilter;
                e.replayFilter = r ? function() {
                    return St(r(), t())
                }
                : t,
                e.justLimit = n && !r
            }
            function Dt(e, t) {
                if (e.isPrimKey)
                    return t.primaryKey;
                var n = t.getIndexByKeyPath(e.index);
                if (!n)
                    throw new te.Schema("KeyPath " + e.index + " on object store " + t.name + " is not indexed");
                return n
            }
            function It(e, t, n) {
                var r = Dt(e, t.schema);
                return t.openCursor({
                    trans: n,
                    values: !e.keysOnly,
                    reverse: "prev" === e.dir,
                    unique: !!e.unique,
                    query: {
                        index: r,
                        range: e.range
                    }
                })
            }
            function Nt(e, t, n, r) {
                var i = e.replayFilter ? St(e.filter, e.replayFilter()) : e.filter;
                if (e.or) {
                    var a = {}
                      , o = function(e, n, r) {
                        var o, s;
                        i && !i(n, r, (function(e) {
                            return n.stop(e)
                        }
                        ), (function(e) {
                            return n.fail(e)
                        }
                        )) || ("[object ArrayBuffer]" == (s = "" + (o = n.primaryKey)) && (s = "" + new Uint8Array(o)),
                        c(a, s) || (a[s] = !0,
                        t(e, n, r)))
                    };
                    return Promise.all([e.or._iterate(o, n), Ft(It(e, r, n), e.algorithm, o, !e.keysOnly && e.valueMapper)])
                }
                return Ft(It(e, r, n), St(e.algorithm, i), t, !e.keysOnly && e.valueMapper)
            }
            function Ft(e, t, n, r) {
                var i = Ye(r ? function(e, t, i) {
                    return n(r(e), t, i)
                }
                : n);
                return e.then((function(e) {
                    if (e)
                        return e.start((function() {
                            var n = function() {
                                return e.continue()
                            };
                            t && !t(e, (function(e) {
                                return n = e
                            }
                            ), (function(t) {
                                e.stop(t),
                                n = ie
                            }
                            ), (function(t) {
                                e.fail(t),
                                n = ie
                            }
                            )) || i(e.value, e, (function(e) {
                                return n = e
                            }
                            )),
                            n()
                        }
                        ))
                }
                ))
            }
            var Ut = (Bt.prototype._read = function(e, t) {
                var n = this._ctx;
                return n.error ? n.table._trans(null, ft.bind(null, n.error)) : n.table._trans("readonly", e).then(t)
            }
            ,
            Bt.prototype._write = function(e) {
                var t = this._ctx;
                return t.error ? t.table._trans(null, ft.bind(null, t.error)) : t.table._trans("readwrite", e, "locked")
            }
            ,
            Bt.prototype._addAlgorithm = function(e) {
                var t = this._ctx;
                t.algorithm = St(t.algorithm, e)
            }
            ,
            Bt.prototype._iterate = function(e, t) {
                return Nt(this._ctx, e, t, this._ctx.table.core)
            }
            ,
            Bt.prototype.clone = function(e) {
                var t = Object.create(this.constructor.prototype)
                  , n = Object.create(this._ctx);
                return e && s(n, e),
                t._ctx = n,
                t
            }
            ,
            Bt.prototype.raw = function() {
                return this._ctx.valueMapper = null,
                this
            }
            ,
            Bt.prototype.each = function(e) {
                var t = this._ctx;
                return this._read((function(n) {
                    return Nt(t, e, n, t.table.core)
                }
                ))
            }
            ,
            Bt.prototype.count = function(e) {
                var t = this;
                return this._read((function(e) {
                    var n = t._ctx
                      , r = n.table.core;
                    if (Pt(n, !0))
                        return r.count({
                            trans: e,
                            query: {
                                index: Dt(n, r.schema),
                                range: n.range
                            }
                        }).then((function(e) {
                            return Math.min(e, n.limit)
                        }
                        ));
                    var i = 0;
                    return Nt(n, (function() {
                        return ++i,
                        !1
                    }
                    ), e, r).then((function() {
                        return i
                    }
                    ))
                }
                )).then(e)
            }
            ,
            Bt.prototype.sortBy = function(e, t) {
                var n = e.split(".").reverse()
                  , r = n[0]
                  , i = n.length - 1;
                function a(e, t) {
                    return t ? a(e[n[t]], t - 1) : e[r]
                }
                var o = "next" === this._ctx.dir ? 1 : -1;
                function s(e, t) {
                    var n = a(e, i)
                      , r = a(t, i);
                    return n < r ? -o : r < n ? o : 0
                }
                return this.toArray((function(e) {
                    return e.sort(s)
                }
                )).then(t)
            }
            ,
            Bt.prototype.toArray = function(e) {
                var t = this;
                return this._read((function(e) {
                    var n = t._ctx;
                    if ("next" === n.dir && Pt(n, !0) && 0 < n.limit) {
                        var r = n.valueMapper
                          , i = Dt(n, n.table.core.schema);
                        return n.table.core.query({
                            trans: e,
                            limit: n.limit,
                            values: !0,
                            query: {
                                index: i,
                                range: n.range
                            }
                        }).then((function(e) {
                            var t = e.result;
                            return r ? t.map(r) : t
                        }
                        ))
                    }
                    var a = [];
                    return Nt(n, (function(e) {
                        return a.push(e)
                    }
                    ), e, n.table.core).then((function() {
                        return a
                    }
                    ))
                }
                ), e)
            }
            ,
            Bt.prototype.offset = function(e) {
                var t = this._ctx;
                return e <= 0 || (t.offset += e,
                Pt(t) ? kt(t, (function() {
                    var t = e;
                    return function(e, n) {
                        return 0 === t || (1 === t ? --t : n((function() {
                            e.advance(t),
                            t = 0
                        }
                        )),
                        !1)
                    }
                }
                )) : kt(t, (function() {
                    var t = e;
                    return function() {
                        return --t < 0
                    }
                }
                ))),
                this
            }
            ,
            Bt.prototype.limit = function(e) {
                return this._ctx.limit = Math.min(this._ctx.limit, e),
                kt(this._ctx, (function() {
                    var t = e;
                    return function(e, n, r) {
                        return --t <= 0 && n(r),
                        0 <= t
                    }
                }
                ), !0),
                this
            }
            ,
            Bt.prototype.until = function(e, t) {
                return Ot(this._ctx, (function(n, r, i) {
                    return !e(n.value) || (r(i),
                    t)
                }
                )),
                this
            }
            ,
            Bt.prototype.first = function(e) {
                return this.limit(1).toArray((function(e) {
                    return e[0]
                }
                )).then(e)
            }
            ,
            Bt.prototype.last = function(e) {
                return this.reverse().first(e)
            }
            ,
            Bt.prototype.filter = function(e) {
                var t, n;
                return Ot(this._ctx, (function(t) {
                    return e(t.value)
                }
                )),
                t = this._ctx,
                n = e,
                t.isMatch = St(t.isMatch, n),
                this
            }
            ,
            Bt.prototype.and = function(e) {
                return this.filter(e)
            }
            ,
            Bt.prototype.or = function(e) {
                return new this.db.WhereClause(this._ctx.table,e,this)
            }
            ,
            Bt.prototype.reverse = function() {
                return this._ctx.dir = "prev" === this._ctx.dir ? "next" : "prev",
                this._ondirectionchange && this._ondirectionchange(this._ctx.dir),
                this
            }
            ,
            Bt.prototype.desc = function() {
                return this.reverse()
            }
            ,
            Bt.prototype.eachKey = function(e) {
                var t = this._ctx;
                return t.keysOnly = !t.isMatch,
                this.each((function(t, n) {
                    e(n.key, n)
                }
                ))
            }
            ,
            Bt.prototype.eachUniqueKey = function(e) {
                return this._ctx.unique = "unique",
                this.eachKey(e)
            }
            ,
            Bt.prototype.eachPrimaryKey = function(e) {
                var t = this._ctx;
                return t.keysOnly = !t.isMatch,
                this.each((function(t, n) {
                    e(n.primaryKey, n)
                }
                ))
            }
            ,
            Bt.prototype.keys = function(e) {
                var t = this._ctx;
                t.keysOnly = !t.isMatch;
                var n = [];
                return this.each((function(e, t) {
                    n.push(t.key)
                }
                )).then((function() {
                    return n
                }
                )).then(e)
            }
            ,
            Bt.prototype.primaryKeys = function(e) {
                var t = this._ctx;
                if ("next" === t.dir && Pt(t, !0) && 0 < t.limit)
                    return this._read((function(e) {
                        var n = Dt(t, t.table.core.schema);
                        return t.table.core.query({
                            trans: e,
                            values: !1,
                            limit: t.limit,
                            query: {
                                index: n,
                                range: t.range
                            }
                        })
                    }
                    )).then((function(e) {
                        return e.result
                    }
                    )).then(e);
                t.keysOnly = !t.isMatch;
                var n = [];
                return this.each((function(e, t) {
                    n.push(t.primaryKey)
                }
                )).then((function() {
                    return n
                }
                )).then(e)
            }
            ,
            Bt.prototype.uniqueKeys = function(e) {
                return this._ctx.unique = "unique",
                this.keys(e)
            }
            ,
            Bt.prototype.firstKey = function(e) {
                return this.limit(1).keys((function(e) {
                    return e[0]
                }
                )).then(e)
            }
            ,
            Bt.prototype.lastKey = function(e) {
                return this.reverse().firstKey(e)
            }
            ,
            Bt.prototype.distinct = function() {
                var e = this._ctx
                  , t = e.index && e.table.schema.idxByName[e.index];
                if (!t || !t.multi)
                    return this;
                var n = {};
                return Ot(this._ctx, (function(e) {
                    var t = e.primaryKey.toString()
                      , r = c(n, t);
                    return n[t] = !0,
                    !r
                }
                )),
                this
            }
            ,
            Bt.prototype.modify = function(e) {
                var t = this
                  , n = this._ctx;
                return this._write((function(r) {
                    var a, o, s;
                    function l(e, t) {
                        var n = t.failures
                          , r = t.numFailures;
                        g += e - r;
                        for (var a = 0, o = i(n); a < o.length; a++) {
                            var s = o[a];
                            m.push(n[s])
                        }
                    }
                    s = "function" == typeof e ? e : (a = i(e),
                    o = a.length,
                    function(t) {
                        for (var n = !1, r = 0; r < o; ++r) {
                            var i = a[r]
                              , s = e[i];
                            _(t, i) !== s && (E(t, i, s),
                            n = !0)
                        }
                        return n
                    }
                    );
                    var u = n.table.core
                      , c = u.schema.primaryKey
                      , h = c.outbound
                      , d = c.extractKey
                      , f = "testmode"in Ln ? 1 : 2e3
                      , p = t.db.core.cmp
                      , m = []
                      , g = 0
                      , v = [];
                    return t.clone().primaryKeys().then((function(e) {
                        var t = function(n) {
                            var i = Math.min(f, e.length - n);
                            return u.getMany({
                                trans: r,
                                keys: e.slice(n, n + i)
                            }).then((function(a) {
                                for (var o = [], c = [], m = h ? [] : null, g = [], v = 0; v < i; ++v) {
                                    var y = a[v]
                                      , b = {
                                        value: C(y),
                                        primKey: e[n + v]
                                    };
                                    !1 !== s.call(b, b.value, b) && (null == b.value ? g.push(e[n + v]) : h || 0 === p(d(y), d(b.value)) ? (c.push(b.value),
                                    h && m.push(e[n + v])) : (g.push(e[n + v]),
                                    o.push(b.value)))
                                }
                                return Promise.resolve(0 < o.length && u.mutate({
                                    trans: r,
                                    type: "add",
                                    values: o
                                }).then((function(e) {
                                    for (var t in e.failures)
                                        g.splice(parseInt(t), 1);
                                    l(o.length, e)
                                }
                                ))).then((function(e) {
                                    return 0 < c.length && u.mutate({
                                        trans: r,
                                        type: "put",
                                        keys: m,
                                        values: c
                                    }).then((function(e) {
                                        return l(c.length, e)
                                    }
                                    ))
                                }
                                )).then((function() {
                                    return 0 < g.length && u.mutate({
                                        trans: r,
                                        type: "delete",
                                        keys: g
                                    }).then((function(e) {
                                        return l(g.length, e)
                                    }
                                    ))
                                }
                                )).then((function() {
                                    return e.length > n + i && t(n + f)
                                }
                                ))
                            }
                            ))
                        };
                        return t(0).then((function() {
                            if (0 < m.length)
                                throw new J("Error modifying one or more objects",m,g,v);
                            return e.length
                        }
                        ))
                    }
                    ))
                }
                ))
            }
            ,
            Bt.prototype.delete = function() {
                var e = this._ctx
                  , t = e.range;
                return Pt(e) && (e.isPrimKey && !wt || 3 === t.type) ? this._write((function(n) {
                    var r = e.table.core.schema.primaryKey
                      , i = t;
                    return e.table.core.count({
                        trans: n,
                        query: {
                            index: r,
                            range: i
                        }
                    }).then((function(t) {
                        return e.table.core.mutate({
                            trans: n,
                            type: "deleteRange",
                            range: i
                        }).then((function(e) {
                            var n = e.failures
                              , r = (e.lastResult,
                            e.results,
                            e.numFailures);
                            if (r)
                                throw new J("Could not delete some values",Object.keys(n).map((function(e) {
                                    return n[e]
                                }
                                )),t - r);
                            return t - r
                        }
                        ))
                    }
                    ))
                }
                )) : this.modify((function(e, t) {
                    return t.value = null
                }
                ))
            }
            ,
            Bt);
            function Bt() {}
            function zt(e, t) {
                return e < t ? -1 : e === t ? 0 : 1
            }
            function Gt(e, t) {
                return t < e ? -1 : e === t ? 0 : 1
            }
            function Ht(e, t, n) {
                var r = e instanceof Yt ? new e.Collection(e) : e;
                return r._ctx.error = new (n || TypeError)(t),
                r
            }
            function jt(e) {
                return new e.Collection(e,(function() {
                    return Kt("")
                }
                )).limit(0)
            }
            function Vt(e, t, n, r, i, a) {
                for (var o = Math.min(e.length, r.length), s = -1, l = 0; l < o; ++l) {
                    var u = t[l];
                    if (u !== r[l])
                        return i(e[l], n[l]) < 0 ? e.substr(0, l) + n[l] + n.substr(l + 1) : i(e[l], r[l]) < 0 ? e.substr(0, l) + r[l] + n.substr(l + 1) : 0 <= s ? e.substr(0, s) + t[s] + n.substr(s + 1) : null;
                    i(e[l], u) < 0 && (s = l)
                }
                return o < r.length && "next" === a ? e + n.substr(e.length) : o < e.length && "prev" === a ? e.substr(0, n.length) : s < 0 ? null : e.substr(0, s) + r[s] + n.substr(s + 1)
            }
            function Wt(e, t, n, r) {
                var i, a, o, s, l, u, c, h = n.length;
                if (!n.every((function(e) {
                    return "string" == typeof e
                }
                )))
                    return Ht(e, vt);
                function d(e) {
                    i = "next" === e ? function(e) {
                        return e.toUpperCase()
                    }
                    : function(e) {
                        return e.toLowerCase()
                    }
                    ,
                    a = "next" === e ? function(e) {
                        return e.toLowerCase()
                    }
                    : function(e) {
                        return e.toUpperCase()
                    }
                    ,
                    o = "next" === e ? zt : Gt;
                    var t = n.map((function(e) {
                        return {
                            lower: a(e),
                            upper: i(e)
                        }
                    }
                    )).sort((function(e, t) {
                        return o(e.lower, t.lower)
                    }
                    ));
                    s = t.map((function(e) {
                        return e.upper
                    }
                    )),
                    l = t.map((function(e) {
                        return e.lower
                    }
                    )),
                    c = "next" === (u = e) ? "" : r
                }
                d("next");
                var f = new e.Collection(e,(function() {
                    return qt(s[0], l[h - 1] + r)
                }
                ));
                f._ondirectionchange = function(e) {
                    d(e)
                }
                ;
                var p = 0;
                return f._addAlgorithm((function(e, n, r) {
                    var i = e.key;
                    if ("string" != typeof i)
                        return !1;
                    var d = a(i);
                    if (t(d, l, p))
                        return !0;
                    for (var f = null, m = p; m < h; ++m) {
                        var g = Vt(i, d, s[m], l[m], o, u);
                        null === g && null === f ? p = m + 1 : (null === f || 0 < o(f, g)) && (f = g)
                    }
                    return n(null !== f ? function() {
                        e.continue(f + c)
                    }
                    : r),
                    !1
                }
                )),
                f
            }
            function qt(e, t, n, r) {
                return {
                    type: 2,
                    lower: e,
                    upper: t,
                    lowerOpen: n,
                    upperOpen: r
                }
            }
            function Kt(e) {
                return {
                    type: 1,
                    lower: e,
                    upper: e
                }
            }
            var Yt = (Object.defineProperty(Xt.prototype, "Collection", {
                get: function() {
                    return this._ctx.table.db.Collection
                },
                enumerable: !0,
                configurable: !0
            }),
            Xt.prototype.between = function(e, t, n, r) {
                n = !1 !== n,
                r = !0 === r;
                try {
                    return 0 < this._cmp(e, t) || 0 === this._cmp(e, t) && (n || r) && (!n || !r) ? jt(this) : new this.Collection(this,(function() {
                        return qt(e, t, !n, !r)
                    }
                    ))
                } catch (e) {
                    return Ht(this, gt)
                }
            }
            ,
            Xt.prototype.equals = function(e) {
                return new this.Collection(this,(function() {
                    return Kt(e)
                }
                ))
            }
            ,
            Xt.prototype.above = function(e) {
                return null == e ? Ht(this, gt) : new this.Collection(this,(function() {
                    return qt(e, void 0, !0)
                }
                ))
            }
            ,
            Xt.prototype.aboveOrEqual = function(e) {
                return null == e ? Ht(this, gt) : new this.Collection(this,(function() {
                    return qt(e, void 0, !1)
                }
                ))
            }
            ,
            Xt.prototype.below = function(e) {
                return null == e ? Ht(this, gt) : new this.Collection(this,(function() {
                    return qt(void 0, e, !1, !0)
                }
                ))
            }
            ,
            Xt.prototype.belowOrEqual = function(e) {
                return null == e ? Ht(this, gt) : new this.Collection(this,(function() {
                    return qt(void 0, e)
                }
                ))
            }
            ,
            Xt.prototype.startsWith = function(e) {
                return "string" != typeof e ? Ht(this, vt) : this.between(e, e + mt, !0, !0)
            }
            ,
            Xt.prototype.startsWithIgnoreCase = function(e) {
                return "" === e ? this.startsWith(e) : Wt(this, (function(e, t) {
                    return 0 === e.indexOf(t[0])
                }
                ), [e], mt)
            }
            ,
            Xt.prototype.equalsIgnoreCase = function(e) {
                return Wt(this, (function(e, t) {
                    return e === t[0]
                }
                ), [e], "")
            }
            ,
            Xt.prototype.anyOfIgnoreCase = function() {
                var e = U.apply(F, arguments);
                return 0 === e.length ? jt(this) : Wt(this, (function(e, t) {
                    return -1 !== t.indexOf(e)
                }
                ), e, "")
            }
            ,
            Xt.prototype.startsWithAnyOfIgnoreCase = function() {
                var e = U.apply(F, arguments);
                return 0 === e.length ? jt(this) : Wt(this, (function(e, t) {
                    return t.some((function(t) {
                        return 0 === e.indexOf(t)
                    }
                    ))
                }
                ), e, mt)
            }
            ,
            Xt.prototype.anyOf = function() {
                var e = this
                  , t = U.apply(F, arguments)
                  , n = this._cmp;
                try {
                    t.sort(n)
                } catch (r) {
                    return Ht(this, gt)
                }
                if (0 === t.length)
                    return jt(this);
                var r = new this.Collection(this,(function() {
                    return qt(t[0], t[t.length - 1])
                }
                ));
                r._ondirectionchange = function(r) {
                    n = "next" === r ? e._ascending : e._descending,
                    t.sort(n)
                }
                ;
                var i = 0;
                return r._addAlgorithm((function(e, r, a) {
                    for (var o = e.key; 0 < n(o, t[i]); )
                        if (++i === t.length)
                            return r(a),
                            !1;
                    return 0 === n(o, t[i]) || (r((function() {
                        e.continue(t[i])
                    }
                    )),
                    !1)
                }
                )),
                r
            }
            ,
            Xt.prototype.notEqual = function(e) {
                return this.inAnyRange([[-1 / 0, e], [e, this.db._maxKey]], {
                    includeLowers: !1,
                    includeUppers: !1
                })
            }
            ,
            Xt.prototype.noneOf = function() {
                var e = U.apply(F, arguments);
                if (0 === e.length)
                    return new this.Collection(this);
                try {
                    e.sort(this._ascending)
                } catch (e) {
                    return Ht(this, gt)
                }
                var t = e.reduce((function(e, t) {
                    return e ? e.concat([[e[e.length - 1][1], t]]) : [[-1 / 0, t]]
                }
                ), null);
                return t.push([e[e.length - 1], this.db._maxKey]),
                this.inAnyRange(t, {
                    includeLowers: !1,
                    includeUppers: !1
                })
            }
            ,
            Xt.prototype.inAnyRange = function(e, t) {
                var n = this
                  , r = this._cmp
                  , i = this._ascending
                  , a = this._descending
                  , o = this._min
                  , s = this._max;
                if (0 === e.length)
                    return jt(this);
                if (!e.every((function(e) {
                    return void 0 !== e[0] && void 0 !== e[1] && i(e[0], e[1]) <= 0
                }
                )))
                    return Ht(this, "First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower", te.InvalidArgument);
                var l, u = !t || !1 !== t.includeLowers, c = t && !0 === t.includeUppers, h = i;
                function d(e, t) {
                    return h(e[0], t[0])
                }
                try {
                    (l = e.reduce((function(e, t) {
                        for (var n = 0, i = e.length; n < i; ++n) {
                            var a = e[n];
                            if (r(t[0], a[1]) < 0 && 0 < r(t[1], a[0])) {
                                a[0] = o(a[0], t[0]),
                                a[1] = s(a[1], t[1]);
                                break
                            }
                        }
                        return n === i && e.push(t),
                        e
                    }
                    ), [])).sort(d)
                } catch (e) {
                    return Ht(this, gt)
                }
                var f = 0
                  , p = c ? function(e) {
                    return 0 < i(e, l[f][1])
                }
                : function(e) {
                    return 0 <= i(e, l[f][1])
                }
                  , m = u ? function(e) {
                    return 0 < a(e, l[f][0])
                }
                : function(e) {
                    return 0 <= a(e, l[f][0])
                }
                  , g = p
                  , v = new this.Collection(this,(function() {
                    return qt(l[0][0], l[l.length - 1][1], !u, !c)
                }
                ));
                return v._ondirectionchange = function(e) {
                    h = "next" === e ? (g = p,
                    i) : (g = m,
                    a),
                    l.sort(d)
                }
                ,
                v._addAlgorithm((function(e, t, r) {
                    for (var a, o = e.key; g(o); )
                        if (++f === l.length)
                            return t(r),
                            !1;
                    return !p(a = o) && !m(a) || (0 === n._cmp(o, l[f][1]) || 0 === n._cmp(o, l[f][0]) || t((function() {
                        h === i ? e.continue(l[f][0]) : e.continue(l[f][1])
                    }
                    )),
                    !1)
                }
                )),
                v
            }
            ,
            Xt.prototype.startsWithAnyOf = function() {
                var e = U.apply(F, arguments);
                return e.every((function(e) {
                    return "string" == typeof e
                }
                )) ? 0 === e.length ? jt(this) : this.inAnyRange(e.map((function(e) {
                    return [e, e + mt]
                }
                ))) : Ht(this, "startsWithAnyOf() only works with strings")
            }
            ,
            Xt);
            function Xt() {}
            function Zt(e) {
                return 1 === e.length ? e[0] : e
            }
            function Jt(e) {
                try {
                    return e.only([[]]),
                    [[]]
                } catch (e) {
                    return mt
                }
            }
            function Qt(e) {
                return Ye((function(t) {
                    return $t(t),
                    e(t.target.error),
                    !1
                }
                ))
            }
            function $t(e) {
                e.stopPropagation && e.stopPropagation(),
                e.preventDefault && e.preventDefault()
            }
            var en = (tn.prototype._lock = function() {
                return b(!Pe.global),
                ++this._reculock,
                1 !== this._reculock || Pe.global || (Pe.lockOwnerFor = this),
                this
            }
            ,
            tn.prototype._unlock = function() {
                if (b(!Pe.global),
                0 == --this._reculock)
                    for (Pe.global || (Pe.lockOwnerFor = null); 0 < this._blockedFuncs.length && !this._locked(); ) {
                        var e = this._blockedFuncs.shift();
                        try {
                            lt(e[1], e[0])
                        } catch (e) {}
                    }
                return this
            }
            ,
            tn.prototype._locked = function() {
                return this._reculock && Pe.lockOwnerFor !== this
            }
            ,
            tn.prototype.create = function(e) {
                var t = this;
                if (!this.mode)
                    return this;
                var n = this.db.idbdb
                  , r = this.db._state.dbOpenError;
                if (b(!this.idbtrans),
                !e && !n)
                    switch (r && r.name) {
                    case "DatabaseClosedError":
                        throw new te.DatabaseClosed(r);
                    case "MissingAPIError":
                        throw new te.MissingAPI(r.message,r);
                    default:
                        throw new te.OpenFailed(r)
                    }
                if (!this.active)
                    throw new te.TransactionInactive;
                return b(null === this._completion._state),
                (e = this.idbtrans = e || n.transaction(Zt(this.storeNames), this.mode)).onerror = Ye((function(n) {
                    $t(n),
                    t._reject(e.error)
                }
                )),
                e.onabort = Ye((function(n) {
                    $t(n),
                    t.active && t._reject(new te.Abort(e.error)),
                    t.active = !1,
                    t.on("abort").fire(n)
                }
                )),
                e.oncomplete = Ye((function() {
                    t.active = !1,
                    t._resolve()
                }
                )),
                this
            }
            ,
            tn.prototype._promise = function(e, t, n) {
                var r = this;
                if ("readwrite" === e && "readwrite" !== this.mode)
                    return ft(new te.ReadOnly("Transaction is readonly"));
                if (!this.active)
                    return ft(new te.TransactionInactive);
                if (this._locked())
                    return new Ie((function(i, a) {
                        r._blockedFuncs.push([function() {
                            r._promise(e, t, n).then(i, a)
                        }
                        , Pe])
                    }
                    ));
                if (n)
                    return tt((function() {
                        var e = new Ie((function(e, n) {
                            r._lock();
                            var i = t(e, n, r);
                            i && i.then && i.then(e, n)
                        }
                        ));
                        return e.finally((function() {
                            return r._unlock()
                        }
                        )),
                        e._lib = !0,
                        e
                    }
                    ));
                var i = new Ie((function(e, n) {
                    var i = t(e, n, r);
                    i && i.then && i.then(e, n)
                }
                ));
                return i._lib = !0,
                i
            }
            ,
            tn.prototype._root = function() {
                return this.parent ? this.parent._root() : this
            }
            ,
            tn.prototype.waitFor = function(e) {
                var t, n = this._root(), r = Ie.resolve(e);
                n._waitingFor ? n._waitingFor = n._waitingFor.then((function() {
                    return r
                }
                )) : (n._waitingFor = r,
                n._waitingQueue = [],
                t = n.idbtrans.objectStore(n.storeNames[0]),
                function e() {
                    for (++n._spinCount; n._waitingQueue.length; )
                        n._waitingQueue.shift()();
                    n._waitingFor && (t.get(-1 / 0).onsuccess = e)
                }());
                var i = n._waitingFor;
                return new Ie((function(e, t) {
                    r.then((function(t) {
                        return n._waitingQueue.push(Ye(e.bind(null, t)))
                    }
                    ), (function(e) {
                        return n._waitingQueue.push(Ye(t.bind(null, e)))
                    }
                    )).finally((function() {
                        n._waitingFor === i && (n._waitingFor = null)
                    }
                    ))
                }
                ))
            }
            ,
            tn.prototype.abort = function() {
                this.active && this._reject(new te.Abort),
                this.active = !1
            }
            ,
            tn.prototype.table = function(e) {
                var t = this._memoizedTables || (this._memoizedTables = {});
                if (c(t, e))
                    return t[e];
                var n = this.schema[e];
                if (!n)
                    throw new te.NotFound("Table " + e + " not part of transaction");
                var r = new this.db.Table(e,n,this);
                return r.core = this.db.core.table(e),
                t[e] = r
            }
            ,
            tn);
            function tn() {}
            function nn(e, t, n, r, i, a, o) {
                return {
                    name: e,
                    keyPath: t,
                    unique: n,
                    multi: r,
                    auto: i,
                    compound: a,
                    src: (n && !o ? "&" : "") + (r ? "*" : "") + (i ? "++" : "") + rn(t)
                }
            }
            function rn(e) {
                return "string" == typeof e ? e : e ? "[" + [].join.call(e, "+") + "]" : ""
            }
            function an(e, t, n) {
                return {
                    name: e,
                    primKey: t,
                    indexes: n,
                    mappedClass: null,
                    idxByName: w(n, (function(e) {
                        return [e.name, e]
                    }
                    ))
                }
            }
            function on(e) {
                return null == e ? function() {}
                : "string" == typeof e ? 1 === (t = e).split(".").length ? function(e) {
                    return e[t]
                }
                : function(e) {
                    return _(e, t)
                }
                : function(t) {
                    return _(t, e)
                }
                ;
                var t
            }
            function sn(e, t) {
                return "delete" === t.type ? t.keys : t.keys || t.values.map(e.extractKey)
            }
            function ln(e) {
                return [].slice.call(e)
            }
            var un = 0;
            function cn(e) {
                return null == e ? ":id" : "string" == typeof e ? e : "[" + e.join("+") + "]"
            }
            function hn(e, t, n, i) {
                var o = t.cmp.bind(t);
                function s(e) {
                    if (3 === e.type)
                        return null;
                    if (4 === e.type)
                        throw new Error("Cannot convert never type to IDBKeyRange");
                    var t = e.lower
                      , r = e.upper
                      , i = e.lowerOpen
                      , a = e.upperOpen;
                    return void 0 === t ? void 0 === r ? null : n.upperBound(r, !!a) : void 0 === r ? n.lowerBound(t, !!i) : n.bound(t, r, !!i, !!a)
                }
                var l, u, c, h = (u = i,
                c = ln((l = e).objectStoreNames),
                {
                    schema: {
                        name: l.name,
                        tables: c.map((function(e) {
                            return u.objectStore(e)
                        }
                        )).map((function(e) {
                            var t = e.keyPath
                              , n = e.autoIncrement
                              , r = a(t)
                              , i = null == t
                              , o = {}
                              , s = {
                                name: e.name,
                                primaryKey: {
                                    name: null,
                                    isPrimaryKey: !0,
                                    outbound: i,
                                    compound: r,
                                    keyPath: t,
                                    autoIncrement: n,
                                    unique: !0,
                                    extractKey: on(t)
                                },
                                indexes: ln(e.indexNames).map((function(t) {
                                    return e.index(t)
                                }
                                )).map((function(e) {
                                    var t = e.name
                                      , n = e.unique
                                      , r = e.multiEntry
                                      , i = e.keyPath
                                      , s = {
                                        name: t,
                                        compound: a(i),
                                        keyPath: i,
                                        unique: n,
                                        multiEntry: r,
                                        extractKey: on(i)
                                    };
                                    return o[cn(i)] = s
                                }
                                )),
                                getIndexByKeyPath: function(e) {
                                    return o[cn(e)]
                                }
                            };
                            return o[":id"] = s.primaryKey,
                            null != t && (o[cn(t)] = s.primaryKey),
                            s
                        }
                        ))
                    },
                    hasGetAll: 0 < c.length && "getAll"in u.objectStore(c[0]) && !("undefined" != typeof navigator && /Safari/.test(navigator.userAgent) && !/(Chrome\/|Edge\/)/.test(navigator.userAgent) && [].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1] < 604)
                }), d = h.schema, f = h.hasGetAll, p = d.tables.map((function(e) {
                    var t, n = e.name;
                    return {
                        name: n,
                        schema: e,
                        mutate: function(t) {
                            var i = t.trans
                              , a = t.type
                              , o = t.keys
                              , l = t.values
                              , u = t.range
                              , c = t.wantResults;
                            return new Promise((function(t, h) {
                                t = Ye(t);
                                var d = i.objectStore(n)
                                  , f = null == d.keyPath
                                  , p = "put" === a || "add" === a;
                                if (!p && "delete" !== a && "deleteRange" !== a)
                                    throw new Error("Invalid operation type: " + a);
                                var m = (o || l || {
                                    length: 1
                                }).length;
                                if (o && l && o.length !== l.length)
                                    throw new Error("Given keys array must have same length as given values array.");
                                if (0 === m)
                                    return t({
                                        numFailures: 0,
                                        failures: {},
                                        results: [],
                                        lastResult: void 0
                                    });
                                function g(e) {
                                    ++w,
                                    $t(e),
                                    b && (b[e.target._reqno] = void 0),
                                    x[e.target._reqno] = e.target.error
                                }
                                function v(e) {
                                    var t = e.target;
                                    b[t._reqno] = t.result
                                }
                                var y, b = c && r(o || sn(e.primaryKey, {
                                    type: a,
                                    keys: o,
                                    values: l
                                })), x = [], w = 0;
                                if ("deleteRange" === a) {
                                    if (4 === u.type)
                                        return t({
                                            numFailures: w,
                                            failures: x,
                                            results: b,
                                            lastResult: void 0
                                        });
                                    y = 3 === u.type ? d.clear() : d.delete(s(u))
                                } else {
                                    var _ = p ? f ? [l, o] : [l, null] : [o, null]
                                      , E = _[0]
                                      , T = _[1];
                                    if (p)
                                        for (var S = 0; S < m; ++S)
                                            (y = T && void 0 !== T[S] ? d[a](E[S], T[S]) : d[a](E[S]))._reqno = S,
                                            b && void 0 === b[S] && (y.onsuccess = v),
                                            y.onerror = g;
                                    else
                                        for (S = 0; S < m; ++S)
                                            (y = d[a](E[S]))._reqno = S,
                                            y.onerror = g
                                }
                                function M(e) {
                                    var n = e.target.result;
                                    b && (b[m - 1] = n),
                                    t({
                                        numFailures: w,
                                        failures: x,
                                        results: b,
                                        lastResult: n
                                    })
                                }
                                y.onerror = function(e) {
                                    g(e),
                                    M(e)
                                }
                                ,
                                y.onsuccess = M
                            }
                            ))
                        },
                        getMany: function(e) {
                            var t = e.trans
                              , r = e.keys;
                            return new Promise((function(e, i) {
                                e = Ye(e);
                                for (var a, o = t.objectStore(n), s = r.length, l = new Array(s), u = 0, c = 0, h = function(t) {
                                    var n = t.target;
                                    l[n._pos] = n.result,
                                    ++c === u && e(l)
                                }, d = Qt(i), f = 0; f < s; ++f)
                                    null != r[f] && ((a = o.get(r[f]))._pos = f,
                                    a.onsuccess = h,
                                    a.onerror = d,
                                    ++u);
                                0 === u && e(l)
                            }
                            ))
                        },
                        get: function(e) {
                            var t = e.trans
                              , r = e.key;
                            return new Promise((function(e, i) {
                                e = Ye(e);
                                var a = t.objectStore(n).get(r);
                                a.onsuccess = function(t) {
                                    return e(t.target.result)
                                }
                                ,
                                a.onerror = Qt(i)
                            }
                            ))
                        },
                        query: (t = f,
                        function(e) {
                            return new Promise((function(r, i) {
                                r = Ye(r);
                                var a, o, l, u, c = e.trans, h = e.values, d = e.limit, f = e.query, p = d === 1 / 0 ? void 0 : d, m = f.index, g = f.range, v = c.objectStore(n), y = m.isPrimaryKey ? v : v.index(m.name), b = s(g);
                                if (0 === d)
                                    return r({
                                        result: []
                                    });
                                t ? ((a = h ? y.getAll(b, p) : y.getAllKeys(b, p)).onsuccess = function(e) {
                                    return r({
                                        result: e.target.result
                                    })
                                }
                                ,
                                a.onerror = Qt(i)) : (o = 0,
                                l = !h && "openKeyCursor"in y ? y.openKeyCursor(b) : y.openCursor(b),
                                u = [],
                                l.onsuccess = function(e) {
                                    var t = l.result;
                                    return t ? (u.push(h ? t.value : t.primaryKey),
                                    ++o === d ? r({
                                        result: u
                                    }) : void t.continue()) : r({
                                        result: u
                                    })
                                }
                                ,
                                l.onerror = Qt(i))
                            }
                            ))
                        }
                        ),
                        openCursor: function(e) {
                            var t = e.trans
                              , r = e.values
                              , i = e.query
                              , a = e.reverse
                              , o = e.unique;
                            return new Promise((function(e, l) {
                                e = Ye(e);
                                var u = i.index
                                  , c = i.range
                                  , h = t.objectStore(n)
                                  , d = u.isPrimaryKey ? h : h.index(u.name)
                                  , f = a ? o ? "prevunique" : "prev" : o ? "nextunique" : "next"
                                  , p = !r && "openKeyCursor"in d ? d.openKeyCursor(s(c), f) : d.openCursor(s(c), f);
                                p.onerror = Qt(l),
                                p.onsuccess = Ye((function(n) {
                                    var r, i, a, o, s = p.result;
                                    s ? (s.___id = ++un,
                                    s.done = !1,
                                    r = s.continue.bind(s),
                                    i = (i = s.continuePrimaryKey) && i.bind(s),
                                    a = s.advance.bind(s),
                                    o = function() {
                                        throw new Error("Cursor not stopped")
                                    }
                                    ,
                                    s.trans = t,
                                    s.stop = s.continue = s.continuePrimaryKey = s.advance = function() {
                                        throw new Error("Cursor not started")
                                    }
                                    ,
                                    s.fail = Ye(l),
                                    s.next = function() {
                                        var e = this
                                          , t = 1;
                                        return this.start((function() {
                                            return t-- ? e.continue() : e.stop()
                                        }
                                        )).then((function() {
                                            return e
                                        }
                                        ))
                                    }
                                    ,
                                    s.start = function(e) {
                                        function t() {
                                            if (p.result)
                                                try {
                                                    e()
                                                } catch (e) {
                                                    s.fail(e)
                                                }
                                            else
                                                s.done = !0,
                                                s.start = function() {
                                                    throw new Error("Cursor behind last entry")
                                                }
                                                ,
                                                s.stop()
                                        }
                                        var n = new Promise((function(e, t) {
                                            e = Ye(e),
                                            p.onerror = Qt(t),
                                            s.fail = t,
                                            s.stop = function(t) {
                                                s.stop = s.continue = s.continuePrimaryKey = s.advance = o,
                                                e(t)
                                            }
                                        }
                                        ));
                                        return p.onsuccess = Ye((function(e) {
                                            (p.onsuccess = t)()
                                        }
                                        )),
                                        s.continue = r,
                                        s.continuePrimaryKey = i,
                                        s.advance = a,
                                        t(),
                                        n
                                    }
                                    ,
                                    e(s)) : e(null)
                                }
                                ), l)
                            }
                            ))
                        },
                        count: function(e) {
                            var t = e.query
                              , r = e.trans
                              , i = t.index
                              , a = t.range;
                            return new Promise((function(e, t) {
                                var o = r.objectStore(n)
                                  , l = i.isPrimaryKey ? o : o.index(i.name)
                                  , u = s(a)
                                  , c = u ? l.count(u) : l.count();
                                c.onsuccess = Ye((function(t) {
                                    return e(t.target.result)
                                }
                                )),
                                c.onerror = Qt(t)
                            }
                            ))
                        }
                    }
                }
                )), m = {};
                return p.forEach((function(e) {
                    return m[e.name] = e
                }
                )),
                {
                    stack: "dbcore",
                    transaction: e.transaction.bind(e),
                    table: function(e) {
                        if (!m[e])
                            throw new Error("Table '" + e + "' not found");
                        return m[e]
                    },
                    cmp: o,
                    MIN_KEY: -1 / 0,
                    MAX_KEY: Jt(n),
                    schema: d
                }
            }
            function dn(t, n) {
                var r = n.db
                  , i = function(t, n, r, i) {
                    var a, o = r.IDBKeyRange;
                    return {
                        dbcore: (a = hn(n, r.indexedDB, o, i),
                        t.dbcore.reduce((function(t, n) {
                            var r = n.create;
                            return e(e({}, t), r(t))
                        }
                        ), a))
                    }
                }(t._middlewares, r, t._deps, n);
                t.core = i.dbcore,
                t.tables.forEach((function(e) {
                    var n = e.name;
                    t.core.schema.tables.some((function(e) {
                        return e.name === n
                    }
                    )) && (e.core = t.core.table(n),
                    t[n]instanceof t.Table && (t[n].core = e.core))
                }
                ))
            }
            function fn(e, t, n, r) {
                n.forEach((function(n) {
                    var i = r[n];
                    t.forEach((function(t) {
                        n in t || (t === e.Transaction.prototype || t instanceof e.Transaction ? f(t, n, {
                            get: function() {
                                return this.table(n)
                            },
                            set: function(e) {
                                d(this, n, {
                                    value: e,
                                    writable: !0,
                                    configurable: !0,
                                    enumerable: !0
                                })
                            }
                        }) : t[n] = new e.Table(n,i))
                    }
                    ))
                }
                ))
            }
            function pn(e, t) {
                t.forEach((function(t) {
                    for (var n in t)
                        t[n]instanceof e.Table && delete t[n]
                }
                ))
            }
            function mn(e, t) {
                return e._cfg.version - t._cfg.version
            }
            function gn(e, t, n, r) {
                var i = e.db.createObjectStore(t, n.keyPath ? {
                    keyPath: n.keyPath,
                    autoIncrement: n.auto
                } : {
                    autoIncrement: n.auto
                });
                return r.forEach((function(e) {
                    return vn(i, e)
                }
                )),
                i
            }
            function vn(e, t) {
                e.createIndex(t.name, t.keyPath, {
                    unique: t.unique,
                    multiEntry: t.multi
                })
            }
            function yn(e, t, n) {
                var r = {};
                return v(t.objectStoreNames, 0).forEach((function(e) {
                    for (var t = n.objectStore(e), i = nn(rn(l = t.keyPath), l || "", !1, !1, !!t.autoIncrement, l && "string" != typeof l, !0), a = [], o = 0; o < t.indexNames.length; ++o) {
                        var s = t.index(t.indexNames[o])
                          , l = s.keyPath
                          , u = nn(s.name, l, !!s.unique, !!s.multiEntry, !1, l && "string" != typeof l, !1);
                        a.push(u)
                    }
                    r[e] = an(e, i, a)
                }
                )),
                r
            }
            function bn(e, t, n) {
                for (var r = n.db.objectStoreNames, i = 0; i < r.length; ++i) {
                    var a = r[i]
                      , s = n.objectStore(a);
                    e._hasGetAll = "getAll"in s;
                    for (var l = 0; l < s.indexNames.length; ++l) {
                        var u, c = s.indexNames[l], h = s.index(c).keyPath, d = "string" == typeof h ? h : "[" + v(h).join("+") + "]";
                        !t[a] || (u = t[a].idxByName[d]) && (u.name = c,
                        delete t[a].idxByName[d],
                        t[a].idxByName[c] = u)
                    }
                }
                "undefined" != typeof navigator && /Safari/.test(navigator.userAgent) && !/(Chrome\/|Edge\/)/.test(navigator.userAgent) && o.WorkerGlobalScope && o instanceof o.WorkerGlobalScope && [].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1] < 604 && (e._hasGetAll = !1)
            }
            var xn, wn = (_n.prototype._parseStoresSpec = function(e, t) {
                i(e).forEach((function(n) {
                    if (null !== e[n]) {
                        var r = e[n].split(",").map((function(e, t) {
                            var n = (e = e.trim()).replace(/([&*]|\+\+)/g, "")
                              , r = /^\[/.test(n) ? n.match(/^\[(.*)\]$/)[1].split("+") : n;
                            return nn(n, r || null, /\&/.test(e), /\*/.test(e), /\+\+/.test(e), a(r), 0 === t)
                        }
                        ))
                          , i = r.shift();
                        if (i.multi)
                            throw new te.Schema("Primary key cannot be multi-valued");
                        r.forEach((function(e) {
                            if (e.auto)
                                throw new te.Schema("Only primary key can be marked as autoIncrement (++)");
                            if (!e.keyPath)
                                throw new te.Schema("Index must have a name and cannot be an empty string")
                        }
                        )),
                        t[n] = an(n, i, r)
                    }
                }
                ))
            }
            ,
            _n.prototype.stores = function(e) {
                var t = this.db;
                this._cfg.storesSource = this._cfg.storesSource ? s(this._cfg.storesSource, e) : e;
                var n = t._versions
                  , r = {}
                  , a = {};
                return n.forEach((function(e) {
                    s(r, e._cfg.storesSource),
                    a = e._cfg.dbschema = {},
                    e._parseStoresSpec(r, a)
                }
                )),
                t._dbSchema = a,
                pn(t, [t._allTables, t, t.Transaction.prototype]),
                fn(t, [t._allTables, t, t.Transaction.prototype, this._cfg.tables], i(a), a),
                t._storeNames = i(a),
                this
            }
            ,
            _n.prototype.upgrade = function(e) {
                return this._cfg.contentUpgrade = e,
                this
            }
            ,
            _n);
            function _n() {}
            function En(e) {
                return tt((function() {
                    return Pe.letThrough = !0,
                    e()
                }
                ))
            }
            function Tn(e) {
                var t = e._state
                  , n = e._deps.indexedDB;
                if (t.isBeingOpened || e.idbdb)
                    return t.dbReadyPromise.then((function() {
                        return t.dbOpenError ? ft(t.dbOpenError) : e
                    }
                    ));
                z && (t.openCanceller._stackHolder = V()),
                t.isBeingOpened = !0,
                t.dbOpenError = null,
                t.openComplete = !1;
                var r = t.dbReadyResolve
                  , a = null;
                return Ie.race([t.openCanceller, new Ie((function(r, o) {
                    if (!n)
                        throw new te.MissingAPI("indexedDB API not found. If using IE10+, make sure to run your code on a server URL (not locally). If using old Safari versions, make sure to include indexedDB polyfill.");
                    var s = e.name
                      , l = t.autoSchema ? n.open(s) : n.open(s, Math.round(10 * e.verno));
                    if (!l)
                        throw new te.MissingAPI("IndexedDB API not available");
                    l.onerror = Qt(o),
                    l.onblocked = Ye(e._fireOnBlocked),
                    l.onupgradeneeded = Ye((function(r) {
                        var u, c;
                        a = l.transaction,
                        t.autoSchema && !e._options.allowEmptyDB ? (l.onerror = $t,
                        a.abort(),
                        l.result.close(),
                        (u = n.deleteDatabase(s)).onsuccess = u.onerror = Ye((function() {
                            o(new te.NoSuchDatabase("Database " + s + " doesnt exist"))
                        }
                        ))) : (a.onerror = Qt(o),
                        c = r.oldVersion > Math.pow(2, 62) ? 0 : r.oldVersion,
                        e.idbdb = l.result,
                        function(e, t, n, r) {
                            var a = e._dbSchema
                              , o = e._createTransaction("readwrite", e._storeNames, a);
                            o.create(n),
                            o._completion.catch(r);
                            var s = o._reject.bind(o)
                              , l = Pe.transless || Pe;
                            tt((function() {
                                var r, u, c, h, d, f, p, m;
                                Pe.trans = o,
                                Pe.transless = l,
                                0 === t ? (i(a).forEach((function(e) {
                                    gn(n, e, a[e].primKey, a[e].indexes)
                                }
                                )),
                                dn(e, n),
                                Ie.follow((function() {
                                    return e.on.populate.fire(o)
                                }
                                )).catch(s)) : (u = t,
                                c = o,
                                h = n,
                                d = [],
                                f = (r = e)._versions,
                                p = r._dbSchema = yn(0, r.idbdb, h),
                                m = !1,
                                f.filter((function(e) {
                                    return e._cfg.version >= u
                                }
                                )).forEach((function(e) {
                                    d.push((function() {
                                        var t = p
                                          , n = e._cfg.dbschema;
                                        bn(r, t, h),
                                        bn(r, n, h),
                                        p = r._dbSchema = n;
                                        var a = function(e, t) {
                                            var n, r = {
                                                del: [],
                                                add: [],
                                                change: []
                                            };
                                            for (n in e)
                                                t[n] || r.del.push(n);
                                            for (n in t) {
                                                var i = e[n]
                                                  , a = t[n];
                                                if (i) {
                                                    var o = {
                                                        name: n,
                                                        def: a,
                                                        recreate: !1,
                                                        del: [],
                                                        add: [],
                                                        change: []
                                                    };
                                                    if (i.primKey.src === a.primKey.src || bt) {
                                                        var s = i.idxByName
                                                          , l = a.idxByName
                                                          , u = void 0;
                                                        for (u in s)
                                                            l[u] || o.del.push(u);
                                                        for (u in l) {
                                                            var c = s[u]
                                                              , h = l[u];
                                                            c ? c.src !== h.src && o.change.push(h) : o.add.push(h)
                                                        }
                                                        (0 < o.del.length || 0 < o.add.length || 0 < o.change.length) && r.change.push(o)
                                                    } else
                                                        o.recreate = !0,
                                                        r.change.push(o)
                                                } else
                                                    r.add.push([n, a])
                                            }
                                            return r
                                        }(t, n);
                                        a.add.forEach((function(e) {
                                            gn(h, e[0], e[1].primKey, e[1].indexes)
                                        }
                                        )),
                                        a.change.forEach((function(e) {
                                            if (e.recreate)
                                                throw new te.Upgrade("Not yet support for changing primary key");
                                            var t = h.objectStore(e.name);
                                            e.add.forEach((function(e) {
                                                return vn(t, e)
                                            }
                                            )),
                                            e.change.forEach((function(e) {
                                                t.deleteIndex(e.name),
                                                vn(t, e)
                                            }
                                            )),
                                            e.del.forEach((function(e) {
                                                return t.deleteIndex(e)
                                            }
                                            ))
                                        }
                                        ));
                                        var o = e._cfg.contentUpgrade;
                                        if (o && e._cfg.version > u) {
                                            dn(r, h),
                                            m = !0;
                                            var s = T(n);
                                            a.del.forEach((function(e) {
                                                s[e] = t[e]
                                            }
                                            )),
                                            pn(r, [r.Transaction.prototype]),
                                            fn(r, [r.Transaction.prototype], i(s), s),
                                            c.schema = s;
                                            var l, d = B(o);
                                            d && nt();
                                            var f = Ie.follow((function() {
                                                var e;
                                                (l = o(c)) && d && (e = rt.bind(null, null),
                                                l.then(e, e))
                                            }
                                            ));
                                            return l && "function" == typeof l.then ? Ie.resolve(l) : f.then((function() {
                                                return l
                                            }
                                            ))
                                        }
                                    }
                                    )),
                                    d.push((function(t) {
                                        m && xt || function(e, t) {
                                            for (var n = 0; n < t.db.objectStoreNames.length; ++n) {
                                                var r = t.db.objectStoreNames[n];
                                                null == e[r] && t.db.deleteObjectStore(r)
                                            }
                                        }(e._cfg.dbschema, t),
                                        pn(r, [r.Transaction.prototype]),
                                        fn(r, [r.Transaction.prototype], r._storeNames, r._dbSchema),
                                        c.schema = r._dbSchema
                                    }
                                    ))
                                }
                                )),
                                function e() {
                                    return d.length ? Ie.resolve(d.shift()(c.idbtrans)).then(e) : Ie.resolve()
                                }().then((function() {
                                    var e, t;
                                    t = h,
                                    i(e = p).forEach((function(n) {
                                        t.db.objectStoreNames.contains(n) || gn(t, n, e[n].primKey, e[n].indexes)
                                    }
                                    ))
                                }
                                )).catch(s))
                            }
                            ))
                        }(e, c / 10, a, o))
                    }
                    ), o),
                    l.onsuccess = Ye((function() {
                        a = null;
                        var n = e.idbdb = l.result
                          , o = v(n.objectStoreNames);
                        if (0 < o.length)
                            try {
                                var u = n.transaction(Zt(o), "readonly");
                                t.autoSchema ? function(e, t, n) {
                                    e.verno = t.version / 10;
                                    var r = e._dbSchema = yn(0, t, n);
                                    e._storeNames = v(t.objectStoreNames, 0),
                                    fn(e, [e._allTables], i(r), r)
                                }(e, n, u) : bn(e, e._dbSchema, u),
                                dn(e, u)
                            } catch (n) {}
                        yt.push(e),
                        n.onversionchange = Ye((function(n) {
                            t.vcFired = !0,
                            e.on("versionchange").fire(n)
                        }
                        )),
                        xn.add(s),
                        r()
                    }
                    ), o)
                }
                ))]).then((function() {
                    return t.onReadyBeingFired = [],
                    Ie.resolve(En(e.on.ready.fire)).then((function e() {
                        if (0 < t.onReadyBeingFired.length) {
                            var n = t.onReadyBeingFired.reduce(de, ie);
                            return t.onReadyBeingFired = [],
                            Ie.resolve(En(n)).then(e)
                        }
                    }
                    ))
                }
                )).finally((function() {
                    t.onReadyBeingFired = null
                }
                )).then((function() {
                    return t.isBeingOpened = !1,
                    e
                }
                )).catch((function(n) {
                    try {
                        a && a.abort()
                    } catch (n) {}
                    return t.isBeingOpened = !1,
                    e.close(),
                    t.dbOpenError = n,
                    ft(t.dbOpenError)
                }
                )).finally((function() {
                    t.openComplete = !0,
                    r()
                }
                ))
            }
            function Sn(e) {
                function t(t) {
                    return e.next(t)
                }
                var n = i(t)
                  , r = i((function(t) {
                    return e.throw(t)
                }
                ));
                function i(e) {
                    return function(t) {
                        var i = e(t)
                          , o = i.value;
                        return i.done ? o : o && "function" == typeof o.then ? o.then(n, r) : a(o) ? Promise.all(o).then(n, r) : n(o)
                    }
                }
                return i(t)()
            }
            function Mn(e, t, n) {
                for (var r = a(e) ? e.slice() : [e], i = 0; i < n; ++i)
                    r.push(t);
                return r
            }
            var An = {
                stack: "dbcore",
                name: "VirtualIndexMiddleware",
                level: 1,
                create: function(t) {
                    return e(e({}, t), {
                        table: function(n) {
                            var r = t.table(n)
                              , i = r.schema
                              , a = {}
                              , o = [];
                            function s(t, n, r) {
                                var i = cn(t)
                                  , l = a[i] = a[i] || []
                                  , u = null == t ? 0 : "string" == typeof t ? 1 : t.length
                                  , c = 0 < n
                                  , h = e(e({}, r), {
                                    isVirtual: c,
                                    isPrimaryKey: !c && r.isPrimaryKey,
                                    keyTail: n,
                                    keyLength: u,
                                    extractKey: on(t),
                                    unique: !c && r.unique
                                });
                                return l.push(h),
                                h.isPrimaryKey || o.push(h),
                                1 < u && s(2 === u ? t[0] : t.slice(0, u - 1), n + 1, r),
                                l.sort((function(e, t) {
                                    return e.keyTail - t.keyTail
                                }
                                )),
                                h
                            }
                            var l = s(i.primaryKey.keyPath, 0, i.primaryKey);
                            a[":id"] = [l];
                            for (var u = 0, c = i.indexes; u < c.length; u++) {
                                var h = c[u];
                                s(h.keyPath, 0, h)
                            }
                            function d(n) {
                                var r, i, a = n.query.index;
                                return a.isVirtual ? e(e({}, n), {
                                    query: {
                                        index: a,
                                        range: (r = n.query.range,
                                        i = a.keyTail,
                                        {
                                            type: 1 === r.type ? 2 : r.type,
                                            lower: Mn(r.lower, r.lowerOpen ? t.MAX_KEY : t.MIN_KEY, i),
                                            lowerOpen: !0,
                                            upper: Mn(r.upper, r.upperOpen ? t.MIN_KEY : t.MAX_KEY, i),
                                            upperOpen: !0
                                        })
                                    }
                                }) : n
                            }
                            return e(e({}, r), {
                                schema: e(e({}, i), {
                                    primaryKey: l,
                                    indexes: o,
                                    getIndexByKeyPath: function(e) {
                                        var t = a[cn(e)];
                                        return t && t[0]
                                    }
                                }),
                                count: function(e) {
                                    return r.count(d(e))
                                },
                                query: function(e) {
                                    return r.query(d(e))
                                },
                                openCursor: function(e) {
                                    var n = e.query.index
                                      , i = n.keyTail
                                      , a = n.isVirtual
                                      , o = n.keyLength;
                                    return a ? r.openCursor(d(e)).then((function(n) {
                                        return n && function(n) {
                                            return Object.create(n, {
                                                continue: {
                                                    value: function(r) {
                                                        null != r ? n.continue(Mn(r, e.reverse ? t.MAX_KEY : t.MIN_KEY, i)) : e.unique ? n.continue(Mn(n.key, e.reverse ? t.MIN_KEY : t.MAX_KEY, i)) : n.continue()
                                                    }
                                                },
                                                continuePrimaryKey: {
                                                    value: function(e, r) {
                                                        n.continuePrimaryKey(Mn(e, t.MAX_KEY, i), r)
                                                    }
                                                },
                                                key: {
                                                    get: function() {
                                                        var e = n.key;
                                                        return 1 === o ? e[0] : e.slice(0, o)
                                                    }
                                                },
                                                value: {
                                                    get: function() {
                                                        return n.value
                                                    }
                                                }
                                            })
                                        }(n)
                                    }
                                    )) : r.openCursor(e)
                                }
                            })
                        }
                    })
                }
            }
              , Rn = {
                stack: "dbcore",
                name: "HooksMiddleware",
                level: 2,
                create: function(t) {
                    return e(e({}, t), {
                        table: function(n) {
                            var i = t.table(n)
                              , a = i.schema.primaryKey;
                            return e(e({}, i), {
                                mutate: function(t) {
                                    var o = Pe.trans
                                      , s = o.table(n).hook
                                      , l = s.deleting
                                      , u = s.creating
                                      , c = s.updating;
                                    switch (t.type) {
                                    case "add":
                                        if (u.fire === ie)
                                            break;
                                        return o._promise("readwrite", (function() {
                                            return h(t)
                                        }
                                        ), !0);
                                    case "put":
                                        if (u.fire === ie && c.fire === ie)
                                            break;
                                        return o._promise("readwrite", (function() {
                                            return h(t)
                                        }
                                        ), !0);
                                    case "delete":
                                        if (l.fire === ie)
                                            break;
                                        return o._promise("readwrite", (function() {
                                            return h(t)
                                        }
                                        ), !0);
                                    case "deleteRange":
                                        if (l.fire === ie)
                                            break;
                                        return o._promise("readwrite", (function() {
                                            return function t(n, r, o) {
                                                return i.query({
                                                    trans: n,
                                                    values: !1,
                                                    query: {
                                                        index: a,
                                                        range: r
                                                    },
                                                    limit: o
                                                }).then((function(i) {
                                                    var a = i.result;
                                                    return h({
                                                        type: "delete",
                                                        keys: a,
                                                        trans: n
                                                    }).then((function(i) {
                                                        return 0 < i.numFailures ? Promise.reject(i.failures[0]) : a.length < o ? {
                                                            failures: [],
                                                            numFailures: 0,
                                                            lastResult: void 0
                                                        } : t(n, e(e({}, r), {
                                                            lower: a[a.length - 1],
                                                            lowerOpen: !0
                                                        }), o)
                                                    }
                                                    ))
                                                }
                                                ))
                                            }((n = t).trans, n.range, 1e4);
                                            var n
                                        }
                                        ), !0)
                                    }
                                    return i.mutate(t);
                                    function h(t) {
                                        var n, o, s, h = Pe.trans, d = t.keys || sn(a, t);
                                        if (!d)
                                            throw new Error("Keys missing");
                                        return "delete" !== (t = "add" === t.type || "put" === t.type ? e(e({}, t), {
                                            keys: d,
                                            wantResults: !0
                                        }) : e({}, t)).type && (t.values = r(t.values)),
                                        t.keys && (t.keys = r(t.keys)),
                                        n = i,
                                        s = d,
                                        ("add" === (o = t).type ? Promise.resolve(new Array(o.values.length)) : n.getMany({
                                            trans: o.trans,
                                            keys: s
                                        })).then((function(e) {
                                            var n = d.map((function(n, r) {
                                                var i, o, s, d, f = e[r], p = {
                                                    onerror: null,
                                                    onsuccess: null
                                                };
                                                return "delete" === t.type ? l.fire.call(p, n, f, h) : "add" === t.type || void 0 === f ? (i = u.fire.call(p, n, t.values[r], h),
                                                null == n && null != i && (n = i,
                                                t.keys[r] = n,
                                                a.outbound || E(t.values[r], a.keyPath, n))) : (o = D(f, t.values[r]),
                                                (s = c.fire.call(p, o, n, f, h)) && (d = t.values[r],
                                                Object.keys(s).forEach((function(e) {
                                                    E(d, e, s[e])
                                                }
                                                )))),
                                                p
                                            }
                                            ));
                                            return i.mutate(t).then((function(r) {
                                                for (var i = r.failures, a = r.results, o = r.numFailures, s = r.lastResult, l = 0; l < d.length; ++l) {
                                                    var u = a ? a[l] : d[l]
                                                      , c = n[l];
                                                    null == u ? c.onerror && c.onerror(i[l]) : c.onsuccess && c.onsuccess("put" === t.type && e[l] ? t.values[l] : u)
                                                }
                                                return {
                                                    failures: i,
                                                    results: a,
                                                    numFailures: o,
                                                    lastResult: s
                                                }
                                            }
                                            )).catch((function(e) {
                                                return n.forEach((function(t) {
                                                    return t.onerror && t.onerror(e)
                                                }
                                                )),
                                                Promise.reject(e)
                                            }
                                            ))
                                        }
                                        ))
                                    }
                                }
                            })
                        }
                    })
                }
            }
              , Ln = (Cn.prototype.version = function(e) {
                if (isNaN(e) || e < .1)
                    throw new te.Type("Given version is not a positive number");
                if (e = Math.round(10 * e) / 10,
                this.idbdb || this._state.isBeingOpened)
                    throw new te.Schema("Cannot add version when database is open");
                this.verno = Math.max(this.verno, e);
                var t = this._versions
                  , n = t.filter((function(t) {
                    return t._cfg.version === e
                }
                ))[0];
                return n || (n = new this.Version(e),
                t.push(n),
                t.sort(mn),
                n.stores({}),
                this._state.autoSchema = !1,
                n)
            }
            ,
            Cn.prototype._whenReady = function(e) {
                var t = this;
                return this._state.openComplete || Pe.letThrough ? e() : new Ie((function(e, n) {
                    if (!t._state.isBeingOpened) {
                        if (!t._options.autoOpen)
                            return void n(new te.DatabaseClosed);
                        t.open().catch(ie)
                    }
                    t._state.dbReadyPromise.then(e, n)
                }
                )).then(e)
            }
            ,
            Cn.prototype.use = function(e) {
                var t = e.stack
                  , n = e.create
                  , r = e.level
                  , i = e.name;
                i && this.unuse({
                    stack: t,
                    name: i
                });
                var a = this._middlewares[t] || (this._middlewares[t] = []);
                return a.push({
                    stack: t,
                    create: n,
                    level: null == r ? 10 : r,
                    name: i
                }),
                a.sort((function(e, t) {
                    return e.level - t.level
                }
                )),
                this
            }
            ,
            Cn.prototype.unuse = function(e) {
                var t = e.stack
                  , n = e.name
                  , r = e.create;
                return t && this._middlewares[t] && (this._middlewares[t] = this._middlewares[t].filter((function(e) {
                    return r ? e.create !== r : !!n && e.name !== n
                }
                ))),
                this
            }
            ,
            Cn.prototype.open = function() {
                return Tn(this)
            }
            ,
            Cn.prototype.close = function() {
                var e = yt.indexOf(this)
                  , t = this._state;
                if (0 <= e && yt.splice(e, 1),
                this.idbdb) {
                    try {
                        this.idbdb.close()
                    } catch (e) {}
                    this.idbdb = null
                }
                this._options.autoOpen = !1,
                t.dbOpenError = new te.DatabaseClosed,
                t.isBeingOpened && t.cancelOpen(t.dbOpenError),
                t.dbReadyPromise = new Ie((function(e) {
                    t.dbReadyResolve = e
                }
                )),
                t.openCanceller = new Ie((function(e, n) {
                    t.cancelOpen = n
                }
                ))
            }
            ,
            Cn.prototype.delete = function() {
                var e = this
                  , t = 0 < arguments.length
                  , n = this._state;
                return new Ie((function(r, i) {
                    function a() {
                        e.close();
                        var t = e._deps.indexedDB.deleteDatabase(e.name);
                        t.onsuccess = Ye((function() {
                            xn.remove(e.name),
                            r()
                        }
                        )),
                        t.onerror = Qt(i),
                        t.onblocked = e._fireOnBlocked
                    }
                    if (t)
                        throw new te.InvalidArgument("Arguments not allowed in db.delete()");
                    n.isBeingOpened ? n.dbReadyPromise.then(a) : a()
                }
                ))
            }
            ,
            Cn.prototype.backendDB = function() {
                return this.idbdb
            }
            ,
            Cn.prototype.isOpen = function() {
                return null !== this.idbdb
            }
            ,
            Cn.prototype.hasBeenClosed = function() {
                var e = this._state.dbOpenError;
                return e && "DatabaseClosed" === e.name
            }
            ,
            Cn.prototype.hasFailed = function() {
                return null !== this._state.dbOpenError
            }
            ,
            Cn.prototype.dynamicallyOpened = function() {
                return this._state.autoSchema
            }
            ,
            Object.defineProperty(Cn.prototype, "tables", {
                get: function() {
                    var e = this;
                    return i(this._allTables).map((function(t) {
                        return e._allTables[t]
                    }
                    ))
                },
                enumerable: !0,
                configurable: !0
            }),
            Cn.prototype.transaction = function() {
                var e = function(e, t, n) {
                    var r = arguments.length;
                    if (r < 2)
                        throw new te.InvalidArgument("Too few arguments");
                    for (var i = new Array(r - 1); --r; )
                        i[r - 1] = arguments[r];
                    return n = i.pop(),
                    [e, M(i), n]
                }
                .apply(this, arguments);
                return this._transaction.apply(this, e)
            }
            ,
            Cn.prototype._transaction = function(e, t, n) {
                var r = this
                  , i = Pe.trans;
                i && i.db === this && -1 === e.indexOf("!") || (i = null);
                var a, o, s = -1 !== e.indexOf("?");
                e = e.replace("!", "").replace("?", "");
                try {
                    if (o = t.map((function(e) {
                        var t = e instanceof r.Table ? e.name : e;
                        if ("string" != typeof t)
                            throw new TypeError("Invalid table argument to Dexie.transaction(). Only Table or String are allowed");
                        return t
                    }
                    )),
                    "r" == e || e === Et)
                        a = Et;
                    else {
                        if ("rw" != e && e != Tt)
                            throw new te.InvalidArgument("Invalid transaction mode: " + e);
                        a = Tt
                    }
                    if (i) {
                        if (i.mode === Et && a === Tt) {
                            if (!s)
                                throw new te.SubTransaction("Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY");
                            i = null
                        }
                        i && o.forEach((function(e) {
                            if (i && -1 === i.storeNames.indexOf(e)) {
                                if (!s)
                                    throw new te.SubTransaction("Table " + e + " not included in parent transaction.");
                                i = null
                            }
                        }
                        )),
                        s && i && !i.active && (i = null)
                    }
                } catch (n) {
                    return i ? i._promise(null, (function(e, t) {
                        t(n)
                    }
                    )) : ft(n)
                }
                var l = function(e, t, n, r, i) {
                    return Ie.resolve().then((function() {
                        var a = Pe.transless || Pe
                          , o = e._createTransaction(t, n, e._dbSchema, r)
                          , s = {
                            trans: o,
                            transless: a
                        };
                        r ? o.idbtrans = r.idbtrans : o.create();
                        var l, u = B(i);
                        u && nt();
                        var c = Ie.follow((function() {
                            var e;
                            (l = i.call(o, o)) && (u ? (e = rt.bind(null, null),
                            l.then(e, e)) : "function" == typeof l.next && "function" == typeof l.throw && (l = Sn(l)))
                        }
                        ), s);
                        return (l && "function" == typeof l.then ? Ie.resolve(l).then((function(e) {
                            return o.active ? e : ft(new te.PrematureCommit("Transaction committed too early. See http://bit.ly/2kdckMn"))
                        }
                        )) : c.then((function() {
                            return l
                        }
                        ))).then((function(e) {
                            return r && o._resolve(),
                            o._completion.then((function() {
                                return e
                            }
                            ))
                        }
                        )).catch((function(e) {
                            return o._reject(e),
                            ft(e)
                        }
                        ))
                    }
                    ))
                }
                .bind(null, this, a, o, i, n);
                return i ? i._promise(a, l, "lock") : Pe.trans ? lt(Pe.transless, (function() {
                    return r._whenReady(l)
                }
                )) : this._whenReady(l)
            }
            ,
            Cn.prototype.table = function(e) {
                if (!c(this._allTables, e))
                    throw new te.InvalidTable("Table " + e + " does not exist");
                return this._allTables[e]
            }
            ,
            Cn);
            function Cn(t, n) {
                var r = this;
                this._middlewares = {},
                this.verno = 0;
                var i = Cn.dependencies;
                this._options = n = e({
                    addons: Cn.addons,
                    autoOpen: !0,
                    indexedDB: i.indexedDB,
                    IDBKeyRange: i.IDBKeyRange
                }, n),
                this._deps = {
                    indexedDB: n.indexedDB,
                    IDBKeyRange: n.IDBKeyRange
                };
                var a = n.addons;
                this._dbSchema = {},
                this._versions = [],
                this._storeNames = [],
                this._allTables = {};
                var o, s, l, u, c, h = {
                    dbOpenError: this.idbdb = null,
                    isBeingOpened: !1,
                    onReadyBeingFired: null,
                    openComplete: !1,
                    dbReadyResolve: ie,
                    dbReadyPromise: null,
                    cancelOpen: ie,
                    openCanceller: null,
                    autoSchema: !0
                };
                h.dbReadyPromise = new Ie((function(e) {
                    h.dbReadyResolve = e
                }
                )),
                h.openCanceller = new Ie((function(e, t) {
                    h.cancelOpen = t
                }
                )),
                this._state = h,
                this.name = t,
                this.on = Lt(this, "populate", "blocked", "versionchange", {
                    ready: [de, ie]
                }),
                this.on.ready.subscribe = y(this.on.ready.subscribe, (function(e) {
                    return function(t, n) {
                        Cn.vip((function() {
                            var i, a = r._state;
                            a.openComplete ? (a.dbOpenError || Ie.resolve().then(t),
                            n && e(t)) : a.onReadyBeingFired ? (a.onReadyBeingFired.push(t),
                            n && e(t)) : (e(t),
                            i = r,
                            n || e((function e() {
                                i.on.ready.unsubscribe(t),
                                i.on.ready.unsubscribe(e)
                            }
                            )))
                        }
                        ))
                    }
                }
                )),
                this.Collection = (o = this,
                Ct(Ut.prototype, (function(e, t) {
                    this.db = o;
                    var n = Mt
                      , r = null;
                    if (t)
                        try {
                            n = t()
                        } catch (e) {
                            r = e
                        }
                    var i = e._ctx
                      , a = i.table
                      , s = a.hook.reading.fire;
                    this._ctx = {
                        table: a,
                        index: i.index,
                        isPrimKey: !i.index || a.schema.primKey.keyPath && i.index === a.schema.primKey.name,
                        range: n,
                        keysOnly: !1,
                        dir: "next",
                        unique: "",
                        algorithm: null,
                        filter: null,
                        replayFilter: null,
                        justLimit: !0,
                        isMatch: null,
                        offset: 0,
                        limit: 1 / 0,
                        error: r,
                        or: i.or,
                        valueMapper: s !== ae ? s : null
                    }
                }
                ))),
                this.Table = (s = this,
                Ct(At.prototype, (function(e, t, n) {
                    this.db = s,
                    this._tx = n,
                    this.name = e,
                    this.schema = t,
                    this.hook = s._allTables[e] ? s._allTables[e].hook : Lt(null, {
                        creating: [le, ie],
                        reading: [oe, ae],
                        updating: [ce, ie],
                        deleting: [ue, ie]
                    })
                }
                ))),
                this.Transaction = (l = this,
                Ct(en.prototype, (function(e, t, n, r) {
                    var i = this;
                    this.db = l,
                    this.mode = e,
                    this.storeNames = t,
                    this.schema = n,
                    this.idbtrans = null,
                    this.on = Lt(this, "complete", "error", "abort"),
                    this.parent = r || null,
                    this.active = !0,
                    this._reculock = 0,
                    this._blockedFuncs = [],
                    this._resolve = null,
                    this._reject = null,
                    this._waitingFor = null,
                    this._waitingQueue = null,
                    this._spinCount = 0,
                    this._completion = new Ie((function(e, t) {
                        i._resolve = e,
                        i._reject = t
                    }
                    )),
                    this._completion.then((function() {
                        i.active = !1,
                        i.on.complete.fire()
                    }
                    ), (function(e) {
                        var t = i.active;
                        return i.active = !1,
                        i.on.error.fire(e),
                        i.parent ? i.parent._reject(e) : t && i.idbtrans && i.idbtrans.abort(),
                        ft(e)
                    }
                    ))
                }
                ))),
                this.Version = (u = this,
                Ct(wn.prototype, (function(e) {
                    this.db = u,
                    this._cfg = {
                        version: e,
                        storesSource: null,
                        dbschema: {},
                        tables: {},
                        contentUpgrade: null
                    }
                }
                ))),
                this.WhereClause = (c = this,
                Ct(Yt.prototype, (function(e, t, n) {
                    this.db = c,
                    this._ctx = {
                        table: e,
                        index: ":id" === t ? null : t,
                        or: n
                    };
                    var r = c._deps.indexedDB;
                    if (!r)
                        throw new te.MissingAPI("indexedDB API missing");
                    this._cmp = this._ascending = r.cmp.bind(r),
                    this._descending = function(e, t) {
                        return r.cmp(t, e)
                    }
                    ,
                    this._max = function(e, t) {
                        return 0 < r.cmp(e, t) ? e : t
                    }
                    ,
                    this._min = function(e, t) {
                        return r.cmp(e, t) < 0 ? e : t
                    }
                    ,
                    this._IDBKeyRange = c._deps.IDBKeyRange
                }
                ))),
                this.on("versionchange", (function(e) {
                    0 < e.newVersion ? console.warn("Another connection wants to upgrade database '" + r.name + "'. Closing db now to resume the upgrade.") : console.warn("Another connection wants to delete database '" + r.name + "'. Closing db now to resume the delete request."),
                    r.close()
                }
                )),
                this.on("blocked", (function(e) {
                    !e.newVersion || e.newVersion < e.oldVersion ? console.warn("Dexie.delete('" + r.name + "') was blocked") : console.warn("Upgrade '" + r.name + "' blocked by other connection holding version " + e.oldVersion / 10)
                }
                )),
                this._maxKey = Jt(n.IDBKeyRange),
                this._createTransaction = function(e, t, n, i) {
                    return new r.Transaction(e,t,n,i)
                }
                ,
                this._fireOnBlocked = function(e) {
                    r.on("blocked").fire(e),
                    yt.filter((function(e) {
                        return e.name === r.name && e !== r && !e._state.vcFired
                    }
                    )).map((function(t) {
                        return t.on("versionchange").fire(e)
                    }
                    ))
                }
                ,
                this.use(An),
                this.use(Rn),
                a.forEach((function(e) {
                    return e(r)
                }
                ))
            }
            var Pn = Ln;
            return h(Pn, e(e({}, re), {
                delete: function(e) {
                    return new Pn(e).delete()
                },
                exists: function(e) {
                    return new Pn(e,{
                        addons: []
                    }).open().then((function(e) {
                        return e.close(),
                        !0
                    }
                    )).catch("NoSuchDatabaseError", (function() {
                        return !1
                    }
                    ))
                },
                getDatabaseNames: function(e) {
                    return xn ? xn.getDatabaseNames().then(e) : Ie.resolve([])
                },
                defineClass: function() {
                    return function(e) {
                        s(this, e)
                    }
                },
                ignoreTransaction: function(e) {
                    return Pe.trans ? lt(Pe.transless, e) : e()
                },
                vip: En,
                async: function(e) {
                    return function() {
                        try {
                            var t = Sn(e.apply(this, arguments));
                            return t && "function" == typeof t.then ? t : Ie.resolve(t)
                        } catch (t) {
                            return ft(t)
                        }
                    }
                },
                spawn: function(e, t, n) {
                    try {
                        var r = Sn(e.apply(n, t || []));
                        return r && "function" == typeof r.then ? r : Ie.resolve(r)
                    } catch (e) {
                        return ft(e)
                    }
                },
                currentTransaction: {
                    get: function() {
                        return Pe.trans || null
                    }
                },
                waitFor: function(e, t) {
                    var n = Ie.resolve("function" == typeof e ? Pn.ignoreTransaction(e) : e).timeout(t || 6e4);
                    return Pe.trans ? Pe.trans.waitFor(n) : n
                },
                Promise: Ie,
                debug: {
                    get: function() {
                        return z
                    },
                    set: function(e) {
                        G(e, "dexie" === e ? function() {
                            return !0
                        }
                        : pt)
                    }
                },
                derive: p,
                extend: s,
                props: h,
                override: y,
                Events: Lt,
                getByKeyPath: _,
                setByKeyPath: E,
                delByKeyPath: function(e, t) {
                    "string" == typeof t ? E(e, t, void 0) : "length"in t && [].map.call(t, (function(t) {
                        E(e, t, void 0)
                    }
                    ))
                },
                shallowClone: T,
                deepClone: C,
                getObjectDiff: D,
                asap: x,
                minKey: -1 / 0,
                addons: [],
                connections: yt,
                errnames: $,
                dependencies: function() {
                    try {
                        return {
                            indexedDB: o.indexedDB || o.mozIndexedDB || o.webkitIndexedDB || o.msIndexedDB,
                            IDBKeyRange: o.IDBKeyRange || o.webkitIDBKeyRange
                        }
                    } catch (e) {
                        return {
                            indexedDB: null,
                            IDBKeyRange: null
                        }
                    }
                }(),
                semVer: "3.0.2",
                version: "3.0.2".split(".").map((function(e) {
                    return parseInt(e)
                }
                )).reduce((function(e, t, n) {
                    return e + t / Math.pow(10, 2 * n)
                }
                )),
                default: Pn,
                Dexie: Pn
            })),
            Pn.maxKey = Jt(Pn.dependencies.IDBKeyRange),
            function(e) {
                try {
                    (i = (t = e) && "function" == typeof t.databases) || ((r = new Ln(_t,{
                        addons: []
                    })).version(1).stores({
                        dbnames: "name"
                    }),
                    n = r.table("dbnames")),
                    xn = {
                        getDatabaseNames: function() {
                            return i ? Ie.resolve(t.databases()).then((function(e) {
                                return e.map((function(e) {
                                    return e.name
                                }
                                )).filter((function(e) {
                                    return e !== _t
                                }
                                ))
                            }
                            )) : n.toCollection().primaryKeys()
                        },
                        add: function(e) {
                            return !i && e !== _t && n.put({
                                name: e
                            }).catch(ie)
                        },
                        remove: function(e) {
                            return !i && e !== _t && n.delete(e).catch(ie)
                        }
                    }
                } catch (e) {}
                var t, n, r, i
            }(Ln.dependencies.indexedDB),
            Ie.rejectionMapper = function(e, t) {
                if (!e || e instanceof X || e instanceof TypeError || e instanceof SyntaxError || !e.name || !ne[e.name])
                    return e;
                var n = new ne[e.name](t || e.message,e);
                return "stack"in e && f(n, "stack", {
                    get: function() {
                        return this.inner.stack
                    }
                }),
                n
            }
            ,
            G(z, pt),
            Ln
        }()
    }
    ).call(this, n(4), n(28).setImmediate)
}
, function(e, t, n) {
    var r = n(3)
      , i = n(10);
    "string" == typeof (i = i.__esModule ? i.default : i) && (i = [[e.i, i, ""]]);
    var a = {
        insert: "head",
        singleton: !1
    };
    r(i, a);
    e.exports = i.locals || {}
}
, function(e, t, n) {
    var r = n(2)
      , i = n(11);
    (t = r(!1)).i(i),
    t.push([e.i, "#sdk-iframe {\n  width: 100vw;\n  height: 100vh;\n}\n\nbody {\n  -ms-user-select: none;\n  -webkit-user-select: none;\n  user-select: none;\n  overflow: hidden;\n}\n\n.banner {\n  position: fixed;\n  bottom: calc(100% - 2em);\n  width: 100%;\n  height: 2em;\n  line-height: 2em;\n  background-color: #f5f4f3;\n  padding-left: 8px;\n  transition: bottom .5s .5s;\n}\n\n.banner.collapsed {\n  bottom: 100%;\n}\n\n.banner.error {\n  background-color: #ff3158;\n}\n\n/* debug */\nbody.has-saves {\n  overflow: scroll;\n  overflow-x: hidden;\n}\n\n.save {\n  margin: 0 32px;\n  width: 64px;\n  height: 25px;\n}\n\n.saves img {\n  width: 128px;\n  height: 128px;\n}\n", ""]),
    e.exports = t
}
, function(e, t, n) {
    var r = n(2)
      , i = n(12)
      , a = n(13)
      , o = n(14)
      , s = n(15);
    t = r(!1);
    var l = i(a)
      , u = i(o)
      , c = i(s, {
        hash: "#labs-paint"
    });
    t.push([e.i, "@font-face {\n  font-family: 'labs-paint';\n  src:\n    url(" + l + ") format('truetype'),\n    url(" + u + ") format('woff'),\n    url(" + c + ') format(\'svg\');\n  font-weight: normal;\n  font-style: normal;\n  font-display: block;\n}\n\n.icon {\n  /* use !important to prevent issues with browser extensions that change fonts */\n  font-family: \'labs-paint\' !important;\n  speak: never;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n\n  /* Better Font Rendering =========== */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.icon-dropper-fill:before {\n  content: "\\e901";\n}\n.icon-dropper-outline:before {\n  content: "\\e908";\n}\n.icon-dropper:before {\n  content: "\\e902";\n}\n.icon-bucket-fill:before {\n  content: "\\e906";\n}\n.icon-bucket:before {\n  content: "\\e907";\n}\n.icon-brush:before {\n  content: "\\e900";\n}\n.icon-history:before {\n  content: "\\e904";\n}\n.icon-checkmark:before {\n  content: "\\e905";\n}\n.icon-chevron-down:before {\n  content: "\\e909";\n}\n', ""]),
    e.exports = t
}
, function(e, t, n) {
    "use strict";
    e.exports = function(e, t) {
        return t || (t = {}),
        "string" != typeof (e = e && e.__esModule ? e.default : e) ? e : (/^['"].*['"]$/.test(e) && (e = e.slice(1, -1)),
        t.hash && (e += t.hash),
        /["'() \t\n]/.test(e) || t.needQuotes ? '"'.concat(e.replace(/"/g, '\\"').replace(/\n/g, "\\n"), '"') : e)
    }
}
, function(e, t, n) {
    "use strict";
    n.r(t),
    t.default = n.p + "fonts/labs-paint.ttf"
}
, function(e, t, n) {
    "use strict";
    n.r(t),
    t.default = n.p + "fonts/labs-paint.woff"
}
, function(e, t, n) {
    "use strict";
    n.r(t),
    t.default = n.p + "fonts/labs-paint.svg"
}
, function(e, t, n) {
    "use strict";
    /** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
    var r = n(6)
      , i = "function" == typeof Symbol && Symbol.for
      , a = i ? Symbol.for("react.element") : 60103
      , o = i ? Symbol.for("react.portal") : 60106
      , s = i ? Symbol.for("react.fragment") : 60107
      , l = i ? Symbol.for("react.strict_mode") : 60108
      , u = i ? Symbol.for("react.profiler") : 60114
      , c = i ? Symbol.for("react.provider") : 60109
      , h = i ? Symbol.for("react.context") : 60110
      , d = i ? Symbol.for("react.forward_ref") : 60112
      , f = i ? Symbol.for("react.suspense") : 60113
      , p = i ? Symbol.for("react.memo") : 60115
      , m = i ? Symbol.for("react.lazy") : 60116
      , g = "function" == typeof Symbol && Symbol.iterator;
    function v(e) {
        for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++)
            t += "&args[]=" + encodeURIComponent(arguments[n]);
        return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
    }
    var y = {
        isMounted: function() {
            return !1
        },
        enqueueForceUpdate: function() {},
        enqueueReplaceState: function() {},
        enqueueSetState: function() {}
    }
      , b = {};
    function x(e, t, n) {
        this.props = e,
        this.context = t,
        this.refs = b,
        this.updater = n || y
    }
    function w() {}
    function _(e, t, n) {
        this.props = e,
        this.context = t,
        this.refs = b,
        this.updater = n || y
    }
    x.prototype.isReactComponent = {},
    x.prototype.setState = function(e, t) {
        if ("object" != typeof e && "function" != typeof e && null != e)
            throw Error(v(85));
        this.updater.enqueueSetState(this, e, t, "setState")
    }
    ,
    x.prototype.forceUpdate = function(e) {
        this.updater.enqueueForceUpdate(this, e, "forceUpdate")
    }
    ,
    w.prototype = x.prototype;
    var E = _.prototype = new w;
    E.constructor = _,
    r(E, x.prototype),
    E.isPureReactComponent = !0;
    var T = {
        current: null
    }
      , S = Object.prototype.hasOwnProperty
      , M = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
    };
    function A(e, t, n) {
        var r, i = {}, o = null, s = null;
        if (null != t)
            for (r in void 0 !== t.ref && (s = t.ref),
            void 0 !== t.key && (o = "" + t.key),
            t)
                S.call(t, r) && !M.hasOwnProperty(r) && (i[r] = t[r]);
        var l = arguments.length - 2;
        if (1 === l)
            i.children = n;
        else if (1 < l) {
            for (var u = Array(l), c = 0; c < l; c++)
                u[c] = arguments[c + 2];
            i.children = u
        }
        if (e && e.defaultProps)
            for (r in l = e.defaultProps)
                void 0 === i[r] && (i[r] = l[r]);
        return {
            $$typeof: a,
            type: e,
            key: o,
            ref: s,
            props: i,
            _owner: T.current
        }
    }
    function R(e) {
        return "object" == typeof e && null !== e && e.$$typeof === a
    }
    var L = /\/+/g
      , C = [];
    function P(e, t, n, r) {
        if (C.length) {
            var i = C.pop();
            return i.result = e,
            i.keyPrefix = t,
            i.func = n,
            i.context = r,
            i.count = 0,
            i
        }
        return {
            result: e,
            keyPrefix: t,
            func: n,
            context: r,
            count: 0
        }
    }
    function O(e) {
        e.result = null,
        e.keyPrefix = null,
        e.func = null,
        e.context = null,
        e.count = 0,
        10 > C.length && C.push(e)
    }
    function k(e, t, n) {
        return null == e ? 0 : function e(t, n, r, i) {
            var s = typeof t;
            "undefined" !== s && "boolean" !== s || (t = null);
            var l = !1;
            if (null === t)
                l = !0;
            else
                switch (s) {
                case "string":
                case "number":
                    l = !0;
                    break;
                case "object":
                    switch (t.$$typeof) {
                    case a:
                    case o:
                        l = !0
                    }
                }
            if (l)
                return r(i, t, "" === n ? "." + D(t, 0) : n),
                1;
            if (l = 0,
            n = "" === n ? "." : n + ":",
            Array.isArray(t))
                for (var u = 0; u < t.length; u++) {
                    var c = n + D(s = t[u], u);
                    l += e(s, c, r, i)
                }
            else if (null === t || "object" != typeof t ? c = null : c = "function" == typeof (c = g && t[g] || t["@@iterator"]) ? c : null,
            "function" == typeof c)
                for (t = c.call(t),
                u = 0; !(s = t.next()).done; )
                    l += e(s = s.value, c = n + D(s, u++), r, i);
            else if ("object" === s)
                throw r = "" + t,
                Error(v(31, "[object Object]" === r ? "object with keys {" + Object.keys(t).join(", ") + "}" : r, ""));
            return l
        }(e, "", t, n)
    }
    function D(e, t) {
        return "object" == typeof e && null !== e && null != e.key ? function(e) {
            var t = {
                "=": "=0",
                ":": "=2"
            };
            return "$" + ("" + e).replace(/[=:]/g, (function(e) {
                return t[e]
            }
            ))
        }(e.key) : t.toString(36)
    }
    function I(e, t) {
        e.func.call(e.context, t, e.count++)
    }
    function N(e, t, n) {
        var r = e.result
          , i = e.keyPrefix;
        e = e.func.call(e.context, t, e.count++),
        Array.isArray(e) ? F(e, r, n, (function(e) {
            return e
        }
        )) : null != e && (R(e) && (e = function(e, t) {
            return {
                $$typeof: a,
                type: e.type,
                key: t,
                ref: e.ref,
                props: e.props,
                _owner: e._owner
            }
        }(e, i + (!e.key || t && t.key === e.key ? "" : ("" + e.key).replace(L, "$&/") + "/") + n)),
        r.push(e))
    }
    function F(e, t, n, r, i) {
        var a = "";
        null != n && (a = ("" + n).replace(L, "$&/") + "/"),
        k(e, N, t = P(t, a, r, i)),
        O(t)
    }
    var U = {
        current: null
    };
    function B() {
        var e = U.current;
        if (null === e)
            throw Error(v(321));
        return e
    }
    var z = {
        ReactCurrentDispatcher: U,
        ReactCurrentBatchConfig: {
            suspense: null
        },
        ReactCurrentOwner: T,
        IsSomeRendererActing: {
            current: !1
        },
        assign: r
    };
    t.Children = {
        map: function(e, t, n) {
            if (null == e)
                return e;
            var r = [];
            return F(e, r, null, t, n),
            r
        },
        forEach: function(e, t, n) {
            if (null == e)
                return e;
            k(e, I, t = P(null, null, t, n)),
            O(t)
        },
        count: function(e) {
            return k(e, (function() {
                return null
            }
            ), null)
        },
        toArray: function(e) {
            var t = [];
            return F(e, t, null, (function(e) {
                return e
            }
            )),
            t
        },
        only: function(e) {
            if (!R(e))
                throw Error(v(143));
            return e
        }
    },
    t.Component = x,
    t.Fragment = s,
    t.Profiler = u,
    t.PureComponent = _,
    t.StrictMode = l,
    t.Suspense = f,
    t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = z,
    t.cloneElement = function(e, t, n) {
        if (null == e)
            throw Error(v(267, e));
        var i = r({}, e.props)
          , o = e.key
          , s = e.ref
          , l = e._owner;
        if (null != t) {
            if (void 0 !== t.ref && (s = t.ref,
            l = T.current),
            void 0 !== t.key && (o = "" + t.key),
            e.type && e.type.defaultProps)
                var u = e.type.defaultProps;
            for (c in t)
                S.call(t, c) && !M.hasOwnProperty(c) && (i[c] = void 0 === t[c] && void 0 !== u ? u[c] : t[c])
        }
        var c = arguments.length - 2;
        if (1 === c)
            i.children = n;
        else if (1 < c) {
            u = Array(c);
            for (var h = 0; h < c; h++)
                u[h] = arguments[h + 2];
            i.children = u
        }
        return {
            $$typeof: a,
            type: e.type,
            key: o,
            ref: s,
            props: i,
            _owner: l
        }
    }
    ,
    t.createContext = function(e, t) {
        return void 0 === t && (t = null),
        (e = {
            $$typeof: h,
            _calculateChangedBits: t,
            _currentValue: e,
            _currentValue2: e,
            _threadCount: 0,
            Provider: null,
            Consumer: null
        }).Provider = {
            $$typeof: c,
            _context: e
        },
        e.Consumer = e
    }
    ,
    t.createElement = A,
    t.createFactory = function(e) {
        var t = A.bind(null, e);
        return t.type = e,
        t
    }
    ,
    t.createRef = function() {
        return {
            current: null
        }
    }
    ,
    t.forwardRef = function(e) {
        return {
            $$typeof: d,
            render: e
        }
    }
    ,
    t.isValidElement = R,
    t.lazy = function(e) {
        return {
            $$typeof: m,
            _ctor: e,
            _status: -1,
            _result: null
        }
    }
    ,
    t.memo = function(e, t) {
        return {
            $$typeof: p,
            type: e,
            compare: void 0 === t ? null : t
        }
    }
    ,
    t.useCallback = function(e, t) {
        return B().useCallback(e, t)
    }
    ,
    t.useContext = function(e, t) {
        return B().useContext(e, t)
    }
    ,
    t.useDebugValue = function() {}
    ,
    t.useEffect = function(e, t) {
        return B().useEffect(e, t)
    }
    ,
    t.useImperativeHandle = function(e, t, n) {
        return B().useImperativeHandle(e, t, n)
    }
    ,
    t.useLayoutEffect = function(e, t) {
        return B().useLayoutEffect(e, t)
    }
    ,
    t.useMemo = function(e, t) {
        return B().useMemo(e, t)
    }
    ,
    t.useReducer = function(e, t, n) {
        return B().useReducer(e, t, n)
    }
    ,
    t.useRef = function(e) {
        return B().useRef(e)
    }
    ,
    t.useState = function(e) {
        return B().useState(e)
    }
    ,
    t.version = "16.13.1"
}
, function(e, t, n) {
    "use strict";
    /** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
    var r = n(0)
      , i = n(6)
      , a = n(18);
    function o(e) {
        for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++)
            t += "&args[]=" + encodeURIComponent(arguments[n]);
        return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
    }
    if (!r)
        throw Error(o(227));
    function s(e, t, n, r, i, a, o, s, l) {
        var u = Array.prototype.slice.call(arguments, 3);
        try {
            t.apply(n, u)
        } catch (e) {
            this.onError(e)
        }
    }
    var l = !1
      , u = null
      , c = !1
      , h = null
      , d = {
        onError: function(e) {
            l = !0,
            u = e
        }
    };
    function f(e, t, n, r, i, a, o, c, h) {
        l = !1,
        u = null,
        s.apply(d, arguments)
    }
    var p = null
      , m = null
      , g = null;
    function v(e, t, n) {
        var r = e.type || "unknown-event";
        e.currentTarget = g(n),
        function(e, t, n, r, i, a, s, d, p) {
            if (f.apply(this, arguments),
            l) {
                if (!l)
                    throw Error(o(198));
                var m = u;
                l = !1,
                u = null,
                c || (c = !0,
                h = m)
            }
        }(r, t, void 0, e),
        e.currentTarget = null
    }
    var y = null
      , b = {};
    function x() {
        if (y)
            for (var e in b) {
                var t = b[e]
                  , n = y.indexOf(e);
                if (!(-1 < n))
                    throw Error(o(96, e));
                if (!_[n]) {
                    if (!t.extractEvents)
                        throw Error(o(97, e));
                    for (var r in _[n] = t,
                    n = t.eventTypes) {
                        var i = void 0
                          , a = n[r]
                          , s = t
                          , l = r;
                        if (E.hasOwnProperty(l))
                            throw Error(o(99, l));
                        E[l] = a;
                        var u = a.phasedRegistrationNames;
                        if (u) {
                            for (i in u)
                                u.hasOwnProperty(i) && w(u[i], s, l);
                            i = !0
                        } else
                            a.registrationName ? (w(a.registrationName, s, l),
                            i = !0) : i = !1;
                        if (!i)
                            throw Error(o(98, r, e))
                    }
                }
            }
    }
    function w(e, t, n) {
        if (T[e])
            throw Error(o(100, e));
        T[e] = t,
        S[e] = t.eventTypes[n].dependencies
    }
    var _ = []
      , E = {}
      , T = {}
      , S = {};
    function M(e) {
        var t, n = !1;
        for (t in e)
            if (e.hasOwnProperty(t)) {
                var r = e[t];
                if (!b.hasOwnProperty(t) || b[t] !== r) {
                    if (b[t])
                        throw Error(o(102, t));
                    b[t] = r,
                    n = !0
                }
            }
        n && x()
    }
    var A = !("undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement)
      , R = null
      , L = null
      , C = null;
    function P(e) {
        if (e = m(e)) {
            if ("function" != typeof R)
                throw Error(o(280));
            var t = e.stateNode;
            t && (t = p(t),
            R(e.stateNode, e.type, t))
        }
    }
    function O(e) {
        L ? C ? C.push(e) : C = [e] : L = e
    }
    function k() {
        if (L) {
            var e = L
              , t = C;
            if (C = L = null,
            P(e),
            t)
                for (e = 0; e < t.length; e++)
                    P(t[e])
        }
    }
    function D(e, t) {
        return e(t)
    }
    function I(e, t, n, r, i) {
        return e(t, n, r, i)
    }
    function N() {}
    var F = D
      , U = !1
      , B = !1;
    function z() {
        null === L && null === C || (N(),
        k())
    }
    function G(e, t, n) {
        if (B)
            return e(t, n);
        B = !0;
        try {
            return F(e, t, n)
        } finally {
            B = !1,
            z()
        }
    }
    var H = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/
      , j = Object.prototype.hasOwnProperty
      , V = {}
      , W = {};
    function q(e, t, n, r, i, a) {
        this.acceptsBooleans = 2 === t || 3 === t || 4 === t,
        this.attributeName = r,
        this.attributeNamespace = i,
        this.mustUseProperty = n,
        this.propertyName = e,
        this.type = t,
        this.sanitizeURL = a
    }
    var K = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e) {
        K[e] = new q(e,0,!1,e,null,!1)
    }
    )),
    [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach((function(e) {
        var t = e[0];
        K[t] = new q(t,1,!1,e[1],null,!1)
    }
    )),
    ["contentEditable", "draggable", "spellCheck", "value"].forEach((function(e) {
        K[e] = new q(e,2,!1,e.toLowerCase(),null,!1)
    }
    )),
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach((function(e) {
        K[e] = new q(e,2,!1,e,null,!1)
    }
    )),
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e) {
        K[e] = new q(e,3,!1,e.toLowerCase(),null,!1)
    }
    )),
    ["checked", "multiple", "muted", "selected"].forEach((function(e) {
        K[e] = new q(e,3,!0,e,null,!1)
    }
    )),
    ["capture", "download"].forEach((function(e) {
        K[e] = new q(e,4,!1,e,null,!1)
    }
    )),
    ["cols", "rows", "size", "span"].forEach((function(e) {
        K[e] = new q(e,6,!1,e,null,!1)
    }
    )),
    ["rowSpan", "start"].forEach((function(e) {
        K[e] = new q(e,5,!1,e.toLowerCase(),null,!1)
    }
    ));
    var Y = /[\-:]([a-z])/g;
    function X(e) {
        return e[1].toUpperCase()
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e) {
        var t = e.replace(Y, X);
        K[t] = new q(t,1,!1,e,null,!1)
    }
    )),
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e) {
        var t = e.replace(Y, X);
        K[t] = new q(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)
    }
    )),
    ["xml:base", "xml:lang", "xml:space"].forEach((function(e) {
        var t = e.replace(Y, X);
        K[t] = new q(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)
    }
    )),
    ["tabIndex", "crossOrigin"].forEach((function(e) {
        K[e] = new q(e,1,!1,e.toLowerCase(),null,!1)
    }
    )),
    K.xlinkHref = new q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),
    ["src", "href", "action", "formAction"].forEach((function(e) {
        K[e] = new q(e,1,!1,e.toLowerCase(),null,!0)
    }
    ));
    var Z = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function J(e, t, n, r) {
        var i = K.hasOwnProperty(t) ? K[t] : null;
        (null !== i ? 0 === i.type : !r && (2 < t.length && ("o" === t[0] || "O" === t[0]) && ("n" === t[1] || "N" === t[1]))) || (function(e, t, n, r) {
            if (null == t || function(e, t, n, r) {
                if (null !== n && 0 === n.type)
                    return !1;
                switch (typeof t) {
                case "function":
                case "symbol":
                    return !0;
                case "boolean":
                    return !r && (null !== n ? !n.acceptsBooleans : "data-" !== (e = e.toLowerCase().slice(0, 5)) && "aria-" !== e);
                default:
                    return !1
                }
            }(e, t, n, r))
                return !0;
            if (r)
                return !1;
            if (null !== n)
                switch (n.type) {
                case 3:
                    return !t;
                case 4:
                    return !1 === t;
                case 5:
                    return isNaN(t);
                case 6:
                    return isNaN(t) || 1 > t
                }
            return !1
        }(t, n, i, r) && (n = null),
        r || null === i ? function(e) {
            return !!j.call(W, e) || !j.call(V, e) && (H.test(e) ? W[e] = !0 : (V[e] = !0,
            !1))
        }(t) && (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n)) : i.mustUseProperty ? e[i.propertyName] = null === n ? 3 !== i.type && "" : n : (t = i.attributeName,
        r = i.attributeNamespace,
        null === n ? e.removeAttribute(t) : (n = 3 === (i = i.type) || 4 === i && !0 === n ? "" : "" + n,
        r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))))
    }
    Z.hasOwnProperty("ReactCurrentDispatcher") || (Z.ReactCurrentDispatcher = {
        current: null
    }),
    Z.hasOwnProperty("ReactCurrentBatchConfig") || (Z.ReactCurrentBatchConfig = {
        suspense: null
    });
    var Q = /^(.*)[\\\/]/
      , $ = "function" == typeof Symbol && Symbol.for
      , ee = $ ? Symbol.for("react.element") : 60103
      , te = $ ? Symbol.for("react.portal") : 60106
      , ne = $ ? Symbol.for("react.fragment") : 60107
      , re = $ ? Symbol.for("react.strict_mode") : 60108
      , ie = $ ? Symbol.for("react.profiler") : 60114
      , ae = $ ? Symbol.for("react.provider") : 60109
      , oe = $ ? Symbol.for("react.context") : 60110
      , se = $ ? Symbol.for("react.concurrent_mode") : 60111
      , le = $ ? Symbol.for("react.forward_ref") : 60112
      , ue = $ ? Symbol.for("react.suspense") : 60113
      , ce = $ ? Symbol.for("react.suspense_list") : 60120
      , he = $ ? Symbol.for("react.memo") : 60115
      , de = $ ? Symbol.for("react.lazy") : 60116
      , fe = $ ? Symbol.for("react.block") : 60121
      , pe = "function" == typeof Symbol && Symbol.iterator;
    function me(e) {
        return null === e || "object" != typeof e ? null : "function" == typeof (e = pe && e[pe] || e["@@iterator"]) ? e : null
    }
    function ge(e) {
        if (null == e)
            return null;
        if ("function" == typeof e)
            return e.displayName || e.name || null;
        if ("string" == typeof e)
            return e;
        switch (e) {
        case ne:
            return "Fragment";
        case te:
            return "Portal";
        case ie:
            return "Profiler";
        case re:
            return "StrictMode";
        case ue:
            return "Suspense";
        case ce:
            return "SuspenseList"
        }
        if ("object" == typeof e)
            switch (e.$$typeof) {
            case oe:
                return "Context.Consumer";
            case ae:
                return "Context.Provider";
            case le:
                var t = e.render;
                return t = t.displayName || t.name || "",
                e.displayName || ("" !== t ? "ForwardRef(" + t + ")" : "ForwardRef");
            case he:
                return ge(e.type);
            case fe:
                return ge(e.render);
            case de:
                if (e = 1 === e._status ? e._result : null)
                    return ge(e)
            }
        return null
    }
    function ve(e) {
        var t = "";
        do {
            e: switch (e.tag) {
            case 3:
            case 4:
            case 6:
            case 7:
            case 10:
            case 9:
                var n = "";
                break e;
            default:
                var r = e._debugOwner
                  , i = e._debugSource
                  , a = ge(e.type);
                n = null,
                r && (n = ge(r.type)),
                r = a,
                a = "",
                i ? a = " (at " + i.fileName.replace(Q, "") + ":" + i.lineNumber + ")" : n && (a = " (created by " + n + ")"),
                n = "\n    in " + (r || "Unknown") + a
            }
            t += n,
            e = e.return
        } while (e);
        return t
    }
    function ye(e) {
        switch (typeof e) {
        case "boolean":
        case "number":
        case "object":
        case "string":
        case "undefined":
            return e;
        default:
            return ""
        }
    }
    function be(e) {
        var t = e.type;
        return (e = e.nodeName) && "input" === e.toLowerCase() && ("checkbox" === t || "radio" === t)
    }
    function xe(e) {
        e._valueTracker || (e._valueTracker = function(e) {
            var t = be(e) ? "checked" : "value"
              , n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t)
              , r = "" + e[t];
            if (!e.hasOwnProperty(t) && void 0 !== n && "function" == typeof n.get && "function" == typeof n.set) {
                var i = n.get
                  , a = n.set;
                return Object.defineProperty(e, t, {
                    configurable: !0,
                    get: function() {
                        return i.call(this)
                    },
                    set: function(e) {
                        r = "" + e,
                        a.call(this, e)
                    }
                }),
                Object.defineProperty(e, t, {
                    enumerable: n.enumerable
                }),
                {
                    getValue: function() {
                        return r
                    },
                    setValue: function(e) {
                        r = "" + e
                    },
                    stopTracking: function() {
                        e._valueTracker = null,
                        delete e[t]
                    }
                }
            }
        }(e))
    }
    function we(e) {
        if (!e)
            return !1;
        var t = e._valueTracker;
        if (!t)
            return !0;
        var n = t.getValue()
          , r = "";
        return e && (r = be(e) ? e.checked ? "true" : "false" : e.value),
        (e = r) !== n && (t.setValue(e),
        !0)
    }
    function _e(e, t) {
        var n = t.checked;
        return i({}, t, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: null != n ? n : e._wrapperState.initialChecked
        })
    }
    function Ee(e, t) {
        var n = null == t.defaultValue ? "" : t.defaultValue
          , r = null != t.checked ? t.checked : t.defaultChecked;
        n = ye(null != t.value ? t.value : n),
        e._wrapperState = {
            initialChecked: r,
            initialValue: n,
            controlled: "checkbox" === t.type || "radio" === t.type ? null != t.checked : null != t.value
        }
    }
    function Te(e, t) {
        null != (t = t.checked) && J(e, "checked", t, !1)
    }
    function Se(e, t) {
        Te(e, t);
        var n = ye(t.value)
          , r = t.type;
        if (null != n)
            "number" === r ? (0 === n && "" === e.value || e.value != n) && (e.value = "" + n) : e.value !== "" + n && (e.value = "" + n);
        else if ("submit" === r || "reset" === r)
            return void e.removeAttribute("value");
        t.hasOwnProperty("value") ? Ae(e, t.type, n) : t.hasOwnProperty("defaultValue") && Ae(e, t.type, ye(t.defaultValue)),
        null == t.checked && null != t.defaultChecked && (e.defaultChecked = !!t.defaultChecked)
    }
    function Me(e, t, n) {
        if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
            var r = t.type;
            if (!("submit" !== r && "reset" !== r || void 0 !== t.value && null !== t.value))
                return;
            t = "" + e._wrapperState.initialValue,
            n || t === e.value || (e.value = t),
            e.defaultValue = t
        }
        "" !== (n = e.name) && (e.name = ""),
        e.defaultChecked = !!e._wrapperState.initialChecked,
        "" !== n && (e.name = n)
    }
    function Ae(e, t, n) {
        "number" === t && e.ownerDocument.activeElement === e || (null == n ? e.defaultValue = "" + e._wrapperState.initialValue : e.defaultValue !== "" + n && (e.defaultValue = "" + n))
    }
    function Re(e, t) {
        return e = i({
            children: void 0
        }, t),
        (t = function(e) {
            var t = "";
            return r.Children.forEach(e, (function(e) {
                null != e && (t += e)
            }
            )),
            t
        }(t.children)) && (e.children = t),
        e
    }
    function Le(e, t, n, r) {
        if (e = e.options,
        t) {
            t = {};
            for (var i = 0; i < n.length; i++)
                t["$" + n[i]] = !0;
            for (n = 0; n < e.length; n++)
                i = t.hasOwnProperty("$" + e[n].value),
                e[n].selected !== i && (e[n].selected = i),
                i && r && (e[n].defaultSelected = !0)
        } else {
            for (n = "" + ye(n),
            t = null,
            i = 0; i < e.length; i++) {
                if (e[i].value === n)
                    return e[i].selected = !0,
                    void (r && (e[i].defaultSelected = !0));
                null !== t || e[i].disabled || (t = e[i])
            }
            null !== t && (t.selected = !0)
        }
    }
    function Ce(e, t) {
        if (null != t.dangerouslySetInnerHTML)
            throw Error(o(91));
        return i({}, t, {
            value: void 0,
            defaultValue: void 0,
            children: "" + e._wrapperState.initialValue
        })
    }
    function Pe(e, t) {
        var n = t.value;
        if (null == n) {
            if (n = t.children,
            t = t.defaultValue,
            null != n) {
                if (null != t)
                    throw Error(o(92));
                if (Array.isArray(n)) {
                    if (!(1 >= n.length))
                        throw Error(o(93));
                    n = n[0]
                }
                t = n
            }
            null == t && (t = ""),
            n = t
        }
        e._wrapperState = {
            initialValue: ye(n)
        }
    }
    function Oe(e, t) {
        var n = ye(t.value)
          , r = ye(t.defaultValue);
        null != n && ((n = "" + n) !== e.value && (e.value = n),
        null == t.defaultValue && e.defaultValue !== n && (e.defaultValue = n)),
        null != r && (e.defaultValue = "" + r)
    }
    function ke(e) {
        var t = e.textContent;
        t === e._wrapperState.initialValue && "" !== t && null !== t && (e.value = t)
    }
    var De = "http://www.w3.org/1999/xhtml"
      , Ie = "http://www.w3.org/2000/svg";
    function Ne(e) {
        switch (e) {
        case "svg":
            return "http://www.w3.org/2000/svg";
        case "math":
            return "http://www.w3.org/1998/Math/MathML";
        default:
            return "http://www.w3.org/1999/xhtml"
        }
    }
    function Fe(e, t) {
        return null == e || "http://www.w3.org/1999/xhtml" === e ? Ne(t) : "http://www.w3.org/2000/svg" === e && "foreignObject" === t ? "http://www.w3.org/1999/xhtml" : e
    }
    var Ue, Be = function(e) {
        return "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction ? function(t, n, r, i) {
            MSApp.execUnsafeLocalFunction((function() {
                return e(t, n)
            }
            ))
        }
        : e
    }((function(e, t) {
        if (e.namespaceURI !== Ie || "innerHTML"in e)
            e.innerHTML = t;
        else {
            for ((Ue = Ue || document.createElement("div")).innerHTML = "<svg>" + t.valueOf().toString() + "</svg>",
            t = Ue.firstChild; e.firstChild; )
                e.removeChild(e.firstChild);
            for (; t.firstChild; )
                e.appendChild(t.firstChild)
        }
    }
    ));
    function ze(e, t) {
        if (t) {
            var n = e.firstChild;
            if (n && n === e.lastChild && 3 === n.nodeType)
                return void (n.nodeValue = t)
        }
        e.textContent = t
    }
    function Ge(e, t) {
        var n = {};
        return n[e.toLowerCase()] = t.toLowerCase(),
        n["Webkit" + e] = "webkit" + t,
        n["Moz" + e] = "moz" + t,
        n
    }
    var He = {
        animationend: Ge("Animation", "AnimationEnd"),
        animationiteration: Ge("Animation", "AnimationIteration"),
        animationstart: Ge("Animation", "AnimationStart"),
        transitionend: Ge("Transition", "TransitionEnd")
    }
      , je = {}
      , Ve = {};
    function We(e) {
        if (je[e])
            return je[e];
        if (!He[e])
            return e;
        var t, n = He[e];
        for (t in n)
            if (n.hasOwnProperty(t) && t in Ve)
                return je[e] = n[t];
        return e
    }
    A && (Ve = document.createElement("div").style,
    "AnimationEvent"in window || (delete He.animationend.animation,
    delete He.animationiteration.animation,
    delete He.animationstart.animation),
    "TransitionEvent"in window || delete He.transitionend.transition);
    var qe = We("animationend")
      , Ke = We("animationiteration")
      , Ye = We("animationstart")
      , Xe = We("transitionend")
      , Ze = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" ")
      , Je = new ("function" == typeof WeakMap ? WeakMap : Map);
    function Qe(e) {
        var t = Je.get(e);
        return void 0 === t && (t = new Map,
        Je.set(e, t)),
        t
    }
    function $e(e) {
        var t = e
          , n = e;
        if (e.alternate)
            for (; t.return; )
                t = t.return;
        else {
            e = t;
            do {
                0 != (1026 & (t = e).effectTag) && (n = t.return),
                e = t.return
            } while (e)
        }
        return 3 === t.tag ? n : null
    }
    function et(e) {
        if (13 === e.tag) {
            var t = e.memoizedState;
            if (null === t && (null !== (e = e.alternate) && (t = e.memoizedState)),
            null !== t)
                return t.dehydrated
        }
        return null
    }
    function tt(e) {
        if ($e(e) !== e)
            throw Error(o(188))
    }
    function nt(e) {
        if (!(e = function(e) {
            var t = e.alternate;
            if (!t) {
                if (null === (t = $e(e)))
                    throw Error(o(188));
                return t !== e ? null : e
            }
            for (var n = e, r = t; ; ) {
                var i = n.return;
                if (null === i)
                    break;
                var a = i.alternate;
                if (null === a) {
                    if (null !== (r = i.return)) {
                        n = r;
                        continue
                    }
                    break
                }
                if (i.child === a.child) {
                    for (a = i.child; a; ) {
                        if (a === n)
                            return tt(i),
                            e;
                        if (a === r)
                            return tt(i),
                            t;
                        a = a.sibling
                    }
                    throw Error(o(188))
                }
                if (n.return !== r.return)
                    n = i,
                    r = a;
                else {
                    for (var s = !1, l = i.child; l; ) {
                        if (l === n) {
                            s = !0,
                            n = i,
                            r = a;
                            break
                        }
                        if (l === r) {
                            s = !0,
                            r = i,
                            n = a;
                            break
                        }
                        l = l.sibling
                    }
                    if (!s) {
                        for (l = a.child; l; ) {
                            if (l === n) {
                                s = !0,
                                n = a,
                                r = i;
                                break
                            }
                            if (l === r) {
                                s = !0,
                                r = a,
                                n = i;
                                break
                            }
                            l = l.sibling
                        }
                        if (!s)
                            throw Error(o(189))
                    }
                }
                if (n.alternate !== r)
                    throw Error(o(190))
            }
            if (3 !== n.tag)
                throw Error(o(188));
            return n.stateNode.current === n ? e : t
        }(e)))
            return null;
        for (var t = e; ; ) {
            if (5 === t.tag || 6 === t.tag)
                return t;
            if (t.child)
                t.child.return = t,
                t = t.child;
            else {
                if (t === e)
                    break;
                for (; !t.sibling; ) {
                    if (!t.return || t.return === e)
                        return null;
                    t = t.return
                }
                t.sibling.return = t.return,
                t = t.sibling
            }
        }
        return null
    }
    function rt(e, t) {
        if (null == t)
            throw Error(o(30));
        return null == e ? t : Array.isArray(e) ? Array.isArray(t) ? (e.push.apply(e, t),
        e) : (e.push(t),
        e) : Array.isArray(t) ? [e].concat(t) : [e, t]
    }
    function it(e, t, n) {
        Array.isArray(e) ? e.forEach(t, n) : e && t.call(n, e)
    }
    var at = null;
    function ot(e) {
        if (e) {
            var t = e._dispatchListeners
              , n = e._dispatchInstances;
            if (Array.isArray(t))
                for (var r = 0; r < t.length && !e.isPropagationStopped(); r++)
                    v(e, t[r], n[r]);
            else
                t && v(e, t, n);
            e._dispatchListeners = null,
            e._dispatchInstances = null,
            e.isPersistent() || e.constructor.release(e)
        }
    }
    function st(e) {
        if (null !== e && (at = rt(at, e)),
        e = at,
        at = null,
        e) {
            if (it(e, ot),
            at)
                throw Error(o(95));
            if (c)
                throw e = h,
                c = !1,
                h = null,
                e
        }
    }
    function lt(e) {
        return (e = e.target || e.srcElement || window).correspondingUseElement && (e = e.correspondingUseElement),
        3 === e.nodeType ? e.parentNode : e
    }
    function ut(e) {
        if (!A)
            return !1;
        var t = (e = "on" + e)in document;
        return t || ((t = document.createElement("div")).setAttribute(e, "return;"),
        t = "function" == typeof t[e]),
        t
    }
    var ct = [];
    function ht(e) {
        e.topLevelType = null,
        e.nativeEvent = null,
        e.targetInst = null,
        e.ancestors.length = 0,
        10 > ct.length && ct.push(e)
    }
    function dt(e, t, n, r) {
        if (ct.length) {
            var i = ct.pop();
            return i.topLevelType = e,
            i.eventSystemFlags = r,
            i.nativeEvent = t,
            i.targetInst = n,
            i
        }
        return {
            topLevelType: e,
            eventSystemFlags: r,
            nativeEvent: t,
            targetInst: n,
            ancestors: []
        }
    }
    function ft(e) {
        var t = e.targetInst
          , n = t;
        do {
            if (!n) {
                e.ancestors.push(n);
                break
            }
            var r = n;
            if (3 === r.tag)
                r = r.stateNode.containerInfo;
            else {
                for (; r.return; )
                    r = r.return;
                r = 3 !== r.tag ? null : r.stateNode.containerInfo
            }
            if (!r)
                break;
            5 !== (t = n.tag) && 6 !== t || e.ancestors.push(n),
            n = An(r)
        } while (n);
        for (n = 0; n < e.ancestors.length; n++) {
            t = e.ancestors[n];
            var i = lt(e.nativeEvent);
            r = e.topLevelType;
            var a = e.nativeEvent
              , o = e.eventSystemFlags;
            0 === n && (o |= 64);
            for (var s = null, l = 0; l < _.length; l++) {
                var u = _[l];
                u && (u = u.extractEvents(r, t, a, i, o)) && (s = rt(s, u))
            }
            st(s)
        }
    }
    function pt(e, t, n) {
        if (!n.has(e)) {
            switch (e) {
            case "scroll":
                Yt(t, "scroll", !0);
                break;
            case "focus":
            case "blur":
                Yt(t, "focus", !0),
                Yt(t, "blur", !0),
                n.set("blur", null),
                n.set("focus", null);
                break;
            case "cancel":
            case "close":
                ut(e) && Yt(t, e, !0);
                break;
            case "invalid":
            case "submit":
            case "reset":
                break;
            default:
                -1 === Ze.indexOf(e) && Kt(e, t)
            }
            n.set(e, null)
        }
    }
    var mt, gt, vt, yt = !1, bt = [], xt = null, wt = null, _t = null, Et = new Map, Tt = new Map, St = [], Mt = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "), At = "focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");
    function Rt(e, t, n, r, i) {
        return {
            blockedOn: e,
            topLevelType: t,
            eventSystemFlags: 32 | n,
            nativeEvent: i,
            container: r
        }
    }
    function Lt(e, t) {
        switch (e) {
        case "focus":
        case "blur":
            xt = null;
            break;
        case "dragenter":
        case "dragleave":
            wt = null;
            break;
        case "mouseover":
        case "mouseout":
            _t = null;
            break;
        case "pointerover":
        case "pointerout":
            Et.delete(t.pointerId);
            break;
        case "gotpointercapture":
        case "lostpointercapture":
            Tt.delete(t.pointerId)
        }
    }
    function Ct(e, t, n, r, i, a) {
        return null === e || e.nativeEvent !== a ? (e = Rt(t, n, r, i, a),
        null !== t && (null !== (t = Rn(t)) && gt(t)),
        e) : (e.eventSystemFlags |= r,
        e)
    }
    function Pt(e) {
        var t = An(e.target);
        if (null !== t) {
            var n = $e(t);
            if (null !== n)
                if (13 === (t = n.tag)) {
                    if (null !== (t = et(n)))
                        return e.blockedOn = t,
                        void a.unstable_runWithPriority(e.priority, (function() {
                            vt(n)
                        }
                        ))
                } else if (3 === t && n.stateNode.hydrate)
                    return void (e.blockedOn = 3 === n.tag ? n.stateNode.containerInfo : null)
        }
        e.blockedOn = null
    }
    function Ot(e) {
        if (null !== e.blockedOn)
            return !1;
        var t = Qt(e.topLevelType, e.eventSystemFlags, e.container, e.nativeEvent);
        if (null !== t) {
            var n = Rn(t);
            return null !== n && gt(n),
            e.blockedOn = t,
            !1
        }
        return !0
    }
    function kt(e, t, n) {
        Ot(e) && n.delete(t)
    }
    function Dt() {
        for (yt = !1; 0 < bt.length; ) {
            var e = bt[0];
            if (null !== e.blockedOn) {
                null !== (e = Rn(e.blockedOn)) && mt(e);
                break
            }
            var t = Qt(e.topLevelType, e.eventSystemFlags, e.container, e.nativeEvent);
            null !== t ? e.blockedOn = t : bt.shift()
        }
        null !== xt && Ot(xt) && (xt = null),
        null !== wt && Ot(wt) && (wt = null),
        null !== _t && Ot(_t) && (_t = null),
        Et.forEach(kt),
        Tt.forEach(kt)
    }
    function It(e, t) {
        e.blockedOn === t && (e.blockedOn = null,
        yt || (yt = !0,
        a.unstable_scheduleCallback(a.unstable_NormalPriority, Dt)))
    }
    function Nt(e) {
        function t(t) {
            return It(t, e)
        }
        if (0 < bt.length) {
            It(bt[0], e);
            for (var n = 1; n < bt.length; n++) {
                var r = bt[n];
                r.blockedOn === e && (r.blockedOn = null)
            }
        }
        for (null !== xt && It(xt, e),
        null !== wt && It(wt, e),
        null !== _t && It(_t, e),
        Et.forEach(t),
        Tt.forEach(t),
        n = 0; n < St.length; n++)
            (r = St[n]).blockedOn === e && (r.blockedOn = null);
        for (; 0 < St.length && null === (n = St[0]).blockedOn; )
            Pt(n),
            null === n.blockedOn && St.shift()
    }
    var Ft = {}
      , Ut = new Map
      , Bt = new Map
      , zt = ["abort", "abort", qe, "animationEnd", Ke, "animationIteration", Ye, "animationStart", "canplay", "canPlay", "canplaythrough", "canPlayThrough", "durationchange", "durationChange", "emptied", "emptied", "encrypted", "encrypted", "ended", "ended", "error", "error", "gotpointercapture", "gotPointerCapture", "load", "load", "loadeddata", "loadedData", "loadedmetadata", "loadedMetadata", "loadstart", "loadStart", "lostpointercapture", "lostPointerCapture", "playing", "playing", "progress", "progress", "seeking", "seeking", "stalled", "stalled", "suspend", "suspend", "timeupdate", "timeUpdate", Xe, "transitionEnd", "waiting", "waiting"];
    function Gt(e, t) {
        for (var n = 0; n < e.length; n += 2) {
            var r = e[n]
              , i = e[n + 1]
              , a = "on" + (i[0].toUpperCase() + i.slice(1));
            a = {
                phasedRegistrationNames: {
                    bubbled: a,
                    captured: a + "Capture"
                },
                dependencies: [r],
                eventPriority: t
            },
            Bt.set(r, t),
            Ut.set(r, a),
            Ft[i] = a
        }
    }
    Gt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "), 0),
    Gt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1),
    Gt(zt, 2);
    for (var Ht = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), jt = 0; jt < Ht.length; jt++)
        Bt.set(Ht[jt], 0);
    var Vt = a.unstable_UserBlockingPriority
      , Wt = a.unstable_runWithPriority
      , qt = !0;
    function Kt(e, t) {
        Yt(t, e, !1)
    }
    function Yt(e, t, n) {
        var r = Bt.get(t);
        switch (void 0 === r ? 2 : r) {
        case 0:
            r = Xt.bind(null, t, 1, e);
            break;
        case 1:
            r = Zt.bind(null, t, 1, e);
            break;
        default:
            r = Jt.bind(null, t, 1, e)
        }
        n ? e.addEventListener(t, r, !0) : e.addEventListener(t, r, !1)
    }
    function Xt(e, t, n, r) {
        U || N();
        var i = Jt
          , a = U;
        U = !0;
        try {
            I(i, e, t, n, r)
        } finally {
            (U = a) || z()
        }
    }
    function Zt(e, t, n, r) {
        Wt(Vt, Jt.bind(null, e, t, n, r))
    }
    function Jt(e, t, n, r) {
        if (qt)
            if (0 < bt.length && -1 < Mt.indexOf(e))
                e = Rt(null, e, t, n, r),
                bt.push(e);
            else {
                var i = Qt(e, t, n, r);
                if (null === i)
                    Lt(e, r);
                else if (-1 < Mt.indexOf(e))
                    e = Rt(i, e, t, n, r),
                    bt.push(e);
                else if (!function(e, t, n, r, i) {
                    switch (t) {
                    case "focus":
                        return xt = Ct(xt, e, t, n, r, i),
                        !0;
                    case "dragenter":
                        return wt = Ct(wt, e, t, n, r, i),
                        !0;
                    case "mouseover":
                        return _t = Ct(_t, e, t, n, r, i),
                        !0;
                    case "pointerover":
                        var a = i.pointerId;
                        return Et.set(a, Ct(Et.get(a) || null, e, t, n, r, i)),
                        !0;
                    case "gotpointercapture":
                        return a = i.pointerId,
                        Tt.set(a, Ct(Tt.get(a) || null, e, t, n, r, i)),
                        !0
                    }
                    return !1
                }(i, e, t, n, r)) {
                    Lt(e, r),
                    e = dt(e, r, null, t);
                    try {
                        G(ft, e)
                    } finally {
                        ht(e)
                    }
                }
            }
    }
    function Qt(e, t, n, r) {
        if (null !== (n = An(n = lt(r)))) {
            var i = $e(n);
            if (null === i)
                n = null;
            else {
                var a = i.tag;
                if (13 === a) {
                    if (null !== (n = et(i)))
                        return n;
                    n = null
                } else if (3 === a) {
                    if (i.stateNode.hydrate)
                        return 3 === i.tag ? i.stateNode.containerInfo : null;
                    n = null
                } else
                    i !== n && (n = null)
            }
        }
        e = dt(e, r, n, t);
        try {
            G(ft, e)
        } finally {
            ht(e)
        }
        return null
    }
    var $t = {
        animationIterationCount: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0
    }
      , en = ["Webkit", "ms", "Moz", "O"];
    function tn(e, t, n) {
        return null == t || "boolean" == typeof t || "" === t ? "" : n || "number" != typeof t || 0 === t || $t.hasOwnProperty(e) && $t[e] ? ("" + t).trim() : t + "px"
    }
    function nn(e, t) {
        for (var n in e = e.style,
        t)
            if (t.hasOwnProperty(n)) {
                var r = 0 === n.indexOf("--")
                  , i = tn(n, t[n], r);
                "float" === n && (n = "cssFloat"),
                r ? e.setProperty(n, i) : e[n] = i
            }
    }
    Object.keys($t).forEach((function(e) {
        en.forEach((function(t) {
            t = t + e.charAt(0).toUpperCase() + e.substring(1),
            $t[t] = $t[e]
        }
        ))
    }
    ));
    var rn = i({
        menuitem: !0
    }, {
        area: !0,
        base: !0,
        br: !0,
        col: !0,
        embed: !0,
        hr: !0,
        img: !0,
        input: !0,
        keygen: !0,
        link: !0,
        meta: !0,
        param: !0,
        source: !0,
        track: !0,
        wbr: !0
    });
    function an(e, t) {
        if (t) {
            if (rn[e] && (null != t.children || null != t.dangerouslySetInnerHTML))
                throw Error(o(137, e, ""));
            if (null != t.dangerouslySetInnerHTML) {
                if (null != t.children)
                    throw Error(o(60));
                if ("object" != typeof t.dangerouslySetInnerHTML || !("__html"in t.dangerouslySetInnerHTML))
                    throw Error(o(61))
            }
            if (null != t.style && "object" != typeof t.style)
                throw Error(o(62, ""))
        }
    }
    function on(e, t) {
        if (-1 === e.indexOf("-"))
            return "string" == typeof t.is;
        switch (e) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
            return !1;
        default:
            return !0
        }
    }
    var sn = De;
    function ln(e, t) {
        var n = Qe(e = 9 === e.nodeType || 11 === e.nodeType ? e : e.ownerDocument);
        t = S[t];
        for (var r = 0; r < t.length; r++)
            pt(t[r], e, n)
    }
    function un() {}
    function cn(e) {
        if (void 0 === (e = e || ("undefined" != typeof document ? document : void 0)))
            return null;
        try {
            return e.activeElement || e.body
        } catch (t) {
            return e.body
        }
    }
    function hn(e) {
        for (; e && e.firstChild; )
            e = e.firstChild;
        return e
    }
    function dn(e, t) {
        var n, r = hn(e);
        for (e = 0; r; ) {
            if (3 === r.nodeType) {
                if (n = e + r.textContent.length,
                e <= t && n >= t)
                    return {
                        node: r,
                        offset: t - e
                    };
                e = n
            }
            e: {
                for (; r; ) {
                    if (r.nextSibling) {
                        r = r.nextSibling;
                        break e
                    }
                    r = r.parentNode
                }
                r = void 0
            }
            r = hn(r)
        }
    }
    function fn() {
        for (var e = window, t = cn(); t instanceof e.HTMLIFrameElement; ) {
            try {
                var n = "string" == typeof t.contentWindow.location.href
            } catch (e) {
                n = !1
            }
            if (!n)
                break;
            t = cn((e = t.contentWindow).document)
        }
        return t
    }
    function pn(e) {
        var t = e && e.nodeName && e.nodeName.toLowerCase();
        return t && ("input" === t && ("text" === e.type || "search" === e.type || "tel" === e.type || "url" === e.type || "password" === e.type) || "textarea" === t || "true" === e.contentEditable)
    }
    var mn = null
      , gn = null;
    function vn(e, t) {
        switch (e) {
        case "button":
        case "input":
        case "select":
        case "textarea":
            return !!t.autoFocus
        }
        return !1
    }
    function yn(e, t) {
        return "textarea" === e || "option" === e || "noscript" === e || "string" == typeof t.children || "number" == typeof t.children || "object" == typeof t.dangerouslySetInnerHTML && null !== t.dangerouslySetInnerHTML && null != t.dangerouslySetInnerHTML.__html
    }
    var bn = "function" == typeof setTimeout ? setTimeout : void 0
      , xn = "function" == typeof clearTimeout ? clearTimeout : void 0;
    function wn(e) {
        for (; null != e; e = e.nextSibling) {
            var t = e.nodeType;
            if (1 === t || 3 === t)
                break
        }
        return e
    }
    function _n(e) {
        e = e.previousSibling;
        for (var t = 0; e; ) {
            if (8 === e.nodeType) {
                var n = e.data;
                if ("$" === n || "$!" === n || "$?" === n) {
                    if (0 === t)
                        return e;
                    t--
                } else
                    "/$" === n && t++
            }
            e = e.previousSibling
        }
        return null
    }
    var En = Math.random().toString(36).slice(2)
      , Tn = "__reactInternalInstance$" + En
      , Sn = "__reactEventHandlers$" + En
      , Mn = "__reactContainere$" + En;
    function An(e) {
        var t = e[Tn];
        if (t)
            return t;
        for (var n = e.parentNode; n; ) {
            if (t = n[Mn] || n[Tn]) {
                if (n = t.alternate,
                null !== t.child || null !== n && null !== n.child)
                    for (e = _n(e); null !== e; ) {
                        if (n = e[Tn])
                            return n;
                        e = _n(e)
                    }
                return t
            }
            n = (e = n).parentNode
        }
        return null
    }
    function Rn(e) {
        return !(e = e[Tn] || e[Mn]) || 5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag ? null : e
    }
    function Ln(e) {
        if (5 === e.tag || 6 === e.tag)
            return e.stateNode;
        throw Error(o(33))
    }
    function Cn(e) {
        return e[Sn] || null
    }
    function Pn(e) {
        do {
            e = e.return
        } while (e && 5 !== e.tag);
        return e || null
    }
    function On(e, t) {
        var n = e.stateNode;
        if (!n)
            return null;
        var r = p(n);
        if (!r)
            return null;
        n = r[t];
        e: switch (t) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
            (r = !r.disabled) || (r = !("button" === (e = e.type) || "input" === e || "select" === e || "textarea" === e)),
            e = !r;
            break e;
        default:
            e = !1
        }
        if (e)
            return null;
        if (n && "function" != typeof n)
            throw Error(o(231, t, typeof n));
        return n
    }
    function kn(e, t, n) {
        (t = On(e, n.dispatchConfig.phasedRegistrationNames[t])) && (n._dispatchListeners = rt(n._dispatchListeners, t),
        n._dispatchInstances = rt(n._dispatchInstances, e))
    }
    function Dn(e) {
        if (e && e.dispatchConfig.phasedRegistrationNames) {
            for (var t = e._targetInst, n = []; t; )
                n.push(t),
                t = Pn(t);
            for (t = n.length; 0 < t--; )
                kn(n[t], "captured", e);
            for (t = 0; t < n.length; t++)
                kn(n[t], "bubbled", e)
        }
    }
    function In(e, t, n) {
        e && n && n.dispatchConfig.registrationName && (t = On(e, n.dispatchConfig.registrationName)) && (n._dispatchListeners = rt(n._dispatchListeners, t),
        n._dispatchInstances = rt(n._dispatchInstances, e))
    }
    function Nn(e) {
        e && e.dispatchConfig.registrationName && In(e._targetInst, null, e)
    }
    function Fn(e) {
        it(e, Dn)
    }
    var Un = null
      , Bn = null
      , zn = null;
    function Gn() {
        if (zn)
            return zn;
        var e, t, n = Bn, r = n.length, i = "value"in Un ? Un.value : Un.textContent, a = i.length;
        for (e = 0; e < r && n[e] === i[e]; e++)
            ;
        var o = r - e;
        for (t = 1; t <= o && n[r - t] === i[a - t]; t++)
            ;
        return zn = i.slice(e, 1 < t ? 1 - t : void 0)
    }
    function Hn() {
        return !0
    }
    function jn() {
        return !1
    }
    function Vn(e, t, n, r) {
        for (var i in this.dispatchConfig = e,
        this._targetInst = t,
        this.nativeEvent = n,
        e = this.constructor.Interface)
            e.hasOwnProperty(i) && ((t = e[i]) ? this[i] = t(n) : "target" === i ? this.target = r : this[i] = n[i]);
        return this.isDefaultPrevented = (null != n.defaultPrevented ? n.defaultPrevented : !1 === n.returnValue) ? Hn : jn,
        this.isPropagationStopped = jn,
        this
    }
    function Wn(e, t, n, r) {
        if (this.eventPool.length) {
            var i = this.eventPool.pop();
            return this.call(i, e, t, n, r),
            i
        }
        return new this(e,t,n,r)
    }
    function qn(e) {
        if (!(e instanceof this))
            throw Error(o(279));
        e.destructor(),
        10 > this.eventPool.length && this.eventPool.push(e)
    }
    function Kn(e) {
        e.eventPool = [],
        e.getPooled = Wn,
        e.release = qn
    }
    i(Vn.prototype, {
        preventDefault: function() {
            this.defaultPrevented = !0;
            var e = this.nativeEvent;
            e && (e.preventDefault ? e.preventDefault() : "unknown" != typeof e.returnValue && (e.returnValue = !1),
            this.isDefaultPrevented = Hn)
        },
        stopPropagation: function() {
            var e = this.nativeEvent;
            e && (e.stopPropagation ? e.stopPropagation() : "unknown" != typeof e.cancelBubble && (e.cancelBubble = !0),
            this.isPropagationStopped = Hn)
        },
        persist: function() {
            this.isPersistent = Hn
        },
        isPersistent: jn,
        destructor: function() {
            var e, t = this.constructor.Interface;
            for (e in t)
                this[e] = null;
            this.nativeEvent = this._targetInst = this.dispatchConfig = null,
            this.isPropagationStopped = this.isDefaultPrevented = jn,
            this._dispatchInstances = this._dispatchListeners = null
        }
    }),
    Vn.Interface = {
        type: null,
        target: null,
        currentTarget: function() {
            return null
        },
        eventPhase: null,
        bubbles: null,
        cancelable: null,
        timeStamp: function(e) {
            return e.timeStamp || Date.now()
        },
        defaultPrevented: null,
        isTrusted: null
    },
    Vn.extend = function(e) {
        function t() {}
        function n() {
            return r.apply(this, arguments)
        }
        var r = this;
        t.prototype = r.prototype;
        var a = new t;
        return i(a, n.prototype),
        n.prototype = a,
        n.prototype.constructor = n,
        n.Interface = i({}, r.Interface, e),
        n.extend = r.extend,
        Kn(n),
        n
    }
    ,
    Kn(Vn);
    var Yn = Vn.extend({
        data: null
    })
      , Xn = Vn.extend({
        data: null
    })
      , Zn = [9, 13, 27, 32]
      , Jn = A && "CompositionEvent"in window
      , Qn = null;
    A && "documentMode"in document && (Qn = document.documentMode);
    var $n = A && "TextEvent"in window && !Qn
      , er = A && (!Jn || Qn && 8 < Qn && 11 >= Qn)
      , tr = String.fromCharCode(32)
      , nr = {
        beforeInput: {
            phasedRegistrationNames: {
                bubbled: "onBeforeInput",
                captured: "onBeforeInputCapture"
            },
            dependencies: ["compositionend", "keypress", "textInput", "paste"]
        },
        compositionEnd: {
            phasedRegistrationNames: {
                bubbled: "onCompositionEnd",
                captured: "onCompositionEndCapture"
            },
            dependencies: "blur compositionend keydown keypress keyup mousedown".split(" ")
        },
        compositionStart: {
            phasedRegistrationNames: {
                bubbled: "onCompositionStart",
                captured: "onCompositionStartCapture"
            },
            dependencies: "blur compositionstart keydown keypress keyup mousedown".split(" ")
        },
        compositionUpdate: {
            phasedRegistrationNames: {
                bubbled: "onCompositionUpdate",
                captured: "onCompositionUpdateCapture"
            },
            dependencies: "blur compositionupdate keydown keypress keyup mousedown".split(" ")
        }
    }
      , rr = !1;
    function ir(e, t) {
        switch (e) {
        case "keyup":
            return -1 !== Zn.indexOf(t.keyCode);
        case "keydown":
            return 229 !== t.keyCode;
        case "keypress":
        case "mousedown":
        case "blur":
            return !0;
        default:
            return !1
        }
    }
    function ar(e) {
        return "object" == typeof (e = e.detail) && "data"in e ? e.data : null
    }
    var or = !1;
    var sr = {
        eventTypes: nr,
        extractEvents: function(e, t, n, r) {
            var i;
            if (Jn)
                e: {
                    switch (e) {
                    case "compositionstart":
                        var a = nr.compositionStart;
                        break e;
                    case "compositionend":
                        a = nr.compositionEnd;
                        break e;
                    case "compositionupdate":
                        a = nr.compositionUpdate;
                        break e
                    }
                    a = void 0
                }
            else
                or ? ir(e, n) && (a = nr.compositionEnd) : "keydown" === e && 229 === n.keyCode && (a = nr.compositionStart);
            return a ? (er && "ko" !== n.locale && (or || a !== nr.compositionStart ? a === nr.compositionEnd && or && (i = Gn()) : (Bn = "value"in (Un = r) ? Un.value : Un.textContent,
            or = !0)),
            a = Yn.getPooled(a, t, n, r),
            i ? a.data = i : null !== (i = ar(n)) && (a.data = i),
            Fn(a),
            i = a) : i = null,
            (e = $n ? function(e, t) {
                switch (e) {
                case "compositionend":
                    return ar(t);
                case "keypress":
                    return 32 !== t.which ? null : (rr = !0,
                    tr);
                case "textInput":
                    return (e = t.data) === tr && rr ? null : e;
                default:
                    return null
                }
            }(e, n) : function(e, t) {
                if (or)
                    return "compositionend" === e || !Jn && ir(e, t) ? (e = Gn(),
                    zn = Bn = Un = null,
                    or = !1,
                    e) : null;
                switch (e) {
                case "paste":
                    return null;
                case "keypress":
                    if (!(t.ctrlKey || t.altKey || t.metaKey) || t.ctrlKey && t.altKey) {
                        if (t.char && 1 < t.char.length)
                            return t.char;
                        if (t.which)
                            return String.fromCharCode(t.which)
                    }
                    return null;
                case "compositionend":
                    return er && "ko" !== t.locale ? null : t.data;
                default:
                    return null
                }
            }(e, n)) ? ((t = Xn.getPooled(nr.beforeInput, t, n, r)).data = e,
            Fn(t)) : t = null,
            null === i ? t : null === t ? i : [i, t]
        }
    }
      , lr = {
        color: !0,
        date: !0,
        datetime: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0
    };
    function ur(e) {
        var t = e && e.nodeName && e.nodeName.toLowerCase();
        return "input" === t ? !!lr[e.type] : "textarea" === t
    }
    var cr = {
        change: {
            phasedRegistrationNames: {
                bubbled: "onChange",
                captured: "onChangeCapture"
            },
            dependencies: "blur change click focus input keydown keyup selectionchange".split(" ")
        }
    };
    function hr(e, t, n) {
        return (e = Vn.getPooled(cr.change, e, t, n)).type = "change",
        O(n),
        Fn(e),
        e
    }
    var dr = null
      , fr = null;
    function pr(e) {
        st(e)
    }
    function mr(e) {
        if (we(Ln(e)))
            return e
    }
    function gr(e, t) {
        if ("change" === e)
            return t
    }
    var vr = !1;
    function yr() {
        dr && (dr.detachEvent("onpropertychange", br),
        fr = dr = null)
    }
    function br(e) {
        if ("value" === e.propertyName && mr(fr))
            if (e = hr(fr, e, lt(e)),
            U)
                st(e);
            else {
                U = !0;
                try {
                    D(pr, e)
                } finally {
                    U = !1,
                    z()
                }
            }
    }
    function xr(e, t, n) {
        "focus" === e ? (yr(),
        fr = n,
        (dr = t).attachEvent("onpropertychange", br)) : "blur" === e && yr()
    }
    function wr(e) {
        if ("selectionchange" === e || "keyup" === e || "keydown" === e)
            return mr(fr)
    }
    function _r(e, t) {
        if ("click" === e)
            return mr(t)
    }
    function Er(e, t) {
        if ("input" === e || "change" === e)
            return mr(t)
    }
    A && (vr = ut("input") && (!document.documentMode || 9 < document.documentMode));
    var Tr = {
        eventTypes: cr,
        _isInputEventSupported: vr,
        extractEvents: function(e, t, n, r) {
            var i = t ? Ln(t) : window
              , a = i.nodeName && i.nodeName.toLowerCase();
            if ("select" === a || "input" === a && "file" === i.type)
                var o = gr;
            else if (ur(i))
                if (vr)
                    o = Er;
                else {
                    o = wr;
                    var s = xr
                }
            else
                (a = i.nodeName) && "input" === a.toLowerCase() && ("checkbox" === i.type || "radio" === i.type) && (o = _r);
            if (o && (o = o(e, t)))
                return hr(o, n, r);
            s && s(e, i, t),
            "blur" === e && (e = i._wrapperState) && e.controlled && "number" === i.type && Ae(i, "number", i.value)
        }
    }
      , Sr = Vn.extend({
        view: null,
        detail: null
    })
      , Mr = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
    };
    function Ar(e) {
        var t = this.nativeEvent;
        return t.getModifierState ? t.getModifierState(e) : !!(e = Mr[e]) && !!t[e]
    }
    function Rr() {
        return Ar
    }
    var Lr = 0
      , Cr = 0
      , Pr = !1
      , Or = !1
      , kr = Sr.extend({
        screenX: null,
        screenY: null,
        clientX: null,
        clientY: null,
        pageX: null,
        pageY: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        getModifierState: Rr,
        button: null,
        buttons: null,
        relatedTarget: function(e) {
            return e.relatedTarget || (e.fromElement === e.srcElement ? e.toElement : e.fromElement)
        },
        movementX: function(e) {
            if ("movementX"in e)
                return e.movementX;
            var t = Lr;
            return Lr = e.screenX,
            Pr ? "mousemove" === e.type ? e.screenX - t : 0 : (Pr = !0,
            0)
        },
        movementY: function(e) {
            if ("movementY"in e)
                return e.movementY;
            var t = Cr;
            return Cr = e.screenY,
            Or ? "mousemove" === e.type ? e.screenY - t : 0 : (Or = !0,
            0)
        }
    })
      , Dr = kr.extend({
        pointerId: null,
        width: null,
        height: null,
        pressure: null,
        tangentialPressure: null,
        tiltX: null,
        tiltY: null,
        twist: null,
        pointerType: null,
        isPrimary: null
    })
      , Ir = {
        mouseEnter: {
            registrationName: "onMouseEnter",
            dependencies: ["mouseout", "mouseover"]
        },
        mouseLeave: {
            registrationName: "onMouseLeave",
            dependencies: ["mouseout", "mouseover"]
        },
        pointerEnter: {
            registrationName: "onPointerEnter",
            dependencies: ["pointerout", "pointerover"]
        },
        pointerLeave: {
            registrationName: "onPointerLeave",
            dependencies: ["pointerout", "pointerover"]
        }
    }
      , Nr = {
        eventTypes: Ir,
        extractEvents: function(e, t, n, r, i) {
            var a = "mouseover" === e || "pointerover" === e
              , o = "mouseout" === e || "pointerout" === e;
            if (a && 0 == (32 & i) && (n.relatedTarget || n.fromElement) || !o && !a)
                return null;
            (a = r.window === r ? r : (a = r.ownerDocument) ? a.defaultView || a.parentWindow : window,
            o) ? (o = t,
            null !== (t = (t = n.relatedTarget || n.toElement) ? An(t) : null) && (t !== $e(t) || 5 !== t.tag && 6 !== t.tag) && (t = null)) : o = null;
            if (o === t)
                return null;
            if ("mouseout" === e || "mouseover" === e)
                var s = kr
                  , l = Ir.mouseLeave
                  , u = Ir.mouseEnter
                  , c = "mouse";
            else
                "pointerout" !== e && "pointerover" !== e || (s = Dr,
                l = Ir.pointerLeave,
                u = Ir.pointerEnter,
                c = "pointer");
            if (e = null == o ? a : Ln(o),
            a = null == t ? a : Ln(t),
            (l = s.getPooled(l, o, n, r)).type = c + "leave",
            l.target = e,
            l.relatedTarget = a,
            (n = s.getPooled(u, t, n, r)).type = c + "enter",
            n.target = a,
            n.relatedTarget = e,
            c = t,
            (r = o) && c)
                e: {
                    for (u = c,
                    o = 0,
                    e = s = r; e; e = Pn(e))
                        o++;
                    for (e = 0,
                    t = u; t; t = Pn(t))
                        e++;
                    for (; 0 < o - e; )
                        s = Pn(s),
                        o--;
                    for (; 0 < e - o; )
                        u = Pn(u),
                        e--;
                    for (; o--; ) {
                        if (s === u || s === u.alternate)
                            break e;
                        s = Pn(s),
                        u = Pn(u)
                    }
                    s = null
                }
            else
                s = null;
            for (u = s,
            s = []; r && r !== u && (null === (o = r.alternate) || o !== u); )
                s.push(r),
                r = Pn(r);
            for (r = []; c && c !== u && (null === (o = c.alternate) || o !== u); )
                r.push(c),
                c = Pn(c);
            for (c = 0; c < s.length; c++)
                In(s[c], "bubbled", l);
            for (c = r.length; 0 < c--; )
                In(r[c], "captured", n);
            return 0 == (64 & i) ? [l] : [l, n]
        }
    };
    var Fr = "function" == typeof Object.is ? Object.is : function(e, t) {
        return e === t && (0 !== e || 1 / e == 1 / t) || e != e && t != t
    }
      , Ur = Object.prototype.hasOwnProperty;
    function Br(e, t) {
        if (Fr(e, t))
            return !0;
        if ("object" != typeof e || null === e || "object" != typeof t || null === t)
            return !1;
        var n = Object.keys(e)
          , r = Object.keys(t);
        if (n.length !== r.length)
            return !1;
        for (r = 0; r < n.length; r++)
            if (!Ur.call(t, n[r]) || !Fr(e[n[r]], t[n[r]]))
                return !1;
        return !0
    }
    var zr = A && "documentMode"in document && 11 >= document.documentMode
      , Gr = {
        select: {
            phasedRegistrationNames: {
                bubbled: "onSelect",
                captured: "onSelectCapture"
            },
            dependencies: "blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")
        }
    }
      , Hr = null
      , jr = null
      , Vr = null
      , Wr = !1;
    function qr(e, t) {
        var n = t.window === t ? t.document : 9 === t.nodeType ? t : t.ownerDocument;
        return Wr || null == Hr || Hr !== cn(n) ? null : ("selectionStart"in (n = Hr) && pn(n) ? n = {
            start: n.selectionStart,
            end: n.selectionEnd
        } : n = {
            anchorNode: (n = (n.ownerDocument && n.ownerDocument.defaultView || window).getSelection()).anchorNode,
            anchorOffset: n.anchorOffset,
            focusNode: n.focusNode,
            focusOffset: n.focusOffset
        },
        Vr && Br(Vr, n) ? null : (Vr = n,
        (e = Vn.getPooled(Gr.select, jr, e, t)).type = "select",
        e.target = Hr,
        Fn(e),
        e))
    }
    var Kr = {
        eventTypes: Gr,
        extractEvents: function(e, t, n, r, i, a) {
            if (!(a = !(i = a || (r.window === r ? r.document : 9 === r.nodeType ? r : r.ownerDocument)))) {
                e: {
                    i = Qe(i),
                    a = S.onSelect;
                    for (var o = 0; o < a.length; o++)
                        if (!i.has(a[o])) {
                            i = !1;
                            break e
                        }
                    i = !0
                }
                a = !i
            }
            if (a)
                return null;
            switch (i = t ? Ln(t) : window,
            e) {
            case "focus":
                (ur(i) || "true" === i.contentEditable) && (Hr = i,
                jr = t,
                Vr = null);
                break;
            case "blur":
                Vr = jr = Hr = null;
                break;
            case "mousedown":
                Wr = !0;
                break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
                return Wr = !1,
                qr(n, r);
            case "selectionchange":
                if (zr)
                    break;
            case "keydown":
            case "keyup":
                return qr(n, r)
            }
            return null
        }
    }
      , Yr = Vn.extend({
        animationName: null,
        elapsedTime: null,
        pseudoElement: null
    })
      , Xr = Vn.extend({
        clipboardData: function(e) {
            return "clipboardData"in e ? e.clipboardData : window.clipboardData
        }
    })
      , Zr = Sr.extend({
        relatedTarget: null
    });
    function Jr(e) {
        var t = e.keyCode;
        return "charCode"in e ? 0 === (e = e.charCode) && 13 === t && (e = 13) : e = t,
        10 === e && (e = 13),
        32 <= e || 13 === e ? e : 0
    }
    var Qr = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
    }
      , $r = {
        8: "Backspace",
        9: "Tab",
        12: "Clear",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        19: "Pause",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        45: "Insert",
        46: "Delete",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "NumLock",
        145: "ScrollLock",
        224: "Meta"
    }
      , ei = Sr.extend({
        key: function(e) {
            if (e.key) {
                var t = Qr[e.key] || e.key;
                if ("Unidentified" !== t)
                    return t
            }
            return "keypress" === e.type ? 13 === (e = Jr(e)) ? "Enter" : String.fromCharCode(e) : "keydown" === e.type || "keyup" === e.type ? $r[e.keyCode] || "Unidentified" : ""
        },
        location: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        repeat: null,
        locale: null,
        getModifierState: Rr,
        charCode: function(e) {
            return "keypress" === e.type ? Jr(e) : 0
        },
        keyCode: function(e) {
            return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
        },
        which: function(e) {
            return "keypress" === e.type ? Jr(e) : "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
        }
    })
      , ti = kr.extend({
        dataTransfer: null
    })
      , ni = Sr.extend({
        touches: null,
        targetTouches: null,
        changedTouches: null,
        altKey: null,
        metaKey: null,
        ctrlKey: null,
        shiftKey: null,
        getModifierState: Rr
    })
      , ri = Vn.extend({
        propertyName: null,
        elapsedTime: null,
        pseudoElement: null
    })
      , ii = kr.extend({
        deltaX: function(e) {
            return "deltaX"in e ? e.deltaX : "wheelDeltaX"in e ? -e.wheelDeltaX : 0
        },
        deltaY: function(e) {
            return "deltaY"in e ? e.deltaY : "wheelDeltaY"in e ? -e.wheelDeltaY : "wheelDelta"in e ? -e.wheelDelta : 0
        },
        deltaZ: null,
        deltaMode: null
    })
      , ai = {
        eventTypes: Ft,
        extractEvents: function(e, t, n, r) {
            var i = Ut.get(e);
            if (!i)
                return null;
            switch (e) {
            case "keypress":
                if (0 === Jr(n))
                    return null;
            case "keydown":
            case "keyup":
                e = ei;
                break;
            case "blur":
            case "focus":
                e = Zr;
                break;
            case "click":
                if (2 === n.button)
                    return null;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
                e = kr;
                break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
                e = ti;
                break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
                e = ni;
                break;
            case qe:
            case Ke:
            case Ye:
                e = Yr;
                break;
            case Xe:
                e = ri;
                break;
            case "scroll":
                e = Sr;
                break;
            case "wheel":
                e = ii;
                break;
            case "copy":
            case "cut":
            case "paste":
                e = Xr;
                break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
                e = Dr;
                break;
            default:
                e = Vn
            }
            return Fn(t = e.getPooled(i, t, n, r)),
            t
        }
    };
    if (y)
        throw Error(o(101));
    y = Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),
    x(),
    p = Cn,
    m = Rn,
    g = Ln,
    M({
        SimpleEventPlugin: ai,
        EnterLeaveEventPlugin: Nr,
        ChangeEventPlugin: Tr,
        SelectEventPlugin: Kr,
        BeforeInputEventPlugin: sr
    });
    var oi = []
      , si = -1;
    function li(e) {
        0 > si || (e.current = oi[si],
        oi[si] = null,
        si--)
    }
    function ui(e, t) {
        si++,
        oi[si] = e.current,
        e.current = t
    }
    var ci = {}
      , hi = {
        current: ci
    }
      , di = {
        current: !1
    }
      , fi = ci;
    function pi(e, t) {
        var n = e.type.contextTypes;
        if (!n)
            return ci;
        var r = e.stateNode;
        if (r && r.__reactInternalMemoizedUnmaskedChildContext === t)
            return r.__reactInternalMemoizedMaskedChildContext;
        var i, a = {};
        for (i in n)
            a[i] = t[i];
        return r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t,
        e.__reactInternalMemoizedMaskedChildContext = a),
        a
    }
    function mi(e) {
        return null != (e = e.childContextTypes)
    }
    function gi() {
        li(di),
        li(hi)
    }
    function vi(e, t, n) {
        if (hi.current !== ci)
            throw Error(o(168));
        ui(hi, t),
        ui(di, n)
    }
    function yi(e, t, n) {
        var r = e.stateNode;
        if (e = t.childContextTypes,
        "function" != typeof r.getChildContext)
            return n;
        for (var a in r = r.getChildContext())
            if (!(a in e))
                throw Error(o(108, ge(t) || "Unknown", a));
        return i({}, n, {}, r)
    }
    function bi(e) {
        return e = (e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext || ci,
        fi = hi.current,
        ui(hi, e),
        ui(di, di.current),
        !0
    }
    function xi(e, t, n) {
        var r = e.stateNode;
        if (!r)
            throw Error(o(169));
        n ? (e = yi(e, t, fi),
        r.__reactInternalMemoizedMergedChildContext = e,
        li(di),
        li(hi),
        ui(hi, e)) : li(di),
        ui(di, n)
    }
    var wi = a.unstable_runWithPriority
      , _i = a.unstable_scheduleCallback
      , Ei = a.unstable_cancelCallback
      , Ti = a.unstable_requestPaint
      , Si = a.unstable_now
      , Mi = a.unstable_getCurrentPriorityLevel
      , Ai = a.unstable_ImmediatePriority
      , Ri = a.unstable_UserBlockingPriority
      , Li = a.unstable_NormalPriority
      , Ci = a.unstable_LowPriority
      , Pi = a.unstable_IdlePriority
      , Oi = {}
      , ki = a.unstable_shouldYield
      , Di = void 0 !== Ti ? Ti : function() {}
      , Ii = null
      , Ni = null
      , Fi = !1
      , Ui = Si()
      , Bi = 1e4 > Ui ? Si : function() {
        return Si() - Ui
    }
    ;
    function zi() {
        switch (Mi()) {
        case Ai:
            return 99;
        case Ri:
            return 98;
        case Li:
            return 97;
        case Ci:
            return 96;
        case Pi:
            return 95;
        default:
            throw Error(o(332))
        }
    }
    function Gi(e) {
        switch (e) {
        case 99:
            return Ai;
        case 98:
            return Ri;
        case 97:
            return Li;
        case 96:
            return Ci;
        case 95:
            return Pi;
        default:
            throw Error(o(332))
        }
    }
    function Hi(e, t) {
        return e = Gi(e),
        wi(e, t)
    }
    function ji(e, t, n) {
        return e = Gi(e),
        _i(e, t, n)
    }
    function Vi(e) {
        return null === Ii ? (Ii = [e],
        Ni = _i(Ai, qi)) : Ii.push(e),
        Oi
    }
    function Wi() {
        if (null !== Ni) {
            var e = Ni;
            Ni = null,
            Ei(e)
        }
        qi()
    }
    function qi() {
        if (!Fi && null !== Ii) {
            Fi = !0;
            var e = 0;
            try {
                var t = Ii;
                Hi(99, (function() {
                    for (; e < t.length; e++) {
                        var n = t[e];
                        do {
                            n = n(!0)
                        } while (null !== n)
                    }
                }
                )),
                Ii = null
            } catch (t) {
                throw null !== Ii && (Ii = Ii.slice(e + 1)),
                _i(Ai, Wi),
                t
            } finally {
                Fi = !1
            }
        }
    }
    function Ki(e, t, n) {
        return 1073741821 - (1 + ((1073741821 - e + t / 10) / (n /= 10) | 0)) * n
    }
    function Yi(e, t) {
        if (e && e.defaultProps)
            for (var n in t = i({}, t),
            e = e.defaultProps)
                void 0 === t[n] && (t[n] = e[n]);
        return t
    }
    var Xi = {
        current: null
    }
      , Zi = null
      , Ji = null
      , Qi = null;
    function $i() {
        Qi = Ji = Zi = null
    }
    function ea(e) {
        var t = Xi.current;
        li(Xi),
        e.type._context._currentValue = t
    }
    function ta(e, t) {
        for (; null !== e; ) {
            var n = e.alternate;
            if (e.childExpirationTime < t)
                e.childExpirationTime = t,
                null !== n && n.childExpirationTime < t && (n.childExpirationTime = t);
            else {
                if (!(null !== n && n.childExpirationTime < t))
                    break;
                n.childExpirationTime = t
            }
            e = e.return
        }
    }
    function na(e, t) {
        Zi = e,
        Qi = Ji = null,
        null !== (e = e.dependencies) && null !== e.firstContext && (e.expirationTime >= t && (Co = !0),
        e.firstContext = null)
    }
    function ra(e, t) {
        if (Qi !== e && !1 !== t && 0 !== t)
            if ("number" == typeof t && 1073741823 !== t || (Qi = e,
            t = 1073741823),
            t = {
                context: e,
                observedBits: t,
                next: null
            },
            null === Ji) {
                if (null === Zi)
                    throw Error(o(308));
                Ji = t,
                Zi.dependencies = {
                    expirationTime: 0,
                    firstContext: t,
                    responders: null
                }
            } else
                Ji = Ji.next = t;
        return e._currentValue
    }
    var ia = !1;
    function aa(e) {
        e.updateQueue = {
            baseState: e.memoizedState,
            baseQueue: null,
            shared: {
                pending: null
            },
            effects: null
        }
    }
    function oa(e, t) {
        e = e.updateQueue,
        t.updateQueue === e && (t.updateQueue = {
            baseState: e.baseState,
            baseQueue: e.baseQueue,
            shared: e.shared,
            effects: e.effects
        })
    }
    function sa(e, t) {
        return (e = {
            expirationTime: e,
            suspenseConfig: t,
            tag: 0,
            payload: null,
            callback: null,
            next: null
        }).next = e
    }
    function la(e, t) {
        if (null !== (e = e.updateQueue)) {
            var n = (e = e.shared).pending;
            null === n ? t.next = t : (t.next = n.next,
            n.next = t),
            e.pending = t
        }
    }
    function ua(e, t) {
        var n = e.alternate;
        null !== n && oa(n, e),
        null === (n = (e = e.updateQueue).baseQueue) ? (e.baseQueue = t.next = t,
        t.next = t) : (t.next = n.next,
        n.next = t)
    }
    function ca(e, t, n, r) {
        var a = e.updateQueue;
        ia = !1;
        var o = a.baseQueue
          , s = a.shared.pending;
        if (null !== s) {
            if (null !== o) {
                var l = o.next;
                o.next = s.next,
                s.next = l
            }
            o = s,
            a.shared.pending = null,
            null !== (l = e.alternate) && (null !== (l = l.updateQueue) && (l.baseQueue = s))
        }
        if (null !== o) {
            l = o.next;
            var u = a.baseState
              , c = 0
              , h = null
              , d = null
              , f = null;
            if (null !== l)
                for (var p = l; ; ) {
                    if ((s = p.expirationTime) < r) {
                        var m = {
                            expirationTime: p.expirationTime,
                            suspenseConfig: p.suspenseConfig,
                            tag: p.tag,
                            payload: p.payload,
                            callback: p.callback,
                            next: null
                        };
                        null === f ? (d = f = m,
                        h = u) : f = f.next = m,
                        s > c && (c = s)
                    } else {
                        null !== f && (f = f.next = {
                            expirationTime: 1073741823,
                            suspenseConfig: p.suspenseConfig,
                            tag: p.tag,
                            payload: p.payload,
                            callback: p.callback,
                            next: null
                        }),
                        al(s, p.suspenseConfig);
                        e: {
                            var g = e
                              , v = p;
                            switch (s = t,
                            m = n,
                            v.tag) {
                            case 1:
                                if ("function" == typeof (g = v.payload)) {
                                    u = g.call(m, u, s);
                                    break e
                                }
                                u = g;
                                break e;
                            case 3:
                                g.effectTag = -4097 & g.effectTag | 64;
                            case 0:
                                if (null == (s = "function" == typeof (g = v.payload) ? g.call(m, u, s) : g))
                                    break e;
                                u = i({}, u, s);
                                break e;
                            case 2:
                                ia = !0
                            }
                        }
                        null !== p.callback && (e.effectTag |= 32,
                        null === (s = a.effects) ? a.effects = [p] : s.push(p))
                    }
                    if (null === (p = p.next) || p === l) {
                        if (null === (s = a.shared.pending))
                            break;
                        p = o.next = s.next,
                        s.next = l,
                        a.baseQueue = o = s,
                        a.shared.pending = null
                    }
                }
            null === f ? h = u : f.next = d,
            a.baseState = h,
            a.baseQueue = f,
            ol(c),
            e.expirationTime = c,
            e.memoizedState = u
        }
    }
    function ha(e, t, n) {
        if (e = t.effects,
        t.effects = null,
        null !== e)
            for (t = 0; t < e.length; t++) {
                var r = e[t]
                  , i = r.callback;
                if (null !== i) {
                    if (r.callback = null,
                    r = i,
                    i = n,
                    "function" != typeof r)
                        throw Error(o(191, r));
                    r.call(i)
                }
            }
    }
    var da = Z.ReactCurrentBatchConfig
      , fa = (new r.Component).refs;
    function pa(e, t, n, r) {
        n = null == (n = n(r, t = e.memoizedState)) ? t : i({}, t, n),
        e.memoizedState = n,
        0 === e.expirationTime && (e.updateQueue.baseState = n)
    }
    var ma = {
        isMounted: function(e) {
            return !!(e = e._reactInternalFiber) && $e(e) === e
        },
        enqueueSetState: function(e, t, n) {
            e = e._reactInternalFiber;
            var r = qs()
              , i = da.suspense;
            (i = sa(r = Ks(r, e, i), i)).payload = t,
            null != n && (i.callback = n),
            la(e, i),
            Ys(e, r)
        },
        enqueueReplaceState: function(e, t, n) {
            e = e._reactInternalFiber;
            var r = qs()
              , i = da.suspense;
            (i = sa(r = Ks(r, e, i), i)).tag = 1,
            i.payload = t,
            null != n && (i.callback = n),
            la(e, i),
            Ys(e, r)
        },
        enqueueForceUpdate: function(e, t) {
            e = e._reactInternalFiber;
            var n = qs()
              , r = da.suspense;
            (r = sa(n = Ks(n, e, r), r)).tag = 2,
            null != t && (r.callback = t),
            la(e, r),
            Ys(e, n)
        }
    };
    function ga(e, t, n, r, i, a, o) {
        return "function" == typeof (e = e.stateNode).shouldComponentUpdate ? e.shouldComponentUpdate(r, a, o) : !t.prototype || !t.prototype.isPureReactComponent || (!Br(n, r) || !Br(i, a))
    }
    function va(e, t, n) {
        var r = !1
          , i = ci
          , a = t.contextType;
        return "object" == typeof a && null !== a ? a = ra(a) : (i = mi(t) ? fi : hi.current,
        a = (r = null != (r = t.contextTypes)) ? pi(e, i) : ci),
        t = new t(n,a),
        e.memoizedState = null !== t.state && void 0 !== t.state ? t.state : null,
        t.updater = ma,
        e.stateNode = t,
        t._reactInternalFiber = e,
        r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = i,
        e.__reactInternalMemoizedMaskedChildContext = a),
        t
    }
    function ya(e, t, n, r) {
        e = t.state,
        "function" == typeof t.componentWillReceiveProps && t.componentWillReceiveProps(n, r),
        "function" == typeof t.UNSAFE_componentWillReceiveProps && t.UNSAFE_componentWillReceiveProps(n, r),
        t.state !== e && ma.enqueueReplaceState(t, t.state, null)
    }
    function ba(e, t, n, r) {
        var i = e.stateNode;
        i.props = n,
        i.state = e.memoizedState,
        i.refs = fa,
        aa(e);
        var a = t.contextType;
        "object" == typeof a && null !== a ? i.context = ra(a) : (a = mi(t) ? fi : hi.current,
        i.context = pi(e, a)),
        ca(e, n, i, r),
        i.state = e.memoizedState,
        "function" == typeof (a = t.getDerivedStateFromProps) && (pa(e, t, a, n),
        i.state = e.memoizedState),
        "function" == typeof t.getDerivedStateFromProps || "function" == typeof i.getSnapshotBeforeUpdate || "function" != typeof i.UNSAFE_componentWillMount && "function" != typeof i.componentWillMount || (t = i.state,
        "function" == typeof i.componentWillMount && i.componentWillMount(),
        "function" == typeof i.UNSAFE_componentWillMount && i.UNSAFE_componentWillMount(),
        t !== i.state && ma.enqueueReplaceState(i, i.state, null),
        ca(e, n, i, r),
        i.state = e.memoizedState),
        "function" == typeof i.componentDidMount && (e.effectTag |= 4)
    }
    var xa = Array.isArray;
    function wa(e, t, n) {
        if (null !== (e = n.ref) && "function" != typeof e && "object" != typeof e) {
            if (n._owner) {
                if (n = n._owner) {
                    if (1 !== n.tag)
                        throw Error(o(309));
                    var r = n.stateNode
                }
                if (!r)
                    throw Error(o(147, e));
                var i = "" + e;
                return null !== t && null !== t.ref && "function" == typeof t.ref && t.ref._stringRef === i ? t.ref : ((t = function(e) {
                    var t = r.refs;
                    t === fa && (t = r.refs = {}),
                    null === e ? delete t[i] : t[i] = e
                }
                )._stringRef = i,
                t)
            }
            if ("string" != typeof e)
                throw Error(o(284));
            if (!n._owner)
                throw Error(o(290, e))
        }
        return e
    }
    function _a(e, t) {
        if ("textarea" !== e.type)
            throw Error(o(31, "[object Object]" === Object.prototype.toString.call(t) ? "object with keys {" + Object.keys(t).join(", ") + "}" : t, ""))
    }
    function Ea(e) {
        function t(t, n) {
            if (e) {
                var r = t.lastEffect;
                null !== r ? (r.nextEffect = n,
                t.lastEffect = n) : t.firstEffect = t.lastEffect = n,
                n.nextEffect = null,
                n.effectTag = 8
            }
        }
        function n(n, r) {
            if (!e)
                return null;
            for (; null !== r; )
                t(n, r),
                r = r.sibling;
            return null
        }
        function r(e, t) {
            for (e = new Map; null !== t; )
                null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                t = t.sibling;
            return e
        }
        function i(e, t) {
            return (e = Ml(e, t)).index = 0,
            e.sibling = null,
            e
        }
        function a(t, n, r) {
            return t.index = r,
            e ? null !== (r = t.alternate) ? (r = r.index) < n ? (t.effectTag = 2,
            n) : r : (t.effectTag = 2,
            n) : n
        }
        function s(t) {
            return e && null === t.alternate && (t.effectTag = 2),
            t
        }
        function l(e, t, n, r) {
            return null === t || 6 !== t.tag ? ((t = Ll(n, e.mode, r)).return = e,
            t) : ((t = i(t, n)).return = e,
            t)
        }
        function u(e, t, n, r) {
            return null !== t && t.elementType === n.type ? ((r = i(t, n.props)).ref = wa(e, t, n),
            r.return = e,
            r) : ((r = Al(n.type, n.key, n.props, null, e.mode, r)).ref = wa(e, t, n),
            r.return = e,
            r)
        }
        function c(e, t, n, r) {
            return null === t || 4 !== t.tag || t.stateNode.containerInfo !== n.containerInfo || t.stateNode.implementation !== n.implementation ? ((t = Cl(n, e.mode, r)).return = e,
            t) : ((t = i(t, n.children || [])).return = e,
            t)
        }
        function h(e, t, n, r, a) {
            return null === t || 7 !== t.tag ? ((t = Rl(n, e.mode, r, a)).return = e,
            t) : ((t = i(t, n)).return = e,
            t)
        }
        function d(e, t, n) {
            if ("string" == typeof t || "number" == typeof t)
                return (t = Ll("" + t, e.mode, n)).return = e,
                t;
            if ("object" == typeof t && null !== t) {
                switch (t.$$typeof) {
                case ee:
                    return (n = Al(t.type, t.key, t.props, null, e.mode, n)).ref = wa(e, null, t),
                    n.return = e,
                    n;
                case te:
                    return (t = Cl(t, e.mode, n)).return = e,
                    t
                }
                if (xa(t) || me(t))
                    return (t = Rl(t, e.mode, n, null)).return = e,
                    t;
                _a(e, t)
            }
            return null
        }
        function f(e, t, n, r) {
            var i = null !== t ? t.key : null;
            if ("string" == typeof n || "number" == typeof n)
                return null !== i ? null : l(e, t, "" + n, r);
            if ("object" == typeof n && null !== n) {
                switch (n.$$typeof) {
                case ee:
                    return n.key === i ? n.type === ne ? h(e, t, n.props.children, r, i) : u(e, t, n, r) : null;
                case te:
                    return n.key === i ? c(e, t, n, r) : null
                }
                if (xa(n) || me(n))
                    return null !== i ? null : h(e, t, n, r, null);
                _a(e, n)
            }
            return null
        }
        function p(e, t, n, r, i) {
            if ("string" == typeof r || "number" == typeof r)
                return l(t, e = e.get(n) || null, "" + r, i);
            if ("object" == typeof r && null !== r) {
                switch (r.$$typeof) {
                case ee:
                    return e = e.get(null === r.key ? n : r.key) || null,
                    r.type === ne ? h(t, e, r.props.children, i, r.key) : u(t, e, r, i);
                case te:
                    return c(t, e = e.get(null === r.key ? n : r.key) || null, r, i)
                }
                if (xa(r) || me(r))
                    return h(t, e = e.get(n) || null, r, i, null);
                _a(t, r)
            }
            return null
        }
        function m(i, o, s, l) {
            for (var u = null, c = null, h = o, m = o = 0, g = null; null !== h && m < s.length; m++) {
                h.index > m ? (g = h,
                h = null) : g = h.sibling;
                var v = f(i, h, s[m], l);
                if (null === v) {
                    null === h && (h = g);
                    break
                }
                e && h && null === v.alternate && t(i, h),
                o = a(v, o, m),
                null === c ? u = v : c.sibling = v,
                c = v,
                h = g
            }
            if (m === s.length)
                return n(i, h),
                u;
            if (null === h) {
                for (; m < s.length; m++)
                    null !== (h = d(i, s[m], l)) && (o = a(h, o, m),
                    null === c ? u = h : c.sibling = h,
                    c = h);
                return u
            }
            for (h = r(i, h); m < s.length; m++)
                null !== (g = p(h, i, m, s[m], l)) && (e && null !== g.alternate && h.delete(null === g.key ? m : g.key),
                o = a(g, o, m),
                null === c ? u = g : c.sibling = g,
                c = g);
            return e && h.forEach((function(e) {
                return t(i, e)
            }
            )),
            u
        }
        function g(i, s, l, u) {
            var c = me(l);
            if ("function" != typeof c)
                throw Error(o(150));
            if (null == (l = c.call(l)))
                throw Error(o(151));
            for (var h = c = null, m = s, g = s = 0, v = null, y = l.next(); null !== m && !y.done; g++,
            y = l.next()) {
                m.index > g ? (v = m,
                m = null) : v = m.sibling;
                var b = f(i, m, y.value, u);
                if (null === b) {
                    null === m && (m = v);
                    break
                }
                e && m && null === b.alternate && t(i, m),
                s = a(b, s, g),
                null === h ? c = b : h.sibling = b,
                h = b,
                m = v
            }
            if (y.done)
                return n(i, m),
                c;
            if (null === m) {
                for (; !y.done; g++,
                y = l.next())
                    null !== (y = d(i, y.value, u)) && (s = a(y, s, g),
                    null === h ? c = y : h.sibling = y,
                    h = y);
                return c
            }
            for (m = r(i, m); !y.done; g++,
            y = l.next())
                null !== (y = p(m, i, g, y.value, u)) && (e && null !== y.alternate && m.delete(null === y.key ? g : y.key),
                s = a(y, s, g),
                null === h ? c = y : h.sibling = y,
                h = y);
            return e && m.forEach((function(e) {
                return t(i, e)
            }
            )),
            c
        }
        return function(e, r, a, l) {
            var u = "object" == typeof a && null !== a && a.type === ne && null === a.key;
            u && (a = a.props.children);
            var c = "object" == typeof a && null !== a;
            if (c)
                switch (a.$$typeof) {
                case ee:
                    e: {
                        for (c = a.key,
                        u = r; null !== u; ) {
                            if (u.key === c) {
                                switch (u.tag) {
                                case 7:
                                    if (a.type === ne) {
                                        n(e, u.sibling),
                                        (r = i(u, a.props.children)).return = e,
                                        e = r;
                                        break e
                                    }
                                    break;
                                default:
                                    if (u.elementType === a.type) {
                                        n(e, u.sibling),
                                        (r = i(u, a.props)).ref = wa(e, u, a),
                                        r.return = e,
                                        e = r;
                                        break e
                                    }
                                }
                                n(e, u);
                                break
                            }
                            t(e, u),
                            u = u.sibling
                        }
                        a.type === ne ? ((r = Rl(a.props.children, e.mode, l, a.key)).return = e,
                        e = r) : ((l = Al(a.type, a.key, a.props, null, e.mode, l)).ref = wa(e, r, a),
                        l.return = e,
                        e = l)
                    }
                    return s(e);
                case te:
                    e: {
                        for (u = a.key; null !== r; ) {
                            if (r.key === u) {
                                if (4 === r.tag && r.stateNode.containerInfo === a.containerInfo && r.stateNode.implementation === a.implementation) {
                                    n(e, r.sibling),
                                    (r = i(r, a.children || [])).return = e,
                                    e = r;
                                    break e
                                }
                                n(e, r);
                                break
                            }
                            t(e, r),
                            r = r.sibling
                        }
                        (r = Cl(a, e.mode, l)).return = e,
                        e = r
                    }
                    return s(e)
                }
            if ("string" == typeof a || "number" == typeof a)
                return a = "" + a,
                null !== r && 6 === r.tag ? (n(e, r.sibling),
                (r = i(r, a)).return = e,
                e = r) : (n(e, r),
                (r = Ll(a, e.mode, l)).return = e,
                e = r),
                s(e);
            if (xa(a))
                return m(e, r, a, l);
            if (me(a))
                return g(e, r, a, l);
            if (c && _a(e, a),
            void 0 === a && !u)
                switch (e.tag) {
                case 1:
                case 0:
                    throw e = e.type,
                    Error(o(152, e.displayName || e.name || "Component"))
                }
            return n(e, r)
        }
    }
    var Ta = Ea(!0)
      , Sa = Ea(!1)
      , Ma = {}
      , Aa = {
        current: Ma
    }
      , Ra = {
        current: Ma
    }
      , La = {
        current: Ma
    };
    function Ca(e) {
        if (e === Ma)
            throw Error(o(174));
        return e
    }
    function Pa(e, t) {
        switch (ui(La, t),
        ui(Ra, e),
        ui(Aa, Ma),
        e = t.nodeType) {
        case 9:
        case 11:
            t = (t = t.documentElement) ? t.namespaceURI : Fe(null, "");
            break;
        default:
            t = Fe(t = (e = 8 === e ? t.parentNode : t).namespaceURI || null, e = e.tagName)
        }
        li(Aa),
        ui(Aa, t)
    }
    function Oa() {
        li(Aa),
        li(Ra),
        li(La)
    }
    function ka(e) {
        Ca(La.current);
        var t = Ca(Aa.current)
          , n = Fe(t, e.type);
        t !== n && (ui(Ra, e),
        ui(Aa, n))
    }
    function Da(e) {
        Ra.current === e && (li(Aa),
        li(Ra))
    }
    var Ia = {
        current: 0
    };
    function Na(e) {
        for (var t = e; null !== t; ) {
            if (13 === t.tag) {
                var n = t.memoizedState;
                if (null !== n && (null === (n = n.dehydrated) || "$?" === n.data || "$!" === n.data))
                    return t
            } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
                if (0 != (64 & t.effectTag))
                    return t
            } else if (null !== t.child) {
                t.child.return = t,
                t = t.child;
                continue
            }
            if (t === e)
                break;
            for (; null === t.sibling; ) {
                if (null === t.return || t.return === e)
                    return null;
                t = t.return
            }
            t.sibling.return = t.return,
            t = t.sibling
        }
        return null
    }
    function Fa(e, t) {
        return {
            responder: e,
            props: t
        }
    }
    var Ua = Z.ReactCurrentDispatcher
      , Ba = Z.ReactCurrentBatchConfig
      , za = 0
      , Ga = null
      , Ha = null
      , ja = null
      , Va = !1;
    function Wa() {
        throw Error(o(321))
    }
    function qa(e, t) {
        if (null === t)
            return !1;
        for (var n = 0; n < t.length && n < e.length; n++)
            if (!Fr(e[n], t[n]))
                return !1;
        return !0
    }
    function Ka(e, t, n, r, i, a) {
        if (za = a,
        Ga = t,
        t.memoizedState = null,
        t.updateQueue = null,
        t.expirationTime = 0,
        Ua.current = null === e || null === e.memoizedState ? vo : yo,
        e = n(r, i),
        t.expirationTime === za) {
            a = 0;
            do {
                if (t.expirationTime = 0,
                !(25 > a))
                    throw Error(o(301));
                a += 1,
                ja = Ha = null,
                t.updateQueue = null,
                Ua.current = bo,
                e = n(r, i)
            } while (t.expirationTime === za)
        }
        if (Ua.current = go,
        t = null !== Ha && null !== Ha.next,
        za = 0,
        ja = Ha = Ga = null,
        Va = !1,
        t)
            throw Error(o(300));
        return e
    }
    function Ya() {
        var e = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        return null === ja ? Ga.memoizedState = ja = e : ja = ja.next = e,
        ja
    }
    function Xa() {
        if (null === Ha) {
            var e = Ga.alternate;
            e = null !== e ? e.memoizedState : null
        } else
            e = Ha.next;
        var t = null === ja ? Ga.memoizedState : ja.next;
        if (null !== t)
            ja = t,
            Ha = e;
        else {
            if (null === e)
                throw Error(o(310));
            e = {
                memoizedState: (Ha = e).memoizedState,
                baseState: Ha.baseState,
                baseQueue: Ha.baseQueue,
                queue: Ha.queue,
                next: null
            },
            null === ja ? Ga.memoizedState = ja = e : ja = ja.next = e
        }
        return ja
    }
    function Za(e, t) {
        return "function" == typeof t ? t(e) : t
    }
    function Ja(e) {
        var t = Xa()
          , n = t.queue;
        if (null === n)
            throw Error(o(311));
        n.lastRenderedReducer = e;
        var r = Ha
          , i = r.baseQueue
          , a = n.pending;
        if (null !== a) {
            if (null !== i) {
                var s = i.next;
                i.next = a.next,
                a.next = s
            }
            r.baseQueue = i = a,
            n.pending = null
        }
        if (null !== i) {
            i = i.next,
            r = r.baseState;
            var l = s = a = null
              , u = i;
            do {
                var c = u.expirationTime;
                if (c < za) {
                    var h = {
                        expirationTime: u.expirationTime,
                        suspenseConfig: u.suspenseConfig,
                        action: u.action,
                        eagerReducer: u.eagerReducer,
                        eagerState: u.eagerState,
                        next: null
                    };
                    null === l ? (s = l = h,
                    a = r) : l = l.next = h,
                    c > Ga.expirationTime && (Ga.expirationTime = c,
                    ol(c))
                } else
                    null !== l && (l = l.next = {
                        expirationTime: 1073741823,
                        suspenseConfig: u.suspenseConfig,
                        action: u.action,
                        eagerReducer: u.eagerReducer,
                        eagerState: u.eagerState,
                        next: null
                    }),
                    al(c, u.suspenseConfig),
                    r = u.eagerReducer === e ? u.eagerState : e(r, u.action);
                u = u.next
            } while (null !== u && u !== i);
            null === l ? a = r : l.next = s,
            Fr(r, t.memoizedState) || (Co = !0),
            t.memoizedState = r,
            t.baseState = a,
            t.baseQueue = l,
            n.lastRenderedState = r
        }
        return [t.memoizedState, n.dispatch]
    }
    function Qa(e) {
        var t = Xa()
          , n = t.queue;
        if (null === n)
            throw Error(o(311));
        n.lastRenderedReducer = e;
        var r = n.dispatch
          , i = n.pending
          , a = t.memoizedState;
        if (null !== i) {
            n.pending = null;
            var s = i = i.next;
            do {
                a = e(a, s.action),
                s = s.next
            } while (s !== i);
            Fr(a, t.memoizedState) || (Co = !0),
            t.memoizedState = a,
            null === t.baseQueue && (t.baseState = a),
            n.lastRenderedState = a
        }
        return [a, r]
    }
    function $a(e) {
        var t = Ya();
        return "function" == typeof e && (e = e()),
        t.memoizedState = t.baseState = e,
        e = (e = t.queue = {
            pending: null,
            dispatch: null,
            lastRenderedReducer: Za,
            lastRenderedState: e
        }).dispatch = mo.bind(null, Ga, e),
        [t.memoizedState, e]
    }
    function eo(e, t, n, r) {
        return e = {
            tag: e,
            create: t,
            destroy: n,
            deps: r,
            next: null
        },
        null === (t = Ga.updateQueue) ? (t = {
            lastEffect: null
        },
        Ga.updateQueue = t,
        t.lastEffect = e.next = e) : null === (n = t.lastEffect) ? t.lastEffect = e.next = e : (r = n.next,
        n.next = e,
        e.next = r,
        t.lastEffect = e),
        e
    }
    function to() {
        return Xa().memoizedState
    }
    function no(e, t, n, r) {
        var i = Ya();
        Ga.effectTag |= e,
        i.memoizedState = eo(1 | t, n, void 0, void 0 === r ? null : r)
    }
    function ro(e, t, n, r) {
        var i = Xa();
        r = void 0 === r ? null : r;
        var a = void 0;
        if (null !== Ha) {
            var o = Ha.memoizedState;
            if (a = o.destroy,
            null !== r && qa(r, o.deps))
                return void eo(t, n, a, r)
        }
        Ga.effectTag |= e,
        i.memoizedState = eo(1 | t, n, a, r)
    }
    function io(e, t) {
        return no(516, 4, e, t)
    }
    function ao(e, t) {
        return ro(516, 4, e, t)
    }
    function oo(e, t) {
        return ro(4, 2, e, t)
    }
    function so(e, t) {
        return "function" == typeof t ? (e = e(),
        t(e),
        function() {
            t(null)
        }
        ) : null != t ? (e = e(),
        t.current = e,
        function() {
            t.current = null
        }
        ) : void 0
    }
    function lo(e, t, n) {
        return n = null != n ? n.concat([e]) : null,
        ro(4, 2, so.bind(null, t, e), n)
    }
    function uo() {}
    function co(e, t) {
        return Ya().memoizedState = [e, void 0 === t ? null : t],
        e
    }
    function ho(e, t) {
        var n = Xa();
        t = void 0 === t ? null : t;
        var r = n.memoizedState;
        return null !== r && null !== t && qa(t, r[1]) ? r[0] : (n.memoizedState = [e, t],
        e)
    }
    function fo(e, t) {
        var n = Xa();
        t = void 0 === t ? null : t;
        var r = n.memoizedState;
        return null !== r && null !== t && qa(t, r[1]) ? r[0] : (e = e(),
        n.memoizedState = [e, t],
        e)
    }
    function po(e, t, n) {
        var r = zi();
        Hi(98 > r ? 98 : r, (function() {
            e(!0)
        }
        )),
        Hi(97 < r ? 97 : r, (function() {
            var r = Ba.suspense;
            Ba.suspense = void 0 === t ? null : t;
            try {
                e(!1),
                n()
            } finally {
                Ba.suspense = r
            }
        }
        ))
    }
    function mo(e, t, n) {
        var r = qs()
          , i = da.suspense;
        i = {
            expirationTime: r = Ks(r, e, i),
            suspenseConfig: i,
            action: n,
            eagerReducer: null,
            eagerState: null,
            next: null
        };
        var a = t.pending;
        if (null === a ? i.next = i : (i.next = a.next,
        a.next = i),
        t.pending = i,
        a = e.alternate,
        e === Ga || null !== a && a === Ga)
            Va = !0,
            i.expirationTime = za,
            Ga.expirationTime = za;
        else {
            if (0 === e.expirationTime && (null === a || 0 === a.expirationTime) && null !== (a = t.lastRenderedReducer))
                try {
                    var o = t.lastRenderedState
                      , s = a(o, n);
                    if (i.eagerReducer = a,
                    i.eagerState = s,
                    Fr(s, o))
                        return
                } catch (e) {}
            Ys(e, r)
        }
    }
    var go = {
        readContext: ra,
        useCallback: Wa,
        useContext: Wa,
        useEffect: Wa,
        useImperativeHandle: Wa,
        useLayoutEffect: Wa,
        useMemo: Wa,
        useReducer: Wa,
        useRef: Wa,
        useState: Wa,
        useDebugValue: Wa,
        useResponder: Wa,
        useDeferredValue: Wa,
        useTransition: Wa
    }
      , vo = {
        readContext: ra,
        useCallback: co,
        useContext: ra,
        useEffect: io,
        useImperativeHandle: function(e, t, n) {
            return n = null != n ? n.concat([e]) : null,
            no(4, 2, so.bind(null, t, e), n)
        },
        useLayoutEffect: function(e, t) {
            return no(4, 2, e, t)
        },
        useMemo: function(e, t) {
            var n = Ya();
            return t = void 0 === t ? null : t,
            e = e(),
            n.memoizedState = [e, t],
            e
        },
        useReducer: function(e, t, n) {
            var r = Ya();
            return t = void 0 !== n ? n(t) : t,
            r.memoizedState = r.baseState = t,
            e = (e = r.queue = {
                pending: null,
                dispatch: null,
                lastRenderedReducer: e,
                lastRenderedState: t
            }).dispatch = mo.bind(null, Ga, e),
            [r.memoizedState, e]
        },
        useRef: function(e) {
            return e = {
                current: e
            },
            Ya().memoizedState = e
        },
        useState: $a,
        useDebugValue: uo,
        useResponder: Fa,
        useDeferredValue: function(e, t) {
            var n = $a(e)
              , r = n[0]
              , i = n[1];
            return io((function() {
                var n = Ba.suspense;
                Ba.suspense = void 0 === t ? null : t;
                try {
                    i(e)
                } finally {
                    Ba.suspense = n
                }
            }
            ), [e, t]),
            r
        },
        useTransition: function(e) {
            var t = $a(!1)
              , n = t[0];
            return t = t[1],
            [co(po.bind(null, t, e), [t, e]), n]
        }
    }
      , yo = {
        readContext: ra,
        useCallback: ho,
        useContext: ra,
        useEffect: ao,
        useImperativeHandle: lo,
        useLayoutEffect: oo,
        useMemo: fo,
        useReducer: Ja,
        useRef: to,
        useState: function() {
            return Ja(Za)
        },
        useDebugValue: uo,
        useResponder: Fa,
        useDeferredValue: function(e, t) {
            var n = Ja(Za)
              , r = n[0]
              , i = n[1];
            return ao((function() {
                var n = Ba.suspense;
                Ba.suspense = void 0 === t ? null : t;
                try {
                    i(e)
                } finally {
                    Ba.suspense = n
                }
            }
            ), [e, t]),
            r
        },
        useTransition: function(e) {
            var t = Ja(Za)
              , n = t[0];
            return t = t[1],
            [ho(po.bind(null, t, e), [t, e]), n]
        }
    }
      , bo = {
        readContext: ra,
        useCallback: ho,
        useContext: ra,
        useEffect: ao,
        useImperativeHandle: lo,
        useLayoutEffect: oo,
        useMemo: fo,
        useReducer: Qa,
        useRef: to,
        useState: function() {
            return Qa(Za)
        },
        useDebugValue: uo,
        useResponder: Fa,
        useDeferredValue: function(e, t) {
            var n = Qa(Za)
              , r = n[0]
              , i = n[1];
            return ao((function() {
                var n = Ba.suspense;
                Ba.suspense = void 0 === t ? null : t;
                try {
                    i(e)
                } finally {
                    Ba.suspense = n
                }
            }
            ), [e, t]),
            r
        },
        useTransition: function(e) {
            var t = Qa(Za)
              , n = t[0];
            return t = t[1],
            [ho(po.bind(null, t, e), [t, e]), n]
        }
    }
      , xo = null
      , wo = null
      , _o = !1;
    function Eo(e, t) {
        var n = Tl(5, null, null, 0);
        n.elementType = "DELETED",
        n.type = "DELETED",
        n.stateNode = t,
        n.return = e,
        n.effectTag = 8,
        null !== e.lastEffect ? (e.lastEffect.nextEffect = n,
        e.lastEffect = n) : e.firstEffect = e.lastEffect = n
    }
    function To(e, t) {
        switch (e.tag) {
        case 5:
            var n = e.type;
            return null !== (t = 1 !== t.nodeType || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t) && (e.stateNode = t,
            !0);
        case 6:
            return null !== (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) && (e.stateNode = t,
            !0);
        case 13:
        default:
            return !1
        }
    }
    function So(e) {
        if (_o) {
            var t = wo;
            if (t) {
                var n = t;
                if (!To(e, t)) {
                    if (!(t = wn(n.nextSibling)) || !To(e, t))
                        return e.effectTag = -1025 & e.effectTag | 2,
                        _o = !1,
                        void (xo = e);
                    Eo(xo, n)
                }
                xo = e,
                wo = wn(t.firstChild)
            } else
                e.effectTag = -1025 & e.effectTag | 2,
                _o = !1,
                xo = e
        }
    }
    function Mo(e) {
        for (e = e.return; null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag; )
            e = e.return;
        xo = e
    }
    function Ao(e) {
        if (e !== xo)
            return !1;
        if (!_o)
            return Mo(e),
            _o = !0,
            !1;
        var t = e.type;
        if (5 !== e.tag || "head" !== t && "body" !== t && !yn(t, e.memoizedProps))
            for (t = wo; t; )
                Eo(e, t),
                t = wn(t.nextSibling);
        if (Mo(e),
        13 === e.tag) {
            if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null))
                throw Error(o(317));
            e: {
                for (e = e.nextSibling,
                t = 0; e; ) {
                    if (8 === e.nodeType) {
                        var n = e.data;
                        if ("/$" === n) {
                            if (0 === t) {
                                wo = wn(e.nextSibling);
                                break e
                            }
                            t--
                        } else
                            "$" !== n && "$!" !== n && "$?" !== n || t++
                    }
                    e = e.nextSibling
                }
                wo = null
            }
        } else
            wo = xo ? wn(e.stateNode.nextSibling) : null;
        return !0
    }
    function Ro() {
        wo = xo = null,
        _o = !1
    }
    var Lo = Z.ReactCurrentOwner
      , Co = !1;
    function Po(e, t, n, r) {
        t.child = null === e ? Sa(t, null, n, r) : Ta(t, e.child, n, r)
    }
    function Oo(e, t, n, r, i) {
        n = n.render;
        var a = t.ref;
        return na(t, i),
        r = Ka(e, t, n, r, a, i),
        null === e || Co ? (t.effectTag |= 1,
        Po(e, t, r, i),
        t.child) : (t.updateQueue = e.updateQueue,
        t.effectTag &= -517,
        e.expirationTime <= i && (e.expirationTime = 0),
        Yo(e, t, i))
    }
    function ko(e, t, n, r, i, a) {
        if (null === e) {
            var o = n.type;
            return "function" != typeof o || Sl(o) || void 0 !== o.defaultProps || null !== n.compare || void 0 !== n.defaultProps ? ((e = Al(n.type, null, r, null, t.mode, a)).ref = t.ref,
            e.return = t,
            t.child = e) : (t.tag = 15,
            t.type = o,
            Do(e, t, o, r, i, a))
        }
        return o = e.child,
        i < a && (i = o.memoizedProps,
        (n = null !== (n = n.compare) ? n : Br)(i, r) && e.ref === t.ref) ? Yo(e, t, a) : (t.effectTag |= 1,
        (e = Ml(o, r)).ref = t.ref,
        e.return = t,
        t.child = e)
    }
    function Do(e, t, n, r, i, a) {
        return null !== e && Br(e.memoizedProps, r) && e.ref === t.ref && (Co = !1,
        i < a) ? (t.expirationTime = e.expirationTime,
        Yo(e, t, a)) : No(e, t, n, r, a)
    }
    function Io(e, t) {
        var n = t.ref;
        (null === e && null !== n || null !== e && e.ref !== n) && (t.effectTag |= 128)
    }
    function No(e, t, n, r, i) {
        var a = mi(n) ? fi : hi.current;
        return a = pi(t, a),
        na(t, i),
        n = Ka(e, t, n, r, a, i),
        null === e || Co ? (t.effectTag |= 1,
        Po(e, t, n, i),
        t.child) : (t.updateQueue = e.updateQueue,
        t.effectTag &= -517,
        e.expirationTime <= i && (e.expirationTime = 0),
        Yo(e, t, i))
    }
    function Fo(e, t, n, r, i) {
        if (mi(n)) {
            var a = !0;
            bi(t)
        } else
            a = !1;
        if (na(t, i),
        null === t.stateNode)
            null !== e && (e.alternate = null,
            t.alternate = null,
            t.effectTag |= 2),
            va(t, n, r),
            ba(t, n, r, i),
            r = !0;
        else if (null === e) {
            var o = t.stateNode
              , s = t.memoizedProps;
            o.props = s;
            var l = o.context
              , u = n.contextType;
            "object" == typeof u && null !== u ? u = ra(u) : u = pi(t, u = mi(n) ? fi : hi.current);
            var c = n.getDerivedStateFromProps
              , h = "function" == typeof c || "function" == typeof o.getSnapshotBeforeUpdate;
            h || "function" != typeof o.UNSAFE_componentWillReceiveProps && "function" != typeof o.componentWillReceiveProps || (s !== r || l !== u) && ya(t, o, r, u),
            ia = !1;
            var d = t.memoizedState;
            o.state = d,
            ca(t, r, o, i),
            l = t.memoizedState,
            s !== r || d !== l || di.current || ia ? ("function" == typeof c && (pa(t, n, c, r),
            l = t.memoizedState),
            (s = ia || ga(t, n, s, r, d, l, u)) ? (h || "function" != typeof o.UNSAFE_componentWillMount && "function" != typeof o.componentWillMount || ("function" == typeof o.componentWillMount && o.componentWillMount(),
            "function" == typeof o.UNSAFE_componentWillMount && o.UNSAFE_componentWillMount()),
            "function" == typeof o.componentDidMount && (t.effectTag |= 4)) : ("function" == typeof o.componentDidMount && (t.effectTag |= 4),
            t.memoizedProps = r,
            t.memoizedState = l),
            o.props = r,
            o.state = l,
            o.context = u,
            r = s) : ("function" == typeof o.componentDidMount && (t.effectTag |= 4),
            r = !1)
        } else
            o = t.stateNode,
            oa(e, t),
            s = t.memoizedProps,
            o.props = t.type === t.elementType ? s : Yi(t.type, s),
            l = o.context,
            "object" == typeof (u = n.contextType) && null !== u ? u = ra(u) : u = pi(t, u = mi(n) ? fi : hi.current),
            (h = "function" == typeof (c = n.getDerivedStateFromProps) || "function" == typeof o.getSnapshotBeforeUpdate) || "function" != typeof o.UNSAFE_componentWillReceiveProps && "function" != typeof o.componentWillReceiveProps || (s !== r || l !== u) && ya(t, o, r, u),
            ia = !1,
            l = t.memoizedState,
            o.state = l,
            ca(t, r, o, i),
            d = t.memoizedState,
            s !== r || l !== d || di.current || ia ? ("function" == typeof c && (pa(t, n, c, r),
            d = t.memoizedState),
            (c = ia || ga(t, n, s, r, l, d, u)) ? (h || "function" != typeof o.UNSAFE_componentWillUpdate && "function" != typeof o.componentWillUpdate || ("function" == typeof o.componentWillUpdate && o.componentWillUpdate(r, d, u),
            "function" == typeof o.UNSAFE_componentWillUpdate && o.UNSAFE_componentWillUpdate(r, d, u)),
            "function" == typeof o.componentDidUpdate && (t.effectTag |= 4),
            "function" == typeof o.getSnapshotBeforeUpdate && (t.effectTag |= 256)) : ("function" != typeof o.componentDidUpdate || s === e.memoizedProps && l === e.memoizedState || (t.effectTag |= 4),
            "function" != typeof o.getSnapshotBeforeUpdate || s === e.memoizedProps && l === e.memoizedState || (t.effectTag |= 256),
            t.memoizedProps = r,
            t.memoizedState = d),
            o.props = r,
            o.state = d,
            o.context = u,
            r = c) : ("function" != typeof o.componentDidUpdate || s === e.memoizedProps && l === e.memoizedState || (t.effectTag |= 4),
            "function" != typeof o.getSnapshotBeforeUpdate || s === e.memoizedProps && l === e.memoizedState || (t.effectTag |= 256),
            r = !1);
        return Uo(e, t, n, r, a, i)
    }
    function Uo(e, t, n, r, i, a) {
        Io(e, t);
        var o = 0 != (64 & t.effectTag);
        if (!r && !o)
            return i && xi(t, n, !1),
            Yo(e, t, a);
        r = t.stateNode,
        Lo.current = t;
        var s = o && "function" != typeof n.getDerivedStateFromError ? null : r.render();
        return t.effectTag |= 1,
        null !== e && o ? (t.child = Ta(t, e.child, null, a),
        t.child = Ta(t, null, s, a)) : Po(e, t, s, a),
        t.memoizedState = r.state,
        i && xi(t, n, !0),
        t.child
    }
    function Bo(e) {
        var t = e.stateNode;
        t.pendingContext ? vi(0, t.pendingContext, t.pendingContext !== t.context) : t.context && vi(0, t.context, !1),
        Pa(e, t.containerInfo)
    }
    var zo, Go, Ho, jo = {
        dehydrated: null,
        retryTime: 0
    };
    function Vo(e, t, n) {
        var r, i = t.mode, a = t.pendingProps, o = Ia.current, s = !1;
        if ((r = 0 != (64 & t.effectTag)) || (r = 0 != (2 & o) && (null === e || null !== e.memoizedState)),
        r ? (s = !0,
        t.effectTag &= -65) : null !== e && null === e.memoizedState || void 0 === a.fallback || !0 === a.unstable_avoidThisFallback || (o |= 1),
        ui(Ia, 1 & o),
        null === e) {
            if (void 0 !== a.fallback && So(t),
            s) {
                if (s = a.fallback,
                (a = Rl(null, i, 0, null)).return = t,
                0 == (2 & t.mode))
                    for (e = null !== t.memoizedState ? t.child.child : t.child,
                    a.child = e; null !== e; )
                        e.return = a,
                        e = e.sibling;
                return (n = Rl(s, i, n, null)).return = t,
                a.sibling = n,
                t.memoizedState = jo,
                t.child = a,
                n
            }
            return i = a.children,
            t.memoizedState = null,
            t.child = Sa(t, null, i, n)
        }
        if (null !== e.memoizedState) {
            if (i = (e = e.child).sibling,
            s) {
                if (a = a.fallback,
                (n = Ml(e, e.pendingProps)).return = t,
                0 == (2 & t.mode) && (s = null !== t.memoizedState ? t.child.child : t.child) !== e.child)
                    for (n.child = s; null !== s; )
                        s.return = n,
                        s = s.sibling;
                return (i = Ml(i, a)).return = t,
                n.sibling = i,
                n.childExpirationTime = 0,
                t.memoizedState = jo,
                t.child = n,
                i
            }
            return n = Ta(t, e.child, a.children, n),
            t.memoizedState = null,
            t.child = n
        }
        if (e = e.child,
        s) {
            if (s = a.fallback,
            (a = Rl(null, i, 0, null)).return = t,
            a.child = e,
            null !== e && (e.return = a),
            0 == (2 & t.mode))
                for (e = null !== t.memoizedState ? t.child.child : t.child,
                a.child = e; null !== e; )
                    e.return = a,
                    e = e.sibling;
            return (n = Rl(s, i, n, null)).return = t,
            a.sibling = n,
            n.effectTag |= 2,
            a.childExpirationTime = 0,
            t.memoizedState = jo,
            t.child = a,
            n
        }
        return t.memoizedState = null,
        t.child = Ta(t, e, a.children, n)
    }
    function Wo(e, t) {
        e.expirationTime < t && (e.expirationTime = t);
        var n = e.alternate;
        null !== n && n.expirationTime < t && (n.expirationTime = t),
        ta(e.return, t)
    }
    function qo(e, t, n, r, i, a) {
        var o = e.memoizedState;
        null === o ? e.memoizedState = {
            isBackwards: t,
            rendering: null,
            renderingStartTime: 0,
            last: r,
            tail: n,
            tailExpiration: 0,
            tailMode: i,
            lastEffect: a
        } : (o.isBackwards = t,
        o.rendering = null,
        o.renderingStartTime = 0,
        o.last = r,
        o.tail = n,
        o.tailExpiration = 0,
        o.tailMode = i,
        o.lastEffect = a)
    }
    function Ko(e, t, n) {
        var r = t.pendingProps
          , i = r.revealOrder
          , a = r.tail;
        if (Po(e, t, r.children, n),
        0 != (2 & (r = Ia.current)))
            r = 1 & r | 2,
            t.effectTag |= 64;
        else {
            if (null !== e && 0 != (64 & e.effectTag))
                e: for (e = t.child; null !== e; ) {
                    if (13 === e.tag)
                        null !== e.memoizedState && Wo(e, n);
                    else if (19 === e.tag)
                        Wo(e, n);
                    else if (null !== e.child) {
                        e.child.return = e,
                        e = e.child;
                        continue
                    }
                    if (e === t)
                        break e;
                    for (; null === e.sibling; ) {
                        if (null === e.return || e.return === t)
                            break e;
                        e = e.return
                    }
                    e.sibling.return = e.return,
                    e = e.sibling
                }
            r &= 1
        }
        if (ui(Ia, r),
        0 == (2 & t.mode))
            t.memoizedState = null;
        else
            switch (i) {
            case "forwards":
                for (n = t.child,
                i = null; null !== n; )
                    null !== (e = n.alternate) && null === Na(e) && (i = n),
                    n = n.sibling;
                null === (n = i) ? (i = t.child,
                t.child = null) : (i = n.sibling,
                n.sibling = null),
                qo(t, !1, i, n, a, t.lastEffect);
                break;
            case "backwards":
                for (n = null,
                i = t.child,
                t.child = null; null !== i; ) {
                    if (null !== (e = i.alternate) && null === Na(e)) {
                        t.child = i;
                        break
                    }
                    e = i.sibling,
                    i.sibling = n,
                    n = i,
                    i = e
                }
                qo(t, !0, n, null, a, t.lastEffect);
                break;
            case "together":
                qo(t, !1, null, null, void 0, t.lastEffect);
                break;
            default:
                t.memoizedState = null
            }
        return t.child
    }
    function Yo(e, t, n) {
        null !== e && (t.dependencies = e.dependencies);
        var r = t.expirationTime;
        if (0 !== r && ol(r),
        t.childExpirationTime < n)
            return null;
        if (null !== e && t.child !== e.child)
            throw Error(o(153));
        if (null !== t.child) {
            for (n = Ml(e = t.child, e.pendingProps),
            t.child = n,
            n.return = t; null !== e.sibling; )
                e = e.sibling,
                (n = n.sibling = Ml(e, e.pendingProps)).return = t;
            n.sibling = null
        }
        return t.child
    }
    function Xo(e, t) {
        switch (e.tailMode) {
        case "hidden":
            t = e.tail;
            for (var n = null; null !== t; )
                null !== t.alternate && (n = t),
                t = t.sibling;
            null === n ? e.tail = null : n.sibling = null;
            break;
        case "collapsed":
            n = e.tail;
            for (var r = null; null !== n; )
                null !== n.alternate && (r = n),
                n = n.sibling;
            null === r ? t || null === e.tail ? e.tail = null : e.tail.sibling = null : r.sibling = null
        }
    }
    function Zo(e, t, n) {
        var r = t.pendingProps;
        switch (t.tag) {
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
            return null;
        case 1:
            return mi(t.type) && gi(),
            null;
        case 3:
            return Oa(),
            li(di),
            li(hi),
            (n = t.stateNode).pendingContext && (n.context = n.pendingContext,
            n.pendingContext = null),
            null !== e && null !== e.child || !Ao(t) || (t.effectTag |= 4),
            null;
        case 5:
            Da(t),
            n = Ca(La.current);
            var a = t.type;
            if (null !== e && null != t.stateNode)
                Go(e, t, a, r, n),
                e.ref !== t.ref && (t.effectTag |= 128);
            else {
                if (!r) {
                    if (null === t.stateNode)
                        throw Error(o(166));
                    return null
                }
                if (e = Ca(Aa.current),
                Ao(t)) {
                    r = t.stateNode,
                    a = t.type;
                    var s = t.memoizedProps;
                    switch (r[Tn] = t,
                    r[Sn] = s,
                    a) {
                    case "iframe":
                    case "object":
                    case "embed":
                        Kt("load", r);
                        break;
                    case "video":
                    case "audio":
                        for (e = 0; e < Ze.length; e++)
                            Kt(Ze[e], r);
                        break;
                    case "source":
                        Kt("error", r);
                        break;
                    case "img":
                    case "image":
                    case "link":
                        Kt("error", r),
                        Kt("load", r);
                        break;
                    case "form":
                        Kt("reset", r),
                        Kt("submit", r);
                        break;
                    case "details":
                        Kt("toggle", r);
                        break;
                    case "input":
                        Ee(r, s),
                        Kt("invalid", r),
                        ln(n, "onChange");
                        break;
                    case "select":
                        r._wrapperState = {
                            wasMultiple: !!s.multiple
                        },
                        Kt("invalid", r),
                        ln(n, "onChange");
                        break;
                    case "textarea":
                        Pe(r, s),
                        Kt("invalid", r),
                        ln(n, "onChange")
                    }
                    for (var l in an(a, s),
                    e = null,
                    s)
                        if (s.hasOwnProperty(l)) {
                            var u = s[l];
                            "children" === l ? "string" == typeof u ? r.textContent !== u && (e = ["children", u]) : "number" == typeof u && r.textContent !== "" + u && (e = ["children", "" + u]) : T.hasOwnProperty(l) && null != u && ln(n, l)
                        }
                    switch (a) {
                    case "input":
                        xe(r),
                        Me(r, s, !0);
                        break;
                    case "textarea":
                        xe(r),
                        ke(r);
                        break;
                    case "select":
                    case "option":
                        break;
                    default:
                        "function" == typeof s.onClick && (r.onclick = un)
                    }
                    n = e,
                    t.updateQueue = n,
                    null !== n && (t.effectTag |= 4)
                } else {
                    switch (l = 9 === n.nodeType ? n : n.ownerDocument,
                    e === sn && (e = Ne(a)),
                    e === sn ? "script" === a ? ((e = l.createElement("div")).innerHTML = "<script><\/script>",
                    e = e.removeChild(e.firstChild)) : "string" == typeof r.is ? e = l.createElement(a, {
                        is: r.is
                    }) : (e = l.createElement(a),
                    "select" === a && (l = e,
                    r.multiple ? l.multiple = !0 : r.size && (l.size = r.size))) : e = l.createElementNS(e, a),
                    e[Tn] = t,
                    e[Sn] = r,
                    zo(e, t),
                    t.stateNode = e,
                    l = on(a, r),
                    a) {
                    case "iframe":
                    case "object":
                    case "embed":
                        Kt("load", e),
                        u = r;
                        break;
                    case "video":
                    case "audio":
                        for (u = 0; u < Ze.length; u++)
                            Kt(Ze[u], e);
                        u = r;
                        break;
                    case "source":
                        Kt("error", e),
                        u = r;
                        break;
                    case "img":
                    case "image":
                    case "link":
                        Kt("error", e),
                        Kt("load", e),
                        u = r;
                        break;
                    case "form":
                        Kt("reset", e),
                        Kt("submit", e),
                        u = r;
                        break;
                    case "details":
                        Kt("toggle", e),
                        u = r;
                        break;
                    case "input":
                        Ee(e, r),
                        u = _e(e, r),
                        Kt("invalid", e),
                        ln(n, "onChange");
                        break;
                    case "option":
                        u = Re(e, r);
                        break;
                    case "select":
                        e._wrapperState = {
                            wasMultiple: !!r.multiple
                        },
                        u = i({}, r, {
                            value: void 0
                        }),
                        Kt("invalid", e),
                        ln(n, "onChange");
                        break;
                    case "textarea":
                        Pe(e, r),
                        u = Ce(e, r),
                        Kt("invalid", e),
                        ln(n, "onChange");
                        break;
                    default:
                        u = r
                    }
                    an(a, u);
                    var c = u;
                    for (s in c)
                        if (c.hasOwnProperty(s)) {
                            var h = c[s];
                            "style" === s ? nn(e, h) : "dangerouslySetInnerHTML" === s ? null != (h = h ? h.__html : void 0) && Be(e, h) : "children" === s ? "string" == typeof h ? ("textarea" !== a || "" !== h) && ze(e, h) : "number" == typeof h && ze(e, "" + h) : "suppressContentEditableWarning" !== s && "suppressHydrationWarning" !== s && "autoFocus" !== s && (T.hasOwnProperty(s) ? null != h && ln(n, s) : null != h && J(e, s, h, l))
                        }
                    switch (a) {
                    case "input":
                        xe(e),
                        Me(e, r, !1);
                        break;
                    case "textarea":
                        xe(e),
                        ke(e);
                        break;
                    case "option":
                        null != r.value && e.setAttribute("value", "" + ye(r.value));
                        break;
                    case "select":
                        e.multiple = !!r.multiple,
                        null != (n = r.value) ? Le(e, !!r.multiple, n, !1) : null != r.defaultValue && Le(e, !!r.multiple, r.defaultValue, !0);
                        break;
                    default:
                        "function" == typeof u.onClick && (e.onclick = un)
                    }
                    vn(a, r) && (t.effectTag |= 4)
                }
                null !== t.ref && (t.effectTag |= 128)
            }
            return null;
        case 6:
            if (e && null != t.stateNode)
                Ho(0, t, e.memoizedProps, r);
            else {
                if ("string" != typeof r && null === t.stateNode)
                    throw Error(o(166));
                n = Ca(La.current),
                Ca(Aa.current),
                Ao(t) ? (n = t.stateNode,
                r = t.memoizedProps,
                n[Tn] = t,
                n.nodeValue !== r && (t.effectTag |= 4)) : ((n = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(r))[Tn] = t,
                t.stateNode = n)
            }
            return null;
        case 13:
            return li(Ia),
            r = t.memoizedState,
            0 != (64 & t.effectTag) ? (t.expirationTime = n,
            t) : (n = null !== r,
            r = !1,
            null === e ? void 0 !== t.memoizedProps.fallback && Ao(t) : (r = null !== (a = e.memoizedState),
            n || null === a || null !== (a = e.child.sibling) && (null !== (s = t.firstEffect) ? (t.firstEffect = a,
            a.nextEffect = s) : (t.firstEffect = t.lastEffect = a,
            a.nextEffect = null),
            a.effectTag = 8)),
            n && !r && 0 != (2 & t.mode) && (null === e && !0 !== t.memoizedProps.unstable_avoidThisFallback || 0 != (1 & Ia.current) ? As === xs && (As = ws) : (As !== xs && As !== ws || (As = _s),
            0 !== Os && null !== Ts && (kl(Ts, Ms),
            Dl(Ts, Os)))),
            (n || r) && (t.effectTag |= 4),
            null);
        case 4:
            return Oa(),
            null;
        case 10:
            return ea(t),
            null;
        case 17:
            return mi(t.type) && gi(),
            null;
        case 19:
            if (li(Ia),
            null === (r = t.memoizedState))
                return null;
            if (a = 0 != (64 & t.effectTag),
            null === (s = r.rendering)) {
                if (a)
                    Xo(r, !1);
                else if (As !== xs || null !== e && 0 != (64 & e.effectTag))
                    for (s = t.child; null !== s; ) {
                        if (null !== (e = Na(s))) {
                            for (t.effectTag |= 64,
                            Xo(r, !1),
                            null !== (a = e.updateQueue) && (t.updateQueue = a,
                            t.effectTag |= 4),
                            null === r.lastEffect && (t.firstEffect = null),
                            t.lastEffect = r.lastEffect,
                            r = t.child; null !== r; )
                                s = n,
                                (a = r).effectTag &= 2,
                                a.nextEffect = null,
                                a.firstEffect = null,
                                a.lastEffect = null,
                                null === (e = a.alternate) ? (a.childExpirationTime = 0,
                                a.expirationTime = s,
                                a.child = null,
                                a.memoizedProps = null,
                                a.memoizedState = null,
                                a.updateQueue = null,
                                a.dependencies = null) : (a.childExpirationTime = e.childExpirationTime,
                                a.expirationTime = e.expirationTime,
                                a.child = e.child,
                                a.memoizedProps = e.memoizedProps,
                                a.memoizedState = e.memoizedState,
                                a.updateQueue = e.updateQueue,
                                s = e.dependencies,
                                a.dependencies = null === s ? null : {
                                    expirationTime: s.expirationTime,
                                    firstContext: s.firstContext,
                                    responders: s.responders
                                }),
                                r = r.sibling;
                            return ui(Ia, 1 & Ia.current | 2),
                            t.child
                        }
                        s = s.sibling
                    }
            } else {
                if (!a)
                    if (null !== (e = Na(s))) {
                        if (t.effectTag |= 64,
                        a = !0,
                        null !== (n = e.updateQueue) && (t.updateQueue = n,
                        t.effectTag |= 4),
                        Xo(r, !0),
                        null === r.tail && "hidden" === r.tailMode && !s.alternate)
                            return null !== (t = t.lastEffect = r.lastEffect) && (t.nextEffect = null),
                            null
                    } else
                        2 * Bi() - r.renderingStartTime > r.tailExpiration && 1 < n && (t.effectTag |= 64,
                        a = !0,
                        Xo(r, !1),
                        t.expirationTime = t.childExpirationTime = n - 1);
                r.isBackwards ? (s.sibling = t.child,
                t.child = s) : (null !== (n = r.last) ? n.sibling = s : t.child = s,
                r.last = s)
            }
            return null !== r.tail ? (0 === r.tailExpiration && (r.tailExpiration = Bi() + 500),
            n = r.tail,
            r.rendering = n,
            r.tail = n.sibling,
            r.lastEffect = t.lastEffect,
            r.renderingStartTime = Bi(),
            n.sibling = null,
            t = Ia.current,
            ui(Ia, a ? 1 & t | 2 : 1 & t),
            n) : null
        }
        throw Error(o(156, t.tag))
    }
    function Jo(e) {
        switch (e.tag) {
        case 1:
            mi(e.type) && gi();
            var t = e.effectTag;
            return 4096 & t ? (e.effectTag = -4097 & t | 64,
            e) : null;
        case 3:
            if (Oa(),
            li(di),
            li(hi),
            0 != (64 & (t = e.effectTag)))
                throw Error(o(285));
            return e.effectTag = -4097 & t | 64,
            e;
        case 5:
            return Da(e),
            null;
        case 13:
            return li(Ia),
            4096 & (t = e.effectTag) ? (e.effectTag = -4097 & t | 64,
            e) : null;
        case 19:
            return li(Ia),
            null;
        case 4:
            return Oa(),
            null;
        case 10:
            return ea(e),
            null;
        default:
            return null
        }
    }
    function Qo(e, t) {
        return {
            value: e,
            source: t,
            stack: ve(t)
        }
    }
    zo = function(e, t) {
        for (var n = t.child; null !== n; ) {
            if (5 === n.tag || 6 === n.tag)
                e.appendChild(n.stateNode);
            else if (4 !== n.tag && null !== n.child) {
                n.child.return = n,
                n = n.child;
                continue
            }
            if (n === t)
                break;
            for (; null === n.sibling; ) {
                if (null === n.return || n.return === t)
                    return;
                n = n.return
            }
            n.sibling.return = n.return,
            n = n.sibling
        }
    }
    ,
    Go = function(e, t, n, r, a) {
        var o = e.memoizedProps;
        if (o !== r) {
            var s, l, u = t.stateNode;
            switch (Ca(Aa.current),
            e = null,
            n) {
            case "input":
                o = _e(u, o),
                r = _e(u, r),
                e = [];
                break;
            case "option":
                o = Re(u, o),
                r = Re(u, r),
                e = [];
                break;
            case "select":
                o = i({}, o, {
                    value: void 0
                }),
                r = i({}, r, {
                    value: void 0
                }),
                e = [];
                break;
            case "textarea":
                o = Ce(u, o),
                r = Ce(u, r),
                e = [];
                break;
            default:
                "function" != typeof o.onClick && "function" == typeof r.onClick && (u.onclick = un)
            }
            for (s in an(n, r),
            n = null,
            o)
                if (!r.hasOwnProperty(s) && o.hasOwnProperty(s) && null != o[s])
                    if ("style" === s)
                        for (l in u = o[s])
                            u.hasOwnProperty(l) && (n || (n = {}),
                            n[l] = "");
                    else
                        "dangerouslySetInnerHTML" !== s && "children" !== s && "suppressContentEditableWarning" !== s && "suppressHydrationWarning" !== s && "autoFocus" !== s && (T.hasOwnProperty(s) ? e || (e = []) : (e = e || []).push(s, null));
            for (s in r) {
                var c = r[s];
                if (u = null != o ? o[s] : void 0,
                r.hasOwnProperty(s) && c !== u && (null != c || null != u))
                    if ("style" === s)
                        if (u) {
                            for (l in u)
                                !u.hasOwnProperty(l) || c && c.hasOwnProperty(l) || (n || (n = {}),
                                n[l] = "");
                            for (l in c)
                                c.hasOwnProperty(l) && u[l] !== c[l] && (n || (n = {}),
                                n[l] = c[l])
                        } else
                            n || (e || (e = []),
                            e.push(s, n)),
                            n = c;
                    else
                        "dangerouslySetInnerHTML" === s ? (c = c ? c.__html : void 0,
                        u = u ? u.__html : void 0,
                        null != c && u !== c && (e = e || []).push(s, c)) : "children" === s ? u === c || "string" != typeof c && "number" != typeof c || (e = e || []).push(s, "" + c) : "suppressContentEditableWarning" !== s && "suppressHydrationWarning" !== s && (T.hasOwnProperty(s) ? (null != c && ln(a, s),
                        e || u === c || (e = [])) : (e = e || []).push(s, c))
            }
            n && (e = e || []).push("style", n),
            a = e,
            (t.updateQueue = a) && (t.effectTag |= 4)
        }
    }
    ,
    Ho = function(e, t, n, r) {
        n !== r && (t.effectTag |= 4)
    }
    ;
    var $o = "function" == typeof WeakSet ? WeakSet : Set;
    function es(e, t) {
        var n = t.source
          , r = t.stack;
        null === r && null !== n && (r = ve(n)),
        null !== n && ge(n.type),
        t = t.value,
        null !== e && 1 === e.tag && ge(e.type);
        try {
            console.error(t)
        } catch (e) {
            setTimeout((function() {
                throw e
            }
            ))
        }
    }
    function ts(e) {
        var t = e.ref;
        if (null !== t)
            if ("function" == typeof t)
                try {
                    t(null)
                } catch (t) {
                    yl(e, t)
                }
            else
                t.current = null
    }
    function ns(e, t) {
        switch (t.tag) {
        case 0:
        case 11:
        case 15:
        case 22:
            return;
        case 1:
            if (256 & t.effectTag && null !== e) {
                var n = e.memoizedProps
                  , r = e.memoizedState;
                t = (e = t.stateNode).getSnapshotBeforeUpdate(t.elementType === t.type ? n : Yi(t.type, n), r),
                e.__reactInternalSnapshotBeforeUpdate = t
            }
            return;
        case 3:
        case 5:
        case 6:
        case 4:
        case 17:
            return
        }
        throw Error(o(163))
    }
    function rs(e, t) {
        if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
            var n = t = t.next;
            do {
                if ((n.tag & e) === e) {
                    var r = n.destroy;
                    n.destroy = void 0,
                    void 0 !== r && r()
                }
                n = n.next
            } while (n !== t)
        }
    }
    function is(e, t) {
        if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
            var n = t = t.next;
            do {
                if ((n.tag & e) === e) {
                    var r = n.create;
                    n.destroy = r()
                }
                n = n.next
            } while (n !== t)
        }
    }
    function as(e, t, n) {
        switch (n.tag) {
        case 0:
        case 11:
        case 15:
        case 22:
            return void is(3, n);
        case 1:
            if (e = n.stateNode,
            4 & n.effectTag)
                if (null === t)
                    e.componentDidMount();
                else {
                    var r = n.elementType === n.type ? t.memoizedProps : Yi(n.type, t.memoizedProps);
                    e.componentDidUpdate(r, t.memoizedState, e.__reactInternalSnapshotBeforeUpdate)
                }
            return void (null !== (t = n.updateQueue) && ha(n, t, e));
        case 3:
            if (null !== (t = n.updateQueue)) {
                if (e = null,
                null !== n.child)
                    switch (n.child.tag) {
                    case 5:
                        e = n.child.stateNode;
                        break;
                    case 1:
                        e = n.child.stateNode
                    }
                ha(n, t, e)
            }
            return;
        case 5:
            return e = n.stateNode,
            void (null === t && 4 & n.effectTag && vn(n.type, n.memoizedProps) && e.focus());
        case 6:
        case 4:
        case 12:
            return;
        case 13:
            return void (null === n.memoizedState && (n = n.alternate,
            null !== n && (n = n.memoizedState,
            null !== n && (n = n.dehydrated,
            null !== n && Nt(n)))));
        case 19:
        case 17:
        case 20:
        case 21:
            return
        }
        throw Error(o(163))
    }
    function os(e, t, n) {
        switch ("function" == typeof _l && _l(t),
        t.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
        case 22:
            if (null !== (e = t.updateQueue) && null !== (e = e.lastEffect)) {
                var r = e.next;
                Hi(97 < n ? 97 : n, (function() {
                    var e = r;
                    do {
                        var n = e.destroy;
                        if (void 0 !== n) {
                            var i = t;
                            try {
                                n()
                            } catch (e) {
                                yl(i, e)
                            }
                        }
                        e = e.next
                    } while (e !== r)
                }
                ))
            }
            break;
        case 1:
            ts(t),
            "function" == typeof (n = t.stateNode).componentWillUnmount && function(e, t) {
                try {
                    t.props = e.memoizedProps,
                    t.state = e.memoizedState,
                    t.componentWillUnmount()
                } catch (t) {
                    yl(e, t)
                }
            }(t, n);
            break;
        case 5:
            ts(t);
            break;
        case 4:
            cs(e, t, n)
        }
    }
    function ss(e) {
        var t = e.alternate;
        e.return = null,
        e.child = null,
        e.memoizedState = null,
        e.updateQueue = null,
        e.dependencies = null,
        e.alternate = null,
        e.firstEffect = null,
        e.lastEffect = null,
        e.pendingProps = null,
        e.memoizedProps = null,
        e.stateNode = null,
        null !== t && ss(t)
    }
    function ls(e) {
        return 5 === e.tag || 3 === e.tag || 4 === e.tag
    }
    function us(e) {
        e: {
            for (var t = e.return; null !== t; ) {
                if (ls(t)) {
                    var n = t;
                    break e
                }
                t = t.return
            }
            throw Error(o(160))
        }
        switch (t = n.stateNode,
        n.tag) {
        case 5:
            var r = !1;
            break;
        case 3:
        case 4:
            t = t.containerInfo,
            r = !0;
            break;
        default:
            throw Error(o(161))
        }
        16 & n.effectTag && (ze(t, ""),
        n.effectTag &= -17);
        e: t: for (n = e; ; ) {
            for (; null === n.sibling; ) {
                if (null === n.return || ls(n.return)) {
                    n = null;
                    break e
                }
                n = n.return
            }
            for (n.sibling.return = n.return,
            n = n.sibling; 5 !== n.tag && 6 !== n.tag && 18 !== n.tag; ) {
                if (2 & n.effectTag)
                    continue t;
                if (null === n.child || 4 === n.tag)
                    continue t;
                n.child.return = n,
                n = n.child
            }
            if (!(2 & n.effectTag)) {
                n = n.stateNode;
                break e
            }
        }
        r ? function e(t, n, r) {
            var i = t.tag
              , a = 5 === i || 6 === i;
            if (a)
                t = a ? t.stateNode : t.stateNode.instance,
                n ? 8 === r.nodeType ? r.parentNode.insertBefore(t, n) : r.insertBefore(t, n) : (8 === r.nodeType ? (n = r.parentNode).insertBefore(t, r) : (n = r).appendChild(t),
                null !== (r = r._reactRootContainer) && void 0 !== r || null !== n.onclick || (n.onclick = un));
            else if (4 !== i && null !== (t = t.child))
                for (e(t, n, r),
                t = t.sibling; null !== t; )
                    e(t, n, r),
                    t = t.sibling
        }(e, n, t) : function e(t, n, r) {
            var i = t.tag
              , a = 5 === i || 6 === i;
            if (a)
                t = a ? t.stateNode : t.stateNode.instance,
                n ? r.insertBefore(t, n) : r.appendChild(t);
            else if (4 !== i && null !== (t = t.child))
                for (e(t, n, r),
                t = t.sibling; null !== t; )
                    e(t, n, r),
                    t = t.sibling
        }(e, n, t)
    }
    function cs(e, t, n) {
        for (var r, i, a = t, s = !1; ; ) {
            if (!s) {
                s = a.return;
                e: for (; ; ) {
                    if (null === s)
                        throw Error(o(160));
                    switch (r = s.stateNode,
                    s.tag) {
                    case 5:
                        i = !1;
                        break e;
                    case 3:
                    case 4:
                        r = r.containerInfo,
                        i = !0;
                        break e
                    }
                    s = s.return
                }
                s = !0
            }
            if (5 === a.tag || 6 === a.tag) {
                e: for (var l = e, u = a, c = n, h = u; ; )
                    if (os(l, h, c),
                    null !== h.child && 4 !== h.tag)
                        h.child.return = h,
                        h = h.child;
                    else {
                        if (h === u)
                            break e;
                        for (; null === h.sibling; ) {
                            if (null === h.return || h.return === u)
                                break e;
                            h = h.return
                        }
                        h.sibling.return = h.return,
                        h = h.sibling
                    }
                i ? (l = r,
                u = a.stateNode,
                8 === l.nodeType ? l.parentNode.removeChild(u) : l.removeChild(u)) : r.removeChild(a.stateNode)
            } else if (4 === a.tag) {
                if (null !== a.child) {
                    r = a.stateNode.containerInfo,
                    i = !0,
                    a.child.return = a,
                    a = a.child;
                    continue
                }
            } else if (os(e, a, n),
            null !== a.child) {
                a.child.return = a,
                a = a.child;
                continue
            }
            if (a === t)
                break;
            for (; null === a.sibling; ) {
                if (null === a.return || a.return === t)
                    return;
                4 === (a = a.return).tag && (s = !1)
            }
            a.sibling.return = a.return,
            a = a.sibling
        }
    }
    function hs(e, t) {
        switch (t.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
        case 22:
            return void rs(3, t);
        case 1:
            return;
        case 5:
            var n = t.stateNode;
            if (null != n) {
                var r = t.memoizedProps
                  , i = null !== e ? e.memoizedProps : r;
                e = t.type;
                var a = t.updateQueue;
                if (t.updateQueue = null,
                null !== a) {
                    for (n[Sn] = r,
                    "input" === e && "radio" === r.type && null != r.name && Te(n, r),
                    on(e, i),
                    t = on(e, r),
                    i = 0; i < a.length; i += 2) {
                        var s = a[i]
                          , l = a[i + 1];
                        "style" === s ? nn(n, l) : "dangerouslySetInnerHTML" === s ? Be(n, l) : "children" === s ? ze(n, l) : J(n, s, l, t)
                    }
                    switch (e) {
                    case "input":
                        Se(n, r);
                        break;
                    case "textarea":
                        Oe(n, r);
                        break;
                    case "select":
                        t = n._wrapperState.wasMultiple,
                        n._wrapperState.wasMultiple = !!r.multiple,
                        null != (e = r.value) ? Le(n, !!r.multiple, e, !1) : t !== !!r.multiple && (null != r.defaultValue ? Le(n, !!r.multiple, r.defaultValue, !0) : Le(n, !!r.multiple, r.multiple ? [] : "", !1))
                    }
                }
            }
            return;
        case 6:
            if (null === t.stateNode)
                throw Error(o(162));
            return void (t.stateNode.nodeValue = t.memoizedProps);
        case 3:
            return void ((t = t.stateNode).hydrate && (t.hydrate = !1,
            Nt(t.containerInfo)));
        case 12:
            return;
        case 13:
            if (n = t,
            null === t.memoizedState ? r = !1 : (r = !0,
            n = t.child,
            Ds = Bi()),
            null !== n)
                e: for (e = n; ; ) {
                    if (5 === e.tag)
                        a = e.stateNode,
                        r ? "function" == typeof (a = a.style).setProperty ? a.setProperty("display", "none", "important") : a.display = "none" : (a = e.stateNode,
                        i = null != (i = e.memoizedProps.style) && i.hasOwnProperty("display") ? i.display : null,
                        a.style.display = tn("display", i));
                    else if (6 === e.tag)
                        e.stateNode.nodeValue = r ? "" : e.memoizedProps;
                    else {
                        if (13 === e.tag && null !== e.memoizedState && null === e.memoizedState.dehydrated) {
                            (a = e.child.sibling).return = e,
                            e = a;
                            continue
                        }
                        if (null !== e.child) {
                            e.child.return = e,
                            e = e.child;
                            continue
                        }
                    }
                    if (e === n)
                        break;
                    for (; null === e.sibling; ) {
                        if (null === e.return || e.return === n)
                            break e;
                        e = e.return
                    }
                    e.sibling.return = e.return,
                    e = e.sibling
                }
            return void ds(t);
        case 19:
            return void ds(t);
        case 17:
            return
        }
        throw Error(o(163))
    }
    function ds(e) {
        var t = e.updateQueue;
        if (null !== t) {
            e.updateQueue = null;
            var n = e.stateNode;
            null === n && (n = e.stateNode = new $o),
            t.forEach((function(t) {
                var r = xl.bind(null, e, t);
                n.has(t) || (n.add(t),
                t.then(r, r))
            }
            ))
        }
    }
    var fs = "function" == typeof WeakMap ? WeakMap : Map;
    function ps(e, t, n) {
        (n = sa(n, null)).tag = 3,
        n.payload = {
            element: null
        };
        var r = t.value;
        return n.callback = function() {
            Ns || (Ns = !0,
            Fs = r),
            es(e, t)
        }
        ,
        n
    }
    function ms(e, t, n) {
        (n = sa(n, null)).tag = 3;
        var r = e.type.getDerivedStateFromError;
        if ("function" == typeof r) {
            var i = t.value;
            n.payload = function() {
                return es(e, t),
                r(i)
            }
        }
        var a = e.stateNode;
        return null !== a && "function" == typeof a.componentDidCatch && (n.callback = function() {
            "function" != typeof r && (null === Us ? Us = new Set([this]) : Us.add(this),
            es(e, t));
            var n = t.stack;
            this.componentDidCatch(t.value, {
                componentStack: null !== n ? n : ""
            })
        }
        ),
        n
    }
    var gs, vs = Math.ceil, ys = Z.ReactCurrentDispatcher, bs = Z.ReactCurrentOwner, xs = 0, ws = 3, _s = 4, Es = 0, Ts = null, Ss = null, Ms = 0, As = xs, Rs = null, Ls = 1073741823, Cs = 1073741823, Ps = null, Os = 0, ks = !1, Ds = 0, Is = null, Ns = !1, Fs = null, Us = null, Bs = !1, zs = null, Gs = 90, Hs = null, js = 0, Vs = null, Ws = 0;
    function qs() {
        return 0 != (48 & Es) ? 1073741821 - (Bi() / 10 | 0) : 0 !== Ws ? Ws : Ws = 1073741821 - (Bi() / 10 | 0)
    }
    function Ks(e, t, n) {
        if (0 == (2 & (t = t.mode)))
            return 1073741823;
        var r = zi();
        if (0 == (4 & t))
            return 99 === r ? 1073741823 : 1073741822;
        if (0 != (16 & Es))
            return Ms;
        if (null !== n)
            e = Ki(e, 0 | n.timeoutMs || 5e3, 250);
        else
            switch (r) {
            case 99:
                e = 1073741823;
                break;
            case 98:
                e = Ki(e, 150, 100);
                break;
            case 97:
            case 96:
                e = Ki(e, 5e3, 250);
                break;
            case 95:
                e = 2;
                break;
            default:
                throw Error(o(326))
            }
        return null !== Ts && e === Ms && --e,
        e
    }
    function Ys(e, t) {
        if (50 < js)
            throw js = 0,
            Vs = null,
            Error(o(185));
        if (null !== (e = Xs(e, t))) {
            var n = zi();
            1073741823 === t ? 0 != (8 & Es) && 0 == (48 & Es) ? $s(e) : (Js(e),
            0 === Es && Wi()) : Js(e),
            0 == (4 & Es) || 98 !== n && 99 !== n || (null === Hs ? Hs = new Map([[e, t]]) : (void 0 === (n = Hs.get(e)) || n > t) && Hs.set(e, t))
        }
    }
    function Xs(e, t) {
        e.expirationTime < t && (e.expirationTime = t);
        var n = e.alternate;
        null !== n && n.expirationTime < t && (n.expirationTime = t);
        var r = e.return
          , i = null;
        if (null === r && 3 === e.tag)
            i = e.stateNode;
        else
            for (; null !== r; ) {
                if (n = r.alternate,
                r.childExpirationTime < t && (r.childExpirationTime = t),
                null !== n && n.childExpirationTime < t && (n.childExpirationTime = t),
                null === r.return && 3 === r.tag) {
                    i = r.stateNode;
                    break
                }
                r = r.return
            }
        return null !== i && (Ts === i && (ol(t),
        As === _s && kl(i, Ms)),
        Dl(i, t)),
        i
    }
    function Zs(e) {
        var t = e.lastExpiredTime;
        if (0 !== t)
            return t;
        if (!Ol(e, t = e.firstPendingTime))
            return t;
        var n = e.lastPingedTime;
        return 2 >= (e = n > (e = e.nextKnownPendingLevel) ? n : e) && t !== e ? 0 : e
    }
    function Js(e) {
        if (0 !== e.lastExpiredTime)
            e.callbackExpirationTime = 1073741823,
            e.callbackPriority = 99,
            e.callbackNode = Vi($s.bind(null, e));
        else {
            var t = Zs(e)
              , n = e.callbackNode;
            if (0 === t)
                null !== n && (e.callbackNode = null,
                e.callbackExpirationTime = 0,
                e.callbackPriority = 90);
            else {
                var r = qs();
                if (1073741823 === t ? r = 99 : 1 === t || 2 === t ? r = 95 : r = 0 >= (r = 10 * (1073741821 - t) - 10 * (1073741821 - r)) ? 99 : 250 >= r ? 98 : 5250 >= r ? 97 : 95,
                null !== n) {
                    var i = e.callbackPriority;
                    if (e.callbackExpirationTime === t && i >= r)
                        return;
                    n !== Oi && Ei(n)
                }
                e.callbackExpirationTime = t,
                e.callbackPriority = r,
                t = 1073741823 === t ? Vi($s.bind(null, e)) : ji(r, Qs.bind(null, e), {
                    timeout: 10 * (1073741821 - t) - Bi()
                }),
                e.callbackNode = t
            }
        }
    }
    function Qs(e, t) {
        if (Ws = 0,
        t)
            return Il(e, t = qs()),
            Js(e),
            null;
        var n = Zs(e);
        if (0 !== n) {
            if (t = e.callbackNode,
            0 != (48 & Es))
                throw Error(o(327));
            if (ml(),
            e === Ts && n === Ms || nl(e, n),
            null !== Ss) {
                var r = Es;
                Es |= 16;
                for (var i = il(); ; )
                    try {
                        ll();
                        break
                    } catch (t) {
                        rl(e, t)
                    }
                if ($i(),
                Es = r,
                ys.current = i,
                1 === As)
                    throw t = Rs,
                    nl(e, n),
                    kl(e, n),
                    Js(e),
                    t;
                if (null === Ss)
                    switch (i = e.finishedWork = e.current.alternate,
                    e.finishedExpirationTime = n,
                    r = As,
                    Ts = null,
                    r) {
                    case xs:
                    case 1:
                        throw Error(o(345));
                    case 2:
                        Il(e, 2 < n ? 2 : n);
                        break;
                    case ws:
                        if (kl(e, n),
                        n === (r = e.lastSuspendedTime) && (e.nextKnownPendingLevel = hl(i)),
                        1073741823 === Ls && 10 < (i = Ds + 500 - Bi())) {
                            if (ks) {
                                var a = e.lastPingedTime;
                                if (0 === a || a >= n) {
                                    e.lastPingedTime = n,
                                    nl(e, n);
                                    break
                                }
                            }
                            if (0 !== (a = Zs(e)) && a !== n)
                                break;
                            if (0 !== r && r !== n) {
                                e.lastPingedTime = r;
                                break
                            }
                            e.timeoutHandle = bn(dl.bind(null, e), i);
                            break
                        }
                        dl(e);
                        break;
                    case _s:
                        if (kl(e, n),
                        n === (r = e.lastSuspendedTime) && (e.nextKnownPendingLevel = hl(i)),
                        ks && (0 === (i = e.lastPingedTime) || i >= n)) {
                            e.lastPingedTime = n,
                            nl(e, n);
                            break
                        }
                        if (0 !== (i = Zs(e)) && i !== n)
                            break;
                        if (0 !== r && r !== n) {
                            e.lastPingedTime = r;
                            break
                        }
                        if (1073741823 !== Cs ? r = 10 * (1073741821 - Cs) - Bi() : 1073741823 === Ls ? r = 0 : (r = 10 * (1073741821 - Ls) - 5e3,
                        0 > (r = (i = Bi()) - r) && (r = 0),
                        (n = 10 * (1073741821 - n) - i) < (r = (120 > r ? 120 : 480 > r ? 480 : 1080 > r ? 1080 : 1920 > r ? 1920 : 3e3 > r ? 3e3 : 4320 > r ? 4320 : 1960 * vs(r / 1960)) - r) && (r = n)),
                        10 < r) {
                            e.timeoutHandle = bn(dl.bind(null, e), r);
                            break
                        }
                        dl(e);
                        break;
                    case 5:
                        if (1073741823 !== Ls && null !== Ps) {
                            a = Ls;
                            var s = Ps;
                            if (0 >= (r = 0 | s.busyMinDurationMs) ? r = 0 : (i = 0 | s.busyDelayMs,
                            r = (a = Bi() - (10 * (1073741821 - a) - (0 | s.timeoutMs || 5e3))) <= i ? 0 : i + r - a),
                            10 < r) {
                                kl(e, n),
                                e.timeoutHandle = bn(dl.bind(null, e), r);
                                break
                            }
                        }
                        dl(e);
                        break;
                    default:
                        throw Error(o(329))
                    }
                if (Js(e),
                e.callbackNode === t)
                    return Qs.bind(null, e)
            }
        }
        return null
    }
    function $s(e) {
        var t = e.lastExpiredTime;
        if (t = 0 !== t ? t : 1073741823,
        0 != (48 & Es))
            throw Error(o(327));
        if (ml(),
        e === Ts && t === Ms || nl(e, t),
        null !== Ss) {
            var n = Es;
            Es |= 16;
            for (var r = il(); ; )
                try {
                    sl();
                    break
                } catch (t) {
                    rl(e, t)
                }
            if ($i(),
            Es = n,
            ys.current = r,
            1 === As)
                throw n = Rs,
                nl(e, t),
                kl(e, t),
                Js(e),
                n;
            if (null !== Ss)
                throw Error(o(261));
            e.finishedWork = e.current.alternate,
            e.finishedExpirationTime = t,
            Ts = null,
            dl(e),
            Js(e)
        }
        return null
    }
    function el(e, t) {
        var n = Es;
        Es |= 1;
        try {
            return e(t)
        } finally {
            0 === (Es = n) && Wi()
        }
    }
    function tl(e, t) {
        var n = Es;
        Es &= -2,
        Es |= 8;
        try {
            return e(t)
        } finally {
            0 === (Es = n) && Wi()
        }
    }
    function nl(e, t) {
        e.finishedWork = null,
        e.finishedExpirationTime = 0;
        var n = e.timeoutHandle;
        if (-1 !== n && (e.timeoutHandle = -1,
        xn(n)),
        null !== Ss)
            for (n = Ss.return; null !== n; ) {
                var r = n;
                switch (r.tag) {
                case 1:
                    null != (r = r.type.childContextTypes) && gi();
                    break;
                case 3:
                    Oa(),
                    li(di),
                    li(hi);
                    break;
                case 5:
                    Da(r);
                    break;
                case 4:
                    Oa();
                    break;
                case 13:
                case 19:
                    li(Ia);
                    break;
                case 10:
                    ea(r)
                }
                n = n.return
            }
        Ts = e,
        Ss = Ml(e.current, null),
        Ms = t,
        As = xs,
        Rs = null,
        Cs = Ls = 1073741823,
        Ps = null,
        Os = 0,
        ks = !1
    }
    function rl(e, t) {
        for (; ; ) {
            try {
                if ($i(),
                Ua.current = go,
                Va)
                    for (var n = Ga.memoizedState; null !== n; ) {
                        var r = n.queue;
                        null !== r && (r.pending = null),
                        n = n.next
                    }
                if (za = 0,
                ja = Ha = Ga = null,
                Va = !1,
                null === Ss || null === Ss.return)
                    return As = 1,
                    Rs = t,
                    Ss = null;
                e: {
                    var i = e
                      , a = Ss.return
                      , o = Ss
                      , s = t;
                    if (t = Ms,
                    o.effectTag |= 2048,
                    o.firstEffect = o.lastEffect = null,
                    null !== s && "object" == typeof s && "function" == typeof s.then) {
                        var l = s;
                        if (0 == (2 & o.mode)) {
                            var u = o.alternate;
                            u ? (o.updateQueue = u.updateQueue,
                            o.memoizedState = u.memoizedState,
                            o.expirationTime = u.expirationTime) : (o.updateQueue = null,
                            o.memoizedState = null)
                        }
                        var c = 0 != (1 & Ia.current)
                          , h = a;
                        do {
                            var d;
                            if (d = 13 === h.tag) {
                                var f = h.memoizedState;
                                if (null !== f)
                                    d = null !== f.dehydrated;
                                else {
                                    var p = h.memoizedProps;
                                    d = void 0 !== p.fallback && (!0 !== p.unstable_avoidThisFallback || !c)
                                }
                            }
                            if (d) {
                                var m = h.updateQueue;
                                if (null === m) {
                                    var g = new Set;
                                    g.add(l),
                                    h.updateQueue = g
                                } else
                                    m.add(l);
                                if (0 == (2 & h.mode)) {
                                    if (h.effectTag |= 64,
                                    o.effectTag &= -2981,
                                    1 === o.tag)
                                        if (null === o.alternate)
                                            o.tag = 17;
                                        else {
                                            var v = sa(1073741823, null);
                                            v.tag = 2,
                                            la(o, v)
                                        }
                                    o.expirationTime = 1073741823;
                                    break e
                                }
                                s = void 0,
                                o = t;
                                var y = i.pingCache;
                                if (null === y ? (y = i.pingCache = new fs,
                                s = new Set,
                                y.set(l, s)) : void 0 === (s = y.get(l)) && (s = new Set,
                                y.set(l, s)),
                                !s.has(o)) {
                                    s.add(o);
                                    var b = bl.bind(null, i, l, o);
                                    l.then(b, b)
                                }
                                h.effectTag |= 4096,
                                h.expirationTime = t;
                                break e
                            }
                            h = h.return
                        } while (null !== h);
                        s = Error((ge(o.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + ve(o))
                    }
                    5 !== As && (As = 2),
                    s = Qo(s, o),
                    h = a;
                    do {
                        switch (h.tag) {
                        case 3:
                            l = s,
                            h.effectTag |= 4096,
                            h.expirationTime = t,
                            ua(h, ps(h, l, t));
                            break e;
                        case 1:
                            l = s;
                            var x = h.type
                              , w = h.stateNode;
                            if (0 == (64 & h.effectTag) && ("function" == typeof x.getDerivedStateFromError || null !== w && "function" == typeof w.componentDidCatch && (null === Us || !Us.has(w)))) {
                                h.effectTag |= 4096,
                                h.expirationTime = t,
                                ua(h, ms(h, l, t));
                                break e
                            }
                        }
                        h = h.return
                    } while (null !== h)
                }
                Ss = cl(Ss)
            } catch (e) {
                t = e;
                continue
            }
            break
        }
    }
    function il() {
        var e = ys.current;
        return ys.current = go,
        null === e ? go : e
    }
    function al(e, t) {
        e < Ls && 2 < e && (Ls = e),
        null !== t && e < Cs && 2 < e && (Cs = e,
        Ps = t)
    }
    function ol(e) {
        e > Os && (Os = e)
    }
    function sl() {
        for (; null !== Ss; )
            Ss = ul(Ss)
    }
    function ll() {
        for (; null !== Ss && !ki(); )
            Ss = ul(Ss)
    }
    function ul(e) {
        var t = gs(e.alternate, e, Ms);
        return e.memoizedProps = e.pendingProps,
        null === t && (t = cl(e)),
        bs.current = null,
        t
    }
    function cl(e) {
        Ss = e;
        do {
            var t = Ss.alternate;
            if (e = Ss.return,
            0 == (2048 & Ss.effectTag)) {
                if (t = Zo(t, Ss, Ms),
                1 === Ms || 1 !== Ss.childExpirationTime) {
                    for (var n = 0, r = Ss.child; null !== r; ) {
                        var i = r.expirationTime
                          , a = r.childExpirationTime;
                        i > n && (n = i),
                        a > n && (n = a),
                        r = r.sibling
                    }
                    Ss.childExpirationTime = n
                }
                if (null !== t)
                    return t;
                null !== e && 0 == (2048 & e.effectTag) && (null === e.firstEffect && (e.firstEffect = Ss.firstEffect),
                null !== Ss.lastEffect && (null !== e.lastEffect && (e.lastEffect.nextEffect = Ss.firstEffect),
                e.lastEffect = Ss.lastEffect),
                1 < Ss.effectTag && (null !== e.lastEffect ? e.lastEffect.nextEffect = Ss : e.firstEffect = Ss,
                e.lastEffect = Ss))
            } else {
                if (null !== (t = Jo(Ss)))
                    return t.effectTag &= 2047,
                    t;
                null !== e && (e.firstEffect = e.lastEffect = null,
                e.effectTag |= 2048)
            }
            if (null !== (t = Ss.sibling))
                return t;
            Ss = e
        } while (null !== Ss);
        return As === xs && (As = 5),
        null
    }
    function hl(e) {
        var t = e.expirationTime;
        return t > (e = e.childExpirationTime) ? t : e
    }
    function dl(e) {
        var t = zi();
        return Hi(99, fl.bind(null, e, t)),
        null
    }
    function fl(e, t) {
        do {
            ml()
        } while (null !== zs);
        if (0 != (48 & Es))
            throw Error(o(327));
        var n = e.finishedWork
          , r = e.finishedExpirationTime;
        if (null === n)
            return null;
        if (e.finishedWork = null,
        e.finishedExpirationTime = 0,
        n === e.current)
            throw Error(o(177));
        e.callbackNode = null,
        e.callbackExpirationTime = 0,
        e.callbackPriority = 90,
        e.nextKnownPendingLevel = 0;
        var i = hl(n);
        if (e.firstPendingTime = i,
        r <= e.lastSuspendedTime ? e.firstSuspendedTime = e.lastSuspendedTime = e.nextKnownPendingLevel = 0 : r <= e.firstSuspendedTime && (e.firstSuspendedTime = r - 1),
        r <= e.lastPingedTime && (e.lastPingedTime = 0),
        r <= e.lastExpiredTime && (e.lastExpiredTime = 0),
        e === Ts && (Ss = Ts = null,
        Ms = 0),
        1 < n.effectTag ? null !== n.lastEffect ? (n.lastEffect.nextEffect = n,
        i = n.firstEffect) : i = n : i = n.firstEffect,
        null !== i) {
            var a = Es;
            Es |= 32,
            bs.current = null,
            mn = qt;
            var s = fn();
            if (pn(s)) {
                if ("selectionStart"in s)
                    var l = {
                        start: s.selectionStart,
                        end: s.selectionEnd
                    };
                else
                    e: {
                        var u = (l = (l = s.ownerDocument) && l.defaultView || window).getSelection && l.getSelection();
                        if (u && 0 !== u.rangeCount) {
                            l = u.anchorNode;
                            var c = u.anchorOffset
                              , h = u.focusNode;
                            u = u.focusOffset;
                            try {
                                l.nodeType,
                                h.nodeType
                            } catch (e) {
                                l = null;
                                break e
                            }
                            var d = 0
                              , f = -1
                              , p = -1
                              , m = 0
                              , g = 0
                              , v = s
                              , y = null;
                            t: for (; ; ) {
                                for (var b; v !== l || 0 !== c && 3 !== v.nodeType || (f = d + c),
                                v !== h || 0 !== u && 3 !== v.nodeType || (p = d + u),
                                3 === v.nodeType && (d += v.nodeValue.length),
                                null !== (b = v.firstChild); )
                                    y = v,
                                    v = b;
                                for (; ; ) {
                                    if (v === s)
                                        break t;
                                    if (y === l && ++m === c && (f = d),
                                    y === h && ++g === u && (p = d),
                                    null !== (b = v.nextSibling))
                                        break;
                                    y = (v = y).parentNode
                                }
                                v = b
                            }
                            l = -1 === f || -1 === p ? null : {
                                start: f,
                                end: p
                            }
                        } else
                            l = null
                    }
                l = l || {
                    start: 0,
                    end: 0
                }
            } else
                l = null;
            gn = {
                activeElementDetached: null,
                focusedElem: s,
                selectionRange: l
            },
            qt = !1,
            Is = i;
            do {
                try {
                    pl()
                } catch (e) {
                    if (null === Is)
                        throw Error(o(330));
                    yl(Is, e),
                    Is = Is.nextEffect
                }
            } while (null !== Is);
            Is = i;
            do {
                try {
                    for (s = e,
                    l = t; null !== Is; ) {
                        var x = Is.effectTag;
                        if (16 & x && ze(Is.stateNode, ""),
                        128 & x) {
                            var w = Is.alternate;
                            if (null !== w) {
                                var _ = w.ref;
                                null !== _ && ("function" == typeof _ ? _(null) : _.current = null)
                            }
                        }
                        switch (1038 & x) {
                        case 2:
                            us(Is),
                            Is.effectTag &= -3;
                            break;
                        case 6:
                            us(Is),
                            Is.effectTag &= -3,
                            hs(Is.alternate, Is);
                            break;
                        case 1024:
                            Is.effectTag &= -1025;
                            break;
                        case 1028:
                            Is.effectTag &= -1025,
                            hs(Is.alternate, Is);
                            break;
                        case 4:
                            hs(Is.alternate, Is);
                            break;
                        case 8:
                            cs(s, c = Is, l),
                            ss(c)
                        }
                        Is = Is.nextEffect
                    }
                } catch (e) {
                    if (null === Is)
                        throw Error(o(330));
                    yl(Is, e),
                    Is = Is.nextEffect
                }
            } while (null !== Is);
            if (_ = gn,
            w = fn(),
            x = _.focusedElem,
            l = _.selectionRange,
            w !== x && x && x.ownerDocument && function e(t, n) {
                return !(!t || !n) && (t === n || (!t || 3 !== t.nodeType) && (n && 3 === n.nodeType ? e(t, n.parentNode) : "contains"in t ? t.contains(n) : !!t.compareDocumentPosition && !!(16 & t.compareDocumentPosition(n))))
            }(x.ownerDocument.documentElement, x)) {
                null !== l && pn(x) && (w = l.start,
                void 0 === (_ = l.end) && (_ = w),
                "selectionStart"in x ? (x.selectionStart = w,
                x.selectionEnd = Math.min(_, x.value.length)) : (_ = (w = x.ownerDocument || document) && w.defaultView || window).getSelection && (_ = _.getSelection(),
                c = x.textContent.length,
                s = Math.min(l.start, c),
                l = void 0 === l.end ? s : Math.min(l.end, c),
                !_.extend && s > l && (c = l,
                l = s,
                s = c),
                c = dn(x, s),
                h = dn(x, l),
                c && h && (1 !== _.rangeCount || _.anchorNode !== c.node || _.anchorOffset !== c.offset || _.focusNode !== h.node || _.focusOffset !== h.offset) && ((w = w.createRange()).setStart(c.node, c.offset),
                _.removeAllRanges(),
                s > l ? (_.addRange(w),
                _.extend(h.node, h.offset)) : (w.setEnd(h.node, h.offset),
                _.addRange(w))))),
                w = [];
                for (_ = x; _ = _.parentNode; )
                    1 === _.nodeType && w.push({
                        element: _,
                        left: _.scrollLeft,
                        top: _.scrollTop
                    });
                for ("function" == typeof x.focus && x.focus(),
                x = 0; x < w.length; x++)
                    (_ = w[x]).element.scrollLeft = _.left,
                    _.element.scrollTop = _.top
            }
            qt = !!mn,
            gn = mn = null,
            e.current = n,
            Is = i;
            do {
                try {
                    for (x = e; null !== Is; ) {
                        var E = Is.effectTag;
                        if (36 & E && as(x, Is.alternate, Is),
                        128 & E) {
                            w = void 0;
                            var T = Is.ref;
                            if (null !== T) {
                                var S = Is.stateNode;
                                switch (Is.tag) {
                                case 5:
                                    w = S;
                                    break;
                                default:
                                    w = S
                                }
                                "function" == typeof T ? T(w) : T.current = w
                            }
                        }
                        Is = Is.nextEffect
                    }
                } catch (e) {
                    if (null === Is)
                        throw Error(o(330));
                    yl(Is, e),
                    Is = Is.nextEffect
                }
            } while (null !== Is);
            Is = null,
            Di(),
            Es = a
        } else
            e.current = n;
        if (Bs)
            Bs = !1,
            zs = e,
            Gs = t;
        else
            for (Is = i; null !== Is; )
                t = Is.nextEffect,
                Is.nextEffect = null,
                Is = t;
        if (0 === (t = e.firstPendingTime) && (Us = null),
        1073741823 === t ? e === Vs ? js++ : (js = 0,
        Vs = e) : js = 0,
        "function" == typeof wl && wl(n.stateNode, r),
        Js(e),
        Ns)
            throw Ns = !1,
            e = Fs,
            Fs = null,
            e;
        return 0 != (8 & Es) || Wi(),
        null
    }
    function pl() {
        for (; null !== Is; ) {
            var e = Is.effectTag;
            0 != (256 & e) && ns(Is.alternate, Is),
            0 == (512 & e) || Bs || (Bs = !0,
            ji(97, (function() {
                return ml(),
                null
            }
            ))),
            Is = Is.nextEffect
        }
    }
    function ml() {
        if (90 !== Gs) {
            var e = 97 < Gs ? 97 : Gs;
            return Gs = 90,
            Hi(e, gl)
        }
    }
    function gl() {
        if (null === zs)
            return !1;
        var e = zs;
        if (zs = null,
        0 != (48 & Es))
            throw Error(o(331));
        var t = Es;
        for (Es |= 32,
        e = e.current.firstEffect; null !== e; ) {
            try {
                var n = e;
                if (0 != (512 & n.effectTag))
                    switch (n.tag) {
                    case 0:
                    case 11:
                    case 15:
                    case 22:
                        rs(5, n),
                        is(5, n)
                    }
            } catch (t) {
                if (null === e)
                    throw Error(o(330));
                yl(e, t)
            }
            n = e.nextEffect,
            e.nextEffect = null,
            e = n
        }
        return Es = t,
        Wi(),
        !0
    }
    function vl(e, t, n) {
        la(e, t = ps(e, t = Qo(n, t), 1073741823)),
        null !== (e = Xs(e, 1073741823)) && Js(e)
    }
    function yl(e, t) {
        if (3 === e.tag)
            vl(e, e, t);
        else
            for (var n = e.return; null !== n; ) {
                if (3 === n.tag) {
                    vl(n, e, t);
                    break
                }
                if (1 === n.tag) {
                    var r = n.stateNode;
                    if ("function" == typeof n.type.getDerivedStateFromError || "function" == typeof r.componentDidCatch && (null === Us || !Us.has(r))) {
                        la(n, e = ms(n, e = Qo(t, e), 1073741823)),
                        null !== (n = Xs(n, 1073741823)) && Js(n);
                        break
                    }
                }
                n = n.return
            }
    }
    function bl(e, t, n) {
        var r = e.pingCache;
        null !== r && r.delete(t),
        Ts === e && Ms === n ? As === _s || As === ws && 1073741823 === Ls && Bi() - Ds < 500 ? nl(e, Ms) : ks = !0 : Ol(e, n) && (0 !== (t = e.lastPingedTime) && t < n || (e.lastPingedTime = n,
        Js(e)))
    }
    function xl(e, t) {
        var n = e.stateNode;
        null !== n && n.delete(t),
        0 === (t = 0) && (t = Ks(t = qs(), e, null)),
        null !== (e = Xs(e, t)) && Js(e)
    }
    gs = function(e, t, n) {
        var r = t.expirationTime;
        if (null !== e) {
            var i = t.pendingProps;
            if (e.memoizedProps !== i || di.current)
                Co = !0;
            else {
                if (r < n) {
                    switch (Co = !1,
                    t.tag) {
                    case 3:
                        Bo(t),
                        Ro();
                        break;
                    case 5:
                        if (ka(t),
                        4 & t.mode && 1 !== n && i.hidden)
                            return t.expirationTime = t.childExpirationTime = 1,
                            null;
                        break;
                    case 1:
                        mi(t.type) && bi(t);
                        break;
                    case 4:
                        Pa(t, t.stateNode.containerInfo);
                        break;
                    case 10:
                        r = t.memoizedProps.value,
                        i = t.type._context,
                        ui(Xi, i._currentValue),
                        i._currentValue = r;
                        break;
                    case 13:
                        if (null !== t.memoizedState)
                            return 0 !== (r = t.child.childExpirationTime) && r >= n ? Vo(e, t, n) : (ui(Ia, 1 & Ia.current),
                            null !== (t = Yo(e, t, n)) ? t.sibling : null);
                        ui(Ia, 1 & Ia.current);
                        break;
                    case 19:
                        if (r = t.childExpirationTime >= n,
                        0 != (64 & e.effectTag)) {
                            if (r)
                                return Ko(e, t, n);
                            t.effectTag |= 64
                        }
                        if (null !== (i = t.memoizedState) && (i.rendering = null,
                        i.tail = null),
                        ui(Ia, Ia.current),
                        !r)
                            return null
                    }
                    return Yo(e, t, n)
                }
                Co = !1
            }
        } else
            Co = !1;
        switch (t.expirationTime = 0,
        t.tag) {
        case 2:
            if (r = t.type,
            null !== e && (e.alternate = null,
            t.alternate = null,
            t.effectTag |= 2),
            e = t.pendingProps,
            i = pi(t, hi.current),
            na(t, n),
            i = Ka(null, t, r, e, i, n),
            t.effectTag |= 1,
            "object" == typeof i && null !== i && "function" == typeof i.render && void 0 === i.$$typeof) {
                if (t.tag = 1,
                t.memoizedState = null,
                t.updateQueue = null,
                mi(r)) {
                    var a = !0;
                    bi(t)
                } else
                    a = !1;
                t.memoizedState = null !== i.state && void 0 !== i.state ? i.state : null,
                aa(t);
                var s = r.getDerivedStateFromProps;
                "function" == typeof s && pa(t, r, s, e),
                i.updater = ma,
                t.stateNode = i,
                i._reactInternalFiber = t,
                ba(t, r, e, n),
                t = Uo(null, t, r, !0, a, n)
            } else
                t.tag = 0,
                Po(null, t, i, n),
                t = t.child;
            return t;
        case 16:
            e: {
                if (i = t.elementType,
                null !== e && (e.alternate = null,
                t.alternate = null,
                t.effectTag |= 2),
                e = t.pendingProps,
                function(e) {
                    if (-1 === e._status) {
                        e._status = 0;
                        var t = e._ctor;
                        t = t(),
                        e._result = t,
                        t.then((function(t) {
                            0 === e._status && (t = t.default,
                            e._status = 1,
                            e._result = t)
                        }
                        ), (function(t) {
                            0 === e._status && (e._status = 2,
                            e._result = t)
                        }
                        ))
                    }
                }(i),
                1 !== i._status)
                    throw i._result;
                switch (i = i._result,
                t.type = i,
                a = t.tag = function(e) {
                    if ("function" == typeof e)
                        return Sl(e) ? 1 : 0;
                    if (null != e) {
                        if ((e = e.$$typeof) === le)
                            return 11;
                        if (e === he)
                            return 14
                    }
                    return 2
                }(i),
                e = Yi(i, e),
                a) {
                case 0:
                    t = No(null, t, i, e, n);
                    break e;
                case 1:
                    t = Fo(null, t, i, e, n);
                    break e;
                case 11:
                    t = Oo(null, t, i, e, n);
                    break e;
                case 14:
                    t = ko(null, t, i, Yi(i.type, e), r, n);
                    break e
                }
                throw Error(o(306, i, ""))
            }
            return t;
        case 0:
            return r = t.type,
            i = t.pendingProps,
            No(e, t, r, i = t.elementType === r ? i : Yi(r, i), n);
        case 1:
            return r = t.type,
            i = t.pendingProps,
            Fo(e, t, r, i = t.elementType === r ? i : Yi(r, i), n);
        case 3:
            if (Bo(t),
            r = t.updateQueue,
            null === e || null === r)
                throw Error(o(282));
            if (r = t.pendingProps,
            i = null !== (i = t.memoizedState) ? i.element : null,
            oa(e, t),
            ca(t, r, null, n),
            (r = t.memoizedState.element) === i)
                Ro(),
                t = Yo(e, t, n);
            else {
                if ((i = t.stateNode.hydrate) && (wo = wn(t.stateNode.containerInfo.firstChild),
                xo = t,
                i = _o = !0),
                i)
                    for (n = Sa(t, null, r, n),
                    t.child = n; n; )
                        n.effectTag = -3 & n.effectTag | 1024,
                        n = n.sibling;
                else
                    Po(e, t, r, n),
                    Ro();
                t = t.child
            }
            return t;
        case 5:
            return ka(t),
            null === e && So(t),
            r = t.type,
            i = t.pendingProps,
            a = null !== e ? e.memoizedProps : null,
            s = i.children,
            yn(r, i) ? s = null : null !== a && yn(r, a) && (t.effectTag |= 16),
            Io(e, t),
            4 & t.mode && 1 !== n && i.hidden ? (t.expirationTime = t.childExpirationTime = 1,
            t = null) : (Po(e, t, s, n),
            t = t.child),
            t;
        case 6:
            return null === e && So(t),
            null;
        case 13:
            return Vo(e, t, n);
        case 4:
            return Pa(t, t.stateNode.containerInfo),
            r = t.pendingProps,
            null === e ? t.child = Ta(t, null, r, n) : Po(e, t, r, n),
            t.child;
        case 11:
            return r = t.type,
            i = t.pendingProps,
            Oo(e, t, r, i = t.elementType === r ? i : Yi(r, i), n);
        case 7:
            return Po(e, t, t.pendingProps, n),
            t.child;
        case 8:
        case 12:
            return Po(e, t, t.pendingProps.children, n),
            t.child;
        case 10:
            e: {
                r = t.type._context,
                i = t.pendingProps,
                s = t.memoizedProps,
                a = i.value;
                var l = t.type._context;
                if (ui(Xi, l._currentValue),
                l._currentValue = a,
                null !== s)
                    if (l = s.value,
                    0 === (a = Fr(l, a) ? 0 : 0 | ("function" == typeof r._calculateChangedBits ? r._calculateChangedBits(l, a) : 1073741823))) {
                        if (s.children === i.children && !di.current) {
                            t = Yo(e, t, n);
                            break e
                        }
                    } else
                        for (null !== (l = t.child) && (l.return = t); null !== l; ) {
                            var u = l.dependencies;
                            if (null !== u) {
                                s = l.child;
                                for (var c = u.firstContext; null !== c; ) {
                                    if (c.context === r && 0 != (c.observedBits & a)) {
                                        1 === l.tag && ((c = sa(n, null)).tag = 2,
                                        la(l, c)),
                                        l.expirationTime < n && (l.expirationTime = n),
                                        null !== (c = l.alternate) && c.expirationTime < n && (c.expirationTime = n),
                                        ta(l.return, n),
                                        u.expirationTime < n && (u.expirationTime = n);
                                        break
                                    }
                                    c = c.next
                                }
                            } else
                                s = 10 === l.tag && l.type === t.type ? null : l.child;
                            if (null !== s)
                                s.return = l;
                            else
                                for (s = l; null !== s; ) {
                                    if (s === t) {
                                        s = null;
                                        break
                                    }
                                    if (null !== (l = s.sibling)) {
                                        l.return = s.return,
                                        s = l;
                                        break
                                    }
                                    s = s.return
                                }
                            l = s
                        }
                Po(e, t, i.children, n),
                t = t.child
            }
            return t;
        case 9:
            return i = t.type,
            r = (a = t.pendingProps).children,
            na(t, n),
            r = r(i = ra(i, a.unstable_observedBits)),
            t.effectTag |= 1,
            Po(e, t, r, n),
            t.child;
        case 14:
            return a = Yi(i = t.type, t.pendingProps),
            ko(e, t, i, a = Yi(i.type, a), r, n);
        case 15:
            return Do(e, t, t.type, t.pendingProps, r, n);
        case 17:
            return r = t.type,
            i = t.pendingProps,
            i = t.elementType === r ? i : Yi(r, i),
            null !== e && (e.alternate = null,
            t.alternate = null,
            t.effectTag |= 2),
            t.tag = 1,
            mi(r) ? (e = !0,
            bi(t)) : e = !1,
            na(t, n),
            va(t, r, i),
            ba(t, r, i, n),
            Uo(null, t, r, !0, e, n);
        case 19:
            return Ko(e, t, n)
        }
        throw Error(o(156, t.tag))
    }
    ;
    var wl = null
      , _l = null;
    function El(e, t, n, r) {
        this.tag = e,
        this.key = n,
        this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null,
        this.index = 0,
        this.ref = null,
        this.pendingProps = t,
        this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null,
        this.mode = r,
        this.effectTag = 0,
        this.lastEffect = this.firstEffect = this.nextEffect = null,
        this.childExpirationTime = this.expirationTime = 0,
        this.alternate = null
    }
    function Tl(e, t, n, r) {
        return new El(e,t,n,r)
    }
    function Sl(e) {
        return !(!(e = e.prototype) || !e.isReactComponent)
    }
    function Ml(e, t) {
        var n = e.alternate;
        return null === n ? ((n = Tl(e.tag, t, e.key, e.mode)).elementType = e.elementType,
        n.type = e.type,
        n.stateNode = e.stateNode,
        n.alternate = e,
        e.alternate = n) : (n.pendingProps = t,
        n.effectTag = 0,
        n.nextEffect = null,
        n.firstEffect = null,
        n.lastEffect = null),
        n.childExpirationTime = e.childExpirationTime,
        n.expirationTime = e.expirationTime,
        n.child = e.child,
        n.memoizedProps = e.memoizedProps,
        n.memoizedState = e.memoizedState,
        n.updateQueue = e.updateQueue,
        t = e.dependencies,
        n.dependencies = null === t ? null : {
            expirationTime: t.expirationTime,
            firstContext: t.firstContext,
            responders: t.responders
        },
        n.sibling = e.sibling,
        n.index = e.index,
        n.ref = e.ref,
        n
    }
    function Al(e, t, n, r, i, a) {
        var s = 2;
        if (r = e,
        "function" == typeof e)
            Sl(e) && (s = 1);
        else if ("string" == typeof e)
            s = 5;
        else
            e: switch (e) {
            case ne:
                return Rl(n.children, i, a, t);
            case se:
                s = 8,
                i |= 7;
                break;
            case re:
                s = 8,
                i |= 1;
                break;
            case ie:
                return (e = Tl(12, n, t, 8 | i)).elementType = ie,
                e.type = ie,
                e.expirationTime = a,
                e;
            case ue:
                return (e = Tl(13, n, t, i)).type = ue,
                e.elementType = ue,
                e.expirationTime = a,
                e;
            case ce:
                return (e = Tl(19, n, t, i)).elementType = ce,
                e.expirationTime = a,
                e;
            default:
                if ("object" == typeof e && null !== e)
                    switch (e.$$typeof) {
                    case ae:
                        s = 10;
                        break e;
                    case oe:
                        s = 9;
                        break e;
                    case le:
                        s = 11;
                        break e;
                    case he:
                        s = 14;
                        break e;
                    case de:
                        s = 16,
                        r = null;
                        break e;
                    case fe:
                        s = 22;
                        break e
                    }
                throw Error(o(130, null == e ? e : typeof e, ""))
            }
        return (t = Tl(s, n, t, i)).elementType = e,
        t.type = r,
        t.expirationTime = a,
        t
    }
    function Rl(e, t, n, r) {
        return (e = Tl(7, e, r, t)).expirationTime = n,
        e
    }
    function Ll(e, t, n) {
        return (e = Tl(6, e, null, t)).expirationTime = n,
        e
    }
    function Cl(e, t, n) {
        return (t = Tl(4, null !== e.children ? e.children : [], e.key, t)).expirationTime = n,
        t.stateNode = {
            containerInfo: e.containerInfo,
            pendingChildren: null,
            implementation: e.implementation
        },
        t
    }
    function Pl(e, t, n) {
        this.tag = t,
        this.current = null,
        this.containerInfo = e,
        this.pingCache = this.pendingChildren = null,
        this.finishedExpirationTime = 0,
        this.finishedWork = null,
        this.timeoutHandle = -1,
        this.pendingContext = this.context = null,
        this.hydrate = n,
        this.callbackNode = null,
        this.callbackPriority = 90,
        this.lastExpiredTime = this.lastPingedTime = this.nextKnownPendingLevel = this.lastSuspendedTime = this.firstSuspendedTime = this.firstPendingTime = 0
    }
    function Ol(e, t) {
        var n = e.firstSuspendedTime;
        return e = e.lastSuspendedTime,
        0 !== n && n >= t && e <= t
    }
    function kl(e, t) {
        var n = e.firstSuspendedTime
          , r = e.lastSuspendedTime;
        n < t && (e.firstSuspendedTime = t),
        (r > t || 0 === n) && (e.lastSuspendedTime = t),
        t <= e.lastPingedTime && (e.lastPingedTime = 0),
        t <= e.lastExpiredTime && (e.lastExpiredTime = 0)
    }
    function Dl(e, t) {
        t > e.firstPendingTime && (e.firstPendingTime = t);
        var n = e.firstSuspendedTime;
        0 !== n && (t >= n ? e.firstSuspendedTime = e.lastSuspendedTime = e.nextKnownPendingLevel = 0 : t >= e.lastSuspendedTime && (e.lastSuspendedTime = t + 1),
        t > e.nextKnownPendingLevel && (e.nextKnownPendingLevel = t))
    }
    function Il(e, t) {
        var n = e.lastExpiredTime;
        (0 === n || n > t) && (e.lastExpiredTime = t)
    }
    function Nl(e, t, n, r) {
        var i = t.current
          , a = qs()
          , s = da.suspense;
        a = Ks(a, i, s);
        e: if (n) {
            t: {
                if ($e(n = n._reactInternalFiber) !== n || 1 !== n.tag)
                    throw Error(o(170));
                var l = n;
                do {
                    switch (l.tag) {
                    case 3:
                        l = l.stateNode.context;
                        break t;
                    case 1:
                        if (mi(l.type)) {
                            l = l.stateNode.__reactInternalMemoizedMergedChildContext;
                            break t
                        }
                    }
                    l = l.return
                } while (null !== l);
                throw Error(o(171))
            }
            if (1 === n.tag) {
                var u = n.type;
                if (mi(u)) {
                    n = yi(n, u, l);
                    break e
                }
            }
            n = l
        } else
            n = ci;
        return null === t.context ? t.context = n : t.pendingContext = n,
        (t = sa(a, s)).payload = {
            element: e
        },
        null !== (r = void 0 === r ? null : r) && (t.callback = r),
        la(i, t),
        Ys(i, a),
        a
    }
    function Fl(e) {
        if (!(e = e.current).child)
            return null;
        switch (e.child.tag) {
        case 5:
        default:
            return e.child.stateNode
        }
    }
    function Ul(e, t) {
        null !== (e = e.memoizedState) && null !== e.dehydrated && e.retryTime < t && (e.retryTime = t)
    }
    function Bl(e, t) {
        Ul(e, t),
        (e = e.alternate) && Ul(e, t)
    }
    function zl(e, t, n) {
        var r = new Pl(e,t,n = null != n && !0 === n.hydrate)
          , i = Tl(3, null, null, 2 === t ? 7 : 1 === t ? 3 : 0);
        r.current = i,
        i.stateNode = r,
        aa(i),
        e[Mn] = r.current,
        n && 0 !== t && function(e, t) {
            var n = Qe(t);
            Mt.forEach((function(e) {
                pt(e, t, n)
            }
            )),
            At.forEach((function(e) {
                pt(e, t, n)
            }
            ))
        }(0, 9 === e.nodeType ? e : e.ownerDocument),
        this._internalRoot = r
    }
    function Gl(e) {
        return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType && (8 !== e.nodeType || " react-mount-point-unstable " !== e.nodeValue))
    }
    function Hl(e, t, n, r, i) {
        var a = n._reactRootContainer;
        if (a) {
            var o = a._internalRoot;
            if ("function" == typeof i) {
                var s = i;
                i = function() {
                    var e = Fl(o);
                    s.call(e)
                }
            }
            Nl(t, o, e, i)
        } else {
            if (a = n._reactRootContainer = function(e, t) {
                if (t || (t = !(!(t = e ? 9 === e.nodeType ? e.documentElement : e.firstChild : null) || 1 !== t.nodeType || !t.hasAttribute("data-reactroot"))),
                !t)
                    for (var n; n = e.lastChild; )
                        e.removeChild(n);
                return new zl(e,0,t ? {
                    hydrate: !0
                } : void 0)
            }(n, r),
            o = a._internalRoot,
            "function" == typeof i) {
                var l = i;
                i = function() {
                    var e = Fl(o);
                    l.call(e)
                }
            }
            tl((function() {
                Nl(t, o, e, i)
            }
            ))
        }
        return Fl(o)
    }
    function jl(e, t, n) {
        var r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
        return {
            $$typeof: te,
            key: null == r ? null : "" + r,
            children: e,
            containerInfo: t,
            implementation: n
        }
    }
    function Vl(e, t) {
        var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
        if (!Gl(t))
            throw Error(o(200));
        return jl(e, t, null, n)
    }
    zl.prototype.render = function(e) {
        Nl(e, this._internalRoot, null, null)
    }
    ,
    zl.prototype.unmount = function() {
        var e = this._internalRoot
          , t = e.containerInfo;
        Nl(null, e, null, (function() {
            t[Mn] = null
        }
        ))
    }
    ,
    mt = function(e) {
        if (13 === e.tag) {
            var t = Ki(qs(), 150, 100);
            Ys(e, t),
            Bl(e, t)
        }
    }
    ,
    gt = function(e) {
        13 === e.tag && (Ys(e, 3),
        Bl(e, 3))
    }
    ,
    vt = function(e) {
        if (13 === e.tag) {
            var t = qs();
            Ys(e, t = Ks(t, e, null)),
            Bl(e, t)
        }
    }
    ,
    R = function(e, t, n) {
        switch (t) {
        case "input":
            if (Se(e, n),
            t = n.name,
            "radio" === n.type && null != t) {
                for (n = e; n.parentNode; )
                    n = n.parentNode;
                for (n = n.querySelectorAll("input[name=" + JSON.stringify("" + t) + '][type="radio"]'),
                t = 0; t < n.length; t++) {
                    var r = n[t];
                    if (r !== e && r.form === e.form) {
                        var i = Cn(r);
                        if (!i)
                            throw Error(o(90));
                        we(r),
                        Se(r, i)
                    }
                }
            }
            break;
        case "textarea":
            Oe(e, n);
            break;
        case "select":
            null != (t = n.value) && Le(e, !!n.multiple, t, !1)
        }
    }
    ,
    D = el,
    I = function(e, t, n, r, i) {
        var a = Es;
        Es |= 4;
        try {
            return Hi(98, e.bind(null, t, n, r, i))
        } finally {
            0 === (Es = a) && Wi()
        }
    }
    ,
    N = function() {
        0 == (49 & Es) && (function() {
            if (null !== Hs) {
                var e = Hs;
                Hs = null,
                e.forEach((function(e, t) {
                    Il(t, e),
                    Js(t)
                }
                )),
                Wi()
            }
        }(),
        ml())
    }
    ,
    F = function(e, t) {
        var n = Es;
        Es |= 2;
        try {
            return e(t)
        } finally {
            0 === (Es = n) && Wi()
        }
    }
    ;
    var Wl, ql, Kl = {
        Events: [Rn, Ln, Cn, M, E, Fn, function(e) {
            it(e, Nn)
        }
        , O, k, Jt, st, ml, {
            current: !1
        }]
    };
    ql = (Wl = {
        findFiberByHostInstance: An,
        bundleType: 0,
        version: "16.13.1",
        rendererPackageName: "react-dom"
    }).findFiberByHostInstance,
    function(e) {
        if ("undefined" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)
            return !1;
        var t = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (t.isDisabled || !t.supportsFiber)
            return !0;
        try {
            var n = t.inject(e);
            wl = function(e) {
                try {
                    t.onCommitFiberRoot(n, e, void 0, 64 == (64 & e.current.effectTag))
                } catch (e) {}
            }
            ,
            _l = function(e) {
                try {
                    t.onCommitFiberUnmount(n, e)
                } catch (e) {}
            }
        } catch (e) {}
    }(i({}, Wl, {
        overrideHookState: null,
        overrideProps: null,
        setSuspenseHandler: null,
        scheduleUpdate: null,
        currentDispatcherRef: Z.ReactCurrentDispatcher,
        findHostInstanceByFiber: function(e) {
            return null === (e = nt(e)) ? null : e.stateNode
        },
        findFiberByHostInstance: function(e) {
            return ql ? ql(e) : null
        },
        findHostInstancesForRefresh: null,
        scheduleRefresh: null,
        scheduleRoot: null,
        setRefreshHandler: null,
        getCurrentFiber: null
    })),
    t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Kl,
    t.createPortal = Vl,
    t.findDOMNode = function(e) {
        if (null == e)
            return null;
        if (1 === e.nodeType)
            return e;
        var t = e._reactInternalFiber;
        if (void 0 === t) {
            if ("function" == typeof e.render)
                throw Error(o(188));
            throw Error(o(268, Object.keys(e)))
        }
        return e = null === (e = nt(t)) ? null : e.stateNode
    }
    ,
    t.flushSync = function(e, t) {
        if (0 != (48 & Es))
            throw Error(o(187));
        var n = Es;
        Es |= 1;
        try {
            return Hi(99, e.bind(null, t))
        } finally {
            Es = n,
            Wi()
        }
    }
    ,
    t.hydrate = function(e, t, n) {
        if (!Gl(t))
            throw Error(o(200));
        return Hl(null, e, t, !0, n)
    }
    ,
    t.render = function(e, t, n) {
        if (!Gl(t))
            throw Error(o(200));
        return Hl(null, e, t, !1, n)
    }
    ,
    t.unmountComponentAtNode = function(e) {
        if (!Gl(e))
            throw Error(o(40));
        return !!e._reactRootContainer && (tl((function() {
            Hl(null, null, e, !1, (function() {
                e._reactRootContainer = null,
                e[Mn] = null
            }
            ))
        }
        )),
        !0)
    }
    ,
    t.unstable_batchedUpdates = el,
    t.unstable_createPortal = function(e, t) {
        return Vl(e, t, 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null)
    }
    ,
    t.unstable_renderSubtreeIntoContainer = function(e, t, n, r) {
        if (!Gl(n))
            throw Error(o(200));
        if (null == e || void 0 === e._reactInternalFiber)
            throw Error(o(38));
        return Hl(e, t, n, !1, r)
    }
    ,
    t.version = "16.13.1"
}
, function(e, t, n) {
    "use strict";
    e.exports = n(19)
}
, function(e, t, n) {
    "use strict";
    /** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
    var r, i, a, o, s;
    if ("undefined" == typeof window || "function" != typeof MessageChannel) {
        var l = null
          , u = null
          , c = function() {
            if (null !== l)
                try {
                    var e = t.unstable_now();
                    l(!0, e),
                    l = null
                } catch (e) {
                    throw setTimeout(c, 0),
                    e
                }
        }
          , h = Date.now();
        t.unstable_now = function() {
            return Date.now() - h
        }
        ,
        r = function(e) {
            null !== l ? setTimeout(r, 0, e) : (l = e,
            setTimeout(c, 0))
        }
        ,
        i = function(e, t) {
            u = setTimeout(e, t)
        }
        ,
        a = function() {
            clearTimeout(u)
        }
        ,
        o = function() {
            return !1
        }
        ,
        s = t.unstable_forceFrameRate = function() {}
    } else {
        var d = window.performance
          , f = window.Date
          , p = window.setTimeout
          , m = window.clearTimeout;
        if ("undefined" != typeof console) {
            var g = window.cancelAnimationFrame;
            "function" != typeof window.requestAnimationFrame && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),
            "function" != typeof g && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")
        }
        if ("object" == typeof d && "function" == typeof d.now)
            t.unstable_now = function() {
                return d.now()
            }
            ;
        else {
            var v = f.now();
            t.unstable_now = function() {
                return f.now() - v
            }
        }
        var y = !1
          , b = null
          , x = -1
          , w = 5
          , _ = 0;
        o = function() {
            return t.unstable_now() >= _
        }
        ,
        s = function() {}
        ,
        t.unstable_forceFrameRate = function(e) {
            0 > e || 125 < e ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported") : w = 0 < e ? Math.floor(1e3 / e) : 5
        }
        ;
        var E = new MessageChannel
          , T = E.port2;
        E.port1.onmessage = function() {
            if (null !== b) {
                var e = t.unstable_now();
                _ = e + w;
                try {
                    b(!0, e) ? T.postMessage(null) : (y = !1,
                    b = null)
                } catch (e) {
                    throw T.postMessage(null),
                    e
                }
            } else
                y = !1
        }
        ,
        r = function(e) {
            b = e,
            y || (y = !0,
            T.postMessage(null))
        }
        ,
        i = function(e, n) {
            x = p((function() {
                e(t.unstable_now())
            }
            ), n)
        }
        ,
        a = function() {
            m(x),
            x = -1
        }
    }
    function S(e, t) {
        var n = e.length;
        e.push(t);
        e: for (; ; ) {
            var r = n - 1 >>> 1
              , i = e[r];
            if (!(void 0 !== i && 0 < R(i, t)))
                break e;
            e[r] = t,
            e[n] = i,
            n = r
        }
    }
    function M(e) {
        return void 0 === (e = e[0]) ? null : e
    }
    function A(e) {
        var t = e[0];
        if (void 0 !== t) {
            var n = e.pop();
            if (n !== t) {
                e[0] = n;
                e: for (var r = 0, i = e.length; r < i; ) {
                    var a = 2 * (r + 1) - 1
                      , o = e[a]
                      , s = a + 1
                      , l = e[s];
                    if (void 0 !== o && 0 > R(o, n))
                        void 0 !== l && 0 > R(l, o) ? (e[r] = l,
                        e[s] = n,
                        r = s) : (e[r] = o,
                        e[a] = n,
                        r = a);
                    else {
                        if (!(void 0 !== l && 0 > R(l, n)))
                            break e;
                        e[r] = l,
                        e[s] = n,
                        r = s
                    }
                }
            }
            return t
        }
        return null
    }
    function R(e, t) {
        var n = e.sortIndex - t.sortIndex;
        return 0 !== n ? n : e.id - t.id
    }
    var L = []
      , C = []
      , P = 1
      , O = null
      , k = 3
      , D = !1
      , I = !1
      , N = !1;
    function F(e) {
        for (var t = M(C); null !== t; ) {
            if (null === t.callback)
                A(C);
            else {
                if (!(t.startTime <= e))
                    break;
                A(C),
                t.sortIndex = t.expirationTime,
                S(L, t)
            }
            t = M(C)
        }
    }
    function U(e) {
        if (N = !1,
        F(e),
        !I)
            if (null !== M(L))
                I = !0,
                r(B);
            else {
                var t = M(C);
                null !== t && i(U, t.startTime - e)
            }
    }
    function B(e, n) {
        I = !1,
        N && (N = !1,
        a()),
        D = !0;
        var r = k;
        try {
            for (F(n),
            O = M(L); null !== O && (!(O.expirationTime > n) || e && !o()); ) {
                var s = O.callback;
                if (null !== s) {
                    O.callback = null,
                    k = O.priorityLevel;
                    var l = s(O.expirationTime <= n);
                    n = t.unstable_now(),
                    "function" == typeof l ? O.callback = l : O === M(L) && A(L),
                    F(n)
                } else
                    A(L);
                O = M(L)
            }
            if (null !== O)
                var u = !0;
            else {
                var c = M(C);
                null !== c && i(U, c.startTime - n),
                u = !1
            }
            return u
        } finally {
            O = null,
            k = r,
            D = !1
        }
    }
    function z(e) {
        switch (e) {
        case 1:
            return -1;
        case 2:
            return 250;
        case 5:
            return 1073741823;
        case 4:
            return 1e4;
        default:
            return 5e3
        }
    }
    var G = s;
    t.unstable_IdlePriority = 5,
    t.unstable_ImmediatePriority = 1,
    t.unstable_LowPriority = 4,
    t.unstable_NormalPriority = 3,
    t.unstable_Profiling = null,
    t.unstable_UserBlockingPriority = 2,
    t.unstable_cancelCallback = function(e) {
        e.callback = null
    }
    ,
    t.unstable_continueExecution = function() {
        I || D || (I = !0,
        r(B))
    }
    ,
    t.unstable_getCurrentPriorityLevel = function() {
        return k
    }
    ,
    t.unstable_getFirstCallbackNode = function() {
        return M(L)
    }
    ,
    t.unstable_next = function(e) {
        switch (k) {
        case 1:
        case 2:
        case 3:
            var t = 3;
            break;
        default:
            t = k
        }
        var n = k;
        k = t;
        try {
            return e()
        } finally {
            k = n
        }
    }
    ,
    t.unstable_pauseExecution = function() {}
    ,
    t.unstable_requestPaint = G,
    t.unstable_runWithPriority = function(e, t) {
        switch (e) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            break;
        default:
            e = 3
        }
        var n = k;
        k = e;
        try {
            return t()
        } finally {
            k = n
        }
    }
    ,
    t.unstable_scheduleCallback = function(e, n, o) {
        var s = t.unstable_now();
        if ("object" == typeof o && null !== o) {
            var l = o.delay;
            l = "number" == typeof l && 0 < l ? s + l : s,
            o = "number" == typeof o.timeout ? o.timeout : z(e)
        } else
            o = z(e),
            l = s;
        return e = {
            id: P++,
            callback: n,
            priorityLevel: e,
            startTime: l,
            expirationTime: o = l + o,
            sortIndex: -1
        },
        l > s ? (e.sortIndex = l,
        S(C, e),
        null === M(L) && e === M(C) && (N ? a() : N = !0,
        i(U, l - s))) : (e.sortIndex = o,
        S(L, e),
        I || D || (I = !0,
        r(B))),
        e
    }
    ,
    t.unstable_shouldYield = function() {
        var e = t.unstable_now();
        F(e);
        var n = M(L);
        return n !== O && null !== O && null !== n && null !== n.callback && n.startTime <= e && n.expirationTime < O.expirationTime || o()
    }
    ,
    t.unstable_wrapCallback = function(e) {
        var t = k;
        return function() {
            var n = k;
            k = t;
            try {
                return e.apply(this, arguments)
            } finally {
                k = n
            }
        }
    }
}
, function(e, t, n) {
    var r = n(3)
      , i = n(21);
    "string" == typeof (i = i.__esModule ? i.default : i) && (i = [[e.i, i, ""]]);
    var a = {
        insert: "head",
        singleton: !1
    };
    r(i, a);
    e.exports = i.locals || {}
}
, function(e, t, n) {
    (t = n(2)(!1)).push([e.i, ".paint-control-overlay {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  pointer-events: none;\n}\n\n.controls {\n  width: 430px;\n  height: 100px;\n  margin: 0 auto;\n  padding-top: 100vh;\n  margin-top: -176px;\n  text-align: center;\n}\n\n.tool-button-container {\n  width: 200px;\n  display: flex;\n  align-items: center;\n  margin: 0 auto;\n}\n\n.tool-button-container > * {\n  pointer-events: all;\n}\n\n.tool-button {\n  background-color: #f5f4f3;\n  color: black;\n  width: 65px;\n  height: 65px;\n  font-size: 20px;\n  line-height: 65px;\n  margin: 0 8px;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n}\n\n.tool-button:hover {\n  background-color: #ff3158;\n  color:white;\n}\n\n.tool-sub-button {\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n  width: 50px;\n  height: 50px;\n  font-size: 24px;\n  line-height: 50px;\n  cursor: pointer;\n}\n\n.tool-sub-button:hover {\n  background-color: rgba(0, 0, 0, 1.0);\n}\n\n.tool-button.icon::before,\n.tool-sub-button.icon::before {\n  height: 100%;\n  width: 100%;\n}\n\n.tool-button.icon-brush {\n  font-size: 30px;\n}\n\n.tool-button.icon-checkmark {\n  color: #00a170;\n}\n\n.tool-button.icon-brush:hover {\n  color: white;\n}\n\n.tool-options-container {\n  color: white;\n  width: 100%;\n  pointer-events: none;\n}\n\n.tool-options-container > * {\n  margin-top: 24px;\n}\n\n.tool-button.selected,\n.tool-sub-button.selected {\n  box-shadow: 0 0 3px 1px #ff3158;\n}\n", ""]),
    e.exports = t
}
, function(e, t, n) {
    var r = n(3)
      , i = n(23);
    "string" == typeof (i = i.__esModule ? i.default : i) && (i = [[e.i, i, ""]]);
    var a = {
        insert: "head",
        singleton: !1
    };
    r(i, a);
    e.exports = i.locals || {}
}
, function(e, t, n) {
    (t = n(2)(!1)).push([e.i, ".button {\n  position: relative;\n  border-radius: 50%;\n  border: 0;\n  outline: none;\n  cursor: pointer;\n}\n\n.button * {\n  pointer-events: none;\n}\n\n.button > * {\n  position: absolute;\n  left: 0;\n  top: 0;\n  line-height: inherit;\n  width: inherit;\n}\n\n.button:not(.enabled) {\n  opacity: 0.5;\n  cursor: unset;\n}\n", ""]),
    e.exports = t
}
, function(e, t, n) {
    var r = n(3)
      , i = n(25);
    "string" == typeof (i = i.__esModule ? i.default : i) && (i = [[e.i, i, ""]]);
    var a = {
        insert: "head",
        singleton: !1
    };
    r(i, a);
    e.exports = i.locals || {}
}
, function(e, t, n) {
    (t = n(2)(!1)).push([e.i, ".range-label {\n  display: inline-block;\n  width: 60px;\n  text-align: right;\n  margin-right: 24px;\n}\n\n.range-wrapper {\n  display: inline-block;\n  position: relative;\n  width: 320px;\n  height: 20px;\n  pointer-events: all;\n}\n\n.range-visual {\n  pointer-events: none;\n  position: relative;\n  top: 5px;\n  left: 10px;\n  width: 300px;\n}\n\n.range-track {\n  position: absolute;\n  top: 3px;\n  width: 100%;\n  height: 4px;\n  border-radius: 200px;\n  background-color: #6d6d6d;\n}\n\n.range-progress {\n  position: absolute;\n  width: 0;\n  height: 4px;\n  border-radius: 200px;\n  background-color: #f5f4f3;\n}\n\n.range-thumb {\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  margin-top: -5px;\n  margin-left: -10px;\n  border-radius: 50%;\n  background-color: #f5f4f3;\n}\n\n.range-bubble {\n  transform: scale(0);\n  transition: transform 0.25s;\n}\n\n.range-wrapper:hover .range-bubble {\n  transform: scale(1);\n}\n\n.range-value {\n  position: absolute;\n  padding: 6px;\n  bottom: calc(100% + 8px);\n  left: 10px;\n  transform: translate(-50%, 0);\n  background-color: #6d6d6d;\n  border-radius: 6px;\n  color: #f5f4f3;\n  font-size: 12px;\n  line-height: 12px;\n}\n\n.range-value::after {\n  content: '';\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translate(-50%, 0);\n  border: 4px solid transparent;\n  border-top: 8px solid #6d6d6d;\n}\n\n.range-internal {\n  width: 100%;\n  margin-left: 0;\n  margin-right: 0;\n  opacity: 0;\n  cursor: grab;\n}\n", ""]),
    e.exports = t
}
, function(e, t, n) {
    var r = n(3)
      , i = n(27);
    "string" == typeof (i = i.__esModule ? i.default : i) && (i = [[e.i, i, ""]]);
    var a = {
        insert: "head",
        singleton: !1
    };
    r(i, a);
    e.exports = i.locals || {}
}
, function(e, t, n) {
    (t = n(2)(!1)).push([e.i, "/* Color */\n.color-selector {\n  opacity: 0;\n  padding: 0;\n}\n\n.color-preview::before {\n  font-family: 'labs-paint' !important;\n  speak: never;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  content: '\\e907';\n  position: absolute;\n  left: 0;\n  width: inherit;\n}\n\n.color-preview > input {\n  pointer-events: all;\n}\n\n.icon-dropper-outline {\n  color: black;\n}\n", ""]),
    e.exports = t
}
, function(e, t, n) {
    (function(e) {
        var r = void 0 !== e && e || "undefined" != typeof self && self || window
          , i = Function.prototype.apply;
        function a(e, t) {
            this._id = e,
            this._clearFn = t
        }
        t.setTimeout = function() {
            return new a(i.call(setTimeout, r, arguments),clearTimeout)
        }
        ,
        t.setInterval = function() {
            return new a(i.call(setInterval, r, arguments),clearInterval)
        }
        ,
        t.clearTimeout = t.clearInterval = function(e) {
            e && e.close()
        }
        ,
        a.prototype.unref = a.prototype.ref = function() {}
        ,
        a.prototype.close = function() {
            this._clearFn.call(r, this._id)
        }
        ,
        t.enroll = function(e, t) {
            clearTimeout(e._idleTimeoutId),
            e._idleTimeout = t
        }
        ,
        t.unenroll = function(e) {
            clearTimeout(e._idleTimeoutId),
            e._idleTimeout = -1
        }
        ,
        t._unrefActive = t.active = function(e) {
            clearTimeout(e._idleTimeoutId);
            var t = e._idleTimeout;
            t >= 0 && (e._idleTimeoutId = setTimeout((function() {
                e._onTimeout && e._onTimeout()
            }
            ), t))
        }
        ,
        n(29),
        t.setImmediate = "undefined" != typeof self && self.setImmediate || void 0 !== e && e.setImmediate || this && this.setImmediate,
        t.clearImmediate = "undefined" != typeof self && self.clearImmediate || void 0 !== e && e.clearImmediate || this && this.clearImmediate
    }
    ).call(this, n(4))
}
, function(e, t, n) {
    (function(e, t) {
        !function(e, n) {
            "use strict";
            if (!e.setImmediate) {
                var r, i, a, o, s, l = 1, u = {}, c = !1, h = e.document, d = Object.getPrototypeOf && Object.getPrototypeOf(e);
                d = d && d.setTimeout ? d : e,
                "[object process]" === {}.toString.call(e.process) ? r = function(e) {
                    t.nextTick((function() {
                        p(e)
                    }
                    ))
                }
                : !function() {
                    if (e.postMessage && !e.importScripts) {
                        var t = !0
                          , n = e.onmessage;
                        return e.onmessage = function() {
                            t = !1
                        }
                        ,
                        e.postMessage("", "*"),
                        e.onmessage = n,
                        t
                    }
                }() ? e.MessageChannel ? ((a = new MessageChannel).port1.onmessage = function(e) {
                    p(e.data)
                }
                ,
                r = function(e) {
                    a.port2.postMessage(e)
                }
                ) : h && "onreadystatechange"in h.createElement("script") ? (i = h.documentElement,
                r = function(e) {
                    var t = h.createElement("script");
                    t.onreadystatechange = function() {
                        p(e),
                        t.onreadystatechange = null,
                        i.removeChild(t),
                        t = null
                    }
                    ,
                    i.appendChild(t)
                }
                ) : r = function(e) {
                    setTimeout(p, 0, e)
                }
                : (o = "setImmediate$" + Math.random() + "$",
                s = function(t) {
                    t.source === e && "string" == typeof t.data && 0 === t.data.indexOf(o) && p(+t.data.slice(o.length))
                }
                ,
                e.addEventListener ? e.addEventListener("message", s, !1) : e.attachEvent("onmessage", s),
                r = function(t) {
                    e.postMessage(o + t, "*")
                }
                ),
                d.setImmediate = function(e) {
                    "function" != typeof e && (e = new Function("" + e));
                    for (var t = new Array(arguments.length - 1), n = 0; n < t.length; n++)
                        t[n] = arguments[n + 1];
                    var i = {
                        callback: e,
                        args: t
                    };
                    return u[l] = i,
                    r(l),
                    l++
                }
                ,
                d.clearImmediate = f
            }
            function f(e) {
                delete u[e]
            }
            function p(e) {
                if (c)
                    setTimeout(p, 0, e);
                else {
                    var t = u[e];
                    if (t) {
                        c = !0;
                        try {
                            !function(e) {
                                var t = e.callback
                                  , n = e.args;
                                switch (n.length) {
                                case 0:
                                    t();
                                    break;
                                case 1:
                                    t(n[0]);
                                    break;
                                case 2:
                                    t(n[0], n[1]);
                                    break;
                                case 3:
                                    t(n[0], n[1], n[2]);
                                    break;
                                default:
                                    t.apply(void 0, n)
                                }
                            }(t)
                        } finally {
                            f(e),
                            c = !1
                        }
                    }
                }
            }
        }("undefined" == typeof self ? void 0 === e ? this : e : self)
    }
    ).call(this, n(4), n(30))
}
, function(e, t) {
    var n, r, i = e.exports = {};
    function a() {
        throw new Error("setTimeout has not been defined")
    }
    function o() {
        throw new Error("clearTimeout has not been defined")
    }
    function s(e) {
        if (n === setTimeout)
            return setTimeout(e, 0);
        if ((n === a || !n) && setTimeout)
            return n = setTimeout,
            setTimeout(e, 0);
        try {
            return n(e, 0)
        } catch (t) {
            try {
                return n.call(null, e, 0)
            } catch (t) {
                return n.call(this, e, 0)
            }
        }
    }
    !function() {
        try {
            n = "function" == typeof setTimeout ? setTimeout : a
        } catch (e) {
            n = a
        }
        try {
            r = "function" == typeof clearTimeout ? clearTimeout : o
        } catch (e) {
            r = o
        }
    }();
    var l, u = [], c = !1, h = -1;
    function d() {
        c && l && (c = !1,
        l.length ? u = l.concat(u) : h = -1,
        u.length && f())
    }
    function f() {
        if (!c) {
            var e = s(d);
            c = !0;
            for (var t = u.length; t; ) {
                for (l = u,
                u = []; ++h < t; )
                    l && l[h].run();
                h = -1,
                t = u.length
            }
            l = null,
            c = !1,
            function(e) {
                if (r === clearTimeout)
                    return clearTimeout(e);
                if ((r === o || !r) && clearTimeout)
                    return r = clearTimeout,
                    clearTimeout(e);
                try {
                    r(e)
                } catch (t) {
                    try {
                        return r.call(null, e)
                    } catch (t) {
                        return r.call(this, e)
                    }
                }
            }(e)
        }
    }
    function p(e, t) {
        this.fun = e,
        this.array = t
    }
    function m() {}
    i.nextTick = function(e) {
        var t = new Array(arguments.length - 1);
        if (arguments.length > 1)
            for (var n = 1; n < arguments.length; n++)
                t[n - 1] = arguments[n];
        u.push(new p(e,t)),
        1 !== u.length || c || s(f)
    }
    ,
    p.prototype.run = function() {
        this.fun.apply(null, this.array)
    }
    ,
    i.title = "browser",
    i.browser = !0,
    i.env = {},
    i.argv = [],
    i.version = "",
    i.versions = {},
    i.on = m,
    i.addListener = m,
    i.once = m,
    i.off = m,
    i.removeListener = m,
    i.removeAllListeners = m,
    i.emit = m,
    i.prependListener = m,
    i.prependOnceListener = m,
    i.listeners = function(e) {
        return []
    }
    ,
    i.binding = function(e) {
        throw new Error("process.binding is not supported")
    }
    ,
    i.cwd = function() {
        return "/"
    }
    ,
    i.chdir = function(e) {
        throw new Error("process.chdir is not supported")
    }
    ,
    i.umask = function() {
        return 0
    }
}
, function(e, t, n) {
    var r = n(3)
      , i = n(32);
    "string" == typeof (i = i.__esModule ? i.default : i) && (i = [[e.i, i, ""]]);
    var a = {
        insert: "head",
        singleton: !1
    };
    r(i, a);
    e.exports = i.locals || {}
}
, function(e, t, n) {
    (t = n(2)(!1)).push([e.i, ".history-buttons-container {\n  position: fixed;\n  top: 40px;\n  right: 40px;\n  pointer-events: none;\n}\n\n.history-button {\n  display: inline-block;\n  height: 32px;\n  width: 96px;\n  color: white;\n  background-color: rgba(0, 0, 0, 0.7);\n  margin-left: 10px;\n  font-size: 14px;\n  text-align: center;\n  line-height: 32px;\n  border: 0;\n  border-radius: 4px;\n  pointer-events: all;\n}\n\n.history-button > * {\n  position: unset;\n}\n\n.history-button.enabled:hover {\n  background-color: rgba(0, 0, 0, 1.0);\n}\n\n.history-button .icon {\n  display: inline-block;\n  width: auto;\n  font-size: 24px;\n  margin-right: 8px;\n  vertical-align: middle;\n}\n\n.history-redo > .icon-history {\n  transform: scaleX(-1);\n}\n", ""]),
    e.exports = t
}
, function(e, t, n) {
    var r = n(3)
      , i = n(34);
    "string" == typeof (i = i.__esModule ? i.default : i) && (i = [[e.i, i, ""]]);
    var a = {
        insert: "head",
        singleton: !1
    };
    r(i, a);
    e.exports = i.locals || {}
}
, function(e, t, n) {
    (t = n(2)(!1)).push([e.i, ".texture-selector {\n  position: absolute;\n  left: 40px;\n  top: 40px;\n  width: 132px;\n  height: 32px;\n  max-height: 236px;\n  overflow: hidden;\n  transition: height 1s;\n}\n\n.texture-selector .header {\n  width: 100%;\n  height: 32px;\n  line-height: 32px;\n  background-color: #222;\n  color: white;\n  font-weight: 600;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n}\n\n.texture-selector .header .icon-chevron-down {\n  display: inline-block;\n  margin: 0 10px 0 20px;\n  font-size: 10px;\n  transform: rotate(-180deg);\n  transition: transform 1s;\n}\n\n.texture-selector:not(.expanded) .header .icon-chevron-down {\n  transform: rotate(0);\n}\n\n.swatch-drawer {\n  background-color: white;\n  padding: 8px 8px;\n}\n\n.swatch-drawer.expanded {\n  height: 236px;\n}\n\n.swatch {\n  border: solid 2px black;\n  width: 112px;\n  height: 24px;\n  margin: 8px 0;\n}\n\n.swatch.selected {\n  border-color: #ff3158;\n}\n", ""]),
    e.exports = t
}
, function(e, t, n) {
    "use strict";
    n.r(t);
    var r = {};
    n.r(r),
    n.d(r, "AppSaver", (function() {
        return Jc
    }
    )),
    n.d(r, "AppMsgType", (function() {
        return qc
    }
    ));
    var i = {};
    n.r(i),
    n.d(i, "AppSaveRequester", (function() {
        return nh
    }
    )),
    n.d(i, "openDb", (function() {
        return th
    }
    )),
    n.d(i, "PageMsgType", (function() {
        return Kc
    }
    )),
    n.d(i, "setupMockMessageButtons", (function() {
        return rh
    }
    ));
    n(9);
    var a = n(0)
      , o = n.n(a)
      , s = n(7);
    class l extends a.Component {
        render() {
            const e = "&apiHost=" + this.props.apiHost
              , t = "&applicationKey=" + this.props.applicationKey
              , n = `./bundle/showcase.html?m=${this.props.modelSid}${this.props.apiHost ? e : ""}${t}&hr=0&gt=0&play=1&dh=0&fp=0&title=0&mt=0`;
            return o.a.createElement("iframe", {
                ref: this.props.getRef,
                id: "sdk-iframe",
                src: n
            })
        }
    }
    var u = n(1)
      , c = n.n(u);
    n(20),
    n(22);
    function h(e) {
        e.preventDefault()
    }
    class d extends a.Component {
        render() {
            return o.a.createElement("div", {
                className: this.props.classNames,
                onClick: this.props.onClick,
                onContextMenu: h
            }, this.props.children)
        }
    }
    n(24);
    class f extends a.Component {
        constructor(e) {
            super(e),
            this.rangeRef = o.a.createRef(),
            this.thumbRef = o.a.createRef(),
            this.progressBarRef = o.a.createRef(),
            this.onRangeInput = ()=>this.props.onValueChange(parseFloat(this.rangeRef.current.value))
        }
        render() {
            const e = (this.props.value - this.props.min) / (this.props.max - this.props.min) * 100 + "%";
            return o.a.createElement("div", {
                className: "range-wrapper",
                onContextMenu: h
            }, o.a.createElement("div", {
                className: "range-visual"
            }, o.a.createElement("div", {
                className: "range-track"
            }, o.a.createElement("div", {
                ref: this.progressBarRef,
                className: "range-progress",
                style: {
                    width: e
                }
            })), o.a.createElement("div", {
                ref: this.thumbRef,
                className: "range-thumb",
                style: {
                    left: e
                }
            }, o.a.createElement("div", {
                className: "range-bubble"
            }, o.a.createElement("div", {
                className: "range-value"
            }, this.props.valueTextTransform(this.props.value))))), o.a.createElement("input", {
                ref: this.rangeRef,
                className: "range-internal",
                type: "range",
                min: this.props.min,
                max: this.props.max,
                step: this.props.step,
                value: this.props.value,
                onChange: this.onRangeInput
            }))
        }
    }
    (f || (f = {})).noTransform = function(e) {
        return e + ""
    }
    ;
    var p;
    n(26);
    class m extends a.Component {
        render() {
            return o.a.createElement("div", {
                className: c()("button tool-sub-button color-preview", {
                    selected: this.props.selected,
                    enabled: this.props.enabled
                }),
                onContextMenu: h
            }, o.a.createElement("input", {
                ref: this.props.colorRef,
                className: "button tool-sub-button color-selector enabled",
                type: "color",
                value: this.props.color,
                onChange: this.props.onChange,
                onClick: this.props.onClick,
                onBlur: this.props.onBlur
            }), o.a.createElement("div", {
                className: "icon icon-bucket-fill",
                style: {
                    color: this.props.color
                }
            }))
        }
    }
    !function(e) {
        e[e.NONE = 0] = "NONE",
        e[e.COLOR = 1] = "COLOR",
        e[e.BRUSH = 2] = "BRUSH",
        e[e.DROPPER = 3] = "DROPPER"
    }(p || (p = {}));
    class g extends a.Component {
        constructor(e) {
            super(e),
            this.colorRef = o.a.createRef(),
            this.toolChangeCallbacks = {
                [p.NONE]: ()=>this.props.paintToolControls.tool.onSelected(p.NONE),
                [p.COLOR]: ()=>this.props.paintToolControls.tool.onSelected(p.COLOR),
                [p.BRUSH]: ()=>this.props.paintToolControls.tool.onSelected(p.BRUSH),
                [p.DROPPER]: ()=>this.props.paintToolControls.tool.onSelected(p.DROPPER)
            },
            this.onColorBlurred = ()=>{
                this.props.toolSettings.activeTool === p.COLOR && this.props.paintToolControls.tool.onSelected(p.NONE)
            }
            ,
            this.colorChangeCallback = ()=>this.props.paintToolControls.color.onChanged(this.colorRef.current.value),
            this.brushWidthChangeCallback = e=>this.props.paintToolControls.size.onChanged(e),
            this.brushOpacityChangeCallback = e=>this.props.paintToolControls.opacity.onChanged(e),
            this.percentageTransform = e=>(100 * e).toFixed(0) + "%",
            this.inchTransform = e=>e.toFixed(1) + '"'
        }
        render() {
            const e = this.props.toolSettings.activeTool;
            return o.a.createElement(a.Fragment, null, o.a.createElement("div", {
                className: "paint-control-overlay"
            }, o.a.createElement("div", {
                className: "controls"
            }, o.a.createElement("div", {
                className: "tool-button-container"
            }, o.a.createElement(m, {
                colorRef: this.colorRef,
                selected: this.props.toolSettings.activeTool === p.COLOR,
                enabled: this.props.enabled,
                color: this.props.toolSettings.color,
                onChange: this.colorChangeCallback,
                onClick: this.toolChangeCallbacks[p.COLOR],
                onBlur: this.onColorBlurred
            }), o.a.createElement(d, {
                classNames: c()("button tool-button icon icon-brush", {
                    "icon-brush": e !== p.BRUSH,
                    "icon-checkmark": e === p.BRUSH,
                    selected: e === p.BRUSH,
                    enabled: this.props.enabled
                }),
                onClick: e !== p.BRUSH ? this.toolChangeCallbacks[p.BRUSH] : this.toolChangeCallbacks[p.NONE]
            }), o.a.createElement(d, {
                classNames: c()("button tool-sub-button icon icon-dropper", {
                    selected: e === p.DROPPER,
                    enabled: this.props.enabled
                }),
                onClick: e !== p.DROPPER ? this.toolChangeCallbacks[p.DROPPER] : this.toolChangeCallbacks[p.NONE]
            }, o.a.createElement("div", {
                className: c()("icon icon-dropper-outline")
            }), o.a.createElement("div", {
                className: c()("icon icon-dropper-fill"),
                style: {
                    color: this.props.toolSettings.color
                }
            }))), o.a.createElement("div", {
                className: "tool-options-container"
            }, e === p.BRUSH && this.getBrushControls()))))
        }
        getBrushControls() {
            return o.a.createElement(a.Fragment, null, this.props.paintToolControls.size.enabled && o.a.createElement("div", {
                className: "size-control"
            }, o.a.createElement("div", {
                className: "range-label"
            }, "Size"), o.a.createElement(f, {
                min: .5,
                max: 20,
                step: .5,
                value: this.props.toolSettings.size,
                onValueChange: this.brushWidthChangeCallback,
                valueTextTransform: this.inchTransform
            })), this.props.paintToolControls.opacity.enabled && o.a.createElement("div", {
                className: "opacity-control"
            }, o.a.createElement("div", {
                className: "range-label"
            }, "Opacity"), o.a.createElement(f, {
                min: 0,
                max: 1,
                step: .01,
                value: this.props.toolSettings.opacity,
                onValueChange: this.brushOpacityChangeCallback,
                valueTextTransform: this.percentageTransform
            })))
        }
    }
    a.Component;
    var v, y, b, x, w, _, E;
    !function(e) {
        e.NONE = "none",
        e.DEFAULT = "default",
        e.MOVE = "move",
        e.MOVE_LF = "col-resize",
        e.MOVE_UD = "row-resize",
        e.XHAIR = "crosshair",
        e.PLUS = "cell",
        e.QUESTION = "help",
        e.NOPE = "not-allowed",
        e.FINGER = "pointer",
        e.TEXT = "text",
        e.TEXT_VERT = "vertical-text",
        e.ZOOM_IN = "zoom-in",
        e.ZOOM_OUT = "zoom-in",
        e.GRAB = "grab",
        e.GRABBING = "grabbing",
        e.ARROW_R = "e-resize",
        e.ARROW_L = "w-resize",
        e.ARROW_U = "n-resize",
        e.ARROW_D = "s-resize",
        e.ARROW_UR = "ne-resize",
        e.ARROW_UL = "nw-resize",
        e.ARROW_DR = "se-resize",
        e.ARROW_DL = "sw-resize",
        e.ARROW_LR = "ew-resize",
        e.ARROW_UD = "ns-resize",
        e.ARROW_URDL = "nesw-resize",
        e.ARROW_ULDR = "nwse-resize",
        e.DROPPER = "mp-dropper"
    }(v || (v = {}));
    class T extends class {
    }
    {
    }
    !function(e) {
        e.CLICK = "INTERACTION.CLICK",
        e.HOVER = "INTERACTION.HOVER",
        e.DRAG = "INTERACTION.DRAG",
        e.DRAG_BEGIN = "INTERACTION.DRAG_BEGIN",
        e.DRAG_END = "INTERACTION.DRAG_END",
        e.POINTER_MOVE = "INTERACTION.POINTER_MOVE",
        e.POINTER_BUTTON = "INTERACTION.POINTER_BUTTON",
        e.SCROLL = "INTERACTION.SCROLL",
        e.KEY = "INTERACTION.KEY",
        e.LONG_PRESS_START = "INTERACTION.LONG_PRESS_START",
        e.LONG_PRESS_END = "INTERACTION.LONG_PRESS_END",
        e.MULTI_SWIPE = "INTERACTION.MULTI_SWIPE",
        e.MULTI_SWIPE_END = "INTERACTION.MULTI_SWIPE_END",
        e.PINCH = "INTERACTION.PINCH",
        e.PINCH_END = "INTERACTION.PINCH_END",
        e.ROTATE = "INTERACTION.ROTATE",
        e.ROTATE_END = "INTERACTION.ROTATE_END"
    }(y || (y = {}));
    !function(e) {
        e[e.PRIMARY = 0] = "PRIMARY",
        e[e.MIDDLE = 1] = "MIDDLE",
        e[e.SECONDARY = 2] = "SECONDARY",
        e[e.BACK = 3] = "BACK",
        e[e.FORWARD = 4] = "FORWARD",
        e[e.COUNT = 5] = "COUNT"
    }(b || (b = {})),
    function(e) {
        e[e.NONE = 0] = "NONE",
        e[e.PRIMARY = 1] = "PRIMARY",
        e[e.SECONDARY = 4] = "SECONDARY",
        e[e.MIDDLE = 2] = "MIDDLE",
        e[e.BACK = 8] = "BACK",
        e[e.FORWARD = 16] = "FORWARD",
        e[e.ALL = 31] = "ALL"
    }(x || (x = {})),
    function(e) {
        e.MOUSE = "mouse",
        e.TOUCH = "touch",
        e.PEN = "pen",
        e.GAMEPAD = "gamepad"
    }(w || (w = {})),
    function(e) {
        e[e.DOWN = 0] = "DOWN",
        e[e.PRESSED = 1] = "PRESSED",
        e[e.UP = 2] = "UP"
    }(_ || (_ = {})),
    function(e) {
        e[e.ESCAPE = 27] = "ESCAPE",
        e[e.ZERO = 48] = "ZERO",
        e[e.ONE = 49] = "ONE",
        e[e.TWO = 50] = "TWO",
        e[e.THREE = 51] = "THREE",
        e[e.FOUR = 52] = "FOUR",
        e[e.FIVE = 53] = "FIVE",
        e[e.SIX = 54] = "SIX",
        e[e.SEVEN = 55] = "SEVEN",
        e[e.EIGHT = 56] = "EIGHT",
        e[e.NINE = 57] = "NINE",
        e[e.LEFTARROW = 37] = "LEFTARROW",
        e[e.UPARROW = 38] = "UPARROW",
        e[e.RIGHTARROW = 39] = "RIGHTARROW",
        e[e.DOWNARROW = 40] = "DOWNARROW",
        e[e.TAB = 9] = "TAB",
        e[e.A = 65] = "A",
        e[e.B = 66] = "B",
        e[e.C = 67] = "C",
        e[e.D = 68] = "D",
        e[e.E = 69] = "E",
        e[e.F = 70] = "F",
        e[e.G = 71] = "G",
        e[e.H = 72] = "H",
        e[e.I = 73] = "I",
        e[e.J = 74] = "J",
        e[e.K = 75] = "K",
        e[e.L = 76] = "L",
        e[e.M = 77] = "M",
        e[e.N = 78] = "N",
        e[e.O = 79] = "O",
        e[e.P = 80] = "P",
        e[e.Q = 81] = "Q",
        e[e.R = 82] = "R",
        e[e.S = 83] = "S",
        e[e.T = 84] = "T",
        e[e.U = 85] = "U",
        e[e.V = 86] = "V",
        e[e.W = 87] = "W",
        e[e.X = 88] = "X",
        e[e.Y = 89] = "Y",
        e[e.Z = 90] = "Z",
        e[e.SPACE = 32] = "SPACE",
        e[e.RETURN = 13] = "RETURN",
        e[e.DELETE = 46] = "DELETE",
        e[e.BACKSPACE = 8] = "BACKSPACE",
        e[e.SEMICOLON = 186] = "SEMICOLON",
        e[e.PLUSEQUALS = 187] = "PLUSEQUALS",
        e[e.DASHUNDERSCORE = 189] = "DASHUNDERSCORE",
        e[e.OPENBRACKET = 219] = "OPENBRACKET",
        e[e.SHIFT = 16] = "SHIFT",
        e[e.ALT = 18] = "ALT",
        e[e.CONTROL = 17] = "CONTROL"
    }(E || (E = {}));
    void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
    void 0 === Number.isInteger && (Number.isInteger = function(e) {
        return "number" == typeof e && isFinite(e) && Math.floor(e) === e
    }
    ),
    void 0 === Math.sign && (Math.sign = function(e) {
        return e < 0 ? -1 : e > 0 ? 1 : +e
    }
    ),
    "name"in Function.prototype == !1 && Object.defineProperty(Function.prototype, "name", {
        get: function() {
            return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
        }
    }),
    void 0 === Object.assign && (Object.assign = function(e) {
        if (null == e)
            throw new TypeError("Cannot convert undefined or null to object");
        for (var t = Object(e), n = 1; n < arguments.length; n++) {
            var r = arguments[n];
            if (null != r)
                for (var i in r)
                    Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i])
        }
        return t
    }
    );
    function S() {}
    Object.assign(S.prototype, {
        addEventListener: function(e, t) {
            void 0 === this._listeners && (this._listeners = {});
            var n = this._listeners;
            void 0 === n[e] && (n[e] = []),
            -1 === n[e].indexOf(t) && n[e].push(t)
        },
        hasEventListener: function(e, t) {
            if (void 0 === this._listeners)
                return !1;
            var n = this._listeners;
            return void 0 !== n[e] && -1 !== n[e].indexOf(t)
        },
        removeEventListener: function(e, t) {
            if (void 0 !== this._listeners) {
                var n = this._listeners[e];
                if (void 0 !== n) {
                    var r = n.indexOf(t);
                    -1 !== r && n.splice(r, 1)
                }
            }
        },
        dispatchEvent: function(e) {
            if (void 0 !== this._listeners) {
                var t = this._listeners[e.type];
                if (void 0 !== t) {
                    e.target = this;
                    for (var n = t.slice(0), r = 0, i = n.length; r < i; r++)
                        n[r].call(this, e)
                }
            }
        }
    });
    for (var M = [], A = 0; A < 256; A++)
        M[A] = (A < 16 ? "0" : "") + A.toString(16);
    var R, L = {
        DEG2RAD: Math.PI / 180,
        RAD2DEG: 180 / Math.PI,
        generateUUID: function() {
            var e = 4294967295 * Math.random() | 0
              , t = 4294967295 * Math.random() | 0
              , n = 4294967295 * Math.random() | 0
              , r = 4294967295 * Math.random() | 0;
            return (M[255 & e] + M[e >> 8 & 255] + M[e >> 16 & 255] + M[e >> 24 & 255] + "-" + M[255 & t] + M[t >> 8 & 255] + "-" + M[t >> 16 & 15 | 64] + M[t >> 24 & 255] + "-" + M[63 & n | 128] + M[n >> 8 & 255] + "-" + M[n >> 16 & 255] + M[n >> 24 & 255] + M[255 & r] + M[r >> 8 & 255] + M[r >> 16 & 255] + M[r >> 24 & 255]).toUpperCase()
        },
        clamp: function(e, t, n) {
            return Math.max(t, Math.min(n, e))
        },
        euclideanModulo: function(e, t) {
            return (e % t + t) % t
        },
        mapLinear: function(e, t, n, r, i) {
            return r + (e - t) * (i - r) / (n - t)
        },
        lerp: function(e, t, n) {
            return (1 - n) * e + n * t
        },
        smoothstep: function(e, t, n) {
            return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * (3 - 2 * e)
        },
        smootherstep: function(e, t, n) {
            return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10)
        },
        randInt: function(e, t) {
            return e + Math.floor(Math.random() * (t - e + 1))
        },
        randFloat: function(e, t) {
            return e + Math.random() * (t - e)
        },
        randFloatSpread: function(e) {
            return e * (.5 - Math.random())
        },
        degToRad: function(e) {
            return e * L.DEG2RAD
        },
        radToDeg: function(e) {
            return e * L.RAD2DEG
        },
        isPowerOfTwo: function(e) {
            return 0 == (e & e - 1) && 0 !== e
        },
        ceilPowerOfTwo: function(e) {
            return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2))
        },
        floorPowerOfTwo: function(e) {
            return Math.pow(2, Math.floor(Math.log(e) / Math.LN2))
        },
        setQuaternionFromProperEuler: function(e, t, n, r, i) {
            var a = Math.cos
              , o = Math.sin
              , s = a(n / 2)
              , l = o(n / 2)
              , u = a((t + r) / 2)
              , c = o((t + r) / 2)
              , h = a((t - r) / 2)
              , d = o((t - r) / 2)
              , f = a((r - t) / 2)
              , p = o((r - t) / 2);
            "XYX" === i ? e.set(s * c, l * h, l * d, s * u) : "YZY" === i ? e.set(l * d, s * c, l * h, s * u) : "ZXZ" === i ? e.set(l * h, l * d, s * c, s * u) : "XZX" === i ? e.set(s * c, l * p, l * f, s * u) : "YXY" === i ? e.set(l * f, s * c, l * p, s * u) : "ZYZ" === i ? e.set(l * p, l * f, s * c, s * u) : console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order.")
        }
    };
    function C(e, t) {
        this.x = e || 0,
        this.y = t || 0
    }
    function P() {
        this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1],
        arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
    }
    Object.defineProperties(C.prototype, {
        width: {
            get: function() {
                return this.x
            },
            set: function(e) {
                this.x = e
            }
        },
        height: {
            get: function() {
                return this.y
            },
            set: function(e) {
                this.y = e
            }
        }
    }),
    Object.assign(C.prototype, {
        isVector2: !0,
        set: function(e, t) {
            return this.x = e,
            this.y = t,
            this
        },
        setScalar: function(e) {
            return this.x = e,
            this.y = e,
            this
        },
        setX: function(e) {
            return this.x = e,
            this
        },
        setY: function(e) {
            return this.y = e,
            this
        },
        setComponent: function(e, t) {
            switch (e) {
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            default:
                throw new Error("index is out of range: " + e)
            }
            return this
        },
        getComponent: function(e) {
            switch (e) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error("index is out of range: " + e)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y)
        },
        copy: function(e) {
            return this.x = e.x,
            this.y = e.y,
            this
        },
        add: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(e, t)) : (this.x += e.x,
            this.y += e.y,
            this)
        },
        addScalar: function(e) {
            return this.x += e,
            this.y += e,
            this
        },
        addVectors: function(e, t) {
            return this.x = e.x + t.x,
            this.y = e.y + t.y,
            this
        },
        addScaledVector: function(e, t) {
            return this.x += e.x * t,
            this.y += e.y * t,
            this
        },
        sub: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(e, t)) : (this.x -= e.x,
            this.y -= e.y,
            this)
        },
        subScalar: function(e) {
            return this.x -= e,
            this.y -= e,
            this
        },
        subVectors: function(e, t) {
            return this.x = e.x - t.x,
            this.y = e.y - t.y,
            this
        },
        multiply: function(e) {
            return this.x *= e.x,
            this.y *= e.y,
            this
        },
        multiplyScalar: function(e) {
            return this.x *= e,
            this.y *= e,
            this
        },
        divide: function(e) {
            return this.x /= e.x,
            this.y /= e.y,
            this
        },
        divideScalar: function(e) {
            return this.multiplyScalar(1 / e)
        },
        applyMatrix3: function(e) {
            var t = this.x
              , n = this.y
              , r = e.elements;
            return this.x = r[0] * t + r[3] * n + r[6],
            this.y = r[1] * t + r[4] * n + r[7],
            this
        },
        min: function(e) {
            return this.x = Math.min(this.x, e.x),
            this.y = Math.min(this.y, e.y),
            this
        },
        max: function(e) {
            return this.x = Math.max(this.x, e.x),
            this.y = Math.max(this.y, e.y),
            this
        },
        clamp: function(e, t) {
            return this.x = Math.max(e.x, Math.min(t.x, this.x)),
            this.y = Math.max(e.y, Math.min(t.y, this.y)),
            this
        },
        clampScalar: function(e, t) {
            return this.x = Math.max(e, Math.min(t, this.x)),
            this.y = Math.max(e, Math.min(t, this.y)),
            this
        },
        clampLength: function(e, t) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this
        },
        dot: function(e) {
            return this.x * e.x + this.y * e.y
        },
        cross: function(e) {
            return this.x * e.y - this.y * e.x
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        angle: function() {
            return Math.atan2(-this.y, -this.x) + Math.PI
        },
        distanceTo: function(e) {
            return Math.sqrt(this.distanceToSquared(e))
        },
        distanceToSquared: function(e) {
            var t = this.x - e.x
              , n = this.y - e.y;
            return t * t + n * n
        },
        manhattanDistanceTo: function(e) {
            return Math.abs(this.x - e.x) + Math.abs(this.y - e.y)
        },
        setLength: function(e) {
            return this.normalize().multiplyScalar(e)
        },
        lerp: function(e, t) {
            return this.x += (e.x - this.x) * t,
            this.y += (e.y - this.y) * t,
            this
        },
        lerpVectors: function(e, t, n) {
            return this.subVectors(t, e).multiplyScalar(n).add(e)
        },
        equals: function(e) {
            return e.x === this.x && e.y === this.y
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0),
            this.x = e[t],
            this.y = e[t + 1],
            this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []),
            void 0 === t && (t = 0),
            e[t] = this.x,
            e[t + 1] = this.y,
            e
        },
        fromBufferAttribute: function(e, t, n) {
            return void 0 !== n && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),
            this.x = e.getX(t),
            this.y = e.getY(t),
            this
        },
        rotateAround: function(e, t) {
            var n = Math.cos(t)
              , r = Math.sin(t)
              , i = this.x - e.x
              , a = this.y - e.y;
            return this.x = i * n - a * r + e.x,
            this.y = i * r + a * n + e.y,
            this
        }
    }),
    Object.assign(P.prototype, {
        isMatrix3: !0,
        set: function(e, t, n, r, i, a, o, s, l) {
            var u = this.elements;
            return u[0] = e,
            u[1] = r,
            u[2] = o,
            u[3] = t,
            u[4] = i,
            u[5] = s,
            u[6] = n,
            u[7] = a,
            u[8] = l,
            this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
            this
        },
        clone: function() {
            return (new this.constructor).fromArray(this.elements)
        },
        copy: function(e) {
            var t = this.elements
              , n = e.elements;
            return t[0] = n[0],
            t[1] = n[1],
            t[2] = n[2],
            t[3] = n[3],
            t[4] = n[4],
            t[5] = n[5],
            t[6] = n[6],
            t[7] = n[7],
            t[8] = n[8],
            this
        },
        extractBasis: function(e, t, n) {
            return e.setFromMatrix3Column(this, 0),
            t.setFromMatrix3Column(this, 1),
            n.setFromMatrix3Column(this, 2),
            this
        },
        setFromMatrix4: function(e) {
            var t = e.elements;
            return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]),
            this
        },
        multiply: function(e) {
            return this.multiplyMatrices(this, e)
        },
        premultiply: function(e) {
            return this.multiplyMatrices(e, this)
        },
        multiplyMatrices: function(e, t) {
            var n = e.elements
              , r = t.elements
              , i = this.elements
              , a = n[0]
              , o = n[3]
              , s = n[6]
              , l = n[1]
              , u = n[4]
              , c = n[7]
              , h = n[2]
              , d = n[5]
              , f = n[8]
              , p = r[0]
              , m = r[3]
              , g = r[6]
              , v = r[1]
              , y = r[4]
              , b = r[7]
              , x = r[2]
              , w = r[5]
              , _ = r[8];
            return i[0] = a * p + o * v + s * x,
            i[3] = a * m + o * y + s * w,
            i[6] = a * g + o * b + s * _,
            i[1] = l * p + u * v + c * x,
            i[4] = l * m + u * y + c * w,
            i[7] = l * g + u * b + c * _,
            i[2] = h * p + d * v + f * x,
            i[5] = h * m + d * y + f * w,
            i[8] = h * g + d * b + f * _,
            this
        },
        multiplyScalar: function(e) {
            var t = this.elements;
            return t[0] *= e,
            t[3] *= e,
            t[6] *= e,
            t[1] *= e,
            t[4] *= e,
            t[7] *= e,
            t[2] *= e,
            t[5] *= e,
            t[8] *= e,
            this
        },
        determinant: function() {
            var e = this.elements
              , t = e[0]
              , n = e[1]
              , r = e[2]
              , i = e[3]
              , a = e[4]
              , o = e[5]
              , s = e[6]
              , l = e[7]
              , u = e[8];
            return t * a * u - t * o * l - n * i * u + n * o * s + r * i * l - r * a * s
        },
        getInverse: function(e, t) {
            void 0 !== t && console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");
            var n = e.elements
              , r = this.elements
              , i = n[0]
              , a = n[1]
              , o = n[2]
              , s = n[3]
              , l = n[4]
              , u = n[5]
              , c = n[6]
              , h = n[7]
              , d = n[8]
              , f = d * l - u * h
              , p = u * c - d * s
              , m = h * s - l * c
              , g = i * f + a * p + o * m;
            if (0 === g)
                return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
            var v = 1 / g;
            return r[0] = f * v,
            r[1] = (o * h - d * a) * v,
            r[2] = (u * a - o * l) * v,
            r[3] = p * v,
            r[4] = (d * i - o * c) * v,
            r[5] = (o * s - u * i) * v,
            r[6] = m * v,
            r[7] = (a * c - h * i) * v,
            r[8] = (l * i - a * s) * v,
            this
        },
        transpose: function() {
            var e, t = this.elements;
            return e = t[1],
            t[1] = t[3],
            t[3] = e,
            e = t[2],
            t[2] = t[6],
            t[6] = e,
            e = t[5],
            t[5] = t[7],
            t[7] = e,
            this
        },
        getNormalMatrix: function(e) {
            return this.setFromMatrix4(e).getInverse(this).transpose()
        },
        transposeIntoArray: function(e) {
            var t = this.elements;
            return e[0] = t[0],
            e[1] = t[3],
            e[2] = t[6],
            e[3] = t[1],
            e[4] = t[4],
            e[5] = t[7],
            e[6] = t[2],
            e[7] = t[5],
            e[8] = t[8],
            this
        },
        setUvTransform: function(e, t, n, r, i, a, o) {
            var s = Math.cos(i)
              , l = Math.sin(i);
            this.set(n * s, n * l, -n * (s * a + l * o) + a + e, -r * l, r * s, -r * (-l * a + s * o) + o + t, 0, 0, 1)
        },
        scale: function(e, t) {
            var n = this.elements;
            return n[0] *= e,
            n[3] *= e,
            n[6] *= e,
            n[1] *= t,
            n[4] *= t,
            n[7] *= t,
            this
        },
        rotate: function(e) {
            var t = Math.cos(e)
              , n = Math.sin(e)
              , r = this.elements
              , i = r[0]
              , a = r[3]
              , o = r[6]
              , s = r[1]
              , l = r[4]
              , u = r[7];
            return r[0] = t * i + n * s,
            r[3] = t * a + n * l,
            r[6] = t * o + n * u,
            r[1] = -n * i + t * s,
            r[4] = -n * a + t * l,
            r[7] = -n * o + t * u,
            this
        },
        translate: function(e, t) {
            var n = this.elements;
            return n[0] += e * n[2],
            n[3] += e * n[5],
            n[6] += e * n[8],
            n[1] += t * n[2],
            n[4] += t * n[5],
            n[7] += t * n[8],
            this
        },
        equals: function(e) {
            for (var t = this.elements, n = e.elements, r = 0; r < 9; r++)
                if (t[r] !== n[r])
                    return !1;
            return !0
        },
        fromArray: function(e, t) {
            void 0 === t && (t = 0);
            for (var n = 0; n < 9; n++)
                this.elements[n] = e[n + t];
            return this
        },
        toArray: function(e, t) {
            void 0 === e && (e = []),
            void 0 === t && (t = 0);
            var n = this.elements;
            return e[t] = n[0],
            e[t + 1] = n[1],
            e[t + 2] = n[2],
            e[t + 3] = n[3],
            e[t + 4] = n[4],
            e[t + 5] = n[5],
            e[t + 6] = n[6],
            e[t + 7] = n[7],
            e[t + 8] = n[8],
            e
        }
    });
    var O = {
        getDataURL: function(e) {
            var t;
            if ("undefined" == typeof HTMLCanvasElement)
                return e.src;
            if (e instanceof HTMLCanvasElement)
                t = e;
            else {
                void 0 === R && (R = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")),
                R.width = e.width,
                R.height = e.height;
                var n = R.getContext("2d");
                e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height),
                t = R
            }
            return t.width > 2048 || t.height > 2048 ? t.toDataURL("image/jpeg", .6) : t.toDataURL("image/png")
        }
    }
      , k = 0;
    function D(e, t, n, r, i, a, o, s, l, u) {
        Object.defineProperty(this, "id", {
            value: k++
        }),
        this.uuid = L.generateUUID(),
        this.name = "",
        this.image = void 0 !== e ? e : D.DEFAULT_IMAGE,
        this.mipmaps = [],
        this.mapping = void 0 !== t ? t : D.DEFAULT_MAPPING,
        this.wrapS = void 0 !== n ? n : 1001,
        this.wrapT = void 0 !== r ? r : 1001,
        this.magFilter = void 0 !== i ? i : 1006,
        this.minFilter = void 0 !== a ? a : 1008,
        this.anisotropy = void 0 !== l ? l : 1,
        this.format = void 0 !== o ? o : 1023,
        this.internalFormat = null,
        this.type = void 0 !== s ? s : 1009,
        this.offset = new C(0,0),
        this.repeat = new C(1,1),
        this.center = new C(0,0),
        this.rotation = 0,
        this.matrixAutoUpdate = !0,
        this.matrix = new P,
        this.generateMipmaps = !0,
        this.premultiplyAlpha = !1,
        this.flipY = !0,
        this.unpackAlignment = 4,
        this.encoding = void 0 !== u ? u : 3e3,
        this.version = 0,
        this.onUpdate = null
    }
    function I(e, t, n, r) {
        this.x = e || 0,
        this.y = t || 0,
        this.z = n || 0,
        this.w = void 0 !== r ? r : 1
    }
    function N(e, t, n) {
        this.width = e,
        this.height = t,
        this.scissor = new I(0,0,e,t),
        this.scissorTest = !1,
        this.viewport = new I(0,0,e,t),
        n = n || {},
        this.texture = new D(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),
        this.texture.image = {},
        this.texture.image.width = e,
        this.texture.image.height = t,
        this.texture.generateMipmaps = void 0 !== n.generateMipmaps && n.generateMipmaps,
        this.texture.minFilter = void 0 !== n.minFilter ? n.minFilter : 1006,
        this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer,
        this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer,
        this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null
    }
    function F(e, t, n) {
        N.call(this, e, t, n),
        this.samples = 4
    }
    function U(e, t, n, r) {
        this._x = e || 0,
        this._y = t || 0,
        this._z = n || 0,
        this._w = void 0 !== r ? r : 1
    }
    D.DEFAULT_IMAGE = void 0,
    D.DEFAULT_MAPPING = 300,
    D.prototype = Object.assign(Object.create(S.prototype), {
        constructor: D,
        isTexture: !0,
        updateMatrix: function() {
            this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.name = e.name,
            this.image = e.image,
            this.mipmaps = e.mipmaps.slice(0),
            this.mapping = e.mapping,
            this.wrapS = e.wrapS,
            this.wrapT = e.wrapT,
            this.magFilter = e.magFilter,
            this.minFilter = e.minFilter,
            this.anisotropy = e.anisotropy,
            this.format = e.format,
            this.internalFormat = e.internalFormat,
            this.type = e.type,
            this.offset.copy(e.offset),
            this.repeat.copy(e.repeat),
            this.center.copy(e.center),
            this.rotation = e.rotation,
            this.matrixAutoUpdate = e.matrixAutoUpdate,
            this.matrix.copy(e.matrix),
            this.generateMipmaps = e.generateMipmaps,
            this.premultiplyAlpha = e.premultiplyAlpha,
            this.flipY = e.flipY,
            this.unpackAlignment = e.unpackAlignment,
            this.encoding = e.encoding,
            this
        },
        toJSON: function(e) {
            var t = void 0 === e || "string" == typeof e;
            if (!t && void 0 !== e.textures[this.uuid])
                return e.textures[this.uuid];
            var n = {
                metadata: {
                    version: 4.5,
                    type: "Texture",
                    generator: "Texture.toJSON"
                },
                uuid: this.uuid,
                name: this.name,
                mapping: this.mapping,
                repeat: [this.repeat.x, this.repeat.y],
                offset: [this.offset.x, this.offset.y],
                center: [this.center.x, this.center.y],
                rotation: this.rotation,
                wrap: [this.wrapS, this.wrapT],
                format: this.format,
                type: this.type,
                encoding: this.encoding,
                minFilter: this.minFilter,
                magFilter: this.magFilter,
                anisotropy: this.anisotropy,
                flipY: this.flipY,
                premultiplyAlpha: this.premultiplyAlpha,
                unpackAlignment: this.unpackAlignment
            };
            if (void 0 !== this.image) {
                var r = this.image;
                if (void 0 === r.uuid && (r.uuid = L.generateUUID()),
                !t && void 0 === e.images[r.uuid]) {
                    var i;
                    if (Array.isArray(r)) {
                        i = [];
                        for (var a = 0, o = r.length; a < o; a++)
                            i.push(O.getDataURL(r[a]))
                    } else
                        i = O.getDataURL(r);
                    e.images[r.uuid] = {
                        uuid: r.uuid,
                        url: i
                    }
                }
                n.image = r.uuid
            }
            return t || (e.textures[this.uuid] = n),
            n
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        },
        transformUv: function(e) {
            if (300 !== this.mapping)
                return e;
            if (e.applyMatrix3(this.matrix),
            e.x < 0 || e.x > 1)
                switch (this.wrapS) {
                case 1e3:
                    e.x = e.x - Math.floor(e.x);
                    break;
                case 1001:
                    e.x = e.x < 0 ? 0 : 1;
                    break;
                case 1002:
                    1 === Math.abs(Math.floor(e.x) % 2) ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x)
                }
            if (e.y < 0 || e.y > 1)
                switch (this.wrapT) {
                case 1e3:
                    e.y = e.y - Math.floor(e.y);
                    break;
                case 1001:
                    e.y = e.y < 0 ? 0 : 1;
                    break;
                case 1002:
                    1 === Math.abs(Math.floor(e.y) % 2) ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y)
                }
            return this.flipY && (e.y = 1 - e.y),
            e
        }
    }),
    Object.defineProperty(D.prototype, "needsUpdate", {
        set: function(e) {
            !0 === e && this.version++
        }
    }),
    Object.defineProperties(I.prototype, {
        width: {
            get: function() {
                return this.z
            },
            set: function(e) {
                this.z = e
            }
        },
        height: {
            get: function() {
                return this.w
            },
            set: function(e) {
                this.w = e
            }
        }
    }),
    Object.assign(I.prototype, {
        isVector4: !0,
        set: function(e, t, n, r) {
            return this.x = e,
            this.y = t,
            this.z = n,
            this.w = r,
            this
        },
        setScalar: function(e) {
            return this.x = e,
            this.y = e,
            this.z = e,
            this.w = e,
            this
        },
        setX: function(e) {
            return this.x = e,
            this
        },
        setY: function(e) {
            return this.y = e,
            this
        },
        setZ: function(e) {
            return this.z = e,
            this
        },
        setW: function(e) {
            return this.w = e,
            this
        },
        setComponent: function(e, t) {
            switch (e) {
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            case 3:
                this.w = t;
                break;
            default:
                throw new Error("index is out of range: " + e)
            }
            return this
        },
        getComponent: function(e) {
            switch (e) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error("index is out of range: " + e)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y,this.z,this.w)
        },
        copy: function(e) {
            return this.x = e.x,
            this.y = e.y,
            this.z = e.z,
            this.w = void 0 !== e.w ? e.w : 1,
            this
        },
        add: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(e, t)) : (this.x += e.x,
            this.y += e.y,
            this.z += e.z,
            this.w += e.w,
            this)
        },
        addScalar: function(e) {
            return this.x += e,
            this.y += e,
            this.z += e,
            this.w += e,
            this
        },
        addVectors: function(e, t) {
            return this.x = e.x + t.x,
            this.y = e.y + t.y,
            this.z = e.z + t.z,
            this.w = e.w + t.w,
            this
        },
        addScaledVector: function(e, t) {
            return this.x += e.x * t,
            this.y += e.y * t,
            this.z += e.z * t,
            this.w += e.w * t,
            this
        },
        sub: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(e, t)) : (this.x -= e.x,
            this.y -= e.y,
            this.z -= e.z,
            this.w -= e.w,
            this)
        },
        subScalar: function(e) {
            return this.x -= e,
            this.y -= e,
            this.z -= e,
            this.w -= e,
            this
        },
        subVectors: function(e, t) {
            return this.x = e.x - t.x,
            this.y = e.y - t.y,
            this.z = e.z - t.z,
            this.w = e.w - t.w,
            this
        },
        multiplyScalar: function(e) {
            return this.x *= e,
            this.y *= e,
            this.z *= e,
            this.w *= e,
            this
        },
        applyMatrix4: function(e) {
            var t = this.x
              , n = this.y
              , r = this.z
              , i = this.w
              , a = e.elements;
            return this.x = a[0] * t + a[4] * n + a[8] * r + a[12] * i,
            this.y = a[1] * t + a[5] * n + a[9] * r + a[13] * i,
            this.z = a[2] * t + a[6] * n + a[10] * r + a[14] * i,
            this.w = a[3] * t + a[7] * n + a[11] * r + a[15] * i,
            this
        },
        divideScalar: function(e) {
            return this.multiplyScalar(1 / e)
        },
        setAxisAngleFromQuaternion: function(e) {
            this.w = 2 * Math.acos(e.w);
            var t = Math.sqrt(1 - e.w * e.w);
            return t < 1e-4 ? (this.x = 1,
            this.y = 0,
            this.z = 0) : (this.x = e.x / t,
            this.y = e.y / t,
            this.z = e.z / t),
            this
        },
        setAxisAngleFromRotationMatrix: function(e) {
            var t, n, r, i, a = e.elements, o = a[0], s = a[4], l = a[8], u = a[1], c = a[5], h = a[9], d = a[2], f = a[6], p = a[10];
            if (Math.abs(s - u) < .01 && Math.abs(l - d) < .01 && Math.abs(h - f) < .01) {
                if (Math.abs(s + u) < .1 && Math.abs(l + d) < .1 && Math.abs(h + f) < .1 && Math.abs(o + c + p - 3) < .1)
                    return this.set(1, 0, 0, 0),
                    this;
                t = Math.PI;
                var m = (o + 1) / 2
                  , g = (c + 1) / 2
                  , v = (p + 1) / 2
                  , y = (s + u) / 4
                  , b = (l + d) / 4
                  , x = (h + f) / 4;
                return m > g && m > v ? m < .01 ? (n = 0,
                r = .707106781,
                i = .707106781) : (r = y / (n = Math.sqrt(m)),
                i = b / n) : g > v ? g < .01 ? (n = .707106781,
                r = 0,
                i = .707106781) : (n = y / (r = Math.sqrt(g)),
                i = x / r) : v < .01 ? (n = .707106781,
                r = .707106781,
                i = 0) : (n = b / (i = Math.sqrt(v)),
                r = x / i),
                this.set(n, r, i, t),
                this
            }
            var w = Math.sqrt((f - h) * (f - h) + (l - d) * (l - d) + (u - s) * (u - s));
            return Math.abs(w) < .001 && (w = 1),
            this.x = (f - h) / w,
            this.y = (l - d) / w,
            this.z = (u - s) / w,
            this.w = Math.acos((o + c + p - 1) / 2),
            this
        },
        min: function(e) {
            return this.x = Math.min(this.x, e.x),
            this.y = Math.min(this.y, e.y),
            this.z = Math.min(this.z, e.z),
            this.w = Math.min(this.w, e.w),
            this
        },
        max: function(e) {
            return this.x = Math.max(this.x, e.x),
            this.y = Math.max(this.y, e.y),
            this.z = Math.max(this.z, e.z),
            this.w = Math.max(this.w, e.w),
            this
        },
        clamp: function(e, t) {
            return this.x = Math.max(e.x, Math.min(t.x, this.x)),
            this.y = Math.max(e.y, Math.min(t.y, this.y)),
            this.z = Math.max(e.z, Math.min(t.z, this.z)),
            this.w = Math.max(e.w, Math.min(t.w, this.w)),
            this
        },
        clampScalar: function(e, t) {
            return this.x = Math.max(e, Math.min(t, this.x)),
            this.y = Math.max(e, Math.min(t, this.y)),
            this.z = Math.max(e, Math.min(t, this.z)),
            this.w = Math.max(e, Math.min(t, this.w)),
            this
        },
        clampLength: function(e, t) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this.z = Math.floor(this.z),
            this.w = Math.floor(this.w),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this.z = Math.ceil(this.z),
            this.w = Math.ceil(this.w),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this.z = Math.round(this.z),
            this.w = Math.round(this.w),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
            this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this.z = -this.z,
            this.w = -this.w,
            this
        },
        dot: function(e) {
            return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        setLength: function(e) {
            return this.normalize().multiplyScalar(e)
        },
        lerp: function(e, t) {
            return this.x += (e.x - this.x) * t,
            this.y += (e.y - this.y) * t,
            this.z += (e.z - this.z) * t,
            this.w += (e.w - this.w) * t,
            this
        },
        lerpVectors: function(e, t, n) {
            return this.subVectors(t, e).multiplyScalar(n).add(e)
        },
        equals: function(e) {
            return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0),
            this.x = e[t],
            this.y = e[t + 1],
            this.z = e[t + 2],
            this.w = e[t + 3],
            this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []),
            void 0 === t && (t = 0),
            e[t] = this.x,
            e[t + 1] = this.y,
            e[t + 2] = this.z,
            e[t + 3] = this.w,
            e
        },
        fromBufferAttribute: function(e, t, n) {
            return void 0 !== n && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),
            this.x = e.getX(t),
            this.y = e.getY(t),
            this.z = e.getZ(t),
            this.w = e.getW(t),
            this
        }
    }),
    N.prototype = Object.assign(Object.create(S.prototype), {
        constructor: N,
        isWebGLRenderTarget: !0,
        setSize: function(e, t) {
            this.width === e && this.height === t || (this.width = e,
            this.height = t,
            this.texture.image.width = e,
            this.texture.image.height = t,
            this.dispose()),
            this.viewport.set(0, 0, e, t),
            this.scissor.set(0, 0, e, t)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.width = e.width,
            this.height = e.height,
            this.viewport.copy(e.viewport),
            this.texture = e.texture.clone(),
            this.depthBuffer = e.depthBuffer,
            this.stencilBuffer = e.stencilBuffer,
            this.depthTexture = e.depthTexture,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    F.prototype = Object.assign(Object.create(N.prototype), {
        constructor: F,
        isWebGLMultisampleRenderTarget: !0,
        copy: function(e) {
            return N.prototype.copy.call(this, e),
            this.samples = e.samples,
            this
        }
    }),
    Object.assign(U, {
        slerp: function(e, t, n, r) {
            return n.copy(e).slerp(t, r)
        },
        slerpFlat: function(e, t, n, r, i, a, o) {
            var s = n[r + 0]
              , l = n[r + 1]
              , u = n[r + 2]
              , c = n[r + 3]
              , h = i[a + 0]
              , d = i[a + 1]
              , f = i[a + 2]
              , p = i[a + 3];
            if (c !== p || s !== h || l !== d || u !== f) {
                var m = 1 - o
                  , g = s * h + l * d + u * f + c * p
                  , v = g >= 0 ? 1 : -1
                  , y = 1 - g * g;
                if (y > Number.EPSILON) {
                    var b = Math.sqrt(y)
                      , x = Math.atan2(b, g * v);
                    m = Math.sin(m * x) / b,
                    o = Math.sin(o * x) / b
                }
                var w = o * v;
                if (s = s * m + h * w,
                l = l * m + d * w,
                u = u * m + f * w,
                c = c * m + p * w,
                m === 1 - o) {
                    var _ = 1 / Math.sqrt(s * s + l * l + u * u + c * c);
                    s *= _,
                    l *= _,
                    u *= _,
                    c *= _
                }
            }
            e[t] = s,
            e[t + 1] = l,
            e[t + 2] = u,
            e[t + 3] = c
        }
    }),
    Object.defineProperties(U.prototype, {
        x: {
            get: function() {
                return this._x
            },
            set: function(e) {
                this._x = e,
                this._onChangeCallback()
            }
        },
        y: {
            get: function() {
                return this._y
            },
            set: function(e) {
                this._y = e,
                this._onChangeCallback()
            }
        },
        z: {
            get: function() {
                return this._z
            },
            set: function(e) {
                this._z = e,
                this._onChangeCallback()
            }
        },
        w: {
            get: function() {
                return this._w
            },
            set: function(e) {
                this._w = e,
                this._onChangeCallback()
            }
        }
    }),
    Object.assign(U.prototype, {
        isQuaternion: !0,
        set: function(e, t, n, r) {
            return this._x = e,
            this._y = t,
            this._z = n,
            this._w = r,
            this._onChangeCallback(),
            this
        },
        clone: function() {
            return new this.constructor(this._x,this._y,this._z,this._w)
        },
        copy: function(e) {
            return this._x = e.x,
            this._y = e.y,
            this._z = e.z,
            this._w = e.w,
            this._onChangeCallback(),
            this
        },
        setFromEuler: function(e, t) {
            if (!e || !e.isEuler)
                throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
            var n = e._x
              , r = e._y
              , i = e._z
              , a = e.order
              , o = Math.cos
              , s = Math.sin
              , l = o(n / 2)
              , u = o(r / 2)
              , c = o(i / 2)
              , h = s(n / 2)
              , d = s(r / 2)
              , f = s(i / 2);
            return "XYZ" === a ? (this._x = h * u * c + l * d * f,
            this._y = l * d * c - h * u * f,
            this._z = l * u * f + h * d * c,
            this._w = l * u * c - h * d * f) : "YXZ" === a ? (this._x = h * u * c + l * d * f,
            this._y = l * d * c - h * u * f,
            this._z = l * u * f - h * d * c,
            this._w = l * u * c + h * d * f) : "ZXY" === a ? (this._x = h * u * c - l * d * f,
            this._y = l * d * c + h * u * f,
            this._z = l * u * f + h * d * c,
            this._w = l * u * c - h * d * f) : "ZYX" === a ? (this._x = h * u * c - l * d * f,
            this._y = l * d * c + h * u * f,
            this._z = l * u * f - h * d * c,
            this._w = l * u * c + h * d * f) : "YZX" === a ? (this._x = h * u * c + l * d * f,
            this._y = l * d * c + h * u * f,
            this._z = l * u * f - h * d * c,
            this._w = l * u * c - h * d * f) : "XZY" === a && (this._x = h * u * c - l * d * f,
            this._y = l * d * c - h * u * f,
            this._z = l * u * f + h * d * c,
            this._w = l * u * c + h * d * f),
            !1 !== t && this._onChangeCallback(),
            this
        },
        setFromAxisAngle: function(e, t) {
            var n = t / 2
              , r = Math.sin(n);
            return this._x = e.x * r,
            this._y = e.y * r,
            this._z = e.z * r,
            this._w = Math.cos(n),
            this._onChangeCallback(),
            this
        },
        setFromRotationMatrix: function(e) {
            var t, n = e.elements, r = n[0], i = n[4], a = n[8], o = n[1], s = n[5], l = n[9], u = n[2], c = n[6], h = n[10], d = r + s + h;
            return d > 0 ? (t = .5 / Math.sqrt(d + 1),
            this._w = .25 / t,
            this._x = (c - l) * t,
            this._y = (a - u) * t,
            this._z = (o - i) * t) : r > s && r > h ? (t = 2 * Math.sqrt(1 + r - s - h),
            this._w = (c - l) / t,
            this._x = .25 * t,
            this._y = (i + o) / t,
            this._z = (a + u) / t) : s > h ? (t = 2 * Math.sqrt(1 + s - r - h),
            this._w = (a - u) / t,
            this._x = (i + o) / t,
            this._y = .25 * t,
            this._z = (l + c) / t) : (t = 2 * Math.sqrt(1 + h - r - s),
            this._w = (o - i) / t,
            this._x = (a + u) / t,
            this._y = (l + c) / t,
            this._z = .25 * t),
            this._onChangeCallback(),
            this
        },
        setFromUnitVectors: function(e, t) {
            var n = e.dot(t) + 1;
            return n < 1e-6 ? (n = 0,
            Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y,
            this._y = e.x,
            this._z = 0,
            this._w = n) : (this._x = 0,
            this._y = -e.z,
            this._z = e.y,
            this._w = n)) : (this._x = e.y * t.z - e.z * t.y,
            this._y = e.z * t.x - e.x * t.z,
            this._z = e.x * t.y - e.y * t.x,
            this._w = n),
            this.normalize()
        },
        angleTo: function(e) {
            return 2 * Math.acos(Math.abs(L.clamp(this.dot(e), -1, 1)))
        },
        rotateTowards: function(e, t) {
            var n = this.angleTo(e);
            if (0 === n)
                return this;
            var r = Math.min(1, t / n);
            return this.slerp(e, r),
            this
        },
        inverse: function() {
            return this.conjugate()
        },
        conjugate: function() {
            return this._x *= -1,
            this._y *= -1,
            this._z *= -1,
            this._onChangeCallback(),
            this
        },
        dot: function(e) {
            return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
        },
        lengthSq: function() {
            return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
        },
        length: function() {
            return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
        },
        normalize: function() {
            var e = this.length();
            return 0 === e ? (this._x = 0,
            this._y = 0,
            this._z = 0,
            this._w = 1) : (e = 1 / e,
            this._x = this._x * e,
            this._y = this._y * e,
            this._z = this._z * e,
            this._w = this._w * e),
            this._onChangeCallback(),
            this
        },
        multiply: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
            this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e)
        },
        premultiply: function(e) {
            return this.multiplyQuaternions(e, this)
        },
        multiplyQuaternions: function(e, t) {
            var n = e._x
              , r = e._y
              , i = e._z
              , a = e._w
              , o = t._x
              , s = t._y
              , l = t._z
              , u = t._w;
            return this._x = n * u + a * o + r * l - i * s,
            this._y = r * u + a * s + i * o - n * l,
            this._z = i * u + a * l + n * s - r * o,
            this._w = a * u - n * o - r * s - i * l,
            this._onChangeCallback(),
            this
        },
        slerp: function(e, t) {
            if (0 === t)
                return this;
            if (1 === t)
                return this.copy(e);
            var n = this._x
              , r = this._y
              , i = this._z
              , a = this._w
              , o = a * e._w + n * e._x + r * e._y + i * e._z;
            if (o < 0 ? (this._w = -e._w,
            this._x = -e._x,
            this._y = -e._y,
            this._z = -e._z,
            o = -o) : this.copy(e),
            o >= 1)
                return this._w = a,
                this._x = n,
                this._y = r,
                this._z = i,
                this;
            var s = 1 - o * o;
            if (s <= Number.EPSILON) {
                var l = 1 - t;
                return this._w = l * a + t * this._w,
                this._x = l * n + t * this._x,
                this._y = l * r + t * this._y,
                this._z = l * i + t * this._z,
                this.normalize(),
                this._onChangeCallback(),
                this
            }
            var u = Math.sqrt(s)
              , c = Math.atan2(u, o)
              , h = Math.sin((1 - t) * c) / u
              , d = Math.sin(t * c) / u;
            return this._w = a * h + this._w * d,
            this._x = n * h + this._x * d,
            this._y = r * h + this._y * d,
            this._z = i * h + this._z * d,
            this._onChangeCallback(),
            this
        },
        equals: function(e) {
            return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0),
            this._x = e[t],
            this._y = e[t + 1],
            this._z = e[t + 2],
            this._w = e[t + 3],
            this._onChangeCallback(),
            this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []),
            void 0 === t && (t = 0),
            e[t] = this._x,
            e[t + 1] = this._y,
            e[t + 2] = this._z,
            e[t + 3] = this._w,
            e
        },
        fromBufferAttribute: function(e, t) {
            return this._x = e.getX(t),
            this._y = e.getY(t),
            this._z = e.getZ(t),
            this._w = e.getW(t),
            this
        },
        _onChange: function(e) {
            return this._onChangeCallback = e,
            this
        },
        _onChangeCallback: function() {}
    });
    var B = new G
      , z = new U;
    function G(e, t, n) {
        this.x = e || 0,
        this.y = t || 0,
        this.z = n || 0
    }
    Object.assign(G.prototype, {
        isVector3: !0,
        set: function(e, t, n) {
            return this.x = e,
            this.y = t,
            this.z = n,
            this
        },
        setScalar: function(e) {
            return this.x = e,
            this.y = e,
            this.z = e,
            this
        },
        setX: function(e) {
            return this.x = e,
            this
        },
        setY: function(e) {
            return this.y = e,
            this
        },
        setZ: function(e) {
            return this.z = e,
            this
        },
        setComponent: function(e, t) {
            switch (e) {
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            default:
                throw new Error("index is out of range: " + e)
            }
            return this
        },
        getComponent: function(e) {
            switch (e) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error("index is out of range: " + e)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y,this.z)
        },
        copy: function(e) {
            return this.x = e.x,
            this.y = e.y,
            this.z = e.z,
            this
        },
        add: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(e, t)) : (this.x += e.x,
            this.y += e.y,
            this.z += e.z,
            this)
        },
        addScalar: function(e) {
            return this.x += e,
            this.y += e,
            this.z += e,
            this
        },
        addVectors: function(e, t) {
            return this.x = e.x + t.x,
            this.y = e.y + t.y,
            this.z = e.z + t.z,
            this
        },
        addScaledVector: function(e, t) {
            return this.x += e.x * t,
            this.y += e.y * t,
            this.z += e.z * t,
            this
        },
        sub: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(e, t)) : (this.x -= e.x,
            this.y -= e.y,
            this.z -= e.z,
            this)
        },
        subScalar: function(e) {
            return this.x -= e,
            this.y -= e,
            this.z -= e,
            this
        },
        subVectors: function(e, t) {
            return this.x = e.x - t.x,
            this.y = e.y - t.y,
            this.z = e.z - t.z,
            this
        },
        multiply: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),
            this.multiplyVectors(e, t)) : (this.x *= e.x,
            this.y *= e.y,
            this.z *= e.z,
            this)
        },
        multiplyScalar: function(e) {
            return this.x *= e,
            this.y *= e,
            this.z *= e,
            this
        },
        multiplyVectors: function(e, t) {
            return this.x = e.x * t.x,
            this.y = e.y * t.y,
            this.z = e.z * t.z,
            this
        },
        applyEuler: function(e) {
            return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),
            this.applyQuaternion(z.setFromEuler(e))
        },
        applyAxisAngle: function(e, t) {
            return this.applyQuaternion(z.setFromAxisAngle(e, t))
        },
        applyMatrix3: function(e) {
            var t = this.x
              , n = this.y
              , r = this.z
              , i = e.elements;
            return this.x = i[0] * t + i[3] * n + i[6] * r,
            this.y = i[1] * t + i[4] * n + i[7] * r,
            this.z = i[2] * t + i[5] * n + i[8] * r,
            this
        },
        applyNormalMatrix: function(e) {
            return this.applyMatrix3(e).normalize()
        },
        applyMatrix4: function(e) {
            var t = this.x
              , n = this.y
              , r = this.z
              , i = e.elements
              , a = 1 / (i[3] * t + i[7] * n + i[11] * r + i[15]);
            return this.x = (i[0] * t + i[4] * n + i[8] * r + i[12]) * a,
            this.y = (i[1] * t + i[5] * n + i[9] * r + i[13]) * a,
            this.z = (i[2] * t + i[6] * n + i[10] * r + i[14]) * a,
            this
        },
        applyQuaternion: function(e) {
            var t = this.x
              , n = this.y
              , r = this.z
              , i = e.x
              , a = e.y
              , o = e.z
              , s = e.w
              , l = s * t + a * r - o * n
              , u = s * n + o * t - i * r
              , c = s * r + i * n - a * t
              , h = -i * t - a * n - o * r;
            return this.x = l * s + h * -i + u * -o - c * -a,
            this.y = u * s + h * -a + c * -i - l * -o,
            this.z = c * s + h * -o + l * -a - u * -i,
            this
        },
        project: function(e) {
            return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)
        },
        unproject: function(e) {
            return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)
        },
        transformDirection: function(e) {
            var t = this.x
              , n = this.y
              , r = this.z
              , i = e.elements;
            return this.x = i[0] * t + i[4] * n + i[8] * r,
            this.y = i[1] * t + i[5] * n + i[9] * r,
            this.z = i[2] * t + i[6] * n + i[10] * r,
            this.normalize()
        },
        divide: function(e) {
            return this.x /= e.x,
            this.y /= e.y,
            this.z /= e.z,
            this
        },
        divideScalar: function(e) {
            return this.multiplyScalar(1 / e)
        },
        min: function(e) {
            return this.x = Math.min(this.x, e.x),
            this.y = Math.min(this.y, e.y),
            this.z = Math.min(this.z, e.z),
            this
        },
        max: function(e) {
            return this.x = Math.max(this.x, e.x),
            this.y = Math.max(this.y, e.y),
            this.z = Math.max(this.z, e.z),
            this
        },
        clamp: function(e, t) {
            return this.x = Math.max(e.x, Math.min(t.x, this.x)),
            this.y = Math.max(e.y, Math.min(t.y, this.y)),
            this.z = Math.max(e.z, Math.min(t.z, this.z)),
            this
        },
        clampScalar: function(e, t) {
            return this.x = Math.max(e, Math.min(t, this.x)),
            this.y = Math.max(e, Math.min(t, this.y)),
            this.z = Math.max(e, Math.min(t, this.z)),
            this
        },
        clampLength: function(e, t) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this.z = Math.floor(this.z),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this.z = Math.ceil(this.z),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this.z = Math.round(this.z),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this.z = -this.z,
            this
        },
        dot: function(e) {
            return this.x * e.x + this.y * e.y + this.z * e.z
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        setLength: function(e) {
            return this.normalize().multiplyScalar(e)
        },
        lerp: function(e, t) {
            return this.x += (e.x - this.x) * t,
            this.y += (e.y - this.y) * t,
            this.z += (e.z - this.z) * t,
            this
        },
        lerpVectors: function(e, t, n) {
            return this.subVectors(t, e).multiplyScalar(n).add(e)
        },
        cross: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),
            this.crossVectors(e, t)) : this.crossVectors(this, e)
        },
        crossVectors: function(e, t) {
            var n = e.x
              , r = e.y
              , i = e.z
              , a = t.x
              , o = t.y
              , s = t.z;
            return this.x = r * s - i * o,
            this.y = i * a - n * s,
            this.z = n * o - r * a,
            this
        },
        projectOnVector: function(e) {
            var t = e.lengthSq();
            if (0 === t)
                return this.set(0, 0, 0);
            var n = e.dot(this) / t;
            return this.copy(e).multiplyScalar(n)
        },
        projectOnPlane: function(e) {
            return B.copy(this).projectOnVector(e),
            this.sub(B)
        },
        reflect: function(e) {
            return this.sub(B.copy(e).multiplyScalar(2 * this.dot(e)))
        },
        angleTo: function(e) {
            var t = Math.sqrt(this.lengthSq() * e.lengthSq());
            if (0 === t)
                return Math.PI / 2;
            var n = this.dot(e) / t;
            return Math.acos(L.clamp(n, -1, 1))
        },
        distanceTo: function(e) {
            return Math.sqrt(this.distanceToSquared(e))
        },
        distanceToSquared: function(e) {
            var t = this.x - e.x
              , n = this.y - e.y
              , r = this.z - e.z;
            return t * t + n * n + r * r
        },
        manhattanDistanceTo: function(e) {
            return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
        },
        setFromSpherical: function(e) {
            return this.setFromSphericalCoords(e.radius, e.phi, e.theta)
        },
        setFromSphericalCoords: function(e, t, n) {
            var r = Math.sin(t) * e;
            return this.x = r * Math.sin(n),
            this.y = Math.cos(t) * e,
            this.z = r * Math.cos(n),
            this
        },
        setFromCylindrical: function(e) {
            return this.setFromCylindricalCoords(e.radius, e.theta, e.y)
        },
        setFromCylindricalCoords: function(e, t, n) {
            return this.x = e * Math.sin(t),
            this.y = n,
            this.z = e * Math.cos(t),
            this
        },
        setFromMatrixPosition: function(e) {
            var t = e.elements;
            return this.x = t[12],
            this.y = t[13],
            this.z = t[14],
            this
        },
        setFromMatrixScale: function(e) {
            var t = this.setFromMatrixColumn(e, 0).length()
              , n = this.setFromMatrixColumn(e, 1).length()
              , r = this.setFromMatrixColumn(e, 2).length();
            return this.x = t,
            this.y = n,
            this.z = r,
            this
        },
        setFromMatrixColumn: function(e, t) {
            return this.fromArray(e.elements, 4 * t)
        },
        setFromMatrix3Column: function(e, t) {
            return this.fromArray(e.elements, 3 * t)
        },
        equals: function(e) {
            return e.x === this.x && e.y === this.y && e.z === this.z
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0),
            this.x = e[t],
            this.y = e[t + 1],
            this.z = e[t + 2],
            this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []),
            void 0 === t && (t = 0),
            e[t] = this.x,
            e[t + 1] = this.y,
            e[t + 2] = this.z,
            e
        },
        fromBufferAttribute: function(e, t, n) {
            return void 0 !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),
            this.x = e.getX(t),
            this.y = e.getY(t),
            this.z = e.getZ(t),
            this
        }
    });
    var H = new G
      , j = new X
      , V = new G(0,0,0)
      , W = new G(1,1,1)
      , q = new G
      , K = new G
      , Y = new G;
    function X() {
        this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
        arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
    }
    Object.assign(X.prototype, {
        isMatrix4: !0,
        set: function(e, t, n, r, i, a, o, s, l, u, c, h, d, f, p, m) {
            var g = this.elements;
            return g[0] = e,
            g[4] = t,
            g[8] = n,
            g[12] = r,
            g[1] = i,
            g[5] = a,
            g[9] = o,
            g[13] = s,
            g[2] = l,
            g[6] = u,
            g[10] = c,
            g[14] = h,
            g[3] = d,
            g[7] = f,
            g[11] = p,
            g[15] = m,
            this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
            this
        },
        clone: function() {
            return (new X).fromArray(this.elements)
        },
        copy: function(e) {
            var t = this.elements
              , n = e.elements;
            return t[0] = n[0],
            t[1] = n[1],
            t[2] = n[2],
            t[3] = n[3],
            t[4] = n[4],
            t[5] = n[5],
            t[6] = n[6],
            t[7] = n[7],
            t[8] = n[8],
            t[9] = n[9],
            t[10] = n[10],
            t[11] = n[11],
            t[12] = n[12],
            t[13] = n[13],
            t[14] = n[14],
            t[15] = n[15],
            this
        },
        copyPosition: function(e) {
            var t = this.elements
              , n = e.elements;
            return t[12] = n[12],
            t[13] = n[13],
            t[14] = n[14],
            this
        },
        extractBasis: function(e, t, n) {
            return e.setFromMatrixColumn(this, 0),
            t.setFromMatrixColumn(this, 1),
            n.setFromMatrixColumn(this, 2),
            this
        },
        makeBasis: function(e, t, n) {
            return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1),
            this
        },
        extractRotation: function(e) {
            var t = this.elements
              , n = e.elements
              , r = 1 / H.setFromMatrixColumn(e, 0).length()
              , i = 1 / H.setFromMatrixColumn(e, 1).length()
              , a = 1 / H.setFromMatrixColumn(e, 2).length();
            return t[0] = n[0] * r,
            t[1] = n[1] * r,
            t[2] = n[2] * r,
            t[3] = 0,
            t[4] = n[4] * i,
            t[5] = n[5] * i,
            t[6] = n[6] * i,
            t[7] = 0,
            t[8] = n[8] * a,
            t[9] = n[9] * a,
            t[10] = n[10] * a,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            this
        },
        makeRotationFromEuler: function(e) {
            e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
            var t = this.elements
              , n = e.x
              , r = e.y
              , i = e.z
              , a = Math.cos(n)
              , o = Math.sin(n)
              , s = Math.cos(r)
              , l = Math.sin(r)
              , u = Math.cos(i)
              , c = Math.sin(i);
            if ("XYZ" === e.order) {
                var h = a * u
                  , d = a * c
                  , f = o * u
                  , p = o * c;
                t[0] = s * u,
                t[4] = -s * c,
                t[8] = l,
                t[1] = d + f * l,
                t[5] = h - p * l,
                t[9] = -o * s,
                t[2] = p - h * l,
                t[6] = f + d * l,
                t[10] = a * s
            } else if ("YXZ" === e.order) {
                var m = s * u
                  , g = s * c
                  , v = l * u
                  , y = l * c;
                t[0] = m + y * o,
                t[4] = v * o - g,
                t[8] = a * l,
                t[1] = a * c,
                t[5] = a * u,
                t[9] = -o,
                t[2] = g * o - v,
                t[6] = y + m * o,
                t[10] = a * s
            } else if ("ZXY" === e.order) {
                m = s * u,
                g = s * c,
                v = l * u,
                y = l * c;
                t[0] = m - y * o,
                t[4] = -a * c,
                t[8] = v + g * o,
                t[1] = g + v * o,
                t[5] = a * u,
                t[9] = y - m * o,
                t[2] = -a * l,
                t[6] = o,
                t[10] = a * s
            } else if ("ZYX" === e.order) {
                h = a * u,
                d = a * c,
                f = o * u,
                p = o * c;
                t[0] = s * u,
                t[4] = f * l - d,
                t[8] = h * l + p,
                t[1] = s * c,
                t[5] = p * l + h,
                t[9] = d * l - f,
                t[2] = -l,
                t[6] = o * s,
                t[10] = a * s
            } else if ("YZX" === e.order) {
                var b = a * s
                  , x = a * l
                  , w = o * s
                  , _ = o * l;
                t[0] = s * u,
                t[4] = _ - b * c,
                t[8] = w * c + x,
                t[1] = c,
                t[5] = a * u,
                t[9] = -o * u,
                t[2] = -l * u,
                t[6] = x * c + w,
                t[10] = b - _ * c
            } else if ("XZY" === e.order) {
                b = a * s,
                x = a * l,
                w = o * s,
                _ = o * l;
                t[0] = s * u,
                t[4] = -c,
                t[8] = l * u,
                t[1] = b * c + _,
                t[5] = a * u,
                t[9] = x * c - w,
                t[2] = w * c - x,
                t[6] = o * u,
                t[10] = _ * c + b
            }
            return t[3] = 0,
            t[7] = 0,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            this
        },
        makeRotationFromQuaternion: function(e) {
            return this.compose(V, e, W)
        },
        lookAt: function(e, t, n) {
            var r = this.elements;
            return Y.subVectors(e, t),
            0 === Y.lengthSq() && (Y.z = 1),
            Y.normalize(),
            q.crossVectors(n, Y),
            0 === q.lengthSq() && (1 === Math.abs(n.z) ? Y.x += 1e-4 : Y.z += 1e-4,
            Y.normalize(),
            q.crossVectors(n, Y)),
            q.normalize(),
            K.crossVectors(Y, q),
            r[0] = q.x,
            r[4] = K.x,
            r[8] = Y.x,
            r[1] = q.y,
            r[5] = K.y,
            r[9] = Y.y,
            r[2] = q.z,
            r[6] = K.z,
            r[10] = Y.z,
            this
        },
        multiply: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),
            this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e)
        },
        premultiply: function(e) {
            return this.multiplyMatrices(e, this)
        },
        multiplyMatrices: function(e, t) {
            var n = e.elements
              , r = t.elements
              , i = this.elements
              , a = n[0]
              , o = n[4]
              , s = n[8]
              , l = n[12]
              , u = n[1]
              , c = n[5]
              , h = n[9]
              , d = n[13]
              , f = n[2]
              , p = n[6]
              , m = n[10]
              , g = n[14]
              , v = n[3]
              , y = n[7]
              , b = n[11]
              , x = n[15]
              , w = r[0]
              , _ = r[4]
              , E = r[8]
              , T = r[12]
              , S = r[1]
              , M = r[5]
              , A = r[9]
              , R = r[13]
              , L = r[2]
              , C = r[6]
              , P = r[10]
              , O = r[14]
              , k = r[3]
              , D = r[7]
              , I = r[11]
              , N = r[15];
            return i[0] = a * w + o * S + s * L + l * k,
            i[4] = a * _ + o * M + s * C + l * D,
            i[8] = a * E + o * A + s * P + l * I,
            i[12] = a * T + o * R + s * O + l * N,
            i[1] = u * w + c * S + h * L + d * k,
            i[5] = u * _ + c * M + h * C + d * D,
            i[9] = u * E + c * A + h * P + d * I,
            i[13] = u * T + c * R + h * O + d * N,
            i[2] = f * w + p * S + m * L + g * k,
            i[6] = f * _ + p * M + m * C + g * D,
            i[10] = f * E + p * A + m * P + g * I,
            i[14] = f * T + p * R + m * O + g * N,
            i[3] = v * w + y * S + b * L + x * k,
            i[7] = v * _ + y * M + b * C + x * D,
            i[11] = v * E + y * A + b * P + x * I,
            i[15] = v * T + y * R + b * O + x * N,
            this
        },
        multiplyScalar: function(e) {
            var t = this.elements;
            return t[0] *= e,
            t[4] *= e,
            t[8] *= e,
            t[12] *= e,
            t[1] *= e,
            t[5] *= e,
            t[9] *= e,
            t[13] *= e,
            t[2] *= e,
            t[6] *= e,
            t[10] *= e,
            t[14] *= e,
            t[3] *= e,
            t[7] *= e,
            t[11] *= e,
            t[15] *= e,
            this
        },
        determinant: function() {
            var e = this.elements
              , t = e[0]
              , n = e[4]
              , r = e[8]
              , i = e[12]
              , a = e[1]
              , o = e[5]
              , s = e[9]
              , l = e[13]
              , u = e[2]
              , c = e[6]
              , h = e[10]
              , d = e[14];
            return e[3] * (+i * s * c - r * l * c - i * o * h + n * l * h + r * o * d - n * s * d) + e[7] * (+t * s * d - t * l * h + i * a * h - r * a * d + r * l * u - i * s * u) + e[11] * (+t * l * c - t * o * d - i * a * c + n * a * d + i * o * u - n * l * u) + e[15] * (-r * o * u - t * s * c + t * o * h + r * a * c - n * a * h + n * s * u)
        },
        transpose: function() {
            var e, t = this.elements;
            return e = t[1],
            t[1] = t[4],
            t[4] = e,
            e = t[2],
            t[2] = t[8],
            t[8] = e,
            e = t[6],
            t[6] = t[9],
            t[9] = e,
            e = t[3],
            t[3] = t[12],
            t[12] = e,
            e = t[7],
            t[7] = t[13],
            t[13] = e,
            e = t[11],
            t[11] = t[14],
            t[14] = e,
            this
        },
        setPosition: function(e, t, n) {
            var r = this.elements;
            return e.isVector3 ? (r[12] = e.x,
            r[13] = e.y,
            r[14] = e.z) : (r[12] = e,
            r[13] = t,
            r[14] = n),
            this
        },
        getInverse: function(e, t) {
            void 0 !== t && console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");
            var n = this.elements
              , r = e.elements
              , i = r[0]
              , a = r[1]
              , o = r[2]
              , s = r[3]
              , l = r[4]
              , u = r[5]
              , c = r[6]
              , h = r[7]
              , d = r[8]
              , f = r[9]
              , p = r[10]
              , m = r[11]
              , g = r[12]
              , v = r[13]
              , y = r[14]
              , b = r[15]
              , x = f * y * h - v * p * h + v * c * m - u * y * m - f * c * b + u * p * b
              , w = g * p * h - d * y * h - g * c * m + l * y * m + d * c * b - l * p * b
              , _ = d * v * h - g * f * h + g * u * m - l * v * m - d * u * b + l * f * b
              , E = g * f * c - d * v * c - g * u * p + l * v * p + d * u * y - l * f * y
              , T = i * x + a * w + o * _ + s * E;
            if (0 === T)
                return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            var S = 1 / T;
            return n[0] = x * S,
            n[1] = (v * p * s - f * y * s - v * o * m + a * y * m + f * o * b - a * p * b) * S,
            n[2] = (u * y * s - v * c * s + v * o * h - a * y * h - u * o * b + a * c * b) * S,
            n[3] = (f * c * s - u * p * s - f * o * h + a * p * h + u * o * m - a * c * m) * S,
            n[4] = w * S,
            n[5] = (d * y * s - g * p * s + g * o * m - i * y * m - d * o * b + i * p * b) * S,
            n[6] = (g * c * s - l * y * s - g * o * h + i * y * h + l * o * b - i * c * b) * S,
            n[7] = (l * p * s - d * c * s + d * o * h - i * p * h - l * o * m + i * c * m) * S,
            n[8] = _ * S,
            n[9] = (g * f * s - d * v * s - g * a * m + i * v * m + d * a * b - i * f * b) * S,
            n[10] = (l * v * s - g * u * s + g * a * h - i * v * h - l * a * b + i * u * b) * S,
            n[11] = (d * u * s - l * f * s - d * a * h + i * f * h + l * a * m - i * u * m) * S,
            n[12] = E * S,
            n[13] = (d * v * o - g * f * o + g * a * p - i * v * p - d * a * y + i * f * y) * S,
            n[14] = (g * u * o - l * v * o - g * a * c + i * v * c + l * a * y - i * u * y) * S,
            n[15] = (l * f * o - d * u * o + d * a * c - i * f * c - l * a * p + i * u * p) * S,
            this
        },
        scale: function(e) {
            var t = this.elements
              , n = e.x
              , r = e.y
              , i = e.z;
            return t[0] *= n,
            t[4] *= r,
            t[8] *= i,
            t[1] *= n,
            t[5] *= r,
            t[9] *= i,
            t[2] *= n,
            t[6] *= r,
            t[10] *= i,
            t[3] *= n,
            t[7] *= r,
            t[11] *= i,
            this
        },
        getMaxScaleOnAxis: function() {
            var e = this.elements
              , t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2]
              , n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6]
              , r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
            return Math.sqrt(Math.max(t, n, r))
        },
        makeTranslation: function(e, t, n) {
            return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1),
            this
        },
        makeRotationX: function(e) {
            var t = Math.cos(e)
              , n = Math.sin(e);
            return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1),
            this
        },
        makeRotationY: function(e) {
            var t = Math.cos(e)
              , n = Math.sin(e);
            return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1),
            this
        },
        makeRotationZ: function(e) {
            var t = Math.cos(e)
              , n = Math.sin(e);
            return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
            this
        },
        makeRotationAxis: function(e, t) {
            var n = Math.cos(t)
              , r = Math.sin(t)
              , i = 1 - n
              , a = e.x
              , o = e.y
              , s = e.z
              , l = i * a
              , u = i * o;
            return this.set(l * a + n, l * o - r * s, l * s + r * o, 0, l * o + r * s, u * o + n, u * s - r * a, 0, l * s - r * o, u * s + r * a, i * s * s + n, 0, 0, 0, 0, 1),
            this
        },
        makeScale: function(e, t, n) {
            return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
            this
        },
        makeShear: function(e, t, n) {
            return this.set(1, t, n, 0, e, 1, n, 0, e, t, 1, 0, 0, 0, 0, 1),
            this
        },
        compose: function(e, t, n) {
            var r = this.elements
              , i = t._x
              , a = t._y
              , o = t._z
              , s = t._w
              , l = i + i
              , u = a + a
              , c = o + o
              , h = i * l
              , d = i * u
              , f = i * c
              , p = a * u
              , m = a * c
              , g = o * c
              , v = s * l
              , y = s * u
              , b = s * c
              , x = n.x
              , w = n.y
              , _ = n.z;
            return r[0] = (1 - (p + g)) * x,
            r[1] = (d + b) * x,
            r[2] = (f - y) * x,
            r[3] = 0,
            r[4] = (d - b) * w,
            r[5] = (1 - (h + g)) * w,
            r[6] = (m + v) * w,
            r[7] = 0,
            r[8] = (f + y) * _,
            r[9] = (m - v) * _,
            r[10] = (1 - (h + p)) * _,
            r[11] = 0,
            r[12] = e.x,
            r[13] = e.y,
            r[14] = e.z,
            r[15] = 1,
            this
        },
        decompose: function(e, t, n) {
            var r = this.elements
              , i = H.set(r[0], r[1], r[2]).length()
              , a = H.set(r[4], r[5], r[6]).length()
              , o = H.set(r[8], r[9], r[10]).length();
            this.determinant() < 0 && (i = -i),
            e.x = r[12],
            e.y = r[13],
            e.z = r[14],
            j.copy(this);
            var s = 1 / i
              , l = 1 / a
              , u = 1 / o;
            return j.elements[0] *= s,
            j.elements[1] *= s,
            j.elements[2] *= s,
            j.elements[4] *= l,
            j.elements[5] *= l,
            j.elements[6] *= l,
            j.elements[8] *= u,
            j.elements[9] *= u,
            j.elements[10] *= u,
            t.setFromRotationMatrix(j),
            n.x = i,
            n.y = a,
            n.z = o,
            this
        },
        makePerspective: function(e, t, n, r, i, a) {
            void 0 === a && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
            var o = this.elements
              , s = 2 * i / (t - e)
              , l = 2 * i / (n - r)
              , u = (t + e) / (t - e)
              , c = (n + r) / (n - r)
              , h = -(a + i) / (a - i)
              , d = -2 * a * i / (a - i);
            return o[0] = s,
            o[4] = 0,
            o[8] = u,
            o[12] = 0,
            o[1] = 0,
            o[5] = l,
            o[9] = c,
            o[13] = 0,
            o[2] = 0,
            o[6] = 0,
            o[10] = h,
            o[14] = d,
            o[3] = 0,
            o[7] = 0,
            o[11] = -1,
            o[15] = 0,
            this
        },
        makeOrthographic: function(e, t, n, r, i, a) {
            var o = this.elements
              , s = 1 / (t - e)
              , l = 1 / (n - r)
              , u = 1 / (a - i)
              , c = (t + e) * s
              , h = (n + r) * l
              , d = (a + i) * u;
            return o[0] = 2 * s,
            o[4] = 0,
            o[8] = 0,
            o[12] = -c,
            o[1] = 0,
            o[5] = 2 * l,
            o[9] = 0,
            o[13] = -h,
            o[2] = 0,
            o[6] = 0,
            o[10] = -2 * u,
            o[14] = -d,
            o[3] = 0,
            o[7] = 0,
            o[11] = 0,
            o[15] = 1,
            this
        },
        equals: function(e) {
            for (var t = this.elements, n = e.elements, r = 0; r < 16; r++)
                if (t[r] !== n[r])
                    return !1;
            return !0
        },
        fromArray: function(e, t) {
            void 0 === t && (t = 0);
            for (var n = 0; n < 16; n++)
                this.elements[n] = e[n + t];
            return this
        },
        toArray: function(e, t) {
            void 0 === e && (e = []),
            void 0 === t && (t = 0);
            var n = this.elements;
            return e[t] = n[0],
            e[t + 1] = n[1],
            e[t + 2] = n[2],
            e[t + 3] = n[3],
            e[t + 4] = n[4],
            e[t + 5] = n[5],
            e[t + 6] = n[6],
            e[t + 7] = n[7],
            e[t + 8] = n[8],
            e[t + 9] = n[9],
            e[t + 10] = n[10],
            e[t + 11] = n[11],
            e[t + 12] = n[12],
            e[t + 13] = n[13],
            e[t + 14] = n[14],
            e[t + 15] = n[15],
            e
        }
    });
    var Z = new X
      , J = new U;
    function Q(e, t, n, r) {
        this._x = e || 0,
        this._y = t || 0,
        this._z = n || 0,
        this._order = r || Q.DefaultOrder
    }
    function $() {
        this.mask = 1
    }
    Q.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"],
    Q.DefaultOrder = "XYZ",
    Object.defineProperties(Q.prototype, {
        x: {
            get: function() {
                return this._x
            },
            set: function(e) {
                this._x = e,
                this._onChangeCallback()
            }
        },
        y: {
            get: function() {
                return this._y
            },
            set: function(e) {
                this._y = e,
                this._onChangeCallback()
            }
        },
        z: {
            get: function() {
                return this._z
            },
            set: function(e) {
                this._z = e,
                this._onChangeCallback()
            }
        },
        order: {
            get: function() {
                return this._order
            },
            set: function(e) {
                this._order = e,
                this._onChangeCallback()
            }
        }
    }),
    Object.assign(Q.prototype, {
        isEuler: !0,
        set: function(e, t, n, r) {
            return this._x = e,
            this._y = t,
            this._z = n,
            this._order = r || this._order,
            this._onChangeCallback(),
            this
        },
        clone: function() {
            return new this.constructor(this._x,this._y,this._z,this._order)
        },
        copy: function(e) {
            return this._x = e._x,
            this._y = e._y,
            this._z = e._z,
            this._order = e._order,
            this._onChangeCallback(),
            this
        },
        setFromRotationMatrix: function(e, t, n) {
            var r = L.clamp
              , i = e.elements
              , a = i[0]
              , o = i[4]
              , s = i[8]
              , l = i[1]
              , u = i[5]
              , c = i[9]
              , h = i[2]
              , d = i[6]
              , f = i[10];
            return "XYZ" === (t = t || this._order) ? (this._y = Math.asin(r(s, -1, 1)),
            Math.abs(s) < .9999999 ? (this._x = Math.atan2(-c, f),
            this._z = Math.atan2(-o, a)) : (this._x = Math.atan2(d, u),
            this._z = 0)) : "YXZ" === t ? (this._x = Math.asin(-r(c, -1, 1)),
            Math.abs(c) < .9999999 ? (this._y = Math.atan2(s, f),
            this._z = Math.atan2(l, u)) : (this._y = Math.atan2(-h, a),
            this._z = 0)) : "ZXY" === t ? (this._x = Math.asin(r(d, -1, 1)),
            Math.abs(d) < .9999999 ? (this._y = Math.atan2(-h, f),
            this._z = Math.atan2(-o, u)) : (this._y = 0,
            this._z = Math.atan2(l, a))) : "ZYX" === t ? (this._y = Math.asin(-r(h, -1, 1)),
            Math.abs(h) < .9999999 ? (this._x = Math.atan2(d, f),
            this._z = Math.atan2(l, a)) : (this._x = 0,
            this._z = Math.atan2(-o, u))) : "YZX" === t ? (this._z = Math.asin(r(l, -1, 1)),
            Math.abs(l) < .9999999 ? (this._x = Math.atan2(-c, u),
            this._y = Math.atan2(-h, a)) : (this._x = 0,
            this._y = Math.atan2(s, f))) : "XZY" === t ? (this._z = Math.asin(-r(o, -1, 1)),
            Math.abs(o) < .9999999 ? (this._x = Math.atan2(d, u),
            this._y = Math.atan2(s, a)) : (this._x = Math.atan2(-c, f),
            this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + t),
            this._order = t,
            !1 !== n && this._onChangeCallback(),
            this
        },
        setFromQuaternion: function(e, t, n) {
            return Z.makeRotationFromQuaternion(e),
            this.setFromRotationMatrix(Z, t, n)
        },
        setFromVector3: function(e, t) {
            return this.set(e.x, e.y, e.z, t || this._order)
        },
        reorder: function(e) {
            return J.setFromEuler(this),
            this.setFromQuaternion(J, e)
        },
        equals: function(e) {
            return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
        },
        fromArray: function(e) {
            return this._x = e[0],
            this._y = e[1],
            this._z = e[2],
            void 0 !== e[3] && (this._order = e[3]),
            this._onChangeCallback(),
            this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []),
            void 0 === t && (t = 0),
            e[t] = this._x,
            e[t + 1] = this._y,
            e[t + 2] = this._z,
            e[t + 3] = this._order,
            e
        },
        toVector3: function(e) {
            return e ? e.set(this._x, this._y, this._z) : new G(this._x,this._y,this._z)
        },
        _onChange: function(e) {
            return this._onChangeCallback = e,
            this
        },
        _onChangeCallback: function() {}
    }),
    Object.assign($.prototype, {
        set: function(e) {
            this.mask = 1 << e | 0
        },
        enable: function(e) {
            this.mask |= 1 << e | 0
        },
        enableAll: function() {
            this.mask = -1
        },
        toggle: function(e) {
            this.mask ^= 1 << e | 0
        },
        disable: function(e) {
            this.mask &= ~(1 << e | 0)
        },
        disableAll: function() {
            this.mask = 0
        },
        test: function(e) {
            return 0 != (this.mask & e.mask)
        }
    });
    var ee = 0
      , te = new G
      , ne = new U
      , re = new X
      , ie = new G
      , ae = new G
      , oe = new G
      , se = new U
      , le = new G(1,0,0)
      , ue = new G(0,1,0)
      , ce = new G(0,0,1)
      , he = {
        type: "added"
    }
      , de = {
        type: "removed"
    };
    function fe() {
        Object.defineProperty(this, "id", {
            value: ee++
        }),
        this.uuid = L.generateUUID(),
        this.name = "",
        this.type = "Object3D",
        this.parent = null,
        this.children = [],
        this.up = fe.DefaultUp.clone();
        var e = new G
          , t = new Q
          , n = new U
          , r = new G(1,1,1);
        t._onChange((function() {
            n.setFromEuler(t, !1)
        }
        )),
        n._onChange((function() {
            t.setFromQuaternion(n, void 0, !1)
        }
        )),
        Object.defineProperties(this, {
            position: {
                configurable: !0,
                enumerable: !0,
                value: e
            },
            rotation: {
                configurable: !0,
                enumerable: !0,
                value: t
            },
            quaternion: {
                configurable: !0,
                enumerable: !0,
                value: n
            },
            scale: {
                configurable: !0,
                enumerable: !0,
                value: r
            },
            modelViewMatrix: {
                value: new X
            },
            normalMatrix: {
                value: new P
            }
        }),
        this.matrix = new X,
        this.matrixWorld = new X,
        this.matrixAutoUpdate = fe.DefaultMatrixAutoUpdate,
        this.matrixWorldNeedsUpdate = !1,
        this.layers = new $,
        this.visible = !0,
        this.castShadow = !1,
        this.receiveShadow = !1,
        this.frustumCulled = !0,
        this.renderOrder = 0,
        this.userData = {}
    }
    function pe() {
        fe.call(this),
        this.type = "Scene",
        this.background = null,
        this.environment = null,
        this.fog = null,
        this.overrideMaterial = null,
        this.autoUpdate = !0,
        "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{
            detail: this
        }))
    }
    fe.DefaultUp = new G(0,1,0),
    fe.DefaultMatrixAutoUpdate = !0,
    fe.prototype = Object.assign(Object.create(S.prototype), {
        constructor: fe,
        isObject3D: !0,
        onBeforeRender: function() {},
        onAfterRender: function() {},
        applyMatrix4: function(e) {
            this.matrixAutoUpdate && this.updateMatrix(),
            this.matrix.premultiply(e),
            this.matrix.decompose(this.position, this.quaternion, this.scale)
        },
        applyQuaternion: function(e) {
            return this.quaternion.premultiply(e),
            this
        },
        setRotationFromAxisAngle: function(e, t) {
            this.quaternion.setFromAxisAngle(e, t)
        },
        setRotationFromEuler: function(e) {
            this.quaternion.setFromEuler(e, !0)
        },
        setRotationFromMatrix: function(e) {
            this.quaternion.setFromRotationMatrix(e)
        },
        setRotationFromQuaternion: function(e) {
            this.quaternion.copy(e)
        },
        rotateOnAxis: function(e, t) {
            return ne.setFromAxisAngle(e, t),
            this.quaternion.multiply(ne),
            this
        },
        rotateOnWorldAxis: function(e, t) {
            return ne.setFromAxisAngle(e, t),
            this.quaternion.premultiply(ne),
            this
        },
        rotateX: function(e) {
            return this.rotateOnAxis(le, e)
        },
        rotateY: function(e) {
            return this.rotateOnAxis(ue, e)
        },
        rotateZ: function(e) {
            return this.rotateOnAxis(ce, e)
        },
        translateOnAxis: function(e, t) {
            return te.copy(e).applyQuaternion(this.quaternion),
            this.position.add(te.multiplyScalar(t)),
            this
        },
        translateX: function(e) {
            return this.translateOnAxis(le, e)
        },
        translateY: function(e) {
            return this.translateOnAxis(ue, e)
        },
        translateZ: function(e) {
            return this.translateOnAxis(ce, e)
        },
        localToWorld: function(e) {
            return e.applyMatrix4(this.matrixWorld)
        },
        worldToLocal: function(e) {
            return e.applyMatrix4(re.getInverse(this.matrixWorld))
        },
        lookAt: function(e, t, n) {
            e.isVector3 ? ie.copy(e) : ie.set(e, t, n);
            var r = this.parent;
            this.updateWorldMatrix(!0, !1),
            ae.setFromMatrixPosition(this.matrixWorld),
            this.isCamera || this.isLight ? re.lookAt(ae, ie, this.up) : re.lookAt(ie, ae, this.up),
            this.quaternion.setFromRotationMatrix(re),
            r && (re.extractRotation(r.matrixWorld),
            ne.setFromRotationMatrix(re),
            this.quaternion.premultiply(ne.inverse()))
        },
        add: function(e) {
            if (arguments.length > 1) {
                for (var t = 0; t < arguments.length; t++)
                    this.add(arguments[t]);
                return this
            }
            return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e),
            this) : (e && e.isObject3D ? (null !== e.parent && e.parent.remove(e),
            e.parent = this,
            this.children.push(e),
            e.dispatchEvent(he)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e),
            this)
        },
        remove: function(e) {
            if (arguments.length > 1) {
                for (var t = 0; t < arguments.length; t++)
                    this.remove(arguments[t]);
                return this
            }
            var n = this.children.indexOf(e);
            return -1 !== n && (e.parent = null,
            this.children.splice(n, 1),
            e.dispatchEvent(de)),
            this
        },
        attach: function(e) {
            return this.updateWorldMatrix(!0, !1),
            re.getInverse(this.matrixWorld),
            null !== e.parent && (e.parent.updateWorldMatrix(!0, !1),
            re.multiply(e.parent.matrixWorld)),
            e.applyMatrix4(re),
            e.updateWorldMatrix(!1, !1),
            this.add(e),
            this
        },
        getObjectById: function(e) {
            return this.getObjectByProperty("id", e)
        },
        getObjectByName: function(e) {
            return this.getObjectByProperty("name", e)
        },
        getObjectByProperty: function(e, t) {
            if (this[e] === t)
                return this;
            for (var n = 0, r = this.children.length; n < r; n++) {
                var i = this.children[n].getObjectByProperty(e, t);
                if (void 0 !== i)
                    return i
            }
        },
        getWorldPosition: function(e) {
            return void 0 === e && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"),
            e = new G),
            this.updateMatrixWorld(!0),
            e.setFromMatrixPosition(this.matrixWorld)
        },
        getWorldQuaternion: function(e) {
            return void 0 === e && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),
            e = new U),
            this.updateMatrixWorld(!0),
            this.matrixWorld.decompose(ae, e, oe),
            e
        },
        getWorldScale: function(e) {
            return void 0 === e && (console.warn("THREE.Object3D: .getWorldScale() target is now required"),
            e = new G),
            this.updateMatrixWorld(!0),
            this.matrixWorld.decompose(ae, se, e),
            e
        },
        getWorldDirection: function(e) {
            void 0 === e && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"),
            e = new G),
            this.updateMatrixWorld(!0);
            var t = this.matrixWorld.elements;
            return e.set(t[8], t[9], t[10]).normalize()
        },
        raycast: function() {},
        traverse: function(e) {
            e(this);
            for (var t = this.children, n = 0, r = t.length; n < r; n++)
                t[n].traverse(e)
        },
        traverseVisible: function(e) {
            if (!1 !== this.visible) {
                e(this);
                for (var t = this.children, n = 0, r = t.length; n < r; n++)
                    t[n].traverseVisible(e)
            }
        },
        traverseAncestors: function(e) {
            var t = this.parent;
            null !== t && (e(t),
            t.traverseAncestors(e))
        },
        updateMatrix: function() {
            this.matrix.compose(this.position, this.quaternion, this.scale),
            this.matrixWorldNeedsUpdate = !0
        },
        updateMatrixWorld: function(e) {
            this.matrixAutoUpdate && this.updateMatrix(),
            (this.matrixWorldNeedsUpdate || e) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
            this.matrixWorldNeedsUpdate = !1,
            e = !0);
            for (var t = this.children, n = 0, r = t.length; n < r; n++)
                t[n].updateMatrixWorld(e)
        },
        updateWorldMatrix: function(e, t) {
            var n = this.parent;
            if (!0 === e && null !== n && n.updateWorldMatrix(!0, !1),
            this.matrixAutoUpdate && this.updateMatrix(),
            null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
            !0 === t)
                for (var r = this.children, i = 0, a = r.length; i < a; i++)
                    r[i].updateWorldMatrix(!1, !0)
        },
        toJSON: function(e) {
            var t = void 0 === e || "string" == typeof e
              , n = {};
            t && (e = {
                geometries: {},
                materials: {},
                textures: {},
                images: {},
                shapes: {}
            },
            n.metadata = {
                version: 4.5,
                type: "Object",
                generator: "Object3D.toJSON"
            });
            var r = {};
            function i(t, n) {
                return void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)),
                n.uuid
            }
            if (r.uuid = this.uuid,
            r.type = this.type,
            "" !== this.name && (r.name = this.name),
            !0 === this.castShadow && (r.castShadow = !0),
            !0 === this.receiveShadow && (r.receiveShadow = !0),
            !1 === this.visible && (r.visible = !1),
            !1 === this.frustumCulled && (r.frustumCulled = !1),
            0 !== this.renderOrder && (r.renderOrder = this.renderOrder),
            "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData),
            r.layers = this.layers.mask,
            r.matrix = this.matrix.toArray(),
            !1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1),
            this.isInstancedMesh && (r.type = "InstancedMesh",
            r.count = this.count,
            r.instanceMatrix = this.instanceMatrix.toJSON()),
            this.isMesh || this.isLine || this.isPoints) {
                r.geometry = i(e.geometries, this.geometry);
                var a = this.geometry.parameters;
                if (void 0 !== a && void 0 !== a.shapes) {
                    var o = a.shapes;
                    if (Array.isArray(o))
                        for (var s = 0, l = o.length; s < l; s++) {
                            var u = o[s];
                            i(e.shapes, u)
                        }
                    else
                        i(e.shapes, o)
                }
            }
            if (void 0 !== this.material)
                if (Array.isArray(this.material)) {
                    var c = [];
                    for (s = 0,
                    l = this.material.length; s < l; s++)
                        c.push(i(e.materials, this.material[s]));
                    r.material = c
                } else
                    r.material = i(e.materials, this.material);
            if (this.children.length > 0) {
                r.children = [];
                for (s = 0; s < this.children.length; s++)
                    r.children.push(this.children[s].toJSON(e).object)
            }
            if (t) {
                var h = m(e.geometries)
                  , d = m(e.materials)
                  , f = m(e.textures)
                  , p = m(e.images);
                o = m(e.shapes);
                h.length > 0 && (n.geometries = h),
                d.length > 0 && (n.materials = d),
                f.length > 0 && (n.textures = f),
                p.length > 0 && (n.images = p),
                o.length > 0 && (n.shapes = o)
            }
            return n.object = r,
            n;
            function m(e) {
                var t = [];
                for (var n in e) {
                    var r = e[n];
                    delete r.metadata,
                    t.push(r)
                }
                return t
            }
        },
        clone: function(e) {
            return (new this.constructor).copy(this, e)
        },
        copy: function(e, t) {
            if (void 0 === t && (t = !0),
            this.name = e.name,
            this.up.copy(e.up),
            this.position.copy(e.position),
            this.quaternion.copy(e.quaternion),
            this.scale.copy(e.scale),
            this.matrix.copy(e.matrix),
            this.matrixWorld.copy(e.matrixWorld),
            this.matrixAutoUpdate = e.matrixAutoUpdate,
            this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate,
            this.layers.mask = e.layers.mask,
            this.visible = e.visible,
            this.castShadow = e.castShadow,
            this.receiveShadow = e.receiveShadow,
            this.frustumCulled = e.frustumCulled,
            this.renderOrder = e.renderOrder,
            this.userData = JSON.parse(JSON.stringify(e.userData)),
            !0 === t)
                for (var n = 0; n < e.children.length; n++) {
                    var r = e.children[n];
                    this.add(r.clone())
                }
            return this
        }
    }),
    pe.prototype = Object.assign(Object.create(fe.prototype), {
        constructor: pe,
        isScene: !0,
        copy: function(e, t) {
            return fe.prototype.copy.call(this, e, t),
            null !== e.background && (this.background = e.background.clone()),
            null !== e.environment && (this.environment = e.environment.clone()),
            null !== e.fog && (this.fog = e.fog.clone()),
            null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()),
            this.autoUpdate = e.autoUpdate,
            this.matrixAutoUpdate = e.matrixAutoUpdate,
            this
        },
        toJSON: function(e) {
            var t = fe.prototype.toJSON.call(this, e);
            return null !== this.background && (t.object.background = this.background.toJSON(e)),
            null !== this.environment && (t.object.environment = this.environment.toJSON(e)),
            null !== this.fog && (t.object.fog = this.fog.toJSON()),
            t
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    });
    var me = [new G, new G, new G, new G, new G, new G, new G, new G]
      , ge = new G
      , ve = new Re
      , ye = new G
      , be = new G
      , xe = new G
      , we = new G
      , _e = new G
      , Ee = new G
      , Te = new G
      , Se = new G
      , Me = new G
      , Ae = new G;
    function Re(e, t) {
        this.min = void 0 !== e ? e : new G(1 / 0,1 / 0,1 / 0),
        this.max = void 0 !== t ? t : new G(-1 / 0,-1 / 0,-1 / 0)
    }
    function Le(e, t, n, r, i) {
        var a, o;
        for (a = 0,
        o = e.length - 3; a <= o; a += 3) {
            Ae.fromArray(e, a);
            var s = i.x * Math.abs(Ae.x) + i.y * Math.abs(Ae.y) + i.z * Math.abs(Ae.z)
              , l = t.dot(Ae)
              , u = n.dot(Ae)
              , c = r.dot(Ae);
            if (Math.max(-Math.max(l, u, c), Math.min(l, u, c)) > s)
                return !1
        }
        return !0
    }
    Object.assign(Re.prototype, {
        isBox3: !0,
        set: function(e, t) {
            return this.min.copy(e),
            this.max.copy(t),
            this
        },
        setFromArray: function(e) {
            for (var t = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, l = e.length; s < l; s += 3) {
                var u = e[s]
                  , c = e[s + 1]
                  , h = e[s + 2];
                u < t && (t = u),
                c < n && (n = c),
                h < r && (r = h),
                u > i && (i = u),
                c > a && (a = c),
                h > o && (o = h)
            }
            return this.min.set(t, n, r),
            this.max.set(i, a, o),
            this
        },
        setFromBufferAttribute: function(e) {
            for (var t = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, l = e.count; s < l; s++) {
                var u = e.getX(s)
                  , c = e.getY(s)
                  , h = e.getZ(s);
                u < t && (t = u),
                c < n && (n = c),
                h < r && (r = h),
                u > i && (i = u),
                c > a && (a = c),
                h > o && (o = h)
            }
            return this.min.set(t, n, r),
            this.max.set(i, a, o),
            this
        },
        setFromPoints: function(e) {
            this.makeEmpty();
            for (var t = 0, n = e.length; t < n; t++)
                this.expandByPoint(e[t]);
            return this
        },
        setFromCenterAndSize: function(e, t) {
            var n = ge.copy(t).multiplyScalar(.5);
            return this.min.copy(e).sub(n),
            this.max.copy(e).add(n),
            this
        },
        setFromObject: function(e) {
            return this.makeEmpty(),
            this.expandByObject(e)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.min.copy(e.min),
            this.max.copy(e.max),
            this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = this.min.z = 1 / 0,
            this.max.x = this.max.y = this.max.z = -1 / 0,
            this
        },
        isEmpty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
        },
        getCenter: function(e) {
            return void 0 === e && (console.warn("THREE.Box3: .getCenter() target is now required"),
            e = new G),
            this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        getSize: function(e) {
            return void 0 === e && (console.warn("THREE.Box3: .getSize() target is now required"),
            e = new G),
            this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min)
        },
        expandByPoint: function(e) {
            return this.min.min(e),
            this.max.max(e),
            this
        },
        expandByVector: function(e) {
            return this.min.sub(e),
            this.max.add(e),
            this
        },
        expandByScalar: function(e) {
            return this.min.addScalar(-e),
            this.max.addScalar(e),
            this
        },
        expandByObject: function(e) {
            e.updateWorldMatrix(!1, !1);
            var t = e.geometry;
            void 0 !== t && (null === t.boundingBox && t.computeBoundingBox(),
            ve.copy(t.boundingBox),
            ve.applyMatrix4(e.matrixWorld),
            this.union(ve));
            for (var n = e.children, r = 0, i = n.length; r < i; r++)
                this.expandByObject(n[r]);
            return this
        },
        containsPoint: function(e) {
            return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z)
        },
        containsBox: function(e) {
            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z
        },
        getParameter: function(e, t) {
            return void 0 === t && (console.warn("THREE.Box3: .getParameter() target is now required"),
            t = new G),
            t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z))
        },
        intersectsBox: function(e) {
            return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z)
        },
        intersectsSphere: function(e) {
            return this.clampPoint(e.center, ge),
            ge.distanceToSquared(e.center) <= e.radius * e.radius
        },
        intersectsPlane: function(e) {
            var t, n;
            return e.normal.x > 0 ? (t = e.normal.x * this.min.x,
            n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x,
            n = e.normal.x * this.min.x),
            e.normal.y > 0 ? (t += e.normal.y * this.min.y,
            n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y,
            n += e.normal.y * this.min.y),
            e.normal.z > 0 ? (t += e.normal.z * this.min.z,
            n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z,
            n += e.normal.z * this.min.z),
            t <= -e.constant && n >= -e.constant
        },
        intersectsTriangle: function(e) {
            if (this.isEmpty())
                return !1;
            this.getCenter(Te),
            Se.subVectors(this.max, Te),
            ye.subVectors(e.a, Te),
            be.subVectors(e.b, Te),
            xe.subVectors(e.c, Te),
            we.subVectors(be, ye),
            _e.subVectors(xe, be),
            Ee.subVectors(ye, xe);
            var t = [0, -we.z, we.y, 0, -_e.z, _e.y, 0, -Ee.z, Ee.y, we.z, 0, -we.x, _e.z, 0, -_e.x, Ee.z, 0, -Ee.x, -we.y, we.x, 0, -_e.y, _e.x, 0, -Ee.y, Ee.x, 0];
            return !!Le(t, ye, be, xe, Se) && (!!Le(t = [1, 0, 0, 0, 1, 0, 0, 0, 1], ye, be, xe, Se) && (Me.crossVectors(we, _e),
            Le(t = [Me.x, Me.y, Me.z], ye, be, xe, Se)))
        },
        clampPoint: function(e, t) {
            return void 0 === t && (console.warn("THREE.Box3: .clampPoint() target is now required"),
            t = new G),
            t.copy(e).clamp(this.min, this.max)
        },
        distanceToPoint: function(e) {
            return ge.copy(e).clamp(this.min, this.max).sub(e).length()
        },
        getBoundingSphere: function(e) {
            return void 0 === e && console.error("THREE.Box3: .getBoundingSphere() target is now required"),
            this.getCenter(e.center),
            e.radius = .5 * this.getSize(ge).length(),
            e
        },
        intersect: function(e) {
            return this.min.max(e.min),
            this.max.min(e.max),
            this.isEmpty() && this.makeEmpty(),
            this
        },
        union: function(e) {
            return this.min.min(e.min),
            this.max.max(e.max),
            this
        },
        applyMatrix4: function(e) {
            return this.isEmpty() || (me[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
            me[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
            me[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
            me[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
            me[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
            me[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
            me[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
            me[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
            this.setFromPoints(me)),
            this
        },
        translate: function(e) {
            return this.min.add(e),
            this.max.add(e),
            this
        },
        equals: function(e) {
            return e.min.equals(this.min) && e.max.equals(this.max)
        }
    });
    var Ce = new Re;
    function Pe(e, t) {
        this.center = void 0 !== e ? e : new G,
        this.radius = void 0 !== t ? t : 0
    }
    Object.assign(Pe.prototype, {
        set: function(e, t) {
            return this.center.copy(e),
            this.radius = t,
            this
        },
        setFromPoints: function(e, t) {
            var n = this.center;
            void 0 !== t ? n.copy(t) : Ce.setFromPoints(e).getCenter(n);
            for (var r = 0, i = 0, a = e.length; i < a; i++)
                r = Math.max(r, n.distanceToSquared(e[i]));
            return this.radius = Math.sqrt(r),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.center.copy(e.center),
            this.radius = e.radius,
            this
        },
        empty: function() {
            return this.radius <= 0
        },
        containsPoint: function(e) {
            return e.distanceToSquared(this.center) <= this.radius * this.radius
        },
        distanceToPoint: function(e) {
            return e.distanceTo(this.center) - this.radius
        },
        intersectsSphere: function(e) {
            var t = this.radius + e.radius;
            return e.center.distanceToSquared(this.center) <= t * t
        },
        intersectsBox: function(e) {
            return e.intersectsSphere(this)
        },
        intersectsPlane: function(e) {
            return Math.abs(e.distanceToPoint(this.center)) <= this.radius
        },
        clampPoint: function(e, t) {
            var n = this.center.distanceToSquared(e);
            return void 0 === t && (console.warn("THREE.Sphere: .clampPoint() target is now required"),
            t = new G),
            t.copy(e),
            n > this.radius * this.radius && (t.sub(this.center).normalize(),
            t.multiplyScalar(this.radius).add(this.center)),
            t
        },
        getBoundingBox: function(e) {
            return void 0 === e && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"),
            e = new Re),
            e.set(this.center, this.center),
            e.expandByScalar(this.radius),
            e
        },
        applyMatrix4: function(e) {
            return this.center.applyMatrix4(e),
            this.radius = this.radius * e.getMaxScaleOnAxis(),
            this
        },
        translate: function(e) {
            return this.center.add(e),
            this
        },
        equals: function(e) {
            return e.center.equals(this.center) && e.radius === this.radius
        }
    });
    var Oe = new G
      , ke = new G
      , De = new G
      , Ie = new G
      , Ne = new G
      , Fe = new G
      , Ue = new G;
    function Be(e, t) {
        this.origin = void 0 !== e ? e : new G,
        this.direction = void 0 !== t ? t : new G(0,0,-1)
    }
    Object.assign(Be.prototype, {
        set: function(e, t) {
            return this.origin.copy(e),
            this.direction.copy(t),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.origin.copy(e.origin),
            this.direction.copy(e.direction),
            this
        },
        at: function(e, t) {
            return void 0 === t && (console.warn("THREE.Ray: .at() target is now required"),
            t = new G),
            t.copy(this.direction).multiplyScalar(e).add(this.origin)
        },
        lookAt: function(e) {
            return this.direction.copy(e).sub(this.origin).normalize(),
            this
        },
        recast: function(e) {
            return this.origin.copy(this.at(e, Oe)),
            this
        },
        closestPointToPoint: function(e, t) {
            void 0 === t && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"),
            t = new G),
            t.subVectors(e, this.origin);
            var n = t.dot(this.direction);
            return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin)
        },
        distanceToPoint: function(e) {
            return Math.sqrt(this.distanceSqToPoint(e))
        },
        distanceSqToPoint: function(e) {
            var t = Oe.subVectors(e, this.origin).dot(this.direction);
            return t < 0 ? this.origin.distanceToSquared(e) : (Oe.copy(this.direction).multiplyScalar(t).add(this.origin),
            Oe.distanceToSquared(e))
        },
        distanceSqToSegment: function(e, t, n, r) {
            ke.copy(e).add(t).multiplyScalar(.5),
            De.copy(t).sub(e).normalize(),
            Ie.copy(this.origin).sub(ke);
            var i, a, o, s, l = .5 * e.distanceTo(t), u = -this.direction.dot(De), c = Ie.dot(this.direction), h = -Ie.dot(De), d = Ie.lengthSq(), f = Math.abs(1 - u * u);
            if (f > 0)
                if (a = u * c - h,
                s = l * f,
                (i = u * h - c) >= 0)
                    if (a >= -s)
                        if (a <= s) {
                            var p = 1 / f;
                            o = (i *= p) * (i + u * (a *= p) + 2 * c) + a * (u * i + a + 2 * h) + d
                        } else
                            a = l,
                            o = -(i = Math.max(0, -(u * a + c))) * i + a * (a + 2 * h) + d;
                    else
                        a = -l,
                        o = -(i = Math.max(0, -(u * a + c))) * i + a * (a + 2 * h) + d;
                else
                    a <= -s ? o = -(i = Math.max(0, -(-u * l + c))) * i + (a = i > 0 ? -l : Math.min(Math.max(-l, -h), l)) * (a + 2 * h) + d : a <= s ? (i = 0,
                    o = (a = Math.min(Math.max(-l, -h), l)) * (a + 2 * h) + d) : o = -(i = Math.max(0, -(u * l + c))) * i + (a = i > 0 ? l : Math.min(Math.max(-l, -h), l)) * (a + 2 * h) + d;
            else
                a = u > 0 ? -l : l,
                o = -(i = Math.max(0, -(u * a + c))) * i + a * (a + 2 * h) + d;
            return n && n.copy(this.direction).multiplyScalar(i).add(this.origin),
            r && r.copy(De).multiplyScalar(a).add(ke),
            o
        },
        intersectSphere: function(e, t) {
            Oe.subVectors(e.center, this.origin);
            var n = Oe.dot(this.direction)
              , r = Oe.dot(Oe) - n * n
              , i = e.radius * e.radius;
            if (r > i)
                return null;
            var a = Math.sqrt(i - r)
              , o = n - a
              , s = n + a;
            return o < 0 && s < 0 ? null : o < 0 ? this.at(s, t) : this.at(o, t)
        },
        intersectsSphere: function(e) {
            return this.distanceSqToPoint(e.center) <= e.radius * e.radius
        },
        distanceToPlane: function(e) {
            var t = e.normal.dot(this.direction);
            if (0 === t)
                return 0 === e.distanceToPoint(this.origin) ? 0 : null;
            var n = -(this.origin.dot(e.normal) + e.constant) / t;
            return n >= 0 ? n : null
        },
        intersectPlane: function(e, t) {
            var n = this.distanceToPlane(e);
            return null === n ? null : this.at(n, t)
        },
        intersectsPlane: function(e) {
            var t = e.distanceToPoint(this.origin);
            return 0 === t || e.normal.dot(this.direction) * t < 0
        },
        intersectBox: function(e, t) {
            var n, r, i, a, o, s, l = 1 / this.direction.x, u = 1 / this.direction.y, c = 1 / this.direction.z, h = this.origin;
            return l >= 0 ? (n = (e.min.x - h.x) * l,
            r = (e.max.x - h.x) * l) : (n = (e.max.x - h.x) * l,
            r = (e.min.x - h.x) * l),
            u >= 0 ? (i = (e.min.y - h.y) * u,
            a = (e.max.y - h.y) * u) : (i = (e.max.y - h.y) * u,
            a = (e.min.y - h.y) * u),
            n > a || i > r ? null : ((i > n || n != n) && (n = i),
            (a < r || r != r) && (r = a),
            c >= 0 ? (o = (e.min.z - h.z) * c,
            s = (e.max.z - h.z) * c) : (o = (e.max.z - h.z) * c,
            s = (e.min.z - h.z) * c),
            n > s || o > r ? null : ((o > n || n != n) && (n = o),
            (s < r || r != r) && (r = s),
            r < 0 ? null : this.at(n >= 0 ? n : r, t)))
        },
        intersectsBox: function(e) {
            return null !== this.intersectBox(e, Oe)
        },
        intersectTriangle: function(e, t, n, r, i) {
            Ne.subVectors(t, e),
            Fe.subVectors(n, e),
            Ue.crossVectors(Ne, Fe);
            var a, o = this.direction.dot(Ue);
            if (o > 0) {
                if (r)
                    return null;
                a = 1
            } else {
                if (!(o < 0))
                    return null;
                a = -1,
                o = -o
            }
            Ie.subVectors(this.origin, e);
            var s = a * this.direction.dot(Fe.crossVectors(Ie, Fe));
            if (s < 0)
                return null;
            var l = a * this.direction.dot(Ne.cross(Ie));
            if (l < 0)
                return null;
            if (s + l > o)
                return null;
            var u = -a * Ie.dot(Ue);
            return u < 0 ? null : this.at(u / o, i)
        },
        applyMatrix4: function(e) {
            return this.origin.applyMatrix4(e),
            this.direction.transformDirection(e),
            this
        },
        equals: function(e) {
            return e.origin.equals(this.origin) && e.direction.equals(this.direction)
        }
    });
    var ze = new G
      , Ge = new G
      , He = new P;
    function je(e, t) {
        this.normal = void 0 !== e ? e : new G(1,0,0),
        this.constant = void 0 !== t ? t : 0
    }
    Object.assign(je.prototype, {
        isPlane: !0,
        set: function(e, t) {
            return this.normal.copy(e),
            this.constant = t,
            this
        },
        setComponents: function(e, t, n, r) {
            return this.normal.set(e, t, n),
            this.constant = r,
            this
        },
        setFromNormalAndCoplanarPoint: function(e, t) {
            return this.normal.copy(e),
            this.constant = -t.dot(this.normal),
            this
        },
        setFromCoplanarPoints: function(e, t, n) {
            var r = ze.subVectors(n, t).cross(Ge.subVectors(e, t)).normalize();
            return this.setFromNormalAndCoplanarPoint(r, e),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.normal.copy(e.normal),
            this.constant = e.constant,
            this
        },
        normalize: function() {
            var e = 1 / this.normal.length();
            return this.normal.multiplyScalar(e),
            this.constant *= e,
            this
        },
        negate: function() {
            return this.constant *= -1,
            this.normal.negate(),
            this
        },
        distanceToPoint: function(e) {
            return this.normal.dot(e) + this.constant
        },
        distanceToSphere: function(e) {
            return this.distanceToPoint(e.center) - e.radius
        },
        projectPoint: function(e, t) {
            return void 0 === t && (console.warn("THREE.Plane: .projectPoint() target is now required"),
            t = new G),
            t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)
        },
        intersectLine: function(e, t) {
            void 0 === t && (console.warn("THREE.Plane: .intersectLine() target is now required"),
            t = new G);
            var n = e.delta(ze)
              , r = this.normal.dot(n);
            if (0 === r)
                return 0 === this.distanceToPoint(e.start) ? t.copy(e.start) : void 0;
            var i = -(e.start.dot(this.normal) + this.constant) / r;
            return i < 0 || i > 1 ? void 0 : t.copy(n).multiplyScalar(i).add(e.start)
        },
        intersectsLine: function(e) {
            var t = this.distanceToPoint(e.start)
              , n = this.distanceToPoint(e.end);
            return t < 0 && n > 0 || n < 0 && t > 0
        },
        intersectsBox: function(e) {
            return e.intersectsPlane(this)
        },
        intersectsSphere: function(e) {
            return e.intersectsPlane(this)
        },
        coplanarPoint: function(e) {
            return void 0 === e && (console.warn("THREE.Plane: .coplanarPoint() target is now required"),
            e = new G),
            e.copy(this.normal).multiplyScalar(-this.constant)
        },
        applyMatrix4: function(e, t) {
            var n = t || He.getNormalMatrix(e)
              , r = this.coplanarPoint(ze).applyMatrix4(e)
              , i = this.normal.applyMatrix3(n).normalize();
            return this.constant = -r.dot(i),
            this
        },
        translate: function(e) {
            return this.constant -= e.dot(this.normal),
            this
        },
        equals: function(e) {
            return e.normal.equals(this.normal) && e.constant === this.constant
        }
    });
    var Ve = new G
      , We = new G
      , qe = new G
      , Ke = new G
      , Ye = new G
      , Xe = new G
      , Ze = new G
      , Je = new G
      , Qe = new G
      , $e = new G;
    function et(e, t, n) {
        this.a = void 0 !== e ? e : new G,
        this.b = void 0 !== t ? t : new G,
        this.c = void 0 !== n ? n : new G
    }
    Object.assign(et, {
        getNormal: function(e, t, n, r) {
            void 0 === r && (console.warn("THREE.Triangle: .getNormal() target is now required"),
            r = new G),
            r.subVectors(n, t),
            Ve.subVectors(e, t),
            r.cross(Ve);
            var i = r.lengthSq();
            return i > 0 ? r.multiplyScalar(1 / Math.sqrt(i)) : r.set(0, 0, 0)
        },
        getBarycoord: function(e, t, n, r, i) {
            Ve.subVectors(r, t),
            We.subVectors(n, t),
            qe.subVectors(e, t);
            var a = Ve.dot(Ve)
              , o = Ve.dot(We)
              , s = Ve.dot(qe)
              , l = We.dot(We)
              , u = We.dot(qe)
              , c = a * l - o * o;
            if (void 0 === i && (console.warn("THREE.Triangle: .getBarycoord() target is now required"),
            i = new G),
            0 === c)
                return i.set(-2, -1, -1);
            var h = 1 / c
              , d = (l * s - o * u) * h
              , f = (a * u - o * s) * h;
            return i.set(1 - d - f, f, d)
        },
        containsPoint: function(e, t, n, r) {
            return et.getBarycoord(e, t, n, r, Ke),
            Ke.x >= 0 && Ke.y >= 0 && Ke.x + Ke.y <= 1
        },
        getUV: function(e, t, n, r, i, a, o, s) {
            return this.getBarycoord(e, t, n, r, Ke),
            s.set(0, 0),
            s.addScaledVector(i, Ke.x),
            s.addScaledVector(a, Ke.y),
            s.addScaledVector(o, Ke.z),
            s
        },
        isFrontFacing: function(e, t, n, r) {
            return Ve.subVectors(n, t),
            We.subVectors(e, t),
            Ve.cross(We).dot(r) < 0
        }
    }),
    Object.assign(et.prototype, {
        set: function(e, t, n) {
            return this.a.copy(e),
            this.b.copy(t),
            this.c.copy(n),
            this
        },
        setFromPointsAndIndices: function(e, t, n, r) {
            return this.a.copy(e[t]),
            this.b.copy(e[n]),
            this.c.copy(e[r]),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.a.copy(e.a),
            this.b.copy(e.b),
            this.c.copy(e.c),
            this
        },
        getArea: function() {
            return Ve.subVectors(this.c, this.b),
            We.subVectors(this.a, this.b),
            .5 * Ve.cross(We).length()
        },
        getMidpoint: function(e) {
            return void 0 === e && (console.warn("THREE.Triangle: .getMidpoint() target is now required"),
            e = new G),
            e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
        },
        getNormal: function(e) {
            return et.getNormal(this.a, this.b, this.c, e)
        },
        getPlane: function(e) {
            return void 0 === e && (console.warn("THREE.Triangle: .getPlane() target is now required"),
            e = new je),
            e.setFromCoplanarPoints(this.a, this.b, this.c)
        },
        getBarycoord: function(e, t) {
            return et.getBarycoord(e, this.a, this.b, this.c, t)
        },
        getUV: function(e, t, n, r, i) {
            return et.getUV(e, this.a, this.b, this.c, t, n, r, i)
        },
        containsPoint: function(e) {
            return et.containsPoint(e, this.a, this.b, this.c)
        },
        isFrontFacing: function(e) {
            return et.isFrontFacing(this.a, this.b, this.c, e)
        },
        intersectsBox: function(e) {
            return e.intersectsTriangle(this)
        },
        closestPointToPoint: function(e, t) {
            void 0 === t && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),
            t = new G);
            var n, r, i = this.a, a = this.b, o = this.c;
            Ye.subVectors(a, i),
            Xe.subVectors(o, i),
            Je.subVectors(e, i);
            var s = Ye.dot(Je)
              , l = Xe.dot(Je);
            if (s <= 0 && l <= 0)
                return t.copy(i);
            Qe.subVectors(e, a);
            var u = Ye.dot(Qe)
              , c = Xe.dot(Qe);
            if (u >= 0 && c <= u)
                return t.copy(a);
            var h = s * c - u * l;
            if (h <= 0 && s >= 0 && u <= 0)
                return n = s / (s - u),
                t.copy(i).addScaledVector(Ye, n);
            $e.subVectors(e, o);
            var d = Ye.dot($e)
              , f = Xe.dot($e);
            if (f >= 0 && d <= f)
                return t.copy(o);
            var p = d * l - s * f;
            if (p <= 0 && l >= 0 && f <= 0)
                return r = l / (l - f),
                t.copy(i).addScaledVector(Xe, r);
            var m = u * f - d * c;
            if (m <= 0 && c - u >= 0 && d - f >= 0)
                return Ze.subVectors(o, a),
                r = (c - u) / (c - u + (d - f)),
                t.copy(a).addScaledVector(Ze, r);
            var g = 1 / (m + p + h);
            return n = p * g,
            r = h * g,
            t.copy(i).addScaledVector(Ye, n).addScaledVector(Xe, r)
        },
        equals: function(e) {
            return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
        }
    });
    var tt = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    }
      , nt = {
        h: 0,
        s: 0,
        l: 0
    }
      , rt = {
        h: 0,
        s: 0,
        l: 0
    };
    function it(e, t, n) {
        return void 0 === t && void 0 === n ? this.set(e) : this.setRGB(e, t, n)
    }
    function at(e, t, n) {
        return n < 0 && (n += 1),
        n > 1 && (n -= 1),
        n < 1 / 6 ? e + 6 * (t - e) * n : n < .5 ? t : n < 2 / 3 ? e + 6 * (t - e) * (2 / 3 - n) : e
    }
    function ot(e) {
        return e < .04045 ? .0773993808 * e : Math.pow(.9478672986 * e + .0521327014, 2.4)
    }
    function st(e) {
        return e < .0031308 ? 12.92 * e : 1.055 * Math.pow(e, .41666) - .055
    }
    function lt(e, t, n, r, i, a) {
        this.a = e,
        this.b = t,
        this.c = n,
        this.normal = r && r.isVector3 ? r : new G,
        this.vertexNormals = Array.isArray(r) ? r : [],
        this.color = i && i.isColor ? i : new it,
        this.vertexColors = Array.isArray(i) ? i : [],
        this.materialIndex = void 0 !== a ? a : 0
    }
    Object.assign(it.prototype, {
        isColor: !0,
        r: 1,
        g: 1,
        b: 1,
        set: function(e) {
            return e && e.isColor ? this.copy(e) : "number" == typeof e ? this.setHex(e) : "string" == typeof e && this.setStyle(e),
            this
        },
        setScalar: function(e) {
            return this.r = e,
            this.g = e,
            this.b = e,
            this
        },
        setHex: function(e) {
            return e = Math.floor(e),
            this.r = (e >> 16 & 255) / 255,
            this.g = (e >> 8 & 255) / 255,
            this.b = (255 & e) / 255,
            this
        },
        setRGB: function(e, t, n) {
            return this.r = e,
            this.g = t,
            this.b = n,
            this
        },
        setHSL: function(e, t, n) {
            if (e = L.euclideanModulo(e, 1),
            t = L.clamp(t, 0, 1),
            n = L.clamp(n, 0, 1),
            0 === t)
                this.r = this.g = this.b = n;
            else {
                var r = n <= .5 ? n * (1 + t) : n + t - n * t
                  , i = 2 * n - r;
                this.r = at(i, r, e + 1 / 3),
                this.g = at(i, r, e),
                this.b = at(i, r, e - 1 / 3)
            }
            return this
        },
        setStyle: function(e) {
            function t(t) {
                void 0 !== t && parseFloat(t) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.")
            }
            var n;
            if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)) {
                var r, i = n[1], a = n[2];
                switch (i) {
                case "rgb":
                case "rgba":
                    if (r = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                        return this.r = Math.min(255, parseInt(r[1], 10)) / 255,
                        this.g = Math.min(255, parseInt(r[2], 10)) / 255,
                        this.b = Math.min(255, parseInt(r[3], 10)) / 255,
                        t(r[5]),
                        this;
                    if (r = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                        return this.r = Math.min(100, parseInt(r[1], 10)) / 100,
                        this.g = Math.min(100, parseInt(r[2], 10)) / 100,
                        this.b = Math.min(100, parseInt(r[3], 10)) / 100,
                        t(r[5]),
                        this;
                    break;
                case "hsl":
                case "hsla":
                    if (r = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)) {
                        var o = parseFloat(r[1]) / 360
                          , s = parseInt(r[2], 10) / 100
                          , l = parseInt(r[3], 10) / 100;
                        return t(r[5]),
                        this.setHSL(o, s, l)
                    }
                }
            } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(e)) {
                var u = n[1]
                  , c = u.length;
                if (3 === c)
                    return this.r = parseInt(u.charAt(0) + u.charAt(0), 16) / 255,
                    this.g = parseInt(u.charAt(1) + u.charAt(1), 16) / 255,
                    this.b = parseInt(u.charAt(2) + u.charAt(2), 16) / 255,
                    this;
                if (6 === c)
                    return this.r = parseInt(u.charAt(0) + u.charAt(1), 16) / 255,
                    this.g = parseInt(u.charAt(2) + u.charAt(3), 16) / 255,
                    this.b = parseInt(u.charAt(4) + u.charAt(5), 16) / 255,
                    this
            }
            return e && e.length > 0 ? this.setColorName(e) : this
        },
        setColorName: function(e) {
            var t = tt[e];
            return void 0 !== t ? this.setHex(t) : console.warn("THREE.Color: Unknown color " + e),
            this
        },
        clone: function() {
            return new this.constructor(this.r,this.g,this.b)
        },
        copy: function(e) {
            return this.r = e.r,
            this.g = e.g,
            this.b = e.b,
            this
        },
        copyGammaToLinear: function(e, t) {
            return void 0 === t && (t = 2),
            this.r = Math.pow(e.r, t),
            this.g = Math.pow(e.g, t),
            this.b = Math.pow(e.b, t),
            this
        },
        copyLinearToGamma: function(e, t) {
            void 0 === t && (t = 2);
            var n = t > 0 ? 1 / t : 1;
            return this.r = Math.pow(e.r, n),
            this.g = Math.pow(e.g, n),
            this.b = Math.pow(e.b, n),
            this
        },
        convertGammaToLinear: function(e) {
            return this.copyGammaToLinear(this, e),
            this
        },
        convertLinearToGamma: function(e) {
            return this.copyLinearToGamma(this, e),
            this
        },
        copySRGBToLinear: function(e) {
            return this.r = ot(e.r),
            this.g = ot(e.g),
            this.b = ot(e.b),
            this
        },
        copyLinearToSRGB: function(e) {
            return this.r = st(e.r),
            this.g = st(e.g),
            this.b = st(e.b),
            this
        },
        convertSRGBToLinear: function() {
            return this.copySRGBToLinear(this),
            this
        },
        convertLinearToSRGB: function() {
            return this.copyLinearToSRGB(this),
            this
        },
        getHex: function() {
            return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
        },
        getHexString: function() {
            return ("000000" + this.getHex().toString(16)).slice(-6)
        },
        getHSL: function(e) {
            void 0 === e && (console.warn("THREE.Color: .getHSL() target is now required"),
            e = {
                h: 0,
                s: 0,
                l: 0
            });
            var t, n, r = this.r, i = this.g, a = this.b, o = Math.max(r, i, a), s = Math.min(r, i, a), l = (s + o) / 2;
            if (s === o)
                t = 0,
                n = 0;
            else {
                var u = o - s;
                switch (n = l <= .5 ? u / (o + s) : u / (2 - o - s),
                o) {
                case r:
                    t = (i - a) / u + (i < a ? 6 : 0);
                    break;
                case i:
                    t = (a - r) / u + 2;
                    break;
                case a:
                    t = (r - i) / u + 4
                }
                t /= 6
            }
            return e.h = t,
            e.s = n,
            e.l = l,
            e
        },
        getStyle: function() {
            return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
        },
        offsetHSL: function(e, t, n) {
            return this.getHSL(nt),
            nt.h += e,
            nt.s += t,
            nt.l += n,
            this.setHSL(nt.h, nt.s, nt.l),
            this
        },
        add: function(e) {
            return this.r += e.r,
            this.g += e.g,
            this.b += e.b,
            this
        },
        addColors: function(e, t) {
            return this.r = e.r + t.r,
            this.g = e.g + t.g,
            this.b = e.b + t.b,
            this
        },
        addScalar: function(e) {
            return this.r += e,
            this.g += e,
            this.b += e,
            this
        },
        sub: function(e) {
            return this.r = Math.max(0, this.r - e.r),
            this.g = Math.max(0, this.g - e.g),
            this.b = Math.max(0, this.b - e.b),
            this
        },
        multiply: function(e) {
            return this.r *= e.r,
            this.g *= e.g,
            this.b *= e.b,
            this
        },
        multiplyScalar: function(e) {
            return this.r *= e,
            this.g *= e,
            this.b *= e,
            this
        },
        lerp: function(e, t) {
            return this.r += (e.r - this.r) * t,
            this.g += (e.g - this.g) * t,
            this.b += (e.b - this.b) * t,
            this
        },
        lerpHSL: function(e, t) {
            this.getHSL(nt),
            e.getHSL(rt);
            var n = L.lerp(nt.h, rt.h, t)
              , r = L.lerp(nt.s, rt.s, t)
              , i = L.lerp(nt.l, rt.l, t);
            return this.setHSL(n, r, i),
            this
        },
        equals: function(e) {
            return e.r === this.r && e.g === this.g && e.b === this.b
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0),
            this.r = e[t],
            this.g = e[t + 1],
            this.b = e[t + 2],
            this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []),
            void 0 === t && (t = 0),
            e[t] = this.r,
            e[t + 1] = this.g,
            e[t + 2] = this.b,
            e
        },
        toJSON: function() {
            return this.getHex()
        }
    }),
    it.NAMES = tt,
    Object.assign(lt.prototype, {
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            this.a = e.a,
            this.b = e.b,
            this.c = e.c,
            this.normal.copy(e.normal),
            this.color.copy(e.color),
            this.materialIndex = e.materialIndex;
            for (var t = 0, n = e.vertexNormals.length; t < n; t++)
                this.vertexNormals[t] = e.vertexNormals[t].clone();
            for (t = 0,
            n = e.vertexColors.length; t < n; t++)
                this.vertexColors[t] = e.vertexColors[t].clone();
            return this
        }
    });
    var ut = 0;
    function ct() {
        Object.defineProperty(this, "id", {
            value: ut++
        }),
        this.uuid = L.generateUUID(),
        this.name = "",
        this.type = "Material",
        this.fog = !0,
        this.blending = 1,
        this.side = 0,
        this.flatShading = !1,
        this.vertexColors = !1,
        this.opacity = 1,
        this.transparent = !1,
        this.blendSrc = 204,
        this.blendDst = 205,
        this.blendEquation = 100,
        this.blendSrcAlpha = null,
        this.blendDstAlpha = null,
        this.blendEquationAlpha = null,
        this.depthFunc = 3,
        this.depthTest = !0,
        this.depthWrite = !0,
        this.stencilWriteMask = 255,
        this.stencilFunc = 519,
        this.stencilRef = 0,
        this.stencilFuncMask = 255,
        this.stencilFail = 7680,
        this.stencilZFail = 7680,
        this.stencilZPass = 7680,
        this.stencilWrite = !1,
        this.clippingPlanes = null,
        this.clipIntersection = !1,
        this.clipShadows = !1,
        this.shadowSide = null,
        this.colorWrite = !0,
        this.precision = null,
        this.polygonOffset = !1,
        this.polygonOffsetFactor = 0,
        this.polygonOffsetUnits = 0,
        this.dithering = !1,
        this.alphaTest = 0,
        this.premultipliedAlpha = !1,
        this.visible = !0,
        this.toneMapped = !0,
        this.userData = {},
        this.version = 0
    }
    function ht(e) {
        ct.call(this),
        this.type = "MeshBasicMaterial",
        this.color = new it(16777215),
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = 0,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.setValues(e)
    }
    ct.prototype = Object.assign(Object.create(S.prototype), {
        constructor: ct,
        isMaterial: !0,
        onBeforeCompile: function() {},
        setValues: function(e) {
            if (void 0 !== e)
                for (var t in e) {
                    var n = e[t];
                    if (void 0 !== n)
                        if ("shading" !== t) {
                            var r = this[t];
                            void 0 !== r ? r && r.isColor ? r.set(n) : r && r.isVector3 && n && n.isVector3 ? r.copy(n) : this[t] = n : console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.")
                        } else
                            console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                            this.flatShading = 1 === n;
                    else
                        console.warn("THREE.Material: '" + t + "' parameter is undefined.")
                }
        },
        toJSON: function(e) {
            var t = void 0 === e || "string" == typeof e;
            t && (e = {
                textures: {},
                images: {}
            });
            var n = {
                metadata: {
                    version: 4.5,
                    type: "Material",
                    generator: "Material.toJSON"
                }
            };
            function r(e) {
                var t = [];
                for (var n in e) {
                    var r = e[n];
                    delete r.metadata,
                    t.push(r)
                }
                return t
            }
            if (n.uuid = this.uuid,
            n.type = this.type,
            "" !== this.name && (n.name = this.name),
            this.color && this.color.isColor && (n.color = this.color.getHex()),
            void 0 !== this.roughness && (n.roughness = this.roughness),
            void 0 !== this.metalness && (n.metalness = this.metalness),
            this.sheen && this.sheen.isColor && (n.sheen = this.sheen.getHex()),
            this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()),
            this.emissiveIntensity && 1 !== this.emissiveIntensity && (n.emissiveIntensity = this.emissiveIntensity),
            this.specular && this.specular.isColor && (n.specular = this.specular.getHex()),
            void 0 !== this.shininess && (n.shininess = this.shininess),
            void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat),
            void 0 !== this.clearcoatRoughness && (n.clearcoatRoughness = this.clearcoatRoughness),
            this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
            this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid),
            this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid,
            n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()),
            this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid),
            this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid),
            this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid),
            this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid),
            this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid,
            n.aoMapIntensity = this.aoMapIntensity),
            this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid,
            n.bumpScale = this.bumpScale),
            this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid,
            n.normalMapType = this.normalMapType,
            n.normalScale = this.normalScale.toArray()),
            this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid,
            n.displacementScale = this.displacementScale,
            n.displacementBias = this.displacementBias),
            this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid),
            this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid),
            this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid),
            this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid),
            this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid,
            n.reflectivity = this.reflectivity,
            n.refractionRatio = this.refractionRatio,
            void 0 !== this.combine && (n.combine = this.combine),
            void 0 !== this.envMapIntensity && (n.envMapIntensity = this.envMapIntensity)),
            this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid),
            void 0 !== this.size && (n.size = this.size),
            void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation),
            1 !== this.blending && (n.blending = this.blending),
            !0 === this.flatShading && (n.flatShading = this.flatShading),
            0 !== this.side && (n.side = this.side),
            this.vertexColors && (n.vertexColors = !0),
            this.opacity < 1 && (n.opacity = this.opacity),
            !0 === this.transparent && (n.transparent = this.transparent),
            n.depthFunc = this.depthFunc,
            n.depthTest = this.depthTest,
            n.depthWrite = this.depthWrite,
            n.stencilWrite = this.stencilWrite,
            n.stencilWriteMask = this.stencilWriteMask,
            n.stencilFunc = this.stencilFunc,
            n.stencilRef = this.stencilRef,
            n.stencilFuncMask = this.stencilFuncMask,
            n.stencilFail = this.stencilFail,
            n.stencilZFail = this.stencilZFail,
            n.stencilZPass = this.stencilZPass,
            this.rotation && 0 !== this.rotation && (n.rotation = this.rotation),
            !0 === this.polygonOffset && (n.polygonOffset = !0),
            0 !== this.polygonOffsetFactor && (n.polygonOffsetFactor = this.polygonOffsetFactor),
            0 !== this.polygonOffsetUnits && (n.polygonOffsetUnits = this.polygonOffsetUnits),
            this.linewidth && 1 !== this.linewidth && (n.linewidth = this.linewidth),
            void 0 !== this.dashSize && (n.dashSize = this.dashSize),
            void 0 !== this.gapSize && (n.gapSize = this.gapSize),
            void 0 !== this.scale && (n.scale = this.scale),
            !0 === this.dithering && (n.dithering = !0),
            this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
            !0 === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha),
            !0 === this.wireframe && (n.wireframe = this.wireframe),
            this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth),
            "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap),
            "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin),
            !0 === this.morphTargets && (n.morphTargets = !0),
            !0 === this.morphNormals && (n.morphNormals = !0),
            !0 === this.skinning && (n.skinning = !0),
            !1 === this.visible && (n.visible = !1),
            !1 === this.toneMapped && (n.toneMapped = !1),
            "{}" !== JSON.stringify(this.userData) && (n.userData = this.userData),
            t) {
                var i = r(e.textures)
                  , a = r(e.images);
                i.length > 0 && (n.textures = i),
                a.length > 0 && (n.images = a)
            }
            return n
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            this.name = e.name,
            this.fog = e.fog,
            this.blending = e.blending,
            this.side = e.side,
            this.flatShading = e.flatShading,
            this.vertexColors = e.vertexColors,
            this.opacity = e.opacity,
            this.transparent = e.transparent,
            this.blendSrc = e.blendSrc,
            this.blendDst = e.blendDst,
            this.blendEquation = e.blendEquation,
            this.blendSrcAlpha = e.blendSrcAlpha,
            this.blendDstAlpha = e.blendDstAlpha,
            this.blendEquationAlpha = e.blendEquationAlpha,
            this.depthFunc = e.depthFunc,
            this.depthTest = e.depthTest,
            this.depthWrite = e.depthWrite,
            this.stencilWriteMask = e.stencilWriteMask,
            this.stencilFunc = e.stencilFunc,
            this.stencilRef = e.stencilRef,
            this.stencilFuncMask = e.stencilFuncMask,
            this.stencilFail = e.stencilFail,
            this.stencilZFail = e.stencilZFail,
            this.stencilZPass = e.stencilZPass,
            this.stencilWrite = e.stencilWrite;
            var t = e.clippingPlanes
              , n = null;
            if (null !== t) {
                var r = t.length;
                n = new Array(r);
                for (var i = 0; i !== r; ++i)
                    n[i] = t[i].clone()
            }
            return this.clippingPlanes = n,
            this.clipIntersection = e.clipIntersection,
            this.clipShadows = e.clipShadows,
            this.shadowSide = e.shadowSide,
            this.colorWrite = e.colorWrite,
            this.precision = e.precision,
            this.polygonOffset = e.polygonOffset,
            this.polygonOffsetFactor = e.polygonOffsetFactor,
            this.polygonOffsetUnits = e.polygonOffsetUnits,
            this.dithering = e.dithering,
            this.alphaTest = e.alphaTest,
            this.premultipliedAlpha = e.premultipliedAlpha,
            this.visible = e.visible,
            this.toneMapped = e.toneMapped,
            this.userData = JSON.parse(JSON.stringify(e.userData)),
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    Object.defineProperty(ct.prototype, "needsUpdate", {
        set: function(e) {
            !0 === e && this.version++
        }
    }),
    ht.prototype = Object.create(ct.prototype),
    ht.prototype.constructor = ht,
    ht.prototype.isMeshBasicMaterial = !0,
    ht.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.map = e.map,
        this.lightMap = e.lightMap,
        this.lightMapIntensity = e.lightMapIntensity,
        this.aoMap = e.aoMap,
        this.aoMapIntensity = e.aoMapIntensity,
        this.specularMap = e.specularMap,
        this.alphaMap = e.alphaMap,
        this.envMap = e.envMap,
        this.combine = e.combine,
        this.reflectivity = e.reflectivity,
        this.refractionRatio = e.refractionRatio,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.wireframeLinecap = e.wireframeLinecap,
        this.wireframeLinejoin = e.wireframeLinejoin,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this
    }
    ;
    var dt = new G;
    function ft(e, t, n) {
        if (Array.isArray(e))
            throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "",
        this.array = e,
        this.itemSize = t,
        this.count = void 0 !== e ? e.length / t : 0,
        this.normalized = !0 === n,
        this.usage = 35044,
        this.updateRange = {
            offset: 0,
            count: -1
        },
        this.version = 0
    }
    function pt(e, t, n) {
        ft.call(this, new Int8Array(e), t, n)
    }
    function mt(e, t, n) {
        ft.call(this, new Uint8Array(e), t, n)
    }
    function gt(e, t, n) {
        ft.call(this, new Uint8ClampedArray(e), t, n)
    }
    function vt(e, t, n) {
        ft.call(this, new Int16Array(e), t, n)
    }
    function yt(e, t, n) {
        ft.call(this, new Uint16Array(e), t, n)
    }
    function bt(e, t, n) {
        ft.call(this, new Int32Array(e), t, n)
    }
    function xt(e, t, n) {
        ft.call(this, new Uint32Array(e), t, n)
    }
    function wt(e, t, n) {
        ft.call(this, new Float32Array(e), t, n)
    }
    function _t(e, t, n) {
        ft.call(this, new Float64Array(e), t, n)
    }
    function Et() {
        this.vertices = [],
        this.normals = [],
        this.colors = [],
        this.uvs = [],
        this.uvs2 = [],
        this.groups = [],
        this.morphTargets = {},
        this.skinWeights = [],
        this.skinIndices = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.verticesNeedUpdate = !1,
        this.normalsNeedUpdate = !1,
        this.colorsNeedUpdate = !1,
        this.uvsNeedUpdate = !1,
        this.groupsNeedUpdate = !1
    }
    function Tt(e) {
        if (0 === e.length)
            return -1 / 0;
        for (var t = e[0], n = 1, r = e.length; n < r; ++n)
            e[n] > t && (t = e[n]);
        return t
    }
    Object.defineProperty(ft.prototype, "needsUpdate", {
        set: function(e) {
            !0 === e && this.version++
        }
    }),
    Object.assign(ft.prototype, {
        isBufferAttribute: !0,
        onUploadCallback: function() {},
        setUsage: function(e) {
            return this.usage = e,
            this
        },
        copy: function(e) {
            return this.name = e.name,
            this.array = new e.array.constructor(e.array),
            this.itemSize = e.itemSize,
            this.count = e.count,
            this.normalized = e.normalized,
            this.usage = e.usage,
            this
        },
        copyAt: function(e, t, n) {
            e *= this.itemSize,
            n *= t.itemSize;
            for (var r = 0, i = this.itemSize; r < i; r++)
                this.array[e + r] = t.array[n + r];
            return this
        },
        copyArray: function(e) {
            return this.array.set(e),
            this
        },
        copyColorsArray: function(e) {
            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                var a = e[r];
                void 0 === a && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", r),
                a = new it),
                t[n++] = a.r,
                t[n++] = a.g,
                t[n++] = a.b
            }
            return this
        },
        copyVector2sArray: function(e) {
            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                var a = e[r];
                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", r),
                a = new C),
                t[n++] = a.x,
                t[n++] = a.y
            }
            return this
        },
        copyVector3sArray: function(e) {
            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                var a = e[r];
                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", r),
                a = new G),
                t[n++] = a.x,
                t[n++] = a.y,
                t[n++] = a.z
            }
            return this
        },
        copyVector4sArray: function(e) {
            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                var a = e[r];
                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", r),
                a = new I),
                t[n++] = a.x,
                t[n++] = a.y,
                t[n++] = a.z,
                t[n++] = a.w
            }
            return this
        },
        applyMatrix3: function(e) {
            for (var t = 0, n = this.count; t < n; t++)
                dt.x = this.getX(t),
                dt.y = this.getY(t),
                dt.z = this.getZ(t),
                dt.applyMatrix3(e),
                this.setXYZ(t, dt.x, dt.y, dt.z);
            return this
        },
        applyMatrix4: function(e) {
            for (var t = 0, n = this.count; t < n; t++)
                dt.x = this.getX(t),
                dt.y = this.getY(t),
                dt.z = this.getZ(t),
                dt.applyMatrix4(e),
                this.setXYZ(t, dt.x, dt.y, dt.z);
            return this
        },
        applyNormalMatrix: function(e) {
            for (var t = 0, n = this.count; t < n; t++)
                dt.x = this.getX(t),
                dt.y = this.getY(t),
                dt.z = this.getZ(t),
                dt.applyNormalMatrix(e),
                this.setXYZ(t, dt.x, dt.y, dt.z);
            return this
        },
        transformDirection: function(e) {
            for (var t = 0, n = this.count; t < n; t++)
                dt.x = this.getX(t),
                dt.y = this.getY(t),
                dt.z = this.getZ(t),
                dt.transformDirection(e),
                this.setXYZ(t, dt.x, dt.y, dt.z);
            return this
        },
        set: function(e, t) {
            return void 0 === t && (t = 0),
            this.array.set(e, t),
            this
        },
        getX: function(e) {
            return this.array[e * this.itemSize]
        },
        setX: function(e, t) {
            return this.array[e * this.itemSize] = t,
            this
        },
        getY: function(e) {
            return this.array[e * this.itemSize + 1]
        },
        setY: function(e, t) {
            return this.array[e * this.itemSize + 1] = t,
            this
        },
        getZ: function(e) {
            return this.array[e * this.itemSize + 2]
        },
        setZ: function(e, t) {
            return this.array[e * this.itemSize + 2] = t,
            this
        },
        getW: function(e) {
            return this.array[e * this.itemSize + 3]
        },
        setW: function(e, t) {
            return this.array[e * this.itemSize + 3] = t,
            this
        },
        setXY: function(e, t, n) {
            return e *= this.itemSize,
            this.array[e + 0] = t,
            this.array[e + 1] = n,
            this
        },
        setXYZ: function(e, t, n, r) {
            return e *= this.itemSize,
            this.array[e + 0] = t,
            this.array[e + 1] = n,
            this.array[e + 2] = r,
            this
        },
        setXYZW: function(e, t, n, r, i) {
            return e *= this.itemSize,
            this.array[e + 0] = t,
            this.array[e + 1] = n,
            this.array[e + 2] = r,
            this.array[e + 3] = i,
            this
        },
        onUpload: function(e) {
            return this.onUploadCallback = e,
            this
        },
        clone: function() {
            return new this.constructor(this.array,this.itemSize).copy(this)
        },
        toJSON: function() {
            return {
                itemSize: this.itemSize,
                type: this.array.constructor.name,
                array: Array.prototype.slice.call(this.array),
                normalized: this.normalized
            }
        }
    }),
    pt.prototype = Object.create(ft.prototype),
    pt.prototype.constructor = pt,
    mt.prototype = Object.create(ft.prototype),
    mt.prototype.constructor = mt,
    gt.prototype = Object.create(ft.prototype),
    gt.prototype.constructor = gt,
    vt.prototype = Object.create(ft.prototype),
    vt.prototype.constructor = vt,
    yt.prototype = Object.create(ft.prototype),
    yt.prototype.constructor = yt,
    bt.prototype = Object.create(ft.prototype),
    bt.prototype.constructor = bt,
    xt.prototype = Object.create(ft.prototype),
    xt.prototype.constructor = xt,
    wt.prototype = Object.create(ft.prototype),
    wt.prototype.constructor = wt,
    _t.prototype = Object.create(ft.prototype),
    _t.prototype.constructor = _t,
    Object.assign(Et.prototype, {
        computeGroups: function(e) {
            for (var t, n = [], r = void 0, i = e.faces, a = 0; a < i.length; a++) {
                var o = i[a];
                o.materialIndex !== r && (r = o.materialIndex,
                void 0 !== t && (t.count = 3 * a - t.start,
                n.push(t)),
                t = {
                    start: 3 * a,
                    materialIndex: r
                })
            }
            void 0 !== t && (t.count = 3 * a - t.start,
            n.push(t)),
            this.groups = n
        },
        fromGeometry: function(e) {
            var t, n = e.faces, r = e.vertices, i = e.faceVertexUvs, a = i[0] && i[0].length > 0, o = i[1] && i[1].length > 0, s = e.morphTargets, l = s.length;
            if (l > 0) {
                t = [];
                for (var u = 0; u < l; u++)
                    t[u] = {
                        name: s[u].name,
                        data: []
                    };
                this.morphTargets.position = t
            }
            var c, h = e.morphNormals, d = h.length;
            if (d > 0) {
                c = [];
                for (u = 0; u < d; u++)
                    c[u] = {
                        name: h[u].name,
                        data: []
                    };
                this.morphTargets.normal = c
            }
            var f = e.skinIndices
              , p = e.skinWeights
              , m = f.length === r.length
              , g = p.length === r.length;
            r.length > 0 && 0 === n.length && console.error("THREE.DirectGeometry: Faceless geometries are not supported.");
            for (u = 0; u < n.length; u++) {
                var v = n[u];
                this.vertices.push(r[v.a], r[v.b], r[v.c]);
                var y = v.vertexNormals;
                if (3 === y.length)
                    this.normals.push(y[0], y[1], y[2]);
                else {
                    var b = v.normal;
                    this.normals.push(b, b, b)
                }
                var x, w = v.vertexColors;
                if (3 === w.length)
                    this.colors.push(w[0], w[1], w[2]);
                else {
                    var _ = v.color;
                    this.colors.push(_, _, _)
                }
                if (!0 === a)
                    void 0 !== (x = i[0][u]) ? this.uvs.push(x[0], x[1], x[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", u),
                    this.uvs.push(new C, new C, new C));
                if (!0 === o)
                    void 0 !== (x = i[1][u]) ? this.uvs2.push(x[0], x[1], x[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", u),
                    this.uvs2.push(new C, new C, new C));
                for (var E = 0; E < l; E++) {
                    var T = s[E].vertices;
                    t[E].data.push(T[v.a], T[v.b], T[v.c])
                }
                for (E = 0; E < d; E++) {
                    var S = h[E].vertexNormals[u];
                    c[E].data.push(S.a, S.b, S.c)
                }
                m && this.skinIndices.push(f[v.a], f[v.b], f[v.c]),
                g && this.skinWeights.push(p[v.a], p[v.b], p[v.c])
            }
            return this.computeGroups(e),
            this.verticesNeedUpdate = e.verticesNeedUpdate,
            this.normalsNeedUpdate = e.normalsNeedUpdate,
            this.colorsNeedUpdate = e.colorsNeedUpdate,
            this.uvsNeedUpdate = e.uvsNeedUpdate,
            this.groupsNeedUpdate = e.groupsNeedUpdate,
            null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
            null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
            this
        }
    });
    var St = 1
      , Mt = new X
      , At = new fe
      , Rt = new G
      , Lt = new Re
      , Ct = new Re
      , Pt = new G;
    function Ot() {
        Object.defineProperty(this, "id", {
            value: St += 2
        }),
        this.uuid = L.generateUUID(),
        this.name = "",
        this.type = "BufferGeometry",
        this.index = null,
        this.attributes = {},
        this.morphAttributes = {},
        this.morphTargetsRelative = !1,
        this.groups = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.drawRange = {
            start: 0,
            count: 1 / 0
        },
        this.userData = {}
    }
    Ot.prototype = Object.assign(Object.create(S.prototype), {
        constructor: Ot,
        isBufferGeometry: !0,
        getIndex: function() {
            return this.index
        },
        setIndex: function(e) {
            Array.isArray(e) ? this.index = new (Tt(e) > 65535 ? xt : yt)(e,1) : this.index = e
        },
        getAttribute: function(e) {
            return this.attributes[e]
        },
        setAttribute: function(e, t) {
            return this.attributes[e] = t,
            this
        },
        deleteAttribute: function(e) {
            return delete this.attributes[e],
            this
        },
        addGroup: function(e, t, n) {
            this.groups.push({
                start: e,
                count: t,
                materialIndex: void 0 !== n ? n : 0
            })
        },
        clearGroups: function() {
            this.groups = []
        },
        setDrawRange: function(e, t) {
            this.drawRange.start = e,
            this.drawRange.count = t
        },
        applyMatrix4: function(e) {
            var t = this.attributes.position;
            void 0 !== t && (t.applyMatrix4(e),
            t.needsUpdate = !0);
            var n = this.attributes.normal;
            if (void 0 !== n) {
                var r = (new P).getNormalMatrix(e);
                n.applyNormalMatrix(r),
                n.needsUpdate = !0
            }
            var i = this.attributes.tangent;
            return void 0 !== i && (i.transformDirection(e),
            i.needsUpdate = !0),
            null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this
        },
        rotateX: function(e) {
            return Mt.makeRotationX(e),
            this.applyMatrix4(Mt),
            this
        },
        rotateY: function(e) {
            return Mt.makeRotationY(e),
            this.applyMatrix4(Mt),
            this
        },
        rotateZ: function(e) {
            return Mt.makeRotationZ(e),
            this.applyMatrix4(Mt),
            this
        },
        translate: function(e, t, n) {
            return Mt.makeTranslation(e, t, n),
            this.applyMatrix4(Mt),
            this
        },
        scale: function(e, t, n) {
            return Mt.makeScale(e, t, n),
            this.applyMatrix4(Mt),
            this
        },
        lookAt: function(e) {
            return At.lookAt(e),
            At.updateMatrix(),
            this.applyMatrix4(At.matrix),
            this
        },
        center: function() {
            return this.computeBoundingBox(),
            this.boundingBox.getCenter(Rt).negate(),
            this.translate(Rt.x, Rt.y, Rt.z),
            this
        },
        setFromObject: function(e) {
            var t = e.geometry;
            if (e.isPoints || e.isLine) {
                var n = new wt(3 * t.vertices.length,3)
                  , r = new wt(3 * t.colors.length,3);
                if (this.setAttribute("position", n.copyVector3sArray(t.vertices)),
                this.setAttribute("color", r.copyColorsArray(t.colors)),
                t.lineDistances && t.lineDistances.length === t.vertices.length) {
                    var i = new wt(t.lineDistances.length,1);
                    this.setAttribute("lineDistance", i.copyArray(t.lineDistances))
                }
                null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone())
            } else
                e.isMesh && t && t.isGeometry && this.fromGeometry(t);
            return this
        },
        setFromPoints: function(e) {
            for (var t = [], n = 0, r = e.length; n < r; n++) {
                var i = e[n];
                t.push(i.x, i.y, i.z || 0)
            }
            return this.setAttribute("position", new wt(t,3)),
            this
        },
        updateFromObject: function(e) {
            var t, n = e.geometry;
            if (e.isMesh) {
                var r = n.__directGeometry;
                if (!0 === n.elementsNeedUpdate && (r = void 0,
                n.elementsNeedUpdate = !1),
                void 0 === r)
                    return this.fromGeometry(n);
                r.verticesNeedUpdate = n.verticesNeedUpdate,
                r.normalsNeedUpdate = n.normalsNeedUpdate,
                r.colorsNeedUpdate = n.colorsNeedUpdate,
                r.uvsNeedUpdate = n.uvsNeedUpdate,
                r.groupsNeedUpdate = n.groupsNeedUpdate,
                n.verticesNeedUpdate = !1,
                n.normalsNeedUpdate = !1,
                n.colorsNeedUpdate = !1,
                n.uvsNeedUpdate = !1,
                n.groupsNeedUpdate = !1,
                n = r
            }
            return !0 === n.verticesNeedUpdate && (void 0 !== (t = this.attributes.position) && (t.copyVector3sArray(n.vertices),
            t.needsUpdate = !0),
            n.verticesNeedUpdate = !1),
            !0 === n.normalsNeedUpdate && (void 0 !== (t = this.attributes.normal) && (t.copyVector3sArray(n.normals),
            t.needsUpdate = !0),
            n.normalsNeedUpdate = !1),
            !0 === n.colorsNeedUpdate && (void 0 !== (t = this.attributes.color) && (t.copyColorsArray(n.colors),
            t.needsUpdate = !0),
            n.colorsNeedUpdate = !1),
            n.uvsNeedUpdate && (void 0 !== (t = this.attributes.uv) && (t.copyVector2sArray(n.uvs),
            t.needsUpdate = !0),
            n.uvsNeedUpdate = !1),
            n.lineDistancesNeedUpdate && (void 0 !== (t = this.attributes.lineDistance) && (t.copyArray(n.lineDistances),
            t.needsUpdate = !0),
            n.lineDistancesNeedUpdate = !1),
            n.groupsNeedUpdate && (n.computeGroups(e.geometry),
            this.groups = n.groups,
            n.groupsNeedUpdate = !1),
            this
        },
        fromGeometry: function(e) {
            return e.__directGeometry = (new Et).fromGeometry(e),
            this.fromDirectGeometry(e.__directGeometry)
        },
        fromDirectGeometry: function(e) {
            var t = new Float32Array(3 * e.vertices.length);
            if (this.setAttribute("position", new ft(t,3).copyVector3sArray(e.vertices)),
            e.normals.length > 0) {
                var n = new Float32Array(3 * e.normals.length);
                this.setAttribute("normal", new ft(n,3).copyVector3sArray(e.normals))
            }
            if (e.colors.length > 0) {
                var r = new Float32Array(3 * e.colors.length);
                this.setAttribute("color", new ft(r,3).copyColorsArray(e.colors))
            }
            if (e.uvs.length > 0) {
                var i = new Float32Array(2 * e.uvs.length);
                this.setAttribute("uv", new ft(i,2).copyVector2sArray(e.uvs))
            }
            if (e.uvs2.length > 0) {
                var a = new Float32Array(2 * e.uvs2.length);
                this.setAttribute("uv2", new ft(a,2).copyVector2sArray(e.uvs2))
            }
            for (var o in this.groups = e.groups,
            e.morphTargets) {
                for (var s = [], l = e.morphTargets[o], u = 0, c = l.length; u < c; u++) {
                    var h = l[u]
                      , d = new wt(3 * h.data.length,3);
                    d.name = h.name,
                    s.push(d.copyVector3sArray(h.data))
                }
                this.morphAttributes[o] = s
            }
            if (e.skinIndices.length > 0) {
                var f = new wt(4 * e.skinIndices.length,4);
                this.setAttribute("skinIndex", f.copyVector4sArray(e.skinIndices))
            }
            if (e.skinWeights.length > 0) {
                var p = new wt(4 * e.skinWeights.length,4);
                this.setAttribute("skinWeight", p.copyVector4sArray(e.skinWeights))
            }
            return null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
            null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
            this
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new Re);
            var e = this.attributes.position
              , t = this.morphAttributes.position;
            if (void 0 !== e) {
                if (this.boundingBox.setFromBufferAttribute(e),
                t)
                    for (var n = 0, r = t.length; n < r; n++) {
                        var i = t[n];
                        Lt.setFromBufferAttribute(i),
                        this.morphTargetsRelative ? (Pt.addVectors(this.boundingBox.min, Lt.min),
                        this.boundingBox.expandByPoint(Pt),
                        Pt.addVectors(this.boundingBox.max, Lt.max),
                        this.boundingBox.expandByPoint(Pt)) : (this.boundingBox.expandByPoint(Lt.min),
                        this.boundingBox.expandByPoint(Lt.max))
                    }
            } else
                this.boundingBox.makeEmpty();
            (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
        },
        computeBoundingSphere: function() {
            null === this.boundingSphere && (this.boundingSphere = new Pe);
            var e = this.attributes.position
              , t = this.morphAttributes.position;
            if (e) {
                var n = this.boundingSphere.center;
                if (Lt.setFromBufferAttribute(e),
                t)
                    for (var r = 0, i = t.length; r < i; r++) {
                        var a = t[r];
                        Ct.setFromBufferAttribute(a),
                        this.morphTargetsRelative ? (Pt.addVectors(Lt.min, Ct.min),
                        Lt.expandByPoint(Pt),
                        Pt.addVectors(Lt.max, Ct.max),
                        Lt.expandByPoint(Pt)) : (Lt.expandByPoint(Ct.min),
                        Lt.expandByPoint(Ct.max))
                    }
                Lt.getCenter(n);
                var o = 0;
                for (r = 0,
                i = e.count; r < i; r++)
                    Pt.fromBufferAttribute(e, r),
                    o = Math.max(o, n.distanceToSquared(Pt));
                if (t)
                    for (r = 0,
                    i = t.length; r < i; r++) {
                        a = t[r];
                        for (var s = this.morphTargetsRelative, l = 0, u = a.count; l < u; l++)
                            Pt.fromBufferAttribute(a, l),
                            s && (Rt.fromBufferAttribute(e, l),
                            Pt.add(Rt)),
                            o = Math.max(o, n.distanceToSquared(Pt))
                    }
                this.boundingSphere.radius = Math.sqrt(o),
                isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
            }
        },
        computeFaceNormals: function() {},
        computeVertexNormals: function() {
            var e = this.index
              , t = this.attributes;
            if (t.position) {
                var n = t.position.array;
                if (void 0 === t.normal)
                    this.setAttribute("normal", new ft(new Float32Array(n.length),3));
                else
                    for (var r = t.normal.array, i = 0, a = r.length; i < a; i++)
                        r[i] = 0;
                var o, s, l, u = t.normal.array, c = new G, h = new G, d = new G, f = new G, p = new G;
                if (e) {
                    var m = e.array;
                    for (i = 0,
                    a = e.count; i < a; i += 3)
                        o = 3 * m[i + 0],
                        s = 3 * m[i + 1],
                        l = 3 * m[i + 2],
                        c.fromArray(n, o),
                        h.fromArray(n, s),
                        d.fromArray(n, l),
                        f.subVectors(d, h),
                        p.subVectors(c, h),
                        f.cross(p),
                        u[o] += f.x,
                        u[o + 1] += f.y,
                        u[o + 2] += f.z,
                        u[s] += f.x,
                        u[s + 1] += f.y,
                        u[s + 2] += f.z,
                        u[l] += f.x,
                        u[l + 1] += f.y,
                        u[l + 2] += f.z
                } else
                    for (i = 0,
                    a = n.length; i < a; i += 9)
                        c.fromArray(n, i),
                        h.fromArray(n, i + 3),
                        d.fromArray(n, i + 6),
                        f.subVectors(d, h),
                        p.subVectors(c, h),
                        f.cross(p),
                        u[i] = f.x,
                        u[i + 1] = f.y,
                        u[i + 2] = f.z,
                        u[i + 3] = f.x,
                        u[i + 4] = f.y,
                        u[i + 5] = f.z,
                        u[i + 6] = f.x,
                        u[i + 7] = f.y,
                        u[i + 8] = f.z;
                this.normalizeNormals(),
                t.normal.needsUpdate = !0
            }
        },
        merge: function(e, t) {
            if (e && e.isBufferGeometry) {
                void 0 === t && (t = 0,
                console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
                var n = this.attributes;
                for (var r in n)
                    if (void 0 !== e.attributes[r])
                        for (var i = n[r].array, a = e.attributes[r], o = a.array, s = a.itemSize * t, l = Math.min(o.length, i.length - s), u = 0, c = s; u < l; u++,
                        c++)
                            i[c] = o[u];
                return this
            }
            console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e)
        },
        normalizeNormals: function() {
            for (var e = this.attributes.normal, t = 0, n = e.count; t < n; t++)
                Pt.x = e.getX(t),
                Pt.y = e.getY(t),
                Pt.z = e.getZ(t),
                Pt.normalize(),
                e.setXYZ(t, Pt.x, Pt.y, Pt.z)
        },
        toNonIndexed: function() {
            function e(e, t) {
                for (var n = e.array, r = e.itemSize, i = new n.constructor(t.length * r), a = 0, o = 0, s = 0, l = t.length; s < l; s++) {
                    a = t[s] * r;
                    for (var u = 0; u < r; u++)
                        i[o++] = n[a++]
                }
                return new ft(i,r)
            }
            if (null === this.index)
                return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),
                this;
            var t = new Ot
              , n = this.index.array
              , r = this.attributes;
            for (var i in r) {
                var a = e(r[i], n);
                t.setAttribute(i, a)
            }
            var o = this.morphAttributes;
            for (i in o) {
                for (var s = [], l = o[i], u = 0, c = l.length; u < c; u++) {
                    a = e(l[u], n);
                    s.push(a)
                }
                t.morphAttributes[i] = s
            }
            t.morphTargetsRelative = this.morphTargetsRelative;
            for (var h = this.groups, d = (u = 0,
            h.length); u < d; u++) {
                var f = h[u];
                t.addGroup(f.start, f.count, f.materialIndex)
            }
            return t
        },
        toJSON: function() {
            var e = {
                metadata: {
                    version: 4.5,
                    type: "BufferGeometry",
                    generator: "BufferGeometry.toJSON"
                }
            };
            if (e.uuid = this.uuid,
            e.type = this.type,
            "" !== this.name && (e.name = this.name),
            Object.keys(this.userData).length > 0 && (e.userData = this.userData),
            void 0 !== this.parameters) {
                var t = this.parameters;
                for (var n in t)
                    void 0 !== t[n] && (e[n] = t[n]);
                return e
            }
            e.data = {
                attributes: {}
            };
            var r = this.index;
            null !== r && (e.data.index = {
                type: r.array.constructor.name,
                array: Array.prototype.slice.call(r.array)
            });
            var i = this.attributes;
            for (var n in i) {
                var a = (d = i[n]).toJSON();
                "" !== d.name && (a.name = d.name),
                e.data.attributes[n] = a
            }
            var o = {}
              , s = !1;
            for (var n in this.morphAttributes) {
                for (var l = this.morphAttributes[n], u = [], c = 0, h = l.length; c < h; c++) {
                    var d;
                    a = (d = l[c]).toJSON();
                    "" !== d.name && (a.name = d.name),
                    u.push(a)
                }
                u.length > 0 && (o[n] = u,
                s = !0)
            }
            s && (e.data.morphAttributes = o,
            e.data.morphTargetsRelative = this.morphTargetsRelative);
            var f = this.groups;
            f.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(f)));
            var p = this.boundingSphere;
            return null !== p && (e.data.boundingSphere = {
                center: p.center.toArray(),
                radius: p.radius
            }),
            e
        },
        clone: function() {
            return (new Ot).copy(this)
        },
        copy: function(e) {
            var t, n, r;
            this.index = null,
            this.attributes = {},
            this.morphAttributes = {},
            this.groups = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.name = e.name;
            var i = e.index;
            null !== i && this.setIndex(i.clone());
            var a = e.attributes;
            for (t in a) {
                var o = a[t];
                this.setAttribute(t, o.clone())
            }
            var s = e.morphAttributes;
            for (t in s) {
                var l = []
                  , u = s[t];
                for (n = 0,
                r = u.length; n < r; n++)
                    l.push(u[n].clone());
                this.morphAttributes[t] = l
            }
            this.morphTargetsRelative = e.morphTargetsRelative;
            var c = e.groups;
            for (n = 0,
            r = c.length; n < r; n++) {
                var h = c[n];
                this.addGroup(h.start, h.count, h.materialIndex)
            }
            var d = e.boundingBox;
            null !== d && (this.boundingBox = d.clone());
            var f = e.boundingSphere;
            return null !== f && (this.boundingSphere = f.clone()),
            this.drawRange.start = e.drawRange.start,
            this.drawRange.count = e.drawRange.count,
            this.userData = e.userData,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    });
    var kt = new X
      , Dt = new Be
      , It = new Pe
      , Nt = new G
      , Ft = new G
      , Ut = new G
      , Bt = new G
      , zt = new G
      , Gt = new G
      , Ht = new G
      , jt = new G
      , Vt = new G
      , Wt = new C
      , qt = new C
      , Kt = new C
      , Yt = new G
      , Xt = new G;
    function Zt(e, t) {
        fe.call(this),
        this.type = "Mesh",
        this.geometry = void 0 !== e ? e : new Ot,
        this.material = void 0 !== t ? t : new ht,
        this.updateMorphTargets()
    }
    function Jt(e, t, n, r, i, a, o, s) {
        if (null === (1 === t.side ? r.intersectTriangle(o, a, i, !0, s) : r.intersectTriangle(i, a, o, 2 !== t.side, s)))
            return null;
        Xt.copy(s),
        Xt.applyMatrix4(e.matrixWorld);
        var l = n.ray.origin.distanceTo(Xt);
        return l < n.near || l > n.far ? null : {
            distance: l,
            point: Xt.clone(),
            object: e
        }
    }
    function Qt(e, t, n, r, i, a, o, s, l, u, c, h) {
        Nt.fromBufferAttribute(i, u),
        Ft.fromBufferAttribute(i, c),
        Ut.fromBufferAttribute(i, h);
        var d = e.morphTargetInfluences;
        if (t.morphTargets && a && d) {
            Ht.set(0, 0, 0),
            jt.set(0, 0, 0),
            Vt.set(0, 0, 0);
            for (var f = 0, p = a.length; f < p; f++) {
                var m = d[f]
                  , g = a[f];
                0 !== m && (Bt.fromBufferAttribute(g, u),
                zt.fromBufferAttribute(g, c),
                Gt.fromBufferAttribute(g, h),
                o ? (Ht.addScaledVector(Bt, m),
                jt.addScaledVector(zt, m),
                Vt.addScaledVector(Gt, m)) : (Ht.addScaledVector(Bt.sub(Nt), m),
                jt.addScaledVector(zt.sub(Ft), m),
                Vt.addScaledVector(Gt.sub(Ut), m)))
            }
            Nt.add(Ht),
            Ft.add(jt),
            Ut.add(Vt)
        }
        var v = Jt(e, t, n, r, Nt, Ft, Ut, Yt);
        if (v) {
            s && (Wt.fromBufferAttribute(s, u),
            qt.fromBufferAttribute(s, c),
            Kt.fromBufferAttribute(s, h),
            v.uv = et.getUV(Yt, Nt, Ft, Ut, Wt, qt, Kt, new C)),
            l && (Wt.fromBufferAttribute(l, u),
            qt.fromBufferAttribute(l, c),
            Kt.fromBufferAttribute(l, h),
            v.uv2 = et.getUV(Yt, Nt, Ft, Ut, Wt, qt, Kt, new C));
            var y = new lt(u,c,h);
            et.getNormal(Nt, Ft, Ut, y.normal),
            v.face = y
        }
        return v
    }
    Zt.prototype = Object.assign(Object.create(fe.prototype), {
        constructor: Zt,
        isMesh: !0,
        copy: function(e) {
            return fe.prototype.copy.call(this, e),
            void 0 !== e.morphTargetInfluences && (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
            void 0 !== e.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)),
            this
        },
        updateMorphTargets: function() {
            var e, t, n, r = this.geometry;
            if (r.isBufferGeometry) {
                var i = r.morphAttributes
                  , a = Object.keys(i);
                if (a.length > 0) {
                    var o = i[a[0]];
                    if (void 0 !== o)
                        for (this.morphTargetInfluences = [],
                        this.morphTargetDictionary = {},
                        e = 0,
                        t = o.length; e < t; e++)
                            n = o[e].name || String(e),
                            this.morphTargetInfluences.push(0),
                            this.morphTargetDictionary[n] = e
                }
            } else {
                var s = r.morphTargets;
                void 0 !== s && s.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
            }
        },
        raycast: function(e, t) {
            var n, r = this.geometry, i = this.material, a = this.matrixWorld;
            if (void 0 !== i && (null === r.boundingSphere && r.computeBoundingSphere(),
            It.copy(r.boundingSphere),
            It.applyMatrix4(a),
            !1 !== e.ray.intersectsSphere(It) && (kt.getInverse(a),
            Dt.copy(e.ray).applyMatrix4(kt),
            null === r.boundingBox || !1 !== Dt.intersectsBox(r.boundingBox))))
                if (r.isBufferGeometry) {
                    var o, s, l, u, c, h, d, f, p, m = r.index, g = r.attributes.position, v = r.morphAttributes.position, y = r.morphTargetsRelative, b = r.attributes.uv, x = r.attributes.uv2, w = r.groups, _ = r.drawRange;
                    if (null !== m)
                        if (Array.isArray(i))
                            for (u = 0,
                            h = w.length; u < h; u++)
                                for (p = i[(f = w[u]).materialIndex],
                                c = Math.max(f.start, _.start),
                                d = Math.min(f.start + f.count, _.start + _.count); c < d; c += 3)
                                    o = m.getX(c),
                                    s = m.getX(c + 1),
                                    l = m.getX(c + 2),
                                    (n = Qt(this, p, e, Dt, g, v, y, b, x, o, s, l)) && (n.faceIndex = Math.floor(c / 3),
                                    n.face.materialIndex = f.materialIndex,
                                    t.push(n));
                        else
                            for (u = Math.max(0, _.start),
                            h = Math.min(m.count, _.start + _.count); u < h; u += 3)
                                o = m.getX(u),
                                s = m.getX(u + 1),
                                l = m.getX(u + 2),
                                (n = Qt(this, i, e, Dt, g, v, y, b, x, o, s, l)) && (n.faceIndex = Math.floor(u / 3),
                                t.push(n));
                    else if (void 0 !== g)
                        if (Array.isArray(i))
                            for (u = 0,
                            h = w.length; u < h; u++)
                                for (p = i[(f = w[u]).materialIndex],
                                c = Math.max(f.start, _.start),
                                d = Math.min(f.start + f.count, _.start + _.count); c < d; c += 3)
                                    (n = Qt(this, p, e, Dt, g, v, y, b, x, o = c, s = c + 1, l = c + 2)) && (n.faceIndex = Math.floor(c / 3),
                                    n.face.materialIndex = f.materialIndex,
                                    t.push(n));
                        else
                            for (u = Math.max(0, _.start),
                            h = Math.min(g.count, _.start + _.count); u < h; u += 3)
                                (n = Qt(this, i, e, Dt, g, v, y, b, x, o = u, s = u + 1, l = u + 2)) && (n.faceIndex = Math.floor(u / 3),
                                t.push(n))
                } else if (r.isGeometry) {
                    var E, T, S, M, A = Array.isArray(i), R = r.vertices, L = r.faces, P = r.faceVertexUvs[0];
                    P.length > 0 && (M = P);
                    for (var O = 0, k = L.length; O < k; O++) {
                        var D = L[O]
                          , I = A ? i[D.materialIndex] : i;
                        if (void 0 !== I && (E = R[D.a],
                        T = R[D.b],
                        S = R[D.c],
                        n = Jt(this, I, e, Dt, E, T, S, Yt))) {
                            if (M && M[O]) {
                                var N = M[O];
                                Wt.copy(N[0]),
                                qt.copy(N[1]),
                                Kt.copy(N[2]),
                                n.uv = et.getUV(Yt, E, T, S, Wt, qt, Kt, new C)
                            }
                            n.face = D,
                            n.faceIndex = O,
                            t.push(n)
                        }
                    }
                }
        },
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    });
    var $t = 0
      , en = new X
      , tn = new fe
      , nn = new G;
    function rn() {
        Object.defineProperty(this, "id", {
            value: $t += 2
        }),
        this.uuid = L.generateUUID(),
        this.name = "",
        this.type = "Geometry",
        this.vertices = [],
        this.colors = [],
        this.faces = [],
        this.faceVertexUvs = [[]],
        this.morphTargets = [],
        this.morphNormals = [],
        this.skinWeights = [],
        this.skinIndices = [],
        this.lineDistances = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.elementsNeedUpdate = !1,
        this.verticesNeedUpdate = !1,
        this.uvsNeedUpdate = !1,
        this.normalsNeedUpdate = !1,
        this.colorsNeedUpdate = !1,
        this.lineDistancesNeedUpdate = !1,
        this.groupsNeedUpdate = !1
    }
    rn.prototype = Object.assign(Object.create(S.prototype), {
        constructor: rn,
        isGeometry: !0,
        applyMatrix4: function(e) {
            for (var t = (new P).getNormalMatrix(e), n = 0, r = this.vertices.length; n < r; n++) {
                this.vertices[n].applyMatrix4(e)
            }
            for (n = 0,
            r = this.faces.length; n < r; n++) {
                var i = this.faces[n];
                i.normal.applyMatrix3(t).normalize();
                for (var a = 0, o = i.vertexNormals.length; a < o; a++)
                    i.vertexNormals[a].applyMatrix3(t).normalize()
            }
            return null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this.verticesNeedUpdate = !0,
            this.normalsNeedUpdate = !0,
            this
        },
        rotateX: function(e) {
            return en.makeRotationX(e),
            this.applyMatrix4(en),
            this
        },
        rotateY: function(e) {
            return en.makeRotationY(e),
            this.applyMatrix4(en),
            this
        },
        rotateZ: function(e) {
            return en.makeRotationZ(e),
            this.applyMatrix4(en),
            this
        },
        translate: function(e, t, n) {
            return en.makeTranslation(e, t, n),
            this.applyMatrix4(en),
            this
        },
        scale: function(e, t, n) {
            return en.makeScale(e, t, n),
            this.applyMatrix4(en),
            this
        },
        lookAt: function(e) {
            return tn.lookAt(e),
            tn.updateMatrix(),
            this.applyMatrix4(tn.matrix),
            this
        },
        fromBufferGeometry: function(e) {
            var t = this
              , n = null !== e.index ? e.index.array : void 0
              , r = e.attributes;
            if (void 0 === r.position)
                return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),
                this;
            var i = r.position.array
              , a = void 0 !== r.normal ? r.normal.array : void 0
              , o = void 0 !== r.color ? r.color.array : void 0
              , s = void 0 !== r.uv ? r.uv.array : void 0
              , l = void 0 !== r.uv2 ? r.uv2.array : void 0;
            void 0 !== l && (this.faceVertexUvs[1] = []);
            for (var u = 0; u < i.length; u += 3)
                t.vertices.push((new G).fromArray(i, u)),
                void 0 !== o && t.colors.push((new it).fromArray(o, u));
            function c(e, n, r, i) {
                var u = void 0 === o ? [] : [t.colors[e].clone(), t.colors[n].clone(), t.colors[r].clone()]
                  , c = new lt(e,n,r,void 0 === a ? [] : [(new G).fromArray(a, 3 * e), (new G).fromArray(a, 3 * n), (new G).fromArray(a, 3 * r)],u,i);
                t.faces.push(c),
                void 0 !== s && t.faceVertexUvs[0].push([(new C).fromArray(s, 2 * e), (new C).fromArray(s, 2 * n), (new C).fromArray(s, 2 * r)]),
                void 0 !== l && t.faceVertexUvs[1].push([(new C).fromArray(l, 2 * e), (new C).fromArray(l, 2 * n), (new C).fromArray(l, 2 * r)])
            }
            var h = e.groups;
            if (h.length > 0)
                for (u = 0; u < h.length; u++)
                    for (var d = h[u], f = d.start, p = f, m = f + d.count; p < m; p += 3)
                        void 0 !== n ? c(n[p], n[p + 1], n[p + 2], d.materialIndex) : c(p, p + 1, p + 2, d.materialIndex);
            else if (void 0 !== n)
                for (u = 0; u < n.length; u += 3)
                    c(n[u], n[u + 1], n[u + 2]);
            else
                for (u = 0; u < i.length / 3; u += 3)
                    c(u, u + 1, u + 2);
            return this.computeFaceNormals(),
            null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
            null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
            this
        },
        center: function() {
            return this.computeBoundingBox(),
            this.boundingBox.getCenter(nn).negate(),
            this.translate(nn.x, nn.y, nn.z),
            this
        },
        normalize: function() {
            this.computeBoundingSphere();
            var e = this.boundingSphere.center
              , t = this.boundingSphere.radius
              , n = 0 === t ? 1 : 1 / t
              , r = new X;
            return r.set(n, 0, 0, -n * e.x, 0, n, 0, -n * e.y, 0, 0, n, -n * e.z, 0, 0, 0, 1),
            this.applyMatrix4(r),
            this
        },
        computeFaceNormals: function() {
            for (var e = new G, t = new G, n = 0, r = this.faces.length; n < r; n++) {
                var i = this.faces[n]
                  , a = this.vertices[i.a]
                  , o = this.vertices[i.b]
                  , s = this.vertices[i.c];
                e.subVectors(s, o),
                t.subVectors(a, o),
                e.cross(t),
                e.normalize(),
                i.normal.copy(e)
            }
        },
        computeVertexNormals: function(e) {
            var t, n, r, i, a, o;
            for (void 0 === e && (e = !0),
            o = new Array(this.vertices.length),
            t = 0,
            n = this.vertices.length; t < n; t++)
                o[t] = new G;
            if (e) {
                var s, l, u, c = new G, h = new G;
                for (r = 0,
                i = this.faces.length; r < i; r++)
                    a = this.faces[r],
                    s = this.vertices[a.a],
                    l = this.vertices[a.b],
                    u = this.vertices[a.c],
                    c.subVectors(u, l),
                    h.subVectors(s, l),
                    c.cross(h),
                    o[a.a].add(c),
                    o[a.b].add(c),
                    o[a.c].add(c)
            } else
                for (this.computeFaceNormals(),
                r = 0,
                i = this.faces.length; r < i; r++)
                    o[(a = this.faces[r]).a].add(a.normal),
                    o[a.b].add(a.normal),
                    o[a.c].add(a.normal);
            for (t = 0,
            n = this.vertices.length; t < n; t++)
                o[t].normalize();
            for (r = 0,
            i = this.faces.length; r < i; r++) {
                var d = (a = this.faces[r]).vertexNormals;
                3 === d.length ? (d[0].copy(o[a.a]),
                d[1].copy(o[a.b]),
                d[2].copy(o[a.c])) : (d[0] = o[a.a].clone(),
                d[1] = o[a.b].clone(),
                d[2] = o[a.c].clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeFlatVertexNormals: function() {
            var e, t, n;
            for (this.computeFaceNormals(),
            e = 0,
            t = this.faces.length; e < t; e++) {
                var r = (n = this.faces[e]).vertexNormals;
                3 === r.length ? (r[0].copy(n.normal),
                r[1].copy(n.normal),
                r[2].copy(n.normal)) : (r[0] = n.normal.clone(),
                r[1] = n.normal.clone(),
                r[2] = n.normal.clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeMorphNormals: function() {
            var e, t, n, r, i;
            for (n = 0,
            r = this.faces.length; n < r; n++)
                for ((i = this.faces[n]).__originalFaceNormal ? i.__originalFaceNormal.copy(i.normal) : i.__originalFaceNormal = i.normal.clone(),
                i.__originalVertexNormals || (i.__originalVertexNormals = []),
                e = 0,
                t = i.vertexNormals.length; e < t; e++)
                    i.__originalVertexNormals[e] ? i.__originalVertexNormals[e].copy(i.vertexNormals[e]) : i.__originalVertexNormals[e] = i.vertexNormals[e].clone();
            var a = new rn;
            for (a.faces = this.faces,
            e = 0,
            t = this.morphTargets.length; e < t; e++) {
                if (!this.morphNormals[e]) {
                    this.morphNormals[e] = {},
                    this.morphNormals[e].faceNormals = [],
                    this.morphNormals[e].vertexNormals = [];
                    var o = this.morphNormals[e].faceNormals
                      , s = this.morphNormals[e].vertexNormals;
                    for (n = 0,
                    r = this.faces.length; n < r; n++)
                        l = new G,
                        u = {
                            a: new G,
                            b: new G,
                            c: new G
                        },
                        o.push(l),
                        s.push(u)
                }
                var l, u, c = this.morphNormals[e];
                for (a.vertices = this.morphTargets[e].vertices,
                a.computeFaceNormals(),
                a.computeVertexNormals(),
                n = 0,
                r = this.faces.length; n < r; n++)
                    i = this.faces[n],
                    l = c.faceNormals[n],
                    u = c.vertexNormals[n],
                    l.copy(i.normal),
                    u.a.copy(i.vertexNormals[0]),
                    u.b.copy(i.vertexNormals[1]),
                    u.c.copy(i.vertexNormals[2])
            }
            for (n = 0,
            r = this.faces.length; n < r; n++)
                (i = this.faces[n]).normal = i.__originalFaceNormal,
                i.vertexNormals = i.__originalVertexNormals
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new Re),
            this.boundingBox.setFromPoints(this.vertices)
        },
        computeBoundingSphere: function() {
            null === this.boundingSphere && (this.boundingSphere = new Pe),
            this.boundingSphere.setFromPoints(this.vertices)
        },
        merge: function(e, t, n) {
            if (e && e.isGeometry) {
                var r, i = this.vertices.length, a = this.vertices, o = e.vertices, s = this.faces, l = e.faces, u = this.colors, c = e.colors;
                void 0 === n && (n = 0),
                void 0 !== t && (r = (new P).getNormalMatrix(t));
                for (var h = 0, d = o.length; h < d; h++) {
                    var f = o[h].clone();
                    void 0 !== t && f.applyMatrix4(t),
                    a.push(f)
                }
                for (h = 0,
                d = c.length; h < d; h++)
                    u.push(c[h].clone());
                for (h = 0,
                d = l.length; h < d; h++) {
                    var p, m, g, v = l[h], y = v.vertexNormals, b = v.vertexColors;
                    (p = new lt(v.a + i,v.b + i,v.c + i)).normal.copy(v.normal),
                    void 0 !== r && p.normal.applyMatrix3(r).normalize();
                    for (var x = 0, w = y.length; x < w; x++)
                        m = y[x].clone(),
                        void 0 !== r && m.applyMatrix3(r).normalize(),
                        p.vertexNormals.push(m);
                    p.color.copy(v.color);
                    for (x = 0,
                    w = b.length; x < w; x++)
                        g = b[x],
                        p.vertexColors.push(g.clone());
                    p.materialIndex = v.materialIndex + n,
                    s.push(p)
                }
                for (h = 0,
                d = e.faceVertexUvs.length; h < d; h++) {
                    var _ = e.faceVertexUvs[h];
                    void 0 === this.faceVertexUvs[h] && (this.faceVertexUvs[h] = []);
                    for (x = 0,
                    w = _.length; x < w; x++) {
                        for (var E = _[x], T = [], S = 0, M = E.length; S < M; S++)
                            T.push(E[S].clone());
                        this.faceVertexUvs[h].push(T)
                    }
                }
            } else
                console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", e)
        },
        mergeMesh: function(e) {
            e && e.isMesh ? (e.matrixAutoUpdate && e.updateMatrix(),
            this.merge(e.geometry, e.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", e)
        },
        mergeVertices: function() {
            var e, t, n, r, i, a, o, s, l = {}, u = [], c = [], h = Math.pow(10, 4);
            for (n = 0,
            r = this.vertices.length; n < r; n++)
                e = this.vertices[n],
                void 0 === l[t = Math.round(e.x * h) + "_" + Math.round(e.y * h) + "_" + Math.round(e.z * h)] ? (l[t] = n,
                u.push(this.vertices[n]),
                c[n] = u.length - 1) : c[n] = c[l[t]];
            var d = [];
            for (n = 0,
            r = this.faces.length; n < r; n++) {
                (i = this.faces[n]).a = c[i.a],
                i.b = c[i.b],
                i.c = c[i.c],
                a = [i.a, i.b, i.c];
                for (var f = 0; f < 3; f++)
                    if (a[f] === a[(f + 1) % 3]) {
                        d.push(n);
                        break
                    }
            }
            for (n = d.length - 1; n >= 0; n--) {
                var p = d[n];
                for (this.faces.splice(p, 1),
                o = 0,
                s = this.faceVertexUvs.length; o < s; o++)
                    this.faceVertexUvs[o].splice(p, 1)
            }
            var m = this.vertices.length - u.length;
            return this.vertices = u,
            m
        },
        setFromPoints: function(e) {
            this.vertices = [];
            for (var t = 0, n = e.length; t < n; t++) {
                var r = e[t];
                this.vertices.push(new G(r.x,r.y,r.z || 0))
            }
            return this
        },
        sortFacesByMaterialIndex: function() {
            for (var e = this.faces, t = e.length, n = 0; n < t; n++)
                e[n]._id = n;
            e.sort((function(e, t) {
                return e.materialIndex - t.materialIndex
            }
            ));
            var r, i, a = this.faceVertexUvs[0], o = this.faceVertexUvs[1];
            a && a.length === t && (r = []),
            o && o.length === t && (i = []);
            for (n = 0; n < t; n++) {
                var s = e[n]._id;
                r && r.push(a[s]),
                i && i.push(o[s])
            }
            r && (this.faceVertexUvs[0] = r),
            i && (this.faceVertexUvs[1] = i)
        },
        toJSON: function() {
            var e = {
                metadata: {
                    version: 4.5,
                    type: "Geometry",
                    generator: "Geometry.toJSON"
                }
            };
            if (e.uuid = this.uuid,
            e.type = this.type,
            "" !== this.name && (e.name = this.name),
            void 0 !== this.parameters) {
                var t = this.parameters;
                for (var n in t)
                    void 0 !== t[n] && (e[n] = t[n]);
                return e
            }
            for (var r = [], i = 0; i < this.vertices.length; i++) {
                var a = this.vertices[i];
                r.push(a.x, a.y, a.z)
            }
            var o = []
              , s = []
              , l = {}
              , u = []
              , c = {}
              , h = []
              , d = {};
            for (i = 0; i < this.faces.length; i++) {
                var f = this.faces[i]
                  , p = void 0 !== this.faceVertexUvs[0][i]
                  , m = f.normal.length() > 0
                  , g = f.vertexNormals.length > 0
                  , v = 1 !== f.color.r || 1 !== f.color.g || 1 !== f.color.b
                  , y = f.vertexColors.length > 0
                  , b = 0;
                if (b = E(b, 0, 0),
                b = E(b, 1, !0),
                b = E(b, 2, !1),
                b = E(b, 3, p),
                b = E(b, 4, m),
                b = E(b, 5, g),
                b = E(b, 6, v),
                b = E(b, 7, y),
                o.push(b),
                o.push(f.a, f.b, f.c),
                o.push(f.materialIndex),
                p) {
                    var x = this.faceVertexUvs[0][i];
                    o.push(M(x[0]), M(x[1]), M(x[2]))
                }
                if (m && o.push(T(f.normal)),
                g) {
                    var w = f.vertexNormals;
                    o.push(T(w[0]), T(w[1]), T(w[2]))
                }
                if (v && o.push(S(f.color)),
                y) {
                    var _ = f.vertexColors;
                    o.push(S(_[0]), S(_[1]), S(_[2]))
                }
            }
            function E(e, t, n) {
                return n ? e | 1 << t : e & ~(1 << t)
            }
            function T(e) {
                var t = e.x.toString() + e.y.toString() + e.z.toString();
                return void 0 !== l[t] || (l[t] = s.length / 3,
                s.push(e.x, e.y, e.z)),
                l[t]
            }
            function S(e) {
                var t = e.r.toString() + e.g.toString() + e.b.toString();
                return void 0 !== c[t] || (c[t] = u.length,
                u.push(e.getHex())),
                c[t]
            }
            function M(e) {
                var t = e.x.toString() + e.y.toString();
                return void 0 !== d[t] || (d[t] = h.length / 2,
                h.push(e.x, e.y)),
                d[t]
            }
            return e.data = {},
            e.data.vertices = r,
            e.data.normals = s,
            u.length > 0 && (e.data.colors = u),
            h.length > 0 && (e.data.uvs = [h]),
            e.data.faces = o,
            e
        },
        clone: function() {
            return (new rn).copy(this)
        },
        copy: function(e) {
            var t, n, r, i, a, o;
            this.vertices = [],
            this.colors = [],
            this.faces = [],
            this.faceVertexUvs = [[]],
            this.morphTargets = [],
            this.morphNormals = [],
            this.skinWeights = [],
            this.skinIndices = [],
            this.lineDistances = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.name = e.name;
            var s = e.vertices;
            for (t = 0,
            n = s.length; t < n; t++)
                this.vertices.push(s[t].clone());
            var l = e.colors;
            for (t = 0,
            n = l.length; t < n; t++)
                this.colors.push(l[t].clone());
            var u = e.faces;
            for (t = 0,
            n = u.length; t < n; t++)
                this.faces.push(u[t].clone());
            for (t = 0,
            n = e.faceVertexUvs.length; t < n; t++) {
                var c = e.faceVertexUvs[t];
                for (void 0 === this.faceVertexUvs[t] && (this.faceVertexUvs[t] = []),
                r = 0,
                i = c.length; r < i; r++) {
                    var h = c[r]
                      , d = [];
                    for (a = 0,
                    o = h.length; a < o; a++) {
                        var f = h[a];
                        d.push(f.clone())
                    }
                    this.faceVertexUvs[t].push(d)
                }
            }
            var p = e.morphTargets;
            for (t = 0,
            n = p.length; t < n; t++) {
                var m = {};
                if (m.name = p[t].name,
                void 0 !== p[t].vertices)
                    for (m.vertices = [],
                    r = 0,
                    i = p[t].vertices.length; r < i; r++)
                        m.vertices.push(p[t].vertices[r].clone());
                if (void 0 !== p[t].normals)
                    for (m.normals = [],
                    r = 0,
                    i = p[t].normals.length; r < i; r++)
                        m.normals.push(p[t].normals[r].clone());
                this.morphTargets.push(m)
            }
            var g = e.morphNormals;
            for (t = 0,
            n = g.length; t < n; t++) {
                var v = {};
                if (void 0 !== g[t].vertexNormals)
                    for (v.vertexNormals = [],
                    r = 0,
                    i = g[t].vertexNormals.length; r < i; r++) {
                        var y = g[t].vertexNormals[r]
                          , b = {};
                        b.a = y.a.clone(),
                        b.b = y.b.clone(),
                        b.c = y.c.clone(),
                        v.vertexNormals.push(b)
                    }
                if (void 0 !== g[t].faceNormals)
                    for (v.faceNormals = [],
                    r = 0,
                    i = g[t].faceNormals.length; r < i; r++)
                        v.faceNormals.push(g[t].faceNormals[r].clone());
                this.morphNormals.push(v)
            }
            var x = e.skinWeights;
            for (t = 0,
            n = x.length; t < n; t++)
                this.skinWeights.push(x[t].clone());
            var w = e.skinIndices;
            for (t = 0,
            n = w.length; t < n; t++)
                this.skinIndices.push(w[t].clone());
            var _ = e.lineDistances;
            for (t = 0,
            n = _.length; t < n; t++)
                this.lineDistances.push(_[t]);
            var E = e.boundingBox;
            null !== E && (this.boundingBox = E.clone());
            var T = e.boundingSphere;
            return null !== T && (this.boundingSphere = T.clone()),
            this.elementsNeedUpdate = e.elementsNeedUpdate,
            this.verticesNeedUpdate = e.verticesNeedUpdate,
            this.uvsNeedUpdate = e.uvsNeedUpdate,
            this.normalsNeedUpdate = e.normalsNeedUpdate,
            this.colorsNeedUpdate = e.colorsNeedUpdate,
            this.lineDistancesNeedUpdate = e.lineDistancesNeedUpdate,
            this.groupsNeedUpdate = e.groupsNeedUpdate,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    });
    class an extends Ot {
        constructor(e, t, n, r, i, a) {
            super(),
            this.type = "BoxBufferGeometry",
            this.parameters = {
                width: e,
                height: t,
                depth: n,
                widthSegments: r,
                heightSegments: i,
                depthSegments: a
            };
            var o = this;
            e = e || 1,
            t = t || 1,
            n = n || 1,
            r = Math.floor(r) || 1,
            i = Math.floor(i) || 1,
            a = Math.floor(a) || 1;
            var s = []
              , l = []
              , u = []
              , c = []
              , h = 0
              , d = 0;
            function f(e, t, n, r, i, a, f, p, m, g, v) {
                var y, b, x = a / m, w = f / g, _ = a / 2, E = f / 2, T = p / 2, S = m + 1, M = g + 1, A = 0, R = 0, L = new G;
                for (b = 0; b < M; b++) {
                    var C = b * w - E;
                    for (y = 0; y < S; y++) {
                        var P = y * x - _;
                        L[e] = P * r,
                        L[t] = C * i,
                        L[n] = T,
                        l.push(L.x, L.y, L.z),
                        L[e] = 0,
                        L[t] = 0,
                        L[n] = p > 0 ? 1 : -1,
                        u.push(L.x, L.y, L.z),
                        c.push(y / m),
                        c.push(1 - b / g),
                        A += 1
                    }
                }
                for (b = 0; b < g; b++)
                    for (y = 0; y < m; y++) {
                        var O = h + y + S * b
                          , k = h + y + S * (b + 1)
                          , D = h + (y + 1) + S * (b + 1)
                          , I = h + (y + 1) + S * b;
                        s.push(O, k, I),
                        s.push(k, D, I),
                        R += 6
                    }
                o.addGroup(d, R, v),
                d += R,
                h += A
            }
            f("z", "y", "x", -1, -1, n, t, e, a, i, 0),
            f("z", "y", "x", 1, -1, n, t, -e, a, i, 1),
            f("x", "z", "y", 1, 1, e, n, t, r, a, 2),
            f("x", "z", "y", 1, -1, e, n, -t, r, a, 3),
            f("x", "y", "z", 1, -1, e, t, n, r, i, 4),
            f("x", "y", "z", -1, -1, e, t, -n, r, i, 5),
            this.setIndex(s),
            this.setAttribute("position", new wt(l,3)),
            this.setAttribute("normal", new wt(u,3)),
            this.setAttribute("uv", new wt(c,2))
        }
    }
    function on(e) {
        var t = {};
        for (var n in e)
            for (var r in t[n] = {},
            e[n]) {
                var i = e[n][r];
                i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture) ? t[n][r] = i.clone() : Array.isArray(i) ? t[n][r] = i.slice() : t[n][r] = i
            }
        return t
    }
    function sn(e) {
        for (var t = {}, n = 0; n < e.length; n++) {
            var r = on(e[n]);
            for (var i in r)
                t[i] = r[i]
        }
        return t
    }
    var ln = {
        clone: on,
        merge: sn
    };
    function un(e) {
        ct.call(this),
        this.type = "ShaderMaterial",
        this.defines = {},
        this.uniforms = {},
        this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
        this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
        this.linewidth = 1,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.lights = !1,
        this.clipping = !1,
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1
        },
        this.defaultAttributeValues = {
            color: [1, 1, 1],
            uv: [0, 0],
            uv2: [0, 0]
        },
        this.index0AttributeName = void 0,
        this.uniformsNeedUpdate = !1,
        void 0 !== e && (void 0 !== e.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),
        this.setValues(e))
    }
    function cn() {
        fe.call(this),
        this.type = "Camera",
        this.matrixWorldInverse = new X,
        this.projectionMatrix = new X,
        this.projectionMatrixInverse = new X
    }
    function hn(e, t, n, r) {
        cn.call(this),
        this.type = "PerspectiveCamera",
        this.fov = void 0 !== e ? e : 50,
        this.zoom = 1,
        this.near = void 0 !== n ? n : .1,
        this.far = void 0 !== r ? r : 2e3,
        this.focus = 10,
        this.aspect = void 0 !== t ? t : 1,
        this.view = null,
        this.filmGauge = 35,
        this.filmOffset = 0,
        this.updateProjectionMatrix()
    }
    un.prototype = Object.create(ct.prototype),
    un.prototype.constructor = un,
    un.prototype.isShaderMaterial = !0,
    un.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.fragmentShader = e.fragmentShader,
        this.vertexShader = e.vertexShader,
        this.uniforms = on(e.uniforms),
        this.defines = Object.assign({}, e.defines),
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.lights = e.lights,
        this.clipping = e.clipping,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this.extensions = e.extensions,
        this
    }
    ,
    un.prototype.toJSON = function(e) {
        var t = ct.prototype.toJSON.call(this, e);
        for (var n in t.uniforms = {},
        this.uniforms) {
            var r = this.uniforms[n].value;
            r && r.isTexture ? t.uniforms[n] = {
                type: "t",
                value: r.toJSON(e).uuid
            } : r && r.isColor ? t.uniforms[n] = {
                type: "c",
                value: r.getHex()
            } : r && r.isVector2 ? t.uniforms[n] = {
                type: "v2",
                value: r.toArray()
            } : r && r.isVector3 ? t.uniforms[n] = {
                type: "v3",
                value: r.toArray()
            } : r && r.isVector4 ? t.uniforms[n] = {
                type: "v4",
                value: r.toArray()
            } : r && r.isMatrix3 ? t.uniforms[n] = {
                type: "m3",
                value: r.toArray()
            } : r && r.isMatrix4 ? t.uniforms[n] = {
                type: "m4",
                value: r.toArray()
            } : t.uniforms[n] = {
                value: r
            }
        }
        Object.keys(this.defines).length > 0 && (t.defines = this.defines),
        t.vertexShader = this.vertexShader,
        t.fragmentShader = this.fragmentShader;
        var i = {};
        for (var a in this.extensions)
            !0 === this.extensions[a] && (i[a] = !0);
        return Object.keys(i).length > 0 && (t.extensions = i),
        t
    }
    ,
    cn.prototype = Object.assign(Object.create(fe.prototype), {
        constructor: cn,
        isCamera: !0,
        copy: function(e, t) {
            return fe.prototype.copy.call(this, e, t),
            this.matrixWorldInverse.copy(e.matrixWorldInverse),
            this.projectionMatrix.copy(e.projectionMatrix),
            this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
            this
        },
        getWorldDirection: function(e) {
            void 0 === e && (console.warn("THREE.Camera: .getWorldDirection() target is now required"),
            e = new G),
            this.updateMatrixWorld(!0);
            var t = this.matrixWorld.elements;
            return e.set(-t[8], -t[9], -t[10]).normalize()
        },
        updateMatrixWorld: function(e) {
            fe.prototype.updateMatrixWorld.call(this, e),
            this.matrixWorldInverse.getInverse(this.matrixWorld)
        },
        updateWorldMatrix: function(e, t) {
            fe.prototype.updateWorldMatrix.call(this, e, t),
            this.matrixWorldInverse.getInverse(this.matrixWorld)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        }
    }),
    hn.prototype = Object.assign(Object.create(cn.prototype), {
        constructor: hn,
        isPerspectiveCamera: !0,
        copy: function(e, t) {
            return cn.prototype.copy.call(this, e, t),
            this.fov = e.fov,
            this.zoom = e.zoom,
            this.near = e.near,
            this.far = e.far,
            this.focus = e.focus,
            this.aspect = e.aspect,
            this.view = null === e.view ? null : Object.assign({}, e.view),
            this.filmGauge = e.filmGauge,
            this.filmOffset = e.filmOffset,
            this
        },
        setFocalLength: function(e) {
            var t = .5 * this.getFilmHeight() / e;
            this.fov = 2 * L.RAD2DEG * Math.atan(t),
            this.updateProjectionMatrix()
        },
        getFocalLength: function() {
            var e = Math.tan(.5 * L.DEG2RAD * this.fov);
            return .5 * this.getFilmHeight() / e
        },
        getEffectiveFOV: function() {
            return 2 * L.RAD2DEG * Math.atan(Math.tan(.5 * L.DEG2RAD * this.fov) / this.zoom)
        },
        getFilmWidth: function() {
            return this.filmGauge * Math.min(this.aspect, 1)
        },
        getFilmHeight: function() {
            return this.filmGauge / Math.max(this.aspect, 1)
        },
        setViewOffset: function(e, t, n, r, i, a) {
            this.aspect = e / t,
            null === this.view && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }),
            this.view.enabled = !0,
            this.view.fullWidth = e,
            this.view.fullHeight = t,
            this.view.offsetX = n,
            this.view.offsetY = r,
            this.view.width = i,
            this.view.height = a,
            this.updateProjectionMatrix()
        },
        clearViewOffset: function() {
            null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix()
        },
        updateProjectionMatrix: function() {
            var e = this.near
              , t = e * Math.tan(.5 * L.DEG2RAD * this.fov) / this.zoom
              , n = 2 * t
              , r = this.aspect * n
              , i = -.5 * r
              , a = this.view;
            if (null !== this.view && this.view.enabled) {
                var o = a.fullWidth
                  , s = a.fullHeight;
                i += a.offsetX * r / o,
                t -= a.offsetY * n / s,
                r *= a.width / o,
                n *= a.height / s
            }
            var l = this.filmOffset;
            0 !== l && (i += e * l / this.getFilmWidth()),
            this.projectionMatrix.makePerspective(i, i + r, t, t - n, e, this.far),
            this.projectionMatrixInverse.getInverse(this.projectionMatrix)
        },
        toJSON: function(e) {
            var t = fe.prototype.toJSON.call(this, e);
            return t.object.fov = this.fov,
            t.object.zoom = this.zoom,
            t.object.near = this.near,
            t.object.far = this.far,
            t.object.focus = this.focus,
            t.object.aspect = this.aspect,
            null !== this.view && (t.object.view = Object.assign({}, this.view)),
            t.object.filmGauge = this.filmGauge,
            t.object.filmOffset = this.filmOffset,
            t
        }
    });
    function dn(e, t, n, r) {
        fe.call(this),
        this.type = "CubeCamera";
        var i = new hn(90,1,e,t);
        i.up.set(0, -1, 0),
        i.lookAt(new G(1,0,0)),
        this.add(i);
        var a = new hn(90,1,e,t);
        a.up.set(0, -1, 0),
        a.lookAt(new G(-1,0,0)),
        this.add(a);
        var o = new hn(90,1,e,t);
        o.up.set(0, 0, 1),
        o.lookAt(new G(0,1,0)),
        this.add(o);
        var s = new hn(90,1,e,t);
        s.up.set(0, 0, -1),
        s.lookAt(new G(0,-1,0)),
        this.add(s);
        var l = new hn(90,1,e,t);
        l.up.set(0, -1, 0),
        l.lookAt(new G(0,0,1)),
        this.add(l);
        var u = new hn(90,1,e,t);
        u.up.set(0, -1, 0),
        u.lookAt(new G(0,0,-1)),
        this.add(u),
        r = r || {
            format: 1022,
            magFilter: 1006,
            minFilter: 1006
        },
        this.renderTarget = new fn(n,r),
        this.renderTarget.texture.name = "CubeCamera",
        this.update = function(e, t) {
            null === this.parent && this.updateMatrixWorld();
            var n = e.getRenderTarget()
              , r = this.renderTarget
              , c = r.texture.generateMipmaps;
            r.texture.generateMipmaps = !1,
            e.setRenderTarget(r, 0),
            e.render(t, i),
            e.setRenderTarget(r, 1),
            e.render(t, a),
            e.setRenderTarget(r, 2),
            e.render(t, o),
            e.setRenderTarget(r, 3),
            e.render(t, s),
            e.setRenderTarget(r, 4),
            e.render(t, l),
            r.texture.generateMipmaps = c,
            e.setRenderTarget(r, 5),
            e.render(t, u),
            e.setRenderTarget(n)
        }
        ,
        this.clear = function(e, t, n, r) {
            for (var i = e.getRenderTarget(), a = this.renderTarget, o = 0; o < 6; o++)
                e.setRenderTarget(a, o),
                e.clear(t, n, r);
            e.setRenderTarget(i)
        }
    }
    function fn(e, t, n) {
        Number.isInteger(t) && (console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),
        t = n),
        N.call(this, e, e, t)
    }
    function pn(e, t, n, r, i, a, o, s, l, u, c, h) {
        D.call(this, null, a, o, s, l, u, r, i, c, h),
        this.image = {
            data: e || null,
            width: t || 1,
            height: n || 1
        },
        this.magFilter = void 0 !== l ? l : 1003,
        this.minFilter = void 0 !== u ? u : 1003,
        this.generateMipmaps = !1,
        this.flipY = !1,
        this.unpackAlignment = 1,
        this.needsUpdate = !0
    }
    dn.prototype = Object.create(fe.prototype),
    dn.prototype.constructor = dn,
    fn.prototype = Object.create(N.prototype),
    fn.prototype.constructor = fn,
    fn.prototype.isWebGLCubeRenderTarget = !0,
    fn.prototype.fromEquirectangularTexture = function(e, t) {
        this.texture.type = t.type,
        this.texture.format = t.format,
        this.texture.encoding = t.encoding;
        var n = new pe
          , r = {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: ["varying vec3 vWorldDirection;", "vec3 transformDirection( in vec3 dir, in mat4 matrix ) {", "\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );", "}", "void main() {", "\tvWorldDirection = transformDirection( position, modelMatrix );", "\t#include <begin_vertex>", "\t#include <project_vertex>", "}"].join("\n"),
            fragmentShader: ["uniform sampler2D tEquirect;", "varying vec3 vWorldDirection;", "#define RECIPROCAL_PI 0.31830988618", "#define RECIPROCAL_PI2 0.15915494", "void main() {", "\tvec3 direction = normalize( vWorldDirection );", "\tvec2 sampleUV;", "\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;", "\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;", "\tgl_FragColor = texture2D( tEquirect, sampleUV );", "}"].join("\n")
        }
          , i = new un({
            type: "CubemapFromEquirect",
            uniforms: on(r.uniforms),
            vertexShader: r.vertexShader,
            fragmentShader: r.fragmentShader,
            side: 1,
            blending: 0
        });
        i.uniforms.tEquirect.value = t;
        var a = new Zt(new an(5,5,5),i);
        n.add(a);
        var o = new dn(1,10,1);
        return o.renderTarget = this,
        o.renderTarget.texture.name = "CubeCameraTexture",
        o.update(e, n),
        a.geometry.dispose(),
        a.material.dispose(),
        this
    }
    ,
    pn.prototype = Object.create(D.prototype),
    pn.prototype.constructor = pn,
    pn.prototype.isDataTexture = !0;
    var mn = new Pe
      , gn = new G;
    function vn(e, t, n, r, i, a) {
        this.planes = [void 0 !== e ? e : new je, void 0 !== t ? t : new je, void 0 !== n ? n : new je, void 0 !== r ? r : new je, void 0 !== i ? i : new je, void 0 !== a ? a : new je]
    }
    Object.assign(vn.prototype, {
        set: function(e, t, n, r, i, a) {
            var o = this.planes;
            return o[0].copy(e),
            o[1].copy(t),
            o[2].copy(n),
            o[3].copy(r),
            o[4].copy(i),
            o[5].copy(a),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            for (var t = this.planes, n = 0; n < 6; n++)
                t[n].copy(e.planes[n]);
            return this
        },
        setFromProjectionMatrix: function(e) {
            var t = this.planes
              , n = e.elements
              , r = n[0]
              , i = n[1]
              , a = n[2]
              , o = n[3]
              , s = n[4]
              , l = n[5]
              , u = n[6]
              , c = n[7]
              , h = n[8]
              , d = n[9]
              , f = n[10]
              , p = n[11]
              , m = n[12]
              , g = n[13]
              , v = n[14]
              , y = n[15];
            return t[0].setComponents(o - r, c - s, p - h, y - m).normalize(),
            t[1].setComponents(o + r, c + s, p + h, y + m).normalize(),
            t[2].setComponents(o + i, c + l, p + d, y + g).normalize(),
            t[3].setComponents(o - i, c - l, p - d, y - g).normalize(),
            t[4].setComponents(o - a, c - u, p - f, y - v).normalize(),
            t[5].setComponents(o + a, c + u, p + f, y + v).normalize(),
            this
        },
        intersectsObject: function(e) {
            var t = e.geometry;
            return null === t.boundingSphere && t.computeBoundingSphere(),
            mn.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),
            this.intersectsSphere(mn)
        },
        intersectsSprite: function(e) {
            return mn.center.set(0, 0, 0),
            mn.radius = .7071067811865476,
            mn.applyMatrix4(e.matrixWorld),
            this.intersectsSphere(mn)
        },
        intersectsSphere: function(e) {
            for (var t = this.planes, n = e.center, r = -e.radius, i = 0; i < 6; i++) {
                if (t[i].distanceToPoint(n) < r)
                    return !1
            }
            return !0
        },
        intersectsBox: function(e) {
            for (var t = this.planes, n = 0; n < 6; n++) {
                var r = t[n];
                if (gn.x = r.normal.x > 0 ? e.max.x : e.min.x,
                gn.y = r.normal.y > 0 ? e.max.y : e.min.y,
                gn.z = r.normal.z > 0 ? e.max.z : e.min.z,
                r.distanceToPoint(gn) < 0)
                    return !1
            }
            return !0
        },
        containsPoint: function(e) {
            for (var t = this.planes, n = 0; n < 6; n++)
                if (t[n].distanceToPoint(e) < 0)
                    return !1;
            return !0
        }
    });
    var yn = {
        common: {
            diffuse: {
                value: new it(15658734)
            },
            opacity: {
                value: 1
            },
            map: {
                value: null
            },
            uvTransform: {
                value: new P
            },
            uv2Transform: {
                value: new P
            },
            alphaMap: {
                value: null
            }
        },
        specularmap: {
            specularMap: {
                value: null
            }
        },
        envmap: {
            envMap: {
                value: null
            },
            flipEnvMap: {
                value: -1
            },
            reflectivity: {
                value: 1
            },
            refractionRatio: {
                value: .98
            },
            maxMipLevel: {
                value: 0
            }
        },
        aomap: {
            aoMap: {
                value: null
            },
            aoMapIntensity: {
                value: 1
            }
        },
        lightmap: {
            lightMap: {
                value: null
            },
            lightMapIntensity: {
                value: 1
            }
        },
        emissivemap: {
            emissiveMap: {
                value: null
            }
        },
        bumpmap: {
            bumpMap: {
                value: null
            },
            bumpScale: {
                value: 1
            }
        },
        normalmap: {
            normalMap: {
                value: null
            },
            normalScale: {
                value: new C(1,1)
            }
        },
        displacementmap: {
            displacementMap: {
                value: null
            },
            displacementScale: {
                value: 1
            },
            displacementBias: {
                value: 0
            }
        },
        roughnessmap: {
            roughnessMap: {
                value: null
            }
        },
        metalnessmap: {
            metalnessMap: {
                value: null
            }
        },
        gradientmap: {
            gradientMap: {
                value: null
            }
        },
        fog: {
            fogDensity: {
                value: 25e-5
            },
            fogNear: {
                value: 1
            },
            fogFar: {
                value: 2e3
            },
            fogColor: {
                value: new it(16777215)
            }
        },
        lights: {
            ambientLightColor: {
                value: []
            },
            lightProbe: {
                value: []
            },
            directionalLights: {
                value: [],
                properties: {
                    direction: {},
                    color: {}
                }
            },
            directionalLightShadows: {
                value: [],
                properties: {
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            directionalShadowMap: {
                value: []
            },
            directionalShadowMatrix: {
                value: []
            },
            spotLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    direction: {},
                    distance: {},
                    coneCos: {},
                    penumbraCos: {},
                    decay: {}
                }
            },
            spotLightShadows: {
                value: [],
                properties: {
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            spotShadowMap: {
                value: []
            },
            spotShadowMatrix: {
                value: []
            },
            pointLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    decay: {},
                    distance: {}
                }
            },
            pointLightShadows: {
                value: [],
                properties: {
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {},
                    shadowCameraNear: {},
                    shadowCameraFar: {}
                }
            },
            pointShadowMap: {
                value: []
            },
            pointShadowMatrix: {
                value: []
            },
            hemisphereLights: {
                value: [],
                properties: {
                    direction: {},
                    skyColor: {},
                    groundColor: {}
                }
            },
            rectAreaLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    width: {},
                    height: {}
                }
            }
        },
        points: {
            diffuse: {
                value: new it(15658734)
            },
            opacity: {
                value: 1
            },
            size: {
                value: 1
            },
            scale: {
                value: 1
            },
            map: {
                value: null
            },
            alphaMap: {
                value: null
            },
            uvTransform: {
                value: new P
            }
        },
        sprite: {
            diffuse: {
                value: new it(15658734)
            },
            opacity: {
                value: 1
            },
            center: {
                value: new C(.5,.5)
            },
            rotation: {
                value: 0
            },
            map: {
                value: null
            },
            alphaMap: {
                value: null
            },
            uvTransform: {
                value: new P
            }
        }
    };
    function bn() {
        var e = null
          , t = !1
          , n = null;
        function r(i, a) {
            !1 !== t && (n(i, a),
            e.requestAnimationFrame(r))
        }
        return {
            start: function() {
                !0 !== t && null !== n && (e.requestAnimationFrame(r),
                t = !0)
            },
            stop: function() {
                t = !1
            },
            setAnimationLoop: function(e) {
                n = e
            },
            setContext: function(t) {
                e = t
            }
        }
    }
    function xn(e, t) {
        var n = t.isWebGL2
          , r = new WeakMap;
        return {
            get: function(e) {
                return e.isInterleavedBufferAttribute && (e = e.data),
                r.get(e)
            },
            remove: function(t) {
                t.isInterleavedBufferAttribute && (t = t.data);
                var n = r.get(t);
                n && (e.deleteBuffer(n.buffer),
                r.delete(t))
            },
            update: function(t, i) {
                t.isInterleavedBufferAttribute && (t = t.data);
                var a = r.get(t);
                void 0 === a ? r.set(t, function(t, n) {
                    var r = t.array
                      , i = t.usage
                      , a = e.createBuffer();
                    e.bindBuffer(n, a),
                    e.bufferData(n, r, i),
                    t.onUploadCallback();
                    var o = 5126;
                    return r instanceof Float32Array ? o = 5126 : r instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : r instanceof Uint16Array ? o = 5123 : r instanceof Int16Array ? o = 5122 : r instanceof Uint32Array ? o = 5125 : r instanceof Int32Array ? o = 5124 : r instanceof Int8Array ? o = 5120 : r instanceof Uint8Array && (o = 5121),
                    {
                        buffer: a,
                        type: o,
                        bytesPerElement: r.BYTES_PER_ELEMENT,
                        version: t.version
                    }
                }(t, i)) : a.version < t.version && (!function(t, r, i) {
                    var a = r.array
                      , o = r.updateRange;
                    e.bindBuffer(i, t),
                    -1 === o.count ? e.bufferSubData(i, 0, a) : (n ? e.bufferSubData(i, o.offset * a.BYTES_PER_ELEMENT, a, o.offset, o.count) : e.bufferSubData(i, o.offset * a.BYTES_PER_ELEMENT, a.subarray(o.offset, o.offset + o.count)),
                    o.count = -1)
                }(a.buffer, t, i),
                a.version = t.version)
            }
        }
    }
    function wn(e, t, n, r) {
        rn.call(this),
        this.type = "PlaneGeometry",
        this.parameters = {
            width: e,
            height: t,
            widthSegments: n,
            heightSegments: r
        },
        this.fromBufferGeometry(new _n(e,t,n,r)),
        this.mergeVertices()
    }
    function _n(e, t, n, r) {
        Ot.call(this),
        this.type = "PlaneBufferGeometry",
        this.parameters = {
            width: e,
            height: t,
            widthSegments: n,
            heightSegments: r
        };
        var i, a, o = (e = e || 1) / 2, s = (t = t || 1) / 2, l = Math.floor(n) || 1, u = Math.floor(r) || 1, c = l + 1, h = u + 1, d = e / l, f = t / u, p = [], m = [], g = [], v = [];
        for (a = 0; a < h; a++) {
            var y = a * f - s;
            for (i = 0; i < c; i++) {
                var b = i * d - o;
                m.push(b, -y, 0),
                g.push(0, 0, 1),
                v.push(i / l),
                v.push(1 - a / u)
            }
        }
        for (a = 0; a < u; a++)
            for (i = 0; i < l; i++) {
                var x = i + c * a
                  , w = i + c * (a + 1)
                  , _ = i + 1 + c * (a + 1)
                  , E = i + 1 + c * a;
                p.push(x, w, E),
                p.push(w, _, E)
            }
        this.setIndex(p),
        this.setAttribute("position", new wt(m,3)),
        this.setAttribute("normal", new wt(g,3)),
        this.setAttribute("uv", new wt(v,2))
    }
    wn.prototype = Object.create(rn.prototype),
    wn.prototype.constructor = wn,
    _n.prototype = Object.create(Ot.prototype),
    _n.prototype.constructor = _n;
    var En = {
        alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",
        alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
        alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",
        aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",
        aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
        begin_vertex: "vec3 transformed = vec3( position );",
        beginnormal_vertex: "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
        bsdfs: "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",
        bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
        clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
        clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
        clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",
        clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",
        color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
        color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
        color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
        color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
        common: "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}",
        cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);\n    } else if (face == 1.0) {\n      uv = vec2(direction.x, -direction.z) / abs(direction.y);\n    } else if (face == 2.0) {\n      uv = direction.xy / abs(direction.z);\n    } else if (face == 3.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);\n    } else if (face == 4.0) {\n      uv = direction.xz / abs(direction.y);\n    } else {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);\n    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",
        defaultnormal_vertex: "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
        displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
        displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",
        emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
        emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
        encodings_fragment: "gl_FragColor = linearToOutputTexel( gl_FragColor );",
        encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",
        envmap_fragment: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
        envmap_common_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",
        envmap_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
        envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
        envmap_physical_pars_fragment: "#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",
        envmap_vertex: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
        fog_vertex: "#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",
        fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",
        fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
        fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
        gradientmap_pars_fragment: "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",
        lightmap_fragment: "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",
        lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
        lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",
        lights_pars_begin: "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",
        lights_toon_fragment: "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
        lights_toon_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",
        lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
        lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
        lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",
        lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
        lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
        lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",
        lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",
        logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
        logdepthbuf_pars_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
        logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",
        logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",
        map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",
        map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
        map_particle_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
        map_particle_pars_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
        metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
        metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
        morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",
        morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
        morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",
        normal_fragment_begin: "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",
        normal_fragment_maps: "#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",
        normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",
        clearcoat_normal_fragment_begin: "#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",
        clearcoat_normal_fragment_maps: "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",
        clearcoat_pars_fragment: "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",
        packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
        premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
        project_vertex: "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
        dithering_fragment: "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
        dithering_pars_fragment: "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
        roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
        roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
        shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
        shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
        shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",
        shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
        skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
        skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",
        skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
        skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
        specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
        specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
        tonemapping_fragment: "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
        tonemapping_pars_fragment: "#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",
        uv_pars_fragment: "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",
        uv_pars_vertex: "#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",
        uv_vertex: "#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
        uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
        uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",
        uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",
        worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
        background_frag: "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
        background_vert: "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
        cube_frag: "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
        cube_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
        depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",
        depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",
        distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
        distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
        equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
        equirect_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
        linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
        linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
        meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
        meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
        meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        meshmatcap_frag: "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
        meshmatcap_vert: "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
        meshtoon_frag: "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshtoon_vert: "#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        meshphysical_frag: "#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshphysical_vert: "#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",
        normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
        points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
        points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
        shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        shadow_vert: "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        sprite_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        sprite_vert: "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"
    }
      , Tn = {
        basic: {
            uniforms: sn([yn.common, yn.specularmap, yn.envmap, yn.aomap, yn.lightmap, yn.fog]),
            vertexShader: En.meshbasic_vert,
            fragmentShader: En.meshbasic_frag
        },
        lambert: {
            uniforms: sn([yn.common, yn.specularmap, yn.envmap, yn.aomap, yn.lightmap, yn.emissivemap, yn.fog, yn.lights, {
                emissive: {
                    value: new it(0)
                }
            }]),
            vertexShader: En.meshlambert_vert,
            fragmentShader: En.meshlambert_frag
        },
        phong: {
            uniforms: sn([yn.common, yn.specularmap, yn.envmap, yn.aomap, yn.lightmap, yn.emissivemap, yn.bumpmap, yn.normalmap, yn.displacementmap, yn.fog, yn.lights, {
                emissive: {
                    value: new it(0)
                },
                specular: {
                    value: new it(1118481)
                },
                shininess: {
                    value: 30
                }
            }]),
            vertexShader: En.meshphong_vert,
            fragmentShader: En.meshphong_frag
        },
        standard: {
            uniforms: sn([yn.common, yn.envmap, yn.aomap, yn.lightmap, yn.emissivemap, yn.bumpmap, yn.normalmap, yn.displacementmap, yn.roughnessmap, yn.metalnessmap, yn.fog, yn.lights, {
                emissive: {
                    value: new it(0)
                },
                roughness: {
                    value: .5
                },
                metalness: {
                    value: .5
                },
                envMapIntensity: {
                    value: 1
                }
            }]),
            vertexShader: En.meshphysical_vert,
            fragmentShader: En.meshphysical_frag
        },
        toon: {
            uniforms: sn([yn.common, yn.specularmap, yn.aomap, yn.lightmap, yn.emissivemap, yn.bumpmap, yn.normalmap, yn.displacementmap, yn.gradientmap, yn.fog, yn.lights, {
                emissive: {
                    value: new it(0)
                },
                specular: {
                    value: new it(1118481)
                },
                shininess: {
                    value: 30
                }
            }]),
            vertexShader: En.meshtoon_vert,
            fragmentShader: En.meshtoon_frag
        },
        matcap: {
            uniforms: sn([yn.common, yn.bumpmap, yn.normalmap, yn.displacementmap, yn.fog, {
                matcap: {
                    value: null
                }
            }]),
            vertexShader: En.meshmatcap_vert,
            fragmentShader: En.meshmatcap_frag
        },
        points: {
            uniforms: sn([yn.points, yn.fog]),
            vertexShader: En.points_vert,
            fragmentShader: En.points_frag
        },
        dashed: {
            uniforms: sn([yn.common, yn.fog, {
                scale: {
                    value: 1
                },
                dashSize: {
                    value: 1
                },
                totalSize: {
                    value: 2
                }
            }]),
            vertexShader: En.linedashed_vert,
            fragmentShader: En.linedashed_frag
        },
        depth: {
            uniforms: sn([yn.common, yn.displacementmap]),
            vertexShader: En.depth_vert,
            fragmentShader: En.depth_frag
        },
        normal: {
            uniforms: sn([yn.common, yn.bumpmap, yn.normalmap, yn.displacementmap, {
                opacity: {
                    value: 1
                }
            }]),
            vertexShader: En.normal_vert,
            fragmentShader: En.normal_frag
        },
        sprite: {
            uniforms: sn([yn.sprite, yn.fog]),
            vertexShader: En.sprite_vert,
            fragmentShader: En.sprite_frag
        },
        background: {
            uniforms: {
                uvTransform: {
                    value: new P
                },
                t2D: {
                    value: null
                }
            },
            vertexShader: En.background_vert,
            fragmentShader: En.background_frag
        },
        cube: {
            uniforms: sn([yn.envmap, {
                opacity: {
                    value: 1
                }
            }]),
            vertexShader: En.cube_vert,
            fragmentShader: En.cube_frag
        },
        equirect: {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: En.equirect_vert,
            fragmentShader: En.equirect_frag
        },
        distanceRGBA: {
            uniforms: sn([yn.common, yn.displacementmap, {
                referencePosition: {
                    value: new G
                },
                nearDistance: {
                    value: 1
                },
                farDistance: {
                    value: 1e3
                }
            }]),
            vertexShader: En.distanceRGBA_vert,
            fragmentShader: En.distanceRGBA_frag
        },
        shadow: {
            uniforms: sn([yn.lights, yn.fog, {
                color: {
                    value: new it(0)
                },
                opacity: {
                    value: 1
                }
            }]),
            vertexShader: En.shadow_vert,
            fragmentShader: En.shadow_frag
        }
    };
    function Sn(e, t, n, r) {
        var i, a, o = new it(0), s = 0, l = null, u = 0, c = null;
        function h(e, n) {
            t.buffers.color.setClear(e.r, e.g, e.b, n, r)
        }
        return {
            getClearColor: function() {
                return o
            },
            setClearColor: function(e, t) {
                o.set(e),
                h(o, s = void 0 !== t ? t : 1)
            },
            getClearAlpha: function() {
                return s
            },
            setClearAlpha: function(e) {
                h(o, s = e)
            },
            render: function(t, r, d, f) {
                var p = r.background
                  , m = e.xr
                  , g = m.getSession && m.getSession();
                if (g && "additive" === g.environmentBlendMode && (p = null),
                null === p ? h(o, s) : p && p.isColor && (h(p, 1),
                f = !0),
                (e.autoClear || f) && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
                p && (p.isCubeTexture || p.isWebGLCubeRenderTarget || 306 === p.mapping)) {
                    void 0 === a && ((a = new Zt(new an(1,1,1),new un({
                        type: "BackgroundCubeMaterial",
                        uniforms: on(Tn.cube.uniforms),
                        vertexShader: Tn.cube.vertexShader,
                        fragmentShader: Tn.cube.fragmentShader,
                        side: 1,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1
                    }))).geometry.deleteAttribute("normal"),
                    a.geometry.deleteAttribute("uv"),
                    a.onBeforeRender = function(e, t, n) {
                        this.matrixWorld.copyPosition(n.matrixWorld)
                    }
                    ,
                    Object.defineProperty(a.material, "envMap", {
                        get: function() {
                            return this.uniforms.envMap.value
                        }
                    }),
                    n.update(a));
                    var v = p.isWebGLCubeRenderTarget ? p.texture : p;
                    a.material.uniforms.envMap.value = v,
                    a.material.uniforms.flipEnvMap.value = v.isCubeTexture ? -1 : 1,
                    l === p && u === v.version && c === e.toneMapping || (a.material.needsUpdate = !0,
                    l = p,
                    u = v.version,
                    c = e.toneMapping),
                    t.unshift(a, a.geometry, a.material, 0, 0, null)
                } else
                    p && p.isTexture && (void 0 === i && ((i = new Zt(new _n(2,2),new un({
                        type: "BackgroundMaterial",
                        uniforms: on(Tn.background.uniforms),
                        vertexShader: Tn.background.vertexShader,
                        fragmentShader: Tn.background.fragmentShader,
                        side: 0,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1
                    }))).geometry.deleteAttribute("normal"),
                    Object.defineProperty(i.material, "map", {
                        get: function() {
                            return this.uniforms.t2D.value
                        }
                    }),
                    n.update(i)),
                    i.material.uniforms.t2D.value = p,
                    !0 === p.matrixAutoUpdate && p.updateMatrix(),
                    i.material.uniforms.uvTransform.value.copy(p.matrix),
                    l === p && u === p.version && c === e.toneMapping || (i.material.needsUpdate = !0,
                    l = p,
                    u = p.version,
                    c = e.toneMapping),
                    t.unshift(i, i.geometry, i.material, 0, 0, null))
            }
        }
    }
    function Mn(e, t, n, r) {
        var i, a = r.isWebGL2;
        this.setMode = function(e) {
            i = e
        }
        ,
        this.render = function(t, r) {
            e.drawArrays(i, t, r),
            n.update(r, i)
        }
        ,
        this.renderInstances = function(r, o, s, l) {
            if (0 !== l) {
                var u, c;
                if (a)
                    u = e,
                    c = "drawArraysInstanced";
                else if (c = "drawArraysInstancedANGLE",
                null === (u = t.get("ANGLE_instanced_arrays")))
                    return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                u[c](i, o, s, l),
                n.update(s, i, l)
            }
        }
    }
    function An(e, t, n) {
        var r;
        function i(t) {
            if ("highp" === t) {
                if (e.getShaderPrecisionFormat(35633, 36338).precision > 0 && e.getShaderPrecisionFormat(35632, 36338).precision > 0)
                    return "highp";
                t = "mediump"
            }
            return "mediump" === t && e.getShaderPrecisionFormat(35633, 36337).precision > 0 && e.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp"
        }
        var a = "undefined" != typeof WebGL2RenderingContext && e instanceof WebGL2RenderingContext || "undefined" != typeof WebGL2ComputeRenderingContext && e instanceof WebGL2ComputeRenderingContext
          , o = void 0 !== n.precision ? n.precision : "highp"
          , s = i(o);
        s !== o && (console.warn("THREE.WebGLRenderer:", o, "not supported, using", s, "instead."),
        o = s);
        var l = !0 === n.logarithmicDepthBuffer
          , u = e.getParameter(34930)
          , c = e.getParameter(35660)
          , h = e.getParameter(3379)
          , d = e.getParameter(34076)
          , f = e.getParameter(34921)
          , p = e.getParameter(36347)
          , m = e.getParameter(36348)
          , g = e.getParameter(36349)
          , v = c > 0
          , y = a || !!t.get("OES_texture_float");
        return {
            isWebGL2: a,
            getMaxAnisotropy: function() {
                if (void 0 !== r)
                    return r;
                var n = t.get("EXT_texture_filter_anisotropic");
                return r = null !== n ? e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
            },
            getMaxPrecision: i,
            precision: o,
            logarithmicDepthBuffer: l,
            maxTextures: u,
            maxVertexTextures: c,
            maxTextureSize: h,
            maxCubemapSize: d,
            maxAttributes: f,
            maxVertexUniforms: p,
            maxVaryings: m,
            maxFragmentUniforms: g,
            vertexTextures: v,
            floatFragmentTextures: y,
            floatVertexTextures: v && y,
            maxSamples: a ? e.getParameter(36183) : 0
        }
    }
    function Rn() {
        var e = this
          , t = null
          , n = 0
          , r = !1
          , i = !1
          , a = new je
          , o = new P
          , s = {
            value: null,
            needsUpdate: !1
        };
        function l() {
            s.value !== t && (s.value = t,
            s.needsUpdate = n > 0),
            e.numPlanes = n,
            e.numIntersection = 0
        }
        function u(t, n, r, i) {
            var l = null !== t ? t.length : 0
              , u = null;
            if (0 !== l) {
                if (u = s.value,
                !0 !== i || null === u) {
                    var c = r + 4 * l
                      , h = n.matrixWorldInverse;
                    o.getNormalMatrix(h),
                    (null === u || u.length < c) && (u = new Float32Array(c));
                    for (var d = 0, f = r; d !== l; ++d,
                    f += 4)
                        a.copy(t[d]).applyMatrix4(h, o),
                        a.normal.toArray(u, f),
                        u[f + 3] = a.constant
                }
                s.value = u,
                s.needsUpdate = !0
            }
            return e.numPlanes = l,
            e.numIntersection = 0,
            u
        }
        this.uniform = s,
        this.numPlanes = 0,
        this.numIntersection = 0,
        this.init = function(e, i, a) {
            var o = 0 !== e.length || i || 0 !== n || r;
            return r = i,
            t = u(e, a, 0),
            n = e.length,
            o
        }
        ,
        this.beginShadows = function() {
            i = !0,
            u(null)
        }
        ,
        this.endShadows = function() {
            i = !1,
            l()
        }
        ,
        this.setState = function(e, a, o, c, h, d) {
            if (!r || null === e || 0 === e.length || i && !o)
                i ? u(null) : l();
            else {
                var f = i ? 0 : n
                  , p = 4 * f
                  , m = h.clippingState || null;
                s.value = m,
                m = u(e, c, p, d);
                for (var g = 0; g !== p; ++g)
                    m[g] = t[g];
                h.clippingState = m,
                this.numIntersection = a ? this.numPlanes : 0,
                this.numPlanes += f
            }
        }
    }
    function Ln(e) {
        var t = {};
        return {
            get: function(n) {
                if (void 0 !== t[n])
                    return t[n];
                var r;
                switch (n) {
                case "WEBGL_depth_texture":
                    r = e.getExtension("WEBGL_depth_texture") || e.getExtension("MOZ_WEBGL_depth_texture") || e.getExtension("WEBKIT_WEBGL_depth_texture");
                    break;
                case "EXT_texture_filter_anisotropic":
                    r = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                    break;
                case "WEBGL_compressed_texture_s3tc":
                    r = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                    break;
                case "WEBGL_compressed_texture_pvrtc":
                    r = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    break;
                default:
                    r = e.getExtension(n)
                }
                return null === r && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."),
                t[n] = r,
                r
            }
        }
    }
    function Cn(e, t, n) {
        var r = new WeakMap
          , i = new WeakMap;
        function a(e) {
            var o = e.target
              , s = r.get(o);
            for (var l in null !== s.index && t.remove(s.index),
            s.attributes)
                t.remove(s.attributes[l]);
            o.removeEventListener("dispose", a),
            r.delete(o);
            var u = i.get(s);
            u && (t.remove(u),
            i.delete(s)),
            n.memory.geometries--
        }
        function o(e) {
            var n = []
              , r = e.index
              , a = e.attributes.position
              , o = 0;
            if (null !== r) {
                var s = r.array;
                o = r.version;
                for (var l = 0, u = s.length; l < u; l += 3) {
                    var c = s[l + 0]
                      , h = s[l + 1]
                      , d = s[l + 2];
                    n.push(c, h, h, d, d, c)
                }
            } else {
                s = a.array;
                o = a.version;
                for (l = 0,
                u = s.length / 3 - 1; l < u; l += 3) {
                    c = l + 0,
                    h = l + 1,
                    d = l + 2;
                    n.push(c, h, h, d, d, c)
                }
            }
            var f = new (Tt(n) > 65535 ? xt : yt)(n,1);
            f.version = o,
            t.update(f, 34963);
            var p = i.get(e);
            p && t.remove(p),
            i.set(e, f)
        }
        return {
            get: function(e, t) {
                var i = r.get(t);
                return i || (t.addEventListener("dispose", a),
                t.isBufferGeometry ? i = t : t.isGeometry && (void 0 === t._bufferGeometry && (t._bufferGeometry = (new Ot).setFromObject(e)),
                i = t._bufferGeometry),
                r.set(t, i),
                n.memory.geometries++,
                i)
            },
            update: function(e) {
                var n = e.index
                  , r = e.attributes;
                for (var i in null !== n && t.update(n, 34963),
                r)
                    t.update(r[i], 34962);
                var a = e.morphAttributes;
                for (var i in a)
                    for (var o = a[i], s = 0, l = o.length; s < l; s++)
                        t.update(o[s], 34962)
            },
            getWireframeAttribute: function(e) {
                var t = i.get(e);
                if (t) {
                    var n = e.index;
                    null !== n && t.version < n.version && o(e)
                } else
                    o(e);
                return i.get(e)
            }
        }
    }
    function Pn(e, t, n, r) {
        var i, a, o, s = r.isWebGL2;
        this.setMode = function(e) {
            i = e
        }
        ,
        this.setIndex = function(e) {
            a = e.type,
            o = e.bytesPerElement
        }
        ,
        this.render = function(t, r) {
            e.drawElements(i, r, a, t * o),
            n.update(r, i)
        }
        ,
        this.renderInstances = function(r, l, u, c) {
            if (0 !== c) {
                var h, d;
                if (s)
                    h = e,
                    d = "drawElementsInstanced";
                else if (d = "drawElementsInstancedANGLE",
                null === (h = t.get("ANGLE_instanced_arrays")))
                    return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                h[d](i, u, a, l * o, c),
                n.update(u, i, c)
            }
        }
    }
    function On(e) {
        var t = {
            frame: 0,
            calls: 0,
            triangles: 0,
            points: 0,
            lines: 0
        };
        return {
            memory: {
                geometries: 0,
                textures: 0
            },
            render: t,
            programs: null,
            autoReset: !0,
            reset: function() {
                t.frame++,
                t.calls = 0,
                t.triangles = 0,
                t.points = 0,
                t.lines = 0
            },
            update: function(e, n, r) {
                switch (r = r || 1,
                t.calls++,
                n) {
                case 4:
                    t.triangles += r * (e / 3);
                    break;
                case 1:
                    t.lines += r * (e / 2);
                    break;
                case 3:
                    t.lines += r * (e - 1);
                    break;
                case 2:
                    t.lines += r * e;
                    break;
                case 0:
                    t.points += r * e;
                    break;
                default:
                    console.error("THREE.WebGLInfo: Unknown draw mode:", n)
                }
            }
        }
    }
    function kn(e, t) {
        return Math.abs(t[1]) - Math.abs(e[1])
    }
    function Dn(e) {
        var t = {}
          , n = new Float32Array(8);
        return {
            update: function(r, i, a, o) {
                var s = r.morphTargetInfluences
                  , l = void 0 === s ? 0 : s.length
                  , u = t[i.id];
                if (void 0 === u) {
                    u = [];
                    for (var c = 0; c < l; c++)
                        u[c] = [c, 0];
                    t[i.id] = u
                }
                var h = a.morphTargets && i.morphAttributes.position
                  , d = a.morphNormals && i.morphAttributes.normal;
                for (c = 0; c < l; c++) {
                    0 !== (p = u[c])[1] && (h && i.deleteAttribute("morphTarget" + c),
                    d && i.deleteAttribute("morphNormal" + c))
                }
                for (c = 0; c < l; c++) {
                    (p = u[c])[0] = c,
                    p[1] = s[c]
                }
                u.sort(kn);
                var f = 0;
                for (c = 0; c < 8; c++) {
                    var p;
                    if (p = u[c]) {
                        var m = p[0]
                          , g = p[1];
                        if (g) {
                            h && i.setAttribute("morphTarget" + c, h[m]),
                            d && i.setAttribute("morphNormal" + c, d[m]),
                            n[c] = g,
                            f += g;
                            continue
                        }
                    }
                    n[c] = 0
                }
                var v = i.morphTargetsRelative ? 1 : 1 - f;
                o.getUniforms().setValue(e, "morphTargetBaseInfluence", v),
                o.getUniforms().setValue(e, "morphTargetInfluences", n)
            }
        }
    }
    function In(e, t, n, r) {
        var i = new WeakMap;
        return {
            update: function(e) {
                var a = r.render.frame
                  , o = e.geometry
                  , s = t.get(e, o);
                return i.get(s) !== a && (o.isGeometry && s.updateFromObject(e),
                t.update(s),
                i.set(s, a)),
                e.isInstancedMesh && n.update(e.instanceMatrix, 34962),
                s
            },
            dispose: function() {
                i = new WeakMap
            }
        }
    }
    function Nn(e, t, n, r, i, a, o, s, l, u) {
        e = void 0 !== e ? e : [],
        t = void 0 !== t ? t : 301,
        o = void 0 !== o ? o : 1022,
        D.call(this, e, t, n, r, i, a, o, s, l, u),
        this.flipY = !1
    }
    function Fn(e, t, n, r) {
        D.call(this, null),
        this.image = {
            data: e || null,
            width: t || 1,
            height: n || 1,
            depth: r || 1
        },
        this.magFilter = 1003,
        this.minFilter = 1003,
        this.wrapR = 1001,
        this.generateMipmaps = !1,
        this.flipY = !1,
        this.needsUpdate = !0
    }
    function Un(e, t, n, r) {
        D.call(this, null),
        this.image = {
            data: e || null,
            width: t || 1,
            height: n || 1,
            depth: r || 1
        },
        this.magFilter = 1003,
        this.minFilter = 1003,
        this.wrapR = 1001,
        this.generateMipmaps = !1,
        this.flipY = !1,
        this.needsUpdate = !0
    }
    Tn.physical = {
        uniforms: sn([Tn.standard.uniforms, {
            clearcoat: {
                value: 0
            },
            clearcoatMap: {
                value: null
            },
            clearcoatRoughness: {
                value: 0
            },
            clearcoatRoughnessMap: {
                value: null
            },
            clearcoatNormalScale: {
                value: new C(1,1)
            },
            clearcoatNormalMap: {
                value: null
            },
            sheen: {
                value: new it(0)
            },
            transparency: {
                value: 0
            }
        }]),
        vertexShader: En.meshphysical_vert,
        fragmentShader: En.meshphysical_frag
    },
    Nn.prototype = Object.create(D.prototype),
    Nn.prototype.constructor = Nn,
    Nn.prototype.isCubeTexture = !0,
    Object.defineProperty(Nn.prototype, "images", {
        get: function() {
            return this.image
        },
        set: function(e) {
            this.image = e
        }
    }),
    Fn.prototype = Object.create(D.prototype),
    Fn.prototype.constructor = Fn,
    Fn.prototype.isDataTexture2DArray = !0,
    Un.prototype = Object.create(D.prototype),
    Un.prototype.constructor = Un,
    Un.prototype.isDataTexture3D = !0;
    var Bn = new D
      , zn = new Fn
      , Gn = new Un
      , Hn = new Nn
      , jn = []
      , Vn = []
      , Wn = new Float32Array(16)
      , qn = new Float32Array(9)
      , Kn = new Float32Array(4);
    function Yn(e, t, n) {
        var r = e[0];
        if (r <= 0 || r > 0)
            return e;
        var i = t * n
          , a = jn[i];
        if (void 0 === a && (a = new Float32Array(i),
        jn[i] = a),
        0 !== t) {
            r.toArray(a, 0);
            for (var o = 1, s = 0; o !== t; ++o)
                s += n,
                e[o].toArray(a, s)
        }
        return a
    }
    function Xn(e, t) {
        if (e.length !== t.length)
            return !1;
        for (var n = 0, r = e.length; n < r; n++)
            if (e[n] !== t[n])
                return !1;
        return !0
    }
    function Zn(e, t) {
        for (var n = 0, r = t.length; n < r; n++)
            e[n] = t[n]
    }
    function Jn(e, t) {
        var n = Vn[t];
        void 0 === n && (n = new Int32Array(t),
        Vn[t] = n);
        for (var r = 0; r !== t; ++r)
            n[r] = e.allocateTextureUnit();
        return n
    }
    function Qn(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1f(this.addr, t),
        n[0] = t)
    }
    function $n(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
            n[0] === t.x && n[1] === t.y || (e.uniform2f(this.addr, t.x, t.y),
            n[0] = t.x,
            n[1] = t.y);
        else {
            if (Xn(n, t))
                return;
            e.uniform2fv(this.addr, t),
            Zn(n, t)
        }
    }
    function er(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
            n[0] === t.x && n[1] === t.y && n[2] === t.z || (e.uniform3f(this.addr, t.x, t.y, t.z),
            n[0] = t.x,
            n[1] = t.y,
            n[2] = t.z);
        else if (void 0 !== t.r)
            n[0] === t.r && n[1] === t.g && n[2] === t.b || (e.uniform3f(this.addr, t.r, t.g, t.b),
            n[0] = t.r,
            n[1] = t.g,
            n[2] = t.b);
        else {
            if (Xn(n, t))
                return;
            e.uniform3fv(this.addr, t),
            Zn(n, t)
        }
    }
    function tr(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
            n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w || (e.uniform4f(this.addr, t.x, t.y, t.z, t.w),
            n[0] = t.x,
            n[1] = t.y,
            n[2] = t.z,
            n[3] = t.w);
        else {
            if (Xn(n, t))
                return;
            e.uniform4fv(this.addr, t),
            Zn(n, t)
        }
    }
    function nr(e, t) {
        var n = this.cache
          , r = t.elements;
        if (void 0 === r) {
            if (Xn(n, t))
                return;
            e.uniformMatrix2fv(this.addr, !1, t),
            Zn(n, t)
        } else {
            if (Xn(n, r))
                return;
            Kn.set(r),
            e.uniformMatrix2fv(this.addr, !1, Kn),
            Zn(n, r)
        }
    }
    function rr(e, t) {
        var n = this.cache
          , r = t.elements;
        if (void 0 === r) {
            if (Xn(n, t))
                return;
            e.uniformMatrix3fv(this.addr, !1, t),
            Zn(n, t)
        } else {
            if (Xn(n, r))
                return;
            qn.set(r),
            e.uniformMatrix3fv(this.addr, !1, qn),
            Zn(n, r)
        }
    }
    function ir(e, t) {
        var n = this.cache
          , r = t.elements;
        if (void 0 === r) {
            if (Xn(n, t))
                return;
            e.uniformMatrix4fv(this.addr, !1, t),
            Zn(n, t)
        } else {
            if (Xn(n, r))
                return;
            Wn.set(r),
            e.uniformMatrix4fv(this.addr, !1, Wn),
            Zn(n, r)
        }
    }
    function ar(e, t, n) {
        var r = this.cache
          , i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i),
        r[0] = i),
        n.safeSetTexture2D(t || Bn, i)
    }
    function or(e, t, n) {
        var r = this.cache
          , i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i),
        r[0] = i),
        n.setTexture2DArray(t || zn, i)
    }
    function sr(e, t, n) {
        var r = this.cache
          , i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i),
        r[0] = i),
        n.setTexture3D(t || Gn, i)
    }
    function lr(e, t, n) {
        var r = this.cache
          , i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i),
        r[0] = i),
        n.safeSetTextureCube(t || Hn, i)
    }
    function ur(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1i(this.addr, t),
        n[0] = t)
    }
    function cr(e, t) {
        var n = this.cache;
        Xn(n, t) || (e.uniform2iv(this.addr, t),
        Zn(n, t))
    }
    function hr(e, t) {
        var n = this.cache;
        Xn(n, t) || (e.uniform3iv(this.addr, t),
        Zn(n, t))
    }
    function dr(e, t) {
        var n = this.cache;
        Xn(n, t) || (e.uniform4iv(this.addr, t),
        Zn(n, t))
    }
    function fr(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1ui(this.addr, t),
        n[0] = t)
    }
    function pr(e, t) {
        e.uniform1fv(this.addr, t)
    }
    function mr(e, t) {
        e.uniform1iv(this.addr, t)
    }
    function gr(e, t) {
        e.uniform2iv(this.addr, t)
    }
    function vr(e, t) {
        e.uniform3iv(this.addr, t)
    }
    function yr(e, t) {
        e.uniform4iv(this.addr, t)
    }
    function br(e, t) {
        var n = Yn(t, this.size, 2);
        e.uniform2fv(this.addr, n)
    }
    function xr(e, t) {
        var n = Yn(t, this.size, 3);
        e.uniform3fv(this.addr, n)
    }
    function wr(e, t) {
        var n = Yn(t, this.size, 4);
        e.uniform4fv(this.addr, n)
    }
    function _r(e, t) {
        var n = Yn(t, this.size, 4);
        e.uniformMatrix2fv(this.addr, !1, n)
    }
    function Er(e, t) {
        var n = Yn(t, this.size, 9);
        e.uniformMatrix3fv(this.addr, !1, n)
    }
    function Tr(e, t) {
        var n = Yn(t, this.size, 16);
        e.uniformMatrix4fv(this.addr, !1, n)
    }
    function Sr(e, t, n) {
        var r = t.length
          , i = Jn(n, r);
        e.uniform1iv(this.addr, i);
        for (var a = 0; a !== r; ++a)
            n.safeSetTexture2D(t[a] || Bn, i[a])
    }
    function Mr(e, t, n) {
        var r = t.length
          , i = Jn(n, r);
        e.uniform1iv(this.addr, i);
        for (var a = 0; a !== r; ++a)
            n.safeSetTextureCube(t[a] || Hn, i[a])
    }
    function Ar(e, t, n) {
        this.id = e,
        this.addr = n,
        this.cache = [],
        this.setValue = function(e) {
            switch (e) {
            case 5126:
                return Qn;
            case 35664:
                return $n;
            case 35665:
                return er;
            case 35666:
                return tr;
            case 35674:
                return nr;
            case 35675:
                return rr;
            case 35676:
                return ir;
            case 5124:
            case 35670:
                return ur;
            case 35667:
            case 35671:
                return cr;
            case 35668:
            case 35672:
                return hr;
            case 35669:
            case 35673:
                return dr;
            case 5125:
                return fr;
            case 35678:
            case 36198:
            case 36298:
            case 36306:
            case 35682:
                return ar;
            case 35679:
            case 36299:
            case 36307:
                return sr;
            case 35680:
            case 36300:
            case 36308:
            case 36293:
                return lr;
            case 36289:
            case 36303:
            case 36311:
            case 36292:
                return or
            }
        }(t.type)
    }
    function Rr(e, t, n) {
        this.id = e,
        this.addr = n,
        this.cache = [],
        this.size = t.size,
        this.setValue = function(e) {
            switch (e) {
            case 5126:
                return pr;
            case 35664:
                return br;
            case 35665:
                return xr;
            case 35666:
                return wr;
            case 35674:
                return _r;
            case 35675:
                return Er;
            case 35676:
                return Tr;
            case 5124:
            case 35670:
                return mr;
            case 35667:
            case 35671:
                return gr;
            case 35668:
            case 35672:
                return vr;
            case 35669:
            case 35673:
                return yr;
            case 35678:
            case 36198:
            case 36298:
            case 36306:
            case 35682:
                return Sr;
            case 35680:
            case 36300:
            case 36308:
            case 36293:
                return Mr
            }
        }(t.type)
    }
    function Lr(e) {
        this.id = e,
        this.seq = [],
        this.map = {}
    }
    Rr.prototype.updateCache = function(e) {
        var t = this.cache;
        e instanceof Float32Array && t.length !== e.length && (this.cache = new Float32Array(e.length)),
        Zn(t, e)
    }
    ,
    Lr.prototype.setValue = function(e, t, n) {
        for (var r = this.seq, i = 0, a = r.length; i !== a; ++i) {
            var o = r[i];
            o.setValue(e, t[o.id], n)
        }
    }
    ;
    var Cr = /([\w\d_]+)(\])?(\[|\.)?/g;
    function Pr(e, t) {
        e.seq.push(t),
        e.map[t.id] = t
    }
    function Or(e, t, n) {
        var r = e.name
          , i = r.length;
        for (Cr.lastIndex = 0; ; ) {
            var a = Cr.exec(r)
              , o = Cr.lastIndex
              , s = a[1]
              , l = "]" === a[2]
              , u = a[3];
            if (l && (s |= 0),
            void 0 === u || "[" === u && o + 2 === i) {
                Pr(n, void 0 === u ? new Ar(s,e,t) : new Rr(s,e,t));
                break
            }
            var c = n.map[s];
            void 0 === c && Pr(n, c = new Lr(s)),
            n = c
        }
    }
    function kr(e, t) {
        this.seq = [],
        this.map = {};
        for (var n = e.getProgramParameter(t, 35718), r = 0; r < n; ++r) {
            var i = e.getActiveUniform(t, r);
            Or(i, e.getUniformLocation(t, i.name), this)
        }
    }
    function Dr(e, t, n) {
        var r = e.createShader(t);
        return e.shaderSource(r, n),
        e.compileShader(r),
        r
    }
    kr.prototype.setValue = function(e, t, n, r) {
        var i = this.map[t];
        void 0 !== i && i.setValue(e, n, r)
    }
    ,
    kr.prototype.setOptional = function(e, t, n) {
        var r = t[n];
        void 0 !== r && this.setValue(e, n, r)
    }
    ,
    kr.upload = function(e, t, n, r) {
        for (var i = 0, a = t.length; i !== a; ++i) {
            var o = t[i]
              , s = n[o.id];
            !1 !== s.needsUpdate && o.setValue(e, s.value, r)
        }
    }
    ,
    kr.seqWithValue = function(e, t) {
        for (var n = [], r = 0, i = e.length; r !== i; ++r) {
            var a = e[r];
            a.id in t && n.push(a)
        }
        return n
    }
    ;
    var Ir = 0;
    function Nr(e) {
        switch (e) {
        case 3e3:
            return ["Linear", "( value )"];
        case 3001:
            return ["sRGB", "( value )"];
        case 3002:
            return ["RGBE", "( value )"];
        case 3004:
            return ["RGBM", "( value, 7.0 )"];
        case 3005:
            return ["RGBM", "( value, 16.0 )"];
        case 3006:
            return ["RGBD", "( value, 256.0 )"];
        case 3007:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
        case 3003:
            return ["LogLuv", "( value )"];
        default:
            throw new Error("unsupported encoding: " + e)
        }
    }
    function Fr(e, t, n) {
        var r = e.getShaderParameter(t, 35713)
          , i = e.getShaderInfoLog(t).trim();
        return r && "" === i ? "" : "THREE.WebGLShader: gl.getShaderInfoLog() " + n + "\n" + i + function(e) {
            for (var t = e.split("\n"), n = 0; n < t.length; n++)
                t[n] = n + 1 + ": " + t[n];
            return t.join("\n")
        }(e.getShaderSource(t))
    }
    function Ur(e, t) {
        var n = Nr(t);
        return "vec4 " + e + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
    }
    function Br(e, t) {
        var n;
        switch (t) {
        case 1:
            n = "Linear";
            break;
        case 2:
            n = "Reinhard";
            break;
        case 3:
            n = "Uncharted2";
            break;
        case 4:
            n = "OptimizedCineon";
            break;
        case 5:
            n = "ACESFilmic";
            break;
        default:
            throw new Error("unsupported toneMapping: " + t)
        }
        return "vec3 " + e + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
    }
    function zr(e) {
        return "" !== e
    }
    function Gr(e, t) {
        return e.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows)
    }
    function Hr(e, t) {
        return e.replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, t.numClippingPlanes - t.numClipIntersection)
    }
    var jr = /^[ \t]*#include +<([\w\d./]+)>/gm;
    function Vr(e) {
        return e.replace(jr, Wr)
    }
    function Wr(e, t) {
        var n = En[t];
        if (void 0 === n)
            throw new Error("Can not resolve #include <" + t + ">");
        return Vr(n)
    }
    var qr = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g
      , Kr = /#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;
    function Yr(e) {
        return e.replace(Kr, Zr).replace(qr, Xr)
    }
    function Xr(e, t, n, r) {
        return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),
        Zr(e, t, n, r)
    }
    function Zr(e, t, n, r) {
        for (var i = "", a = parseInt(t); a < parseInt(n); a++)
            i += r.replace(/\[ i \]/g, "[ " + a + " ]").replace(/UNROLLED_LOOP_INDEX/g, a);
        return i
    }
    function Jr(e) {
        var t = "precision " + e.precision + " float;\nprecision " + e.precision + " int;";
        return "highp" === e.precision ? t += "\n#define HIGH_PRECISION" : "mediump" === e.precision ? t += "\n#define MEDIUM_PRECISION" : "lowp" === e.precision && (t += "\n#define LOW_PRECISION"),
        t
    }
    function Qr(e, t, n) {
        var r, i, a, o, s, l = e.getContext(), u = n.defines, c = n.vertexShader, h = n.fragmentShader, d = function(e) {
            var t = "SHADOWMAP_TYPE_BASIC";
            return 1 === e.shadowMapType ? t = "SHADOWMAP_TYPE_PCF" : 2 === e.shadowMapType ? t = "SHADOWMAP_TYPE_PCF_SOFT" : 3 === e.shadowMapType && (t = "SHADOWMAP_TYPE_VSM"),
            t
        }(n), f = function(e) {
            var t = "ENVMAP_TYPE_CUBE";
            if (e.envMap)
                switch (e.envMapMode) {
                case 301:
                case 302:
                    t = "ENVMAP_TYPE_CUBE";
                    break;
                case 306:
                case 307:
                    t = "ENVMAP_TYPE_CUBE_UV";
                    break;
                case 303:
                case 304:
                    t = "ENVMAP_TYPE_EQUIREC";
                    break;
                case 305:
                    t = "ENVMAP_TYPE_SPHERE"
                }
            return t
        }(n), p = function(e) {
            var t = "ENVMAP_MODE_REFLECTION";
            if (e.envMap)
                switch (e.envMapMode) {
                case 302:
                case 304:
                    t = "ENVMAP_MODE_REFRACTION"
                }
            return t
        }(n), m = function(e) {
            var t = "ENVMAP_BLENDING_NONE";
            if (e.envMap)
                switch (e.combine) {
                case 0:
                    t = "ENVMAP_BLENDING_MULTIPLY";
                    break;
                case 1:
                    t = "ENVMAP_BLENDING_MIX";
                    break;
                case 2:
                    t = "ENVMAP_BLENDING_ADD"
                }
            return t
        }(n), g = e.gammaFactor > 0 ? e.gammaFactor : 1, v = n.isWebGL2 ? "" : function(e) {
            return [e.extensionDerivatives || e.envMapCubeUV || e.bumpMap || e.tangentSpaceNormalMap || e.clearcoatNormalMap || e.flatShading || "physical" === e.shaderID ? "#extension GL_OES_standard_derivatives : enable" : "", (e.extensionFragDepth || e.logarithmicDepthBuffer) && e.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "", e.extensionDrawBuffers && e.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "", (e.extensionShaderTextureLOD || e.envMap) && e.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(zr).join("\n")
        }(n), y = function(e) {
            var t = [];
            for (var n in e) {
                var r = e[n];
                !1 !== r && t.push("#define " + n + " " + r)
            }
            return t.join("\n")
        }(u), b = l.createProgram();
        if (n.isRawShaderMaterial ? ((r = [y].filter(zr).join("\n")).length > 0 && (r += "\n"),
        (i = [v, y].filter(zr).join("\n")).length > 0 && (i += "\n")) : (r = [Jr(n), "#define SHADER_NAME " + n.shaderName, y, n.instancing ? "#define USE_INSTANCING" : "", n.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + g, "#define MAX_BONES " + n.maxBones, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + p : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.displacementMap && n.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors ? "#define USE_COLOR" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.skinning ? "#define USE_SKINNING" : "", n.useVertexTexture ? "#define BONE_TEXTURE" : "", n.morphTargets ? "#define USE_MORPHTARGETS" : "", n.morphNormals && !1 === n.flatShading ? "#define USE_MORPHNORMALS" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + d : "", n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", "#ifdef USE_INSTANCING", " attribute mat4 instanceMatrix;", "#endif", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "\tattribute vec4 tangent;", "#endif", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(zr).join("\n"),
        i = [v, Jr(n), "#define SHADER_NAME " + n.shaderName, y, n.alphaTest ? "#define ALPHATEST " + n.alphaTest + (n.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + g, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.matcap ? "#define USE_MATCAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + f : "", n.envMap ? "#define " + p : "", n.envMap ? "#define " + m : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.sheen ? "#define USE_SHEEN" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors ? "#define USE_COLOR" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.gradientMap ? "#define USE_GRADIENTMAP" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + d : "", n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", n.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", (n.extensionShaderTextureLOD || n.envMap) && n.rendererExtensionShaderTextureLod ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", 0 !== n.toneMapping ? "#define TONE_MAPPING" : "", 0 !== n.toneMapping ? En.tonemapping_pars_fragment : "", 0 !== n.toneMapping ? Br("toneMapping", n.toneMapping) : "", n.dithering ? "#define DITHERING" : "", n.outputEncoding || n.mapEncoding || n.matcapEncoding || n.envMapEncoding || n.emissiveMapEncoding || n.lightMapEncoding ? En.encodings_pars_fragment : "", n.mapEncoding ? Ur("mapTexelToLinear", n.mapEncoding) : "", n.matcapEncoding ? Ur("matcapTexelToLinear", n.matcapEncoding) : "", n.envMapEncoding ? Ur("envMapTexelToLinear", n.envMapEncoding) : "", n.emissiveMapEncoding ? Ur("emissiveMapTexelToLinear", n.emissiveMapEncoding) : "", n.lightMapEncoding ? Ur("lightMapTexelToLinear", n.lightMapEncoding) : "", n.outputEncoding ? (a = "linearToOutputTexel",
        o = n.outputEncoding,
        s = Nr(o),
        "vec4 " + a + "( vec4 value ) { return LinearTo" + s[0] + s[1] + "; }") : "", n.depthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "", "\n"].filter(zr).join("\n")),
        c = Hr(c = Gr(c = Vr(c), n), n),
        h = Hr(h = Gr(h = Vr(h), n), n),
        c = Yr(c),
        h = Yr(h),
        n.isWebGL2 && !n.isRawShaderMaterial) {
            var x = !1
              , w = /^\s*#version\s+300\s+es\s*\n/;
            n.isShaderMaterial && null !== c.match(w) && null !== h.match(w) && (x = !0,
            c = c.replace(w, ""),
            h = h.replace(w, "")),
            r = ["#version 300 es\n", "#define attribute in", "#define varying out", "#define texture2D texture"].join("\n") + "\n" + r,
            i = ["#version 300 es\n", "#define varying in", x ? "" : "out highp vec4 pc_fragColor;", x ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + i
        }
        var _, E, T = i + h, S = Dr(l, 35633, r + c), M = Dr(l, 35632, T);
        if (l.attachShader(b, S),
        l.attachShader(b, M),
        void 0 !== n.index0AttributeName ? l.bindAttribLocation(b, 0, n.index0AttributeName) : !0 === n.morphTargets && l.bindAttribLocation(b, 0, "position"),
        l.linkProgram(b),
        e.debug.checkShaderErrors) {
            var A = l.getProgramInfoLog(b).trim()
              , R = l.getShaderInfoLog(S).trim()
              , L = l.getShaderInfoLog(M).trim()
              , C = !0
              , P = !0;
            if (!1 === l.getProgramParameter(b, 35714)) {
                C = !1;
                var O = Fr(l, S, "vertex")
                  , k = Fr(l, M, "fragment");
                console.error("THREE.WebGLProgram: shader error: ", l.getError(), "35715", l.getProgramParameter(b, 35715), "gl.getProgramInfoLog", A, O, k)
            } else
                "" !== A ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", A) : "" !== R && "" !== L || (P = !1);
            P && (this.diagnostics = {
                runnable: C,
                programLog: A,
                vertexShader: {
                    log: R,
                    prefix: r
                },
                fragmentShader: {
                    log: L,
                    prefix: i
                }
            })
        }
        return l.detachShader(b, S),
        l.detachShader(b, M),
        l.deleteShader(S),
        l.deleteShader(M),
        this.getUniforms = function() {
            return void 0 === _ && (_ = new kr(l,b)),
            _
        }
        ,
        this.getAttributes = function() {
            return void 0 === E && (E = function(e, t) {
                for (var n = {}, r = e.getProgramParameter(t, 35721), i = 0; i < r; i++) {
                    var a = e.getActiveAttrib(t, i).name;
                    n[a] = e.getAttribLocation(t, a)
                }
                return n
            }(l, b)),
            E
        }
        ,
        this.destroy = function() {
            l.deleteProgram(b),
            this.program = void 0
        }
        ,
        this.name = n.shaderName,
        this.id = Ir++,
        this.cacheKey = t,
        this.usedTimes = 1,
        this.program = b,
        this.vertexShader = S,
        this.fragmentShader = M,
        this
    }
    function $r(e, t, n) {
        var r = []
          , i = n.isWebGL2
          , a = n.logarithmicDepthBuffer
          , o = n.floatVertexTextures
          , s = n.precision
          , l = n.maxVertexUniforms
          , u = n.vertexTextures
          , c = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "toon",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            MeshMatcapMaterial: "matcap",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow",
            SpriteMaterial: "sprite"
        }
          , h = ["precision", "isWebGL2", "supportsVertexTextures", "outputEncoding", "instancing", "map", "mapEncoding", "matcap", "matcapEncoding", "envMap", "envMapMode", "envMapEncoding", "envMapCubeUV", "lightMap", "lightMapEncoding", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "tangentSpaceNormalMap", "clearcoatMap", "clearcoatRoughnessMap", "clearcoatNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "vertexTangents", "vertexUvs", "uvsVertexOnly", "fog", "useFog", "fogExp2", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "numDirLightShadows", "numPointLightShadows", "numSpotLightShadows", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering", "sheen"];
        function d(e) {
            var t;
            return e ? e.isTexture ? t = e.encoding : e.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),
            t = e.texture.encoding) : t = 3e3,
            t
        }
        this.getParameters = function(r, h, f, p, m, g, v) {
            var y = p.fog
              , b = r.isMeshStandardMaterial ? p.environment : null
              , x = r.envMap || b
              , w = c[r.type]
              , _ = v.isSkinnedMesh ? function(e) {
                var t = e.skeleton.bones;
                if (o)
                    return 1024;
                var n = l
                  , r = Math.floor((n - 20) / 4)
                  , i = Math.min(r, t.length);
                return i < t.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + t.length + " bones. This GPU supports " + i + "."),
                0) : i
            }(v) : 0;
            null !== r.precision && (s = n.getMaxPrecision(r.precision)) !== r.precision && console.warn("THREE.WebGLProgram.getParameters:", r.precision, "not supported, using", s, "instead.");
            var E = function(e, t) {
                var n;
                if (t) {
                    var r = Tn[t];
                    n = {
                        name: e.type,
                        uniforms: ln.clone(r.uniforms),
                        vertexShader: r.vertexShader,
                        fragmentShader: r.fragmentShader
                    }
                } else
                    n = {
                        name: e.type,
                        uniforms: e.uniforms,
                        vertexShader: e.vertexShader,
                        fragmentShader: e.fragmentShader
                    };
                return n
            }(r, w);
            r.onBeforeCompile(E, e);
            var T = e.getRenderTarget();
            return {
                isWebGL2: i,
                shaderID: w,
                shaderName: E.name,
                uniforms: E.uniforms,
                vertexShader: E.vertexShader,
                fragmentShader: E.fragmentShader,
                defines: r.defines,
                isRawShaderMaterial: r.isRawShaderMaterial,
                isShaderMaterial: r.isShaderMaterial,
                precision: s,
                instancing: !0 === v.isInstancedMesh,
                supportsVertexTextures: u,
                outputEncoding: null !== T ? d(T.texture) : e.outputEncoding,
                map: !!r.map,
                mapEncoding: d(r.map),
                matcap: !!r.matcap,
                matcapEncoding: d(r.matcap),
                envMap: !!x,
                envMapMode: x && x.mapping,
                envMapEncoding: d(x),
                envMapCubeUV: !!x && (306 === x.mapping || 307 === x.mapping),
                lightMap: !!r.lightMap,
                lightMapEncoding: d(r.lightMap),
                aoMap: !!r.aoMap,
                emissiveMap: !!r.emissiveMap,
                emissiveMapEncoding: d(r.emissiveMap),
                bumpMap: !!r.bumpMap,
                normalMap: !!r.normalMap,
                objectSpaceNormalMap: 1 === r.normalMapType,
                tangentSpaceNormalMap: 0 === r.normalMapType,
                clearcoatMap: !!r.clearcoatMap,
                clearcoatRoughnessMap: !!r.clearcoatRoughnessMap,
                clearcoatNormalMap: !!r.clearcoatNormalMap,
                displacementMap: !!r.displacementMap,
                roughnessMap: !!r.roughnessMap,
                metalnessMap: !!r.metalnessMap,
                specularMap: !!r.specularMap,
                alphaMap: !!r.alphaMap,
                gradientMap: !!r.gradientMap,
                sheen: !!r.sheen,
                combine: r.combine,
                vertexTangents: r.normalMap && r.vertexTangents,
                vertexColors: r.vertexColors,
                vertexUvs: !!(r.map || r.bumpMap || r.normalMap || r.specularMap || r.alphaMap || r.emissiveMap || r.roughnessMap || r.metalnessMap || r.clearcoatMap || r.clearcoatRoughnessMap || r.clearcoatNormalMap || r.displacementMap),
                uvsVertexOnly: !(r.map || r.bumpMap || r.normalMap || r.specularMap || r.alphaMap || r.emissiveMap || r.roughnessMap || r.metalnessMap || r.clearcoatNormalMap || !r.displacementMap),
                fog: !!y,
                useFog: r.fog,
                fogExp2: y && y.isFogExp2,
                flatShading: r.flatShading,
                sizeAttenuation: r.sizeAttenuation,
                logarithmicDepthBuffer: a,
                skinning: r.skinning && _ > 0,
                maxBones: _,
                useVertexTexture: o,
                morphTargets: r.morphTargets,
                morphNormals: r.morphNormals,
                maxMorphTargets: e.maxMorphTargets,
                maxMorphNormals: e.maxMorphNormals,
                numDirLights: h.directional.length,
                numPointLights: h.point.length,
                numSpotLights: h.spot.length,
                numRectAreaLights: h.rectArea.length,
                numHemiLights: h.hemi.length,
                numDirLightShadows: h.directionalShadowMap.length,
                numPointLightShadows: h.pointShadowMap.length,
                numSpotLightShadows: h.spotShadowMap.length,
                numClippingPlanes: m,
                numClipIntersection: g,
                dithering: r.dithering,
                shadowMapEnabled: e.shadowMap.enabled && f.length > 0,
                shadowMapType: e.shadowMap.type,
                toneMapping: r.toneMapped ? e.toneMapping : 0,
                physicallyCorrectLights: e.physicallyCorrectLights,
                premultipliedAlpha: r.premultipliedAlpha,
                alphaTest: r.alphaTest,
                doubleSided: 2 === r.side,
                flipSided: 1 === r.side,
                depthPacking: void 0 !== r.depthPacking && r.depthPacking,
                index0AttributeName: r.index0AttributeName,
                extensionDerivatives: r.extensions && r.extensions.derivatives,
                extensionFragDepth: r.extensions && r.extensions.fragDepth,
                extensionDrawBuffers: r.extensions && r.extensions.drawBuffers,
                extensionShaderTextureLOD: r.extensions && r.extensions.shaderTextureLOD,
                rendererExtensionFragDepth: i || null !== t.get("EXT_frag_depth"),
                rendererExtensionDrawBuffers: i || null !== t.get("WEBGL_draw_buffers"),
                rendererExtensionShaderTextureLod: i || null !== t.get("EXT_shader_texture_lod"),
                onBeforeCompile: r.onBeforeCompile
            }
        }
        ,
        this.getProgramCacheKey = function(t) {
            var n = [];
            if (t.shaderID ? n.push(t.shaderID) : (n.push(t.fragmentShader),
            n.push(t.vertexShader)),
            void 0 !== t.defines)
                for (var r in t.defines)
                    n.push(r),
                    n.push(t.defines[r]);
            if (void 0 === t.isRawShaderMaterial) {
                for (var i = 0; i < h.length; i++)
                    n.push(t[h[i]]);
                n.push(e.outputEncoding),
                n.push(e.gammaFactor)
            }
            return n.push(t.onBeforeCompile.toString()),
            n.join()
        }
        ,
        this.acquireProgram = function(t, n) {
            for (var i, a = 0, o = r.length; a < o; a++) {
                var s = r[a];
                if (s.cacheKey === n) {
                    ++(i = s).usedTimes;
                    break
                }
            }
            return void 0 === i && (i = new Qr(e,n,t),
            r.push(i)),
            i
        }
        ,
        this.releaseProgram = function(e) {
            if (0 == --e.usedTimes) {
                var t = r.indexOf(e);
                r[t] = r[r.length - 1],
                r.pop(),
                e.destroy()
            }
        }
        ,
        this.programs = r
    }
    function ei() {
        var e = new WeakMap;
        return {
            get: function(t) {
                var n = e.get(t);
                return void 0 === n && (n = {},
                e.set(t, n)),
                n
            },
            remove: function(t) {
                e.delete(t)
            },
            update: function(t, n, r) {
                e.get(t)[n] = r
            },
            dispose: function() {
                e = new WeakMap
            }
        }
    }
    function ti(e, t) {
        return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.program !== t.program ? e.program.id - t.program.id : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id
    }
    function ni(e, t) {
        return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id
    }
    function ri() {
        var e = []
          , t = 0
          , n = []
          , r = []
          , i = {
            id: -1
        };
        function a(n, r, a, o, s, l) {
            var u = e[t];
            return void 0 === u ? (u = {
                id: n.id,
                object: n,
                geometry: r,
                material: a,
                program: a.program || i,
                groupOrder: o,
                renderOrder: n.renderOrder,
                z: s,
                group: l
            },
            e[t] = u) : (u.id = n.id,
            u.object = n,
            u.geometry = r,
            u.material = a,
            u.program = a.program || i,
            u.groupOrder = o,
            u.renderOrder = n.renderOrder,
            u.z = s,
            u.group = l),
            t++,
            u
        }
        return {
            opaque: n,
            transparent: r,
            init: function() {
                t = 0,
                n.length = 0,
                r.length = 0
            },
            push: function(e, t, i, o, s, l) {
                var u = a(e, t, i, o, s, l);
                (!0 === i.transparent ? r : n).push(u)
            },
            unshift: function(e, t, i, o, s, l) {
                var u = a(e, t, i, o, s, l);
                (!0 === i.transparent ? r : n).unshift(u)
            },
            finish: function() {
                for (var n = t, r = e.length; n < r; n++) {
                    var i = e[n];
                    if (null === i.id)
                        break;
                    i.id = null,
                    i.object = null,
                    i.geometry = null,
                    i.material = null,
                    i.program = null,
                    i.group = null
                }
            },
            sort: function(e, t) {
                n.length > 1 && n.sort(e || ti),
                r.length > 1 && r.sort(t || ni)
            }
        }
    }
    function ii() {
        var e = new WeakMap;
        function t(n) {
            var r = n.target;
            r.removeEventListener("dispose", t),
            e.delete(r)
        }
        return {
            get: function(n, r) {
                var i, a = e.get(n);
                return void 0 === a ? (i = new ri,
                e.set(n, new WeakMap),
                e.get(n).set(r, i),
                n.addEventListener("dispose", t)) : void 0 === (i = a.get(r)) && (i = new ri,
                a.set(r, i)),
                i
            },
            dispose: function() {
                e = new WeakMap
            }
        }
    }
    function ai() {
        var e = {};
        return {
            get: function(t) {
                if (void 0 !== e[t.id])
                    return e[t.id];
                var n;
                switch (t.type) {
                case "DirectionalLight":
                    n = {
                        direction: new G,
                        color: new it
                    };
                    break;
                case "SpotLight":
                    n = {
                        position: new G,
                        direction: new G,
                        color: new it,
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0
                    };
                    break;
                case "PointLight":
                    n = {
                        position: new G,
                        color: new it,
                        distance: 0,
                        decay: 0
                    };
                    break;
                case "HemisphereLight":
                    n = {
                        direction: new G,
                        skyColor: new it,
                        groundColor: new it
                    };
                    break;
                case "RectAreaLight":
                    n = {
                        color: new it,
                        position: new G,
                        halfWidth: new G,
                        halfHeight: new G
                    }
                }
                return e[t.id] = n,
                n
            }
        }
    }
    var oi = 0;
    function si(e, t) {
        return (t.castShadow ? 1 : 0) - (e.castShadow ? 1 : 0)
    }
    function li() {
        for (var e, t = new ai, n = (e = {},
        {
            get: function(t) {
                if (void 0 !== e[t.id])
                    return e[t.id];
                var n;
                switch (t.type) {
                case "DirectionalLight":
                case "SpotLight":
                    n = {
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new C
                    };
                    break;
                case "PointLight":
                    n = {
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new C,
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3
                    }
                }
                return e[t.id] = n,
                n
            }
        }), r = {
            version: 0,
            hash: {
                directionalLength: -1,
                pointLength: -1,
                spotLength: -1,
                rectAreaLength: -1,
                hemiLength: -1,
                numDirectionalShadows: -1,
                numPointShadows: -1,
                numSpotShadows: -1
            },
            ambient: [0, 0, 0],
            probe: [],
            directional: [],
            directionalShadow: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotShadow: [],
            spotShadowMap: [],
            spotShadowMatrix: [],
            rectArea: [],
            point: [],
            pointShadow: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: []
        }, i = 0; i < 9; i++)
            r.probe.push(new G);
        var a = new G
          , o = new X
          , s = new X;
        return {
            setup: function(e, i, l) {
                for (var u = 0, c = 0, h = 0, d = 0; d < 9; d++)
                    r.probe[d].set(0, 0, 0);
                var f = 0
                  , p = 0
                  , m = 0
                  , g = 0
                  , v = 0
                  , y = 0
                  , b = 0
                  , x = 0
                  , w = l.matrixWorldInverse;
                e.sort(si),
                d = 0;
                for (var _ = e.length; d < _; d++) {
                    var E = e[d]
                      , T = E.color
                      , S = E.intensity
                      , M = E.distance
                      , A = E.shadow && E.shadow.map ? E.shadow.map.texture : null;
                    if (E.isAmbientLight)
                        u += T.r * S,
                        c += T.g * S,
                        h += T.b * S;
                    else if (E.isLightProbe)
                        for (var R = 0; R < 9; R++)
                            r.probe[R].addScaledVector(E.sh.coefficients[R], S);
                    else if (E.isDirectionalLight) {
                        if ((P = t.get(E)).color.copy(E.color).multiplyScalar(E.intensity),
                        P.direction.setFromMatrixPosition(E.matrixWorld),
                        a.setFromMatrixPosition(E.target.matrixWorld),
                        P.direction.sub(a),
                        P.direction.transformDirection(w),
                        E.castShadow) {
                            var L = E.shadow;
                            (C = n.get(E)).shadowBias = L.bias,
                            C.shadowRadius = L.radius,
                            C.shadowMapSize = L.mapSize,
                            r.directionalShadow[f] = C,
                            r.directionalShadowMap[f] = A,
                            r.directionalShadowMatrix[f] = E.shadow.matrix,
                            y++
                        }
                        r.directional[f] = P,
                        f++
                    } else if (E.isSpotLight) {
                        if ((P = t.get(E)).position.setFromMatrixPosition(E.matrixWorld),
                        P.position.applyMatrix4(w),
                        P.color.copy(T).multiplyScalar(S),
                        P.distance = M,
                        P.direction.setFromMatrixPosition(E.matrixWorld),
                        a.setFromMatrixPosition(E.target.matrixWorld),
                        P.direction.sub(a),
                        P.direction.transformDirection(w),
                        P.coneCos = Math.cos(E.angle),
                        P.penumbraCos = Math.cos(E.angle * (1 - E.penumbra)),
                        P.decay = E.decay,
                        E.castShadow) {
                            L = E.shadow;
                            (C = n.get(E)).shadowBias = L.bias,
                            C.shadowRadius = L.radius,
                            C.shadowMapSize = L.mapSize,
                            r.spotShadow[m] = C,
                            r.spotShadowMap[m] = A,
                            r.spotShadowMatrix[m] = E.shadow.matrix,
                            x++
                        }
                        r.spot[m] = P,
                        m++
                    } else if (E.isRectAreaLight) {
                        (P = t.get(E)).color.copy(T).multiplyScalar(S),
                        P.position.setFromMatrixPosition(E.matrixWorld),
                        P.position.applyMatrix4(w),
                        s.identity(),
                        o.copy(E.matrixWorld),
                        o.premultiply(w),
                        s.extractRotation(o),
                        P.halfWidth.set(.5 * E.width, 0, 0),
                        P.halfHeight.set(0, .5 * E.height, 0),
                        P.halfWidth.applyMatrix4(s),
                        P.halfHeight.applyMatrix4(s),
                        r.rectArea[g] = P,
                        g++
                    } else if (E.isPointLight) {
                        if ((P = t.get(E)).position.setFromMatrixPosition(E.matrixWorld),
                        P.position.applyMatrix4(w),
                        P.color.copy(E.color).multiplyScalar(E.intensity),
                        P.distance = E.distance,
                        P.decay = E.decay,
                        E.castShadow) {
                            var C;
                            L = E.shadow;
                            (C = n.get(E)).shadowBias = L.bias,
                            C.shadowRadius = L.radius,
                            C.shadowMapSize = L.mapSize,
                            C.shadowCameraNear = L.camera.near,
                            C.shadowCameraFar = L.camera.far,
                            r.pointShadow[p] = C,
                            r.pointShadowMap[p] = A,
                            r.pointShadowMatrix[p] = E.shadow.matrix,
                            b++
                        }
                        r.point[p] = P,
                        p++
                    } else if (E.isHemisphereLight) {
                        var P;
                        (P = t.get(E)).direction.setFromMatrixPosition(E.matrixWorld),
                        P.direction.transformDirection(w),
                        P.direction.normalize(),
                        P.skyColor.copy(E.color).multiplyScalar(S),
                        P.groundColor.copy(E.groundColor).multiplyScalar(S),
                        r.hemi[v] = P,
                        v++
                    }
                }
                r.ambient[0] = u,
                r.ambient[1] = c,
                r.ambient[2] = h;
                var O = r.hash;
                O.directionalLength === f && O.pointLength === p && O.spotLength === m && O.rectAreaLength === g && O.hemiLength === v && O.numDirectionalShadows === y && O.numPointShadows === b && O.numSpotShadows === x || (r.directional.length = f,
                r.spot.length = m,
                r.rectArea.length = g,
                r.point.length = p,
                r.hemi.length = v,
                r.directionalShadow.length = y,
                r.directionalShadowMap.length = y,
                r.pointShadow.length = b,
                r.pointShadowMap.length = b,
                r.spotShadow.length = x,
                r.spotShadowMap.length = x,
                r.directionalShadowMatrix.length = y,
                r.pointShadowMatrix.length = b,
                r.spotShadowMatrix.length = x,
                O.directionalLength = f,
                O.pointLength = p,
                O.spotLength = m,
                O.rectAreaLength = g,
                O.hemiLength = v,
                O.numDirectionalShadows = y,
                O.numPointShadows = b,
                O.numSpotShadows = x,
                r.version = oi++)
            },
            state: r
        }
    }
    function ui() {
        var e = new li
          , t = []
          , n = [];
        return {
            init: function() {
                t.length = 0,
                n.length = 0
            },
            state: {
                lightsArray: t,
                shadowsArray: n,
                lights: e
            },
            setupLights: function(r) {
                e.setup(t, n, r)
            },
            pushLight: function(e) {
                t.push(e)
            },
            pushShadow: function(e) {
                n.push(e)
            }
        }
    }
    function ci() {
        var e = new WeakMap;
        function t(n) {
            var r = n.target;
            r.removeEventListener("dispose", t),
            e.delete(r)
        }
        return {
            get: function(n, r) {
                var i;
                return !1 === e.has(n) ? (i = new ui,
                e.set(n, new WeakMap),
                e.get(n).set(r, i),
                n.addEventListener("dispose", t)) : !1 === e.get(n).has(r) ? (i = new ui,
                e.get(n).set(r, i)) : i = e.get(n).get(r),
                i
            },
            dispose: function() {
                e = new WeakMap
            }
        }
    }
    function hi(e) {
        ct.call(this),
        this.type = "MeshDepthMaterial",
        this.depthPacking = 3200,
        this.skinning = !1,
        this.morphTargets = !1,
        this.map = null,
        this.alphaMap = null,
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.setValues(e)
    }
    function di(e) {
        ct.call(this),
        this.type = "MeshDistanceMaterial",
        this.referencePosition = new G,
        this.nearDistance = 1,
        this.farDistance = 1e3,
        this.skinning = !1,
        this.morphTargets = !1,
        this.map = null,
        this.alphaMap = null,
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.fog = !1,
        this.setValues(e)
    }
    hi.prototype = Object.create(ct.prototype),
    hi.prototype.constructor = hi,
    hi.prototype.isMeshDepthMaterial = !0,
    hi.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.depthPacking = e.depthPacking,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.map = e.map,
        this.alphaMap = e.alphaMap,
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this
    }
    ,
    di.prototype = Object.create(ct.prototype),
    di.prototype.constructor = di,
    di.prototype.isMeshDistanceMaterial = !0,
    di.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.referencePosition.copy(e.referencePosition),
        this.nearDistance = e.nearDistance,
        this.farDistance = e.farDistance,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.map = e.map,
        this.alphaMap = e.alphaMap,
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this
    }
    ;
    function fi(e, t, n) {
        var r = new vn
          , i = new C
          , a = new C
          , o = new I
          , s = []
          , l = []
          , u = {}
          , c = {
            0: 1,
            1: 0,
            2: 2
        }
          , h = new un({
            defines: {
                SAMPLE_RATE: 2 / 8,
                HALF_SAMPLE_RATE: 1 / 8
            },
            uniforms: {
                shadow_pass: {
                    value: null
                },
                resolution: {
                    value: new C
                },
                radius: {
                    value: 4
                }
            },
            vertexShader: "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",
            fragmentShader: "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"
        })
          , d = h.clone();
        d.defines.HORIZONAL_PASS = 1;
        var f = new Ot;
        f.setAttribute("position", new ft(new Float32Array([-1, -1, .5, 3, -1, .5, -1, 3, .5]),3));
        var p = new Zt(f,h)
          , m = this;
        function g(n, r) {
            var i = t.update(p);
            h.uniforms.shadow_pass.value = n.map.texture,
            h.uniforms.resolution.value = n.mapSize,
            h.uniforms.radius.value = n.radius,
            e.setRenderTarget(n.mapPass),
            e.clear(),
            e.renderBufferDirect(r, null, i, h, p, null),
            d.uniforms.shadow_pass.value = n.mapPass.texture,
            d.uniforms.resolution.value = n.mapSize,
            d.uniforms.radius.value = n.radius,
            e.setRenderTarget(n.map),
            e.clear(),
            e.renderBufferDirect(r, null, i, d, p, null)
        }
        function v(e, t, n) {
            var r = e << 0 | t << 1 | n << 2
              , i = s[r];
            return void 0 === i && (i = new hi({
                depthPacking: 3201,
                morphTargets: e,
                skinning: t
            }),
            s[r] = i),
            i
        }
        function y(e, t, n) {
            var r = e << 0 | t << 1 | n << 2
              , i = l[r];
            return void 0 === i && (i = new di({
                morphTargets: e,
                skinning: t
            }),
            l[r] = i),
            i
        }
        function b(t, n, r, i, a, o) {
            var s = t.geometry
              , l = null
              , h = v
              , d = t.customDepthMaterial;
            if (!0 === r.isPointLight && (h = y,
            d = t.customDistanceMaterial),
            void 0 === d) {
                var f = !1;
                !0 === n.morphTargets && (!0 === s.isBufferGeometry ? f = s.morphAttributes && s.morphAttributes.position && s.morphAttributes.position.length > 0 : !0 === s.isGeometry && (f = s.morphTargets && s.morphTargets.length > 0));
                var p = !1;
                !0 === t.isSkinnedMesh && (!0 === n.skinning ? p = !0 : console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", t)),
                l = h(f, p, !0 === t.isInstancedMesh)
            } else
                l = d;
            if (e.localClippingEnabled && !0 === n.clipShadows && 0 !== n.clippingPlanes.length) {
                var m = l.uuid
                  , g = n.uuid
                  , b = u[m];
                void 0 === b && (b = {},
                u[m] = b);
                var x = b[g];
                void 0 === x && (x = l.clone(),
                b[g] = x),
                l = x
            }
            return l.visible = n.visible,
            l.wireframe = n.wireframe,
            l.side = 3 === o ? null !== n.shadowSide ? n.shadowSide : n.side : null !== n.shadowSide ? n.shadowSide : c[n.side],
            l.clipShadows = n.clipShadows,
            l.clippingPlanes = n.clippingPlanes,
            l.clipIntersection = n.clipIntersection,
            l.wireframeLinewidth = n.wireframeLinewidth,
            l.linewidth = n.linewidth,
            !0 === r.isPointLight && !0 === l.isMeshDistanceMaterial && (l.referencePosition.setFromMatrixPosition(r.matrixWorld),
            l.nearDistance = i,
            l.farDistance = a),
            l
        }
        function x(n, i, a, o, s) {
            if (!1 !== n.visible) {
                if (n.layers.test(i.layers) && (n.isMesh || n.isLine || n.isPoints) && (n.castShadow || n.receiveShadow && 3 === s) && (!n.frustumCulled || r.intersectsObject(n))) {
                    n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse, n.matrixWorld);
                    var l = t.update(n)
                      , u = n.material;
                    if (Array.isArray(u))
                        for (var c = l.groups, h = 0, d = c.length; h < d; h++) {
                            var f = c[h]
                              , p = u[f.materialIndex];
                            if (p && p.visible) {
                                var m = b(n, p, o, a.near, a.far, s);
                                e.renderBufferDirect(a, null, l, m, n, f)
                            }
                        }
                    else if (u.visible) {
                        m = b(n, u, o, a.near, a.far, s);
                        e.renderBufferDirect(a, null, l, m, n, null)
                    }
                }
                for (var g = n.children, v = 0, y = g.length; v < y; v++)
                    x(g[v], i, a, o, s)
            }
        }
        this.enabled = !1,
        this.autoUpdate = !0,
        this.needsUpdate = !1,
        this.type = 1,
        this.render = function(t, s, l) {
            if (!1 !== m.enabled && (!1 !== m.autoUpdate || !1 !== m.needsUpdate) && 0 !== t.length) {
                var u = e.getRenderTarget()
                  , c = e.getActiveCubeFace()
                  , h = e.getActiveMipmapLevel()
                  , d = e.state;
                d.setBlending(0),
                d.buffers.color.setClear(1, 1, 1, 1),
                d.buffers.depth.setTest(!0),
                d.setScissorTest(!1);
                for (var f = 0, p = t.length; f < p; f++) {
                    var v = t[f]
                      , y = v.shadow;
                    if (void 0 !== y) {
                        i.copy(y.mapSize);
                        var b = y.getFrameExtents();
                        if (i.multiply(b),
                        a.copy(y.mapSize),
                        (i.x > n || i.y > n) && (console.warn("THREE.WebGLShadowMap:", v, "has shadow exceeding max texture size, reducing"),
                        i.x > n && (a.x = Math.floor(n / b.x),
                        i.x = a.x * b.x,
                        y.mapSize.x = a.x),
                        i.y > n && (a.y = Math.floor(n / b.y),
                        i.y = a.y * b.y,
                        y.mapSize.y = a.y)),
                        null === y.map && !y.isPointLightShadow && 3 === this.type) {
                            var w = {
                                minFilter: 1006,
                                magFilter: 1006,
                                format: 1023
                            };
                            y.map = new N(i.x,i.y,w),
                            y.map.texture.name = v.name + ".shadowMap",
                            y.mapPass = new N(i.x,i.y,w),
                            y.camera.updateProjectionMatrix()
                        }
                        if (null === y.map) {
                            w = {
                                minFilter: 1003,
                                magFilter: 1003,
                                format: 1023
                            };
                            y.map = new N(i.x,i.y,w),
                            y.map.texture.name = v.name + ".shadowMap",
                            y.camera.updateProjectionMatrix()
                        }
                        e.setRenderTarget(y.map),
                        e.clear();
                        for (var _ = y.getViewportCount(), E = 0; E < _; E++) {
                            var T = y.getViewport(E);
                            o.set(a.x * T.x, a.y * T.y, a.x * T.z, a.y * T.w),
                            d.viewport(o),
                            y.updateMatrices(v, E),
                            r = y.getFrustum(),
                            x(s, l, y.camera, v, this.type)
                        }
                        y.isPointLightShadow || 3 !== this.type || g(y, l)
                    } else
                        console.warn("THREE.WebGLShadowMap:", v, "has no shadow.")
                }
                m.needsUpdate = !1,
                e.setRenderTarget(u, c, h)
            }
        }
    }
    function pi(e, t, n) {
        var r = n.isWebGL2;
        var i = new function() {
            var t = !1
              , n = new I
              , r = null
              , i = new I(0,0,0,0);
            return {
                setMask: function(n) {
                    r === n || t || (e.colorMask(n, n, n, n),
                    r = n)
                },
                setLocked: function(e) {
                    t = e
                },
                setClear: function(t, r, a, o, s) {
                    !0 === s && (t *= o,
                    r *= o,
                    a *= o),
                    n.set(t, r, a, o),
                    !1 === i.equals(n) && (e.clearColor(t, r, a, o),
                    i.copy(n))
                },
                reset: function() {
                    t = !1,
                    r = null,
                    i.set(-1, 0, 0, 0)
                }
            }
        }
          , a = new function() {
            var t = !1
              , n = null
              , r = null
              , i = null;
            return {
                setTest: function(e) {
                    e ? B(2929) : z(2929)
                },
                setMask: function(r) {
                    n === r || t || (e.depthMask(r),
                    n = r)
                },
                setFunc: function(t) {
                    if (r !== t) {
                        if (t)
                            switch (t) {
                            case 0:
                                e.depthFunc(512);
                                break;
                            case 1:
                                e.depthFunc(519);
                                break;
                            case 2:
                                e.depthFunc(513);
                                break;
                            case 3:
                                e.depthFunc(515);
                                break;
                            case 4:
                                e.depthFunc(514);
                                break;
                            case 5:
                                e.depthFunc(518);
                                break;
                            case 6:
                                e.depthFunc(516);
                                break;
                            case 7:
                                e.depthFunc(517);
                                break;
                            default:
                                e.depthFunc(515)
                            }
                        else
                            e.depthFunc(515);
                        r = t
                    }
                },
                setLocked: function(e) {
                    t = e
                },
                setClear: function(t) {
                    i !== t && (e.clearDepth(t),
                    i = t)
                },
                reset: function() {
                    t = !1,
                    n = null,
                    r = null,
                    i = null
                }
            }
        }
          , o = new function() {
            var t = !1
              , n = null
              , r = null
              , i = null
              , a = null
              , o = null
              , s = null
              , l = null
              , u = null;
            return {
                setTest: function(e) {
                    t || (e ? B(2960) : z(2960))
                },
                setMask: function(r) {
                    n === r || t || (e.stencilMask(r),
                    n = r)
                },
                setFunc: function(t, n, o) {
                    r === t && i === n && a === o || (e.stencilFunc(t, n, o),
                    r = t,
                    i = n,
                    a = o)
                },
                setOp: function(t, n, r) {
                    o === t && s === n && l === r || (e.stencilOp(t, n, r),
                    o = t,
                    s = n,
                    l = r)
                },
                setLocked: function(e) {
                    t = e
                },
                setClear: function(t) {
                    u !== t && (e.clearStencil(t),
                    u = t)
                },
                reset: function() {
                    t = !1,
                    n = null,
                    r = null,
                    i = null,
                    a = null,
                    o = null,
                    s = null,
                    l = null,
                    u = null
                }
            }
        }
          , s = e.getParameter(34921)
          , l = new Uint8Array(s)
          , u = new Uint8Array(s)
          , c = new Uint8Array(s)
          , h = {}
          , d = null
          , f = null
          , p = null
          , m = null
          , g = null
          , v = null
          , y = null
          , b = null
          , x = null
          , w = !1
          , _ = null
          , E = null
          , T = null
          , S = null
          , M = null
          , A = e.getParameter(35661)
          , R = !1
          , L = 0
          , C = e.getParameter(7938);
        -1 !== C.indexOf("WebGL") ? (L = parseFloat(/^WebGL\ ([0-9])/.exec(C)[1]),
        R = L >= 1) : -1 !== C.indexOf("OpenGL ES") && (L = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(C)[1]),
        R = L >= 2);
        var P = null
          , O = {}
          , k = new I
          , D = new I;
        function N(t, n, r) {
            var i = new Uint8Array(4)
              , a = e.createTexture();
            e.bindTexture(t, a),
            e.texParameteri(t, 10241, 9728),
            e.texParameteri(t, 10240, 9728);
            for (var o = 0; o < r; o++)
                e.texImage2D(n + o, 0, 6408, 1, 1, 0, 6408, 5121, i);
            return a
        }
        var F = {};
        function U(n, i) {
            (l[n] = 1,
            0 === u[n] && (e.enableVertexAttribArray(n),
            u[n] = 1),
            c[n] !== i) && ((r ? e : t.get("ANGLE_instanced_arrays"))[r ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](n, i),
            c[n] = i)
        }
        function B(t) {
            !0 !== h[t] && (e.enable(t),
            h[t] = !0)
        }
        function z(t) {
            !1 !== h[t] && (e.disable(t),
            h[t] = !1)
        }
        F[3553] = N(3553, 3553, 1),
        F[34067] = N(34067, 34069, 6),
        i.setClear(0, 0, 0, 1),
        a.setClear(1),
        o.setClear(0),
        B(2929),
        a.setFunc(3),
        W(!1),
        q(1),
        B(2884),
        V(0);
        var G = {
            100: 32774,
            101: 32778,
            102: 32779
        };
        if (r)
            G[103] = 32775,
            G[104] = 32776;
        else {
            var H = t.get("EXT_blend_minmax");
            null !== H && (G[103] = H.MIN_EXT,
            G[104] = H.MAX_EXT)
        }
        var j = {
            200: 0,
            201: 1,
            202: 768,
            204: 770,
            210: 776,
            208: 774,
            206: 772,
            203: 769,
            205: 771,
            209: 775,
            207: 773
        };
        function V(t, n, r, i, a, o, s, l) {
            if (0 !== t) {
                if (f || (B(3042),
                f = !0),
                5 === t)
                    a = a || n,
                    o = o || r,
                    s = s || i,
                    n === m && a === y || (e.blendEquationSeparate(G[n], G[a]),
                    m = n,
                    y = a),
                    r === g && i === v && o === b && s === x || (e.blendFuncSeparate(j[r], j[i], j[o], j[s]),
                    g = r,
                    v = i,
                    b = o,
                    x = s),
                    p = t,
                    w = null;
                else if (t !== p || l !== w) {
                    if (100 === m && 100 === y || (e.blendEquation(32774),
                    m = 100,
                    y = 100),
                    l)
                        switch (t) {
                        case 1:
                            e.blendFuncSeparate(1, 771, 1, 771);
                            break;
                        case 2:
                            e.blendFunc(1, 1);
                            break;
                        case 3:
                            e.blendFuncSeparate(0, 0, 769, 771);
                            break;
                        case 4:
                            e.blendFuncSeparate(0, 768, 0, 770);
                            break;
                        default:
                            console.error("THREE.WebGLState: Invalid blending: ", t)
                        }
                    else
                        switch (t) {
                        case 1:
                            e.blendFuncSeparate(770, 771, 1, 771);
                            break;
                        case 2:
                            e.blendFunc(770, 1);
                            break;
                        case 3:
                            e.blendFunc(0, 769);
                            break;
                        case 4:
                            e.blendFunc(0, 768);
                            break;
                        default:
                            console.error("THREE.WebGLState: Invalid blending: ", t)
                        }
                    g = null,
                    v = null,
                    b = null,
                    x = null,
                    p = t,
                    w = l
                }
            } else
                f && (z(3042),
                f = !1)
        }
        function W(t) {
            _ !== t && (t ? e.frontFace(2304) : e.frontFace(2305),
            _ = t)
        }
        function q(t) {
            0 !== t ? (B(2884),
            t !== E && (1 === t ? e.cullFace(1029) : 2 === t ? e.cullFace(1028) : e.cullFace(1032))) : z(2884),
            E = t
        }
        function K(t, n, r) {
            t ? (B(32823),
            S === n && M === r || (e.polygonOffset(n, r),
            S = n,
            M = r)) : z(32823)
        }
        function Y(t) {
            void 0 === t && (t = 33984 + A - 1),
            P !== t && (e.activeTexture(t),
            P = t)
        }
        return {
            buffers: {
                color: i,
                depth: a,
                stencil: o
            },
            initAttributes: function() {
                for (var e = 0, t = l.length; e < t; e++)
                    l[e] = 0
            },
            enableAttribute: function(e) {
                U(e, 0)
            },
            enableAttributeAndDivisor: U,
            disableUnusedAttributes: function() {
                for (var t = 0, n = u.length; t !== n; ++t)
                    u[t] !== l[t] && (e.disableVertexAttribArray(t),
                    u[t] = 0)
            },
            enable: B,
            disable: z,
            useProgram: function(t) {
                return d !== t && (e.useProgram(t),
                d = t,
                !0)
            },
            setBlending: V,
            setMaterial: function(e, t) {
                2 === e.side ? z(2884) : B(2884);
                var n = 1 === e.side;
                t && (n = !n),
                W(n),
                1 === e.blending && !1 === e.transparent ? V(0) : V(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha, e.premultipliedAlpha),
                a.setFunc(e.depthFunc),
                a.setTest(e.depthTest),
                a.setMask(e.depthWrite),
                i.setMask(e.colorWrite);
                var r = e.stencilWrite;
                o.setTest(r),
                r && (o.setMask(e.stencilWriteMask),
                o.setFunc(e.stencilFunc, e.stencilRef, e.stencilFuncMask),
                o.setOp(e.stencilFail, e.stencilZFail, e.stencilZPass)),
                K(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits)
            },
            setFlipSided: W,
            setCullFace: q,
            setLineWidth: function(t) {
                t !== T && (R && e.lineWidth(t),
                T = t)
            },
            setPolygonOffset: K,
            setScissorTest: function(e) {
                e ? B(3089) : z(3089)
            },
            activeTexture: Y,
            bindTexture: function(t, n) {
                null === P && Y();
                var r = O[P];
                void 0 === r && (r = {
                    type: void 0,
                    texture: void 0
                },
                O[P] = r),
                r.type === t && r.texture === n || (e.bindTexture(t, n || F[t]),
                r.type = t,
                r.texture = n)
            },
            unbindTexture: function() {
                var t = O[P];
                void 0 !== t && void 0 !== t.type && (e.bindTexture(t.type, null),
                t.type = void 0,
                t.texture = void 0)
            },
            compressedTexImage2D: function() {
                try {
                    e.compressedTexImage2D.apply(e, arguments)
                } catch (e) {
                    console.error("THREE.WebGLState:", e)
                }
            },
            texImage2D: function() {
                try {
                    e.texImage2D.apply(e, arguments)
                } catch (e) {
                    console.error("THREE.WebGLState:", e)
                }
            },
            texImage3D: function() {
                try {
                    e.texImage3D.apply(e, arguments)
                } catch (e) {
                    console.error("THREE.WebGLState:", e)
                }
            },
            scissor: function(t) {
                !1 === k.equals(t) && (e.scissor(t.x, t.y, t.z, t.w),
                k.copy(t))
            },
            viewport: function(t) {
                !1 === D.equals(t) && (e.viewport(t.x, t.y, t.z, t.w),
                D.copy(t))
            },
            reset: function() {
                for (var t = 0; t < u.length; t++)
                    1 === u[t] && (e.disableVertexAttribArray(t),
                    u[t] = 0);
                h = {},
                P = null,
                O = {},
                d = null,
                p = null,
                _ = null,
                E = null,
                i.reset(),
                a.reset(),
                o.reset()
            }
        }
    }
    function mi(e, t, n, r, i, a, o) {
        var s, l = i.isWebGL2, u = i.maxTextures, c = i.maxCubemapSize, h = i.maxTextureSize, d = i.maxSamples, f = new WeakMap, p = !1;
        try {
            p = "undefined" != typeof OffscreenCanvas && null !== new OffscreenCanvas(1,1).getContext("2d")
        } catch (e) {}
        function m(e, t) {
            return p ? new OffscreenCanvas(e,t) : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
        }
        function g(e, t, n, r) {
            var i = 1;
            if ((e.width > r || e.height > r) && (i = r / Math.max(e.width, e.height)),
            i < 1 || !0 === t) {
                if ("undefined" != typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" != typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" != typeof ImageBitmap && e instanceof ImageBitmap) {
                    var a = t ? L.floorPowerOfTwo : Math.floor
                      , o = a(i * e.width)
                      , l = a(i * e.height);
                    void 0 === s && (s = m(o, l));
                    var u = n ? m(o, l) : s;
                    return u.width = o,
                    u.height = l,
                    u.getContext("2d").drawImage(e, 0, 0, o, l),
                    console.warn("THREE.WebGLRenderer: Texture has been resized from (" + e.width + "x" + e.height + ") to (" + o + "x" + l + ")."),
                    u
                }
                return "data"in e && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + e.width + "x" + e.height + ")."),
                e
            }
            return e
        }
        function v(e) {
            return L.isPowerOfTwo(e.width) && L.isPowerOfTwo(e.height)
        }
        function y(e, t) {
            return e.generateMipmaps && t && 1003 !== e.minFilter && 1006 !== e.minFilter
        }
        function b(t, n, i, a) {
            e.generateMipmap(t),
            r.get(n).__maxMipLevel = Math.log(Math.max(i, a)) * Math.LOG2E
        }
        function x(n, r, i) {
            if (!1 === l)
                return r;
            if (null !== n) {
                if (void 0 !== e[n])
                    return e[n];
                console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + n + "'")
            }
            var a = r;
            return 6403 === r && (5126 === i && (a = 33326),
            5131 === i && (a = 33325),
            5121 === i && (a = 33321)),
            6407 === r && (5126 === i && (a = 34837),
            5131 === i && (a = 34843),
            5121 === i && (a = 32849)),
            6408 === r && (5126 === i && (a = 34836),
            5131 === i && (a = 34842),
            5121 === i && (a = 32856)),
            33325 !== a && 33326 !== a && 34842 !== a && 34836 !== a || t.get("EXT_color_buffer_float"),
            a
        }
        function w(e) {
            return 1003 === e || 1004 === e || 1005 === e ? 9728 : 9729
        }
        function _(t) {
            var n = t.target;
            n.removeEventListener("dispose", _),
            function(t) {
                var n = r.get(t);
                if (void 0 === n.__webglInit)
                    return;
                e.deleteTexture(n.__webglTexture),
                r.remove(t)
            }(n),
            n.isVideoTexture && f.delete(n),
            o.memory.textures--
        }
        function E(t) {
            var n = t.target;
            n.removeEventListener("dispose", E),
            function(t) {
                var n = r.get(t)
                  , i = r.get(t.texture);
                if (!t)
                    return;
                void 0 !== i.__webglTexture && e.deleteTexture(i.__webglTexture);
                t.depthTexture && t.depthTexture.dispose();
                if (t.isWebGLCubeRenderTarget)
                    for (var a = 0; a < 6; a++)
                        e.deleteFramebuffer(n.__webglFramebuffer[a]),
                        n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer[a]);
                else
                    e.deleteFramebuffer(n.__webglFramebuffer),
                    n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer),
                    n.__webglMultisampledFramebuffer && e.deleteFramebuffer(n.__webglMultisampledFramebuffer),
                    n.__webglColorRenderbuffer && e.deleteRenderbuffer(n.__webglColorRenderbuffer),
                    n.__webglDepthRenderbuffer && e.deleteRenderbuffer(n.__webglDepthRenderbuffer);
                r.remove(t.texture),
                r.remove(t)
            }(n),
            o.memory.textures--
        }
        var T = 0;
        function S(e, t) {
            var i = r.get(e);
            if (e.isVideoTexture && function(e) {
                var t = o.render.frame;
                f.get(e) !== t && (f.set(e, t),
                e.update())
            }(e),
            e.version > 0 && i.__version !== e.version) {
                var a = e.image;
                if (void 0 === a)
                    console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
                else {
                    if (!1 !== a.complete)
                        return void k(i, e, t);
                    console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")
                }
            }
            n.activeTexture(33984 + t),
            n.bindTexture(3553, i.__webglTexture)
        }
        function M(t, i) {
            if (6 === t.image.length) {
                var o = r.get(t);
                if (t.version > 0 && o.__version !== t.version) {
                    O(o, t),
                    n.activeTexture(33984 + i),
                    n.bindTexture(34067, o.__webglTexture),
                    e.pixelStorei(37440, t.flipY);
                    for (var s = t && (t.isCompressedTexture || t.image[0].isCompressedTexture), u = t.image[0] && t.image[0].isDataTexture, h = [], d = 0; d < 6; d++)
                        h[d] = s || u ? u ? t.image[d].image : t.image[d] : g(t.image[d], !1, !0, c);
                    var f, p = h[0], m = v(p) || l, w = a.convert(t.format), _ = a.convert(t.type), E = x(t.internalFormat, w, _);
                    if (P(34067, t, m),
                    s) {
                        for (d = 0; d < 6; d++) {
                            f = h[d].mipmaps;
                            for (var T = 0; T < f.length; T++) {
                                var S = f[T];
                                1023 !== t.format && 1022 !== t.format ? null !== w ? n.compressedTexImage2D(34069 + d, T, E, S.width, S.height, 0, S.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(34069 + d, T, E, S.width, S.height, 0, w, _, S.data)
                            }
                        }
                        o.__maxMipLevel = f.length - 1
                    } else {
                        f = t.mipmaps;
                        for (d = 0; d < 6; d++)
                            if (u) {
                                n.texImage2D(34069 + d, 0, E, h[d].width, h[d].height, 0, w, _, h[d].data);
                                for (T = 0; T < f.length; T++) {
                                    var M = (S = f[T]).image[d].image;
                                    n.texImage2D(34069 + d, T + 1, E, M.width, M.height, 0, w, _, M.data)
                                }
                            } else {
                                n.texImage2D(34069 + d, 0, E, w, _, h[d]);
                                for (T = 0; T < f.length; T++) {
                                    S = f[T];
                                    n.texImage2D(34069 + d, T + 1, E, w, _, S.image[d])
                                }
                            }
                        o.__maxMipLevel = f.length
                    }
                    y(t, m) && b(34067, t, p.width, p.height),
                    o.__version = t.version,
                    t.onUpdate && t.onUpdate(t)
                } else
                    n.activeTexture(33984 + i),
                    n.bindTexture(34067, o.__webglTexture)
            }
        }
        function A(e, t) {
            n.activeTexture(33984 + t),
            n.bindTexture(34067, r.get(e).__webglTexture)
        }
        var R = {
            1e3: 10497,
            1001: 33071,
            1002: 33648
        }
          , C = {
            1003: 9728,
            1004: 9984,
            1005: 9986,
            1006: 9729,
            1007: 9985,
            1008: 9987
        };
        function P(n, a, o) {
            o ? (e.texParameteri(n, 10242, R[a.wrapS]),
            e.texParameteri(n, 10243, R[a.wrapT]),
            32879 !== n && 35866 !== n || e.texParameteri(n, 32882, R[a.wrapR]),
            e.texParameteri(n, 10240, C[a.magFilter]),
            e.texParameteri(n, 10241, C[a.minFilter])) : (e.texParameteri(n, 10242, 33071),
            e.texParameteri(n, 10243, 33071),
            32879 !== n && 35866 !== n || e.texParameteri(n, 32882, 33071),
            1001 === a.wrapS && 1001 === a.wrapT || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),
            e.texParameteri(n, 10240, w(a.magFilter)),
            e.texParameteri(n, 10241, w(a.minFilter)),
            1003 !== a.minFilter && 1006 !== a.minFilter && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));
            var s = t.get("EXT_texture_filter_anisotropic");
            if (s) {
                if (1015 === a.type && null === t.get("OES_texture_float_linear"))
                    return;
                if (1016 === a.type && null === (l || t.get("OES_texture_half_float_linear")))
                    return;
                (a.anisotropy > 1 || r.get(a).__currentAnisotropy) && (e.texParameterf(n, s.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a.anisotropy, i.getMaxAnisotropy())),
                r.get(a).__currentAnisotropy = a.anisotropy)
            }
        }
        function O(t, n) {
            void 0 === t.__webglInit && (t.__webglInit = !0,
            n.addEventListener("dispose", _),
            t.__webglTexture = e.createTexture(),
            o.memory.textures++)
        }
        function k(t, r, i) {
            var o = 3553;
            r.isDataTexture2DArray && (o = 35866),
            r.isDataTexture3D && (o = 32879),
            O(t, r),
            n.activeTexture(33984 + i),
            n.bindTexture(o, t.__webglTexture),
            e.pixelStorei(37440, r.flipY),
            e.pixelStorei(37441, r.premultiplyAlpha),
            e.pixelStorei(3317, r.unpackAlignment);
            var s = function(e) {
                return !l && (1001 !== e.wrapS || 1001 !== e.wrapT || 1003 !== e.minFilter && 1006 !== e.minFilter)
            }(r) && !1 === v(r.image)
              , u = g(r.image, s, !1, h)
              , c = v(u) || l
              , d = a.convert(r.format)
              , f = a.convert(r.type)
              , p = x(r.internalFormat, d, f);
            P(o, r, c);
            var m, w = r.mipmaps;
            if (r.isDepthTexture)
                p = 6402,
                l ? p = 1015 === r.type ? 36012 : 1014 === r.type ? 33190 : 1020 === r.type ? 35056 : 33189 : 1015 === r.type && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),
                1026 === r.format && 6402 === p && 1012 !== r.type && 1014 !== r.type && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),
                r.type = 1012,
                f = a.convert(r.type)),
                1027 === r.format && 6402 === p && (p = 34041,
                1020 !== r.type && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),
                r.type = 1020,
                f = a.convert(r.type))),
                n.texImage2D(3553, 0, p, u.width, u.height, 0, d, f, null);
            else if (r.isDataTexture)
                if (w.length > 0 && c) {
                    for (var _ = 0, E = w.length; _ < E; _++)
                        m = w[_],
                        n.texImage2D(3553, _, p, m.width, m.height, 0, d, f, m.data);
                    r.generateMipmaps = !1,
                    t.__maxMipLevel = w.length - 1
                } else
                    n.texImage2D(3553, 0, p, u.width, u.height, 0, d, f, u.data),
                    t.__maxMipLevel = 0;
            else if (r.isCompressedTexture) {
                for (_ = 0,
                E = w.length; _ < E; _++)
                    m = w[_],
                    1023 !== r.format && 1022 !== r.format ? null !== d ? n.compressedTexImage2D(3553, _, p, m.width, m.height, 0, m.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(3553, _, p, m.width, m.height, 0, d, f, m.data);
                t.__maxMipLevel = w.length - 1
            } else if (r.isDataTexture2DArray)
                n.texImage3D(35866, 0, p, u.width, u.height, u.depth, 0, d, f, u.data),
                t.__maxMipLevel = 0;
            else if (r.isDataTexture3D)
                n.texImage3D(32879, 0, p, u.width, u.height, u.depth, 0, d, f, u.data),
                t.__maxMipLevel = 0;
            else if (w.length > 0 && c) {
                for (_ = 0,
                E = w.length; _ < E; _++)
                    m = w[_],
                    n.texImage2D(3553, _, p, d, f, m);
                r.generateMipmaps = !1,
                t.__maxMipLevel = w.length - 1
            } else
                n.texImage2D(3553, 0, p, d, f, u),
                t.__maxMipLevel = 0;
            y(r, c) && b(o, r, u.width, u.height),
            t.__version = r.version,
            r.onUpdate && r.onUpdate(r)
        }
        function D(t, i, o, s) {
            var l = a.convert(i.texture.format)
              , u = a.convert(i.texture.type)
              , c = x(i.texture.internalFormat, l, u);
            n.texImage2D(s, 0, c, i.width, i.height, 0, l, u, null),
            e.bindFramebuffer(36160, t),
            e.framebufferTexture2D(36160, o, s, r.get(i.texture).__webglTexture, 0),
            e.bindFramebuffer(36160, null)
        }
        function I(t, n, r) {
            if (e.bindRenderbuffer(36161, t),
            n.depthBuffer && !n.stencilBuffer) {
                var i = 33189;
                if (r) {
                    var o = n.depthTexture;
                    o && o.isDepthTexture && (1015 === o.type ? i = 36012 : 1014 === o.type && (i = 33190));
                    var s = F(n);
                    e.renderbufferStorageMultisample(36161, s, i, n.width, n.height)
                } else
                    e.renderbufferStorage(36161, i, n.width, n.height);
                e.framebufferRenderbuffer(36160, 36096, 36161, t)
            } else if (n.depthBuffer && n.stencilBuffer) {
                if (r) {
                    s = F(n);
                    e.renderbufferStorageMultisample(36161, s, 35056, n.width, n.height)
                } else
                    e.renderbufferStorage(36161, 34041, n.width, n.height);
                e.framebufferRenderbuffer(36160, 33306, 36161, t)
            } else {
                var l = a.convert(n.texture.format)
                  , u = a.convert(n.texture.type);
                i = x(n.texture.internalFormat, l, u);
                if (r) {
                    s = F(n);
                    e.renderbufferStorageMultisample(36161, s, i, n.width, n.height)
                } else
                    e.renderbufferStorage(36161, i, n.width, n.height)
            }
            e.bindRenderbuffer(36161, null)
        }
        function N(t) {
            var n = r.get(t)
              , i = !0 === t.isWebGLCubeRenderTarget;
            if (t.depthTexture) {
                if (i)
                    throw new Error("target.depthTexture not supported in Cube render targets");
                !function(t, n) {
                    if (n && n.isWebGLCubeRenderTarget)
                        throw new Error("Depth Texture with cube render targets is not supported");
                    if (e.bindFramebuffer(36160, t),
                    !n.depthTexture || !n.depthTexture.isDepthTexture)
                        throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                    r.get(n.depthTexture).__webglTexture && n.depthTexture.image.width === n.width && n.depthTexture.image.height === n.height || (n.depthTexture.image.width = n.width,
                    n.depthTexture.image.height = n.height,
                    n.depthTexture.needsUpdate = !0),
                    S(n.depthTexture, 0);
                    var i = r.get(n.depthTexture).__webglTexture;
                    if (1026 === n.depthTexture.format)
                        e.framebufferTexture2D(36160, 36096, 3553, i, 0);
                    else {
                        if (1027 !== n.depthTexture.format)
                            throw new Error("Unknown depthTexture format");
                        e.framebufferTexture2D(36160, 33306, 3553, i, 0)
                    }
                }(n.__webglFramebuffer, t)
            } else if (i) {
                n.__webglDepthbuffer = [];
                for (var a = 0; a < 6; a++)
                    e.bindFramebuffer(36160, n.__webglFramebuffer[a]),
                    n.__webglDepthbuffer[a] = e.createRenderbuffer(),
                    I(n.__webglDepthbuffer[a], t, !1)
            } else
                e.bindFramebuffer(36160, n.__webglFramebuffer),
                n.__webglDepthbuffer = e.createRenderbuffer(),
                I(n.__webglDepthbuffer, t, !1);
            e.bindFramebuffer(36160, null)
        }
        function F(e) {
            return l && e.isWebGLMultisampleRenderTarget ? Math.min(d, e.samples) : 0
        }
        var U = !1
          , B = !1;
        this.allocateTextureUnit = function() {
            var e = T;
            return e >= u && console.warn("THREE.WebGLTextures: Trying to use " + e + " texture units while this GPU supports only " + u),
            T += 1,
            e
        }
        ,
        this.resetTextureUnits = function() {
            T = 0
        }
        ,
        this.setTexture2D = S,
        this.setTexture2DArray = function(e, t) {
            var i = r.get(e);
            e.version > 0 && i.__version !== e.version ? k(i, e, t) : (n.activeTexture(33984 + t),
            n.bindTexture(35866, i.__webglTexture))
        }
        ,
        this.setTexture3D = function(e, t) {
            var i = r.get(e);
            e.version > 0 && i.__version !== e.version ? k(i, e, t) : (n.activeTexture(33984 + t),
            n.bindTexture(32879, i.__webglTexture))
        }
        ,
        this.setTextureCube = M,
        this.setTextureCubeDynamic = A,
        this.setupRenderTarget = function(t) {
            var i = r.get(t)
              , s = r.get(t.texture);
            t.addEventListener("dispose", E),
            s.__webglTexture = e.createTexture(),
            o.memory.textures++;
            var u = !0 === t.isWebGLCubeRenderTarget
              , c = !0 === t.isWebGLMultisampleRenderTarget
              , h = v(t) || l;
            if (!l || 1022 !== t.texture.format || 1015 !== t.texture.type && 1016 !== t.texture.type || (t.texture.format = 1023,
            console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),
            u) {
                i.__webglFramebuffer = [];
                for (var d = 0; d < 6; d++)
                    i.__webglFramebuffer[d] = e.createFramebuffer()
            } else if (i.__webglFramebuffer = e.createFramebuffer(),
            c)
                if (l) {
                    i.__webglMultisampledFramebuffer = e.createFramebuffer(),
                    i.__webglColorRenderbuffer = e.createRenderbuffer(),
                    e.bindRenderbuffer(36161, i.__webglColorRenderbuffer);
                    var f = a.convert(t.texture.format)
                      , p = a.convert(t.texture.type)
                      , m = x(t.texture.internalFormat, f, p)
                      , g = F(t);
                    e.renderbufferStorageMultisample(36161, g, m, t.width, t.height),
                    e.bindFramebuffer(36160, i.__webglMultisampledFramebuffer),
                    e.framebufferRenderbuffer(36160, 36064, 36161, i.__webglColorRenderbuffer),
                    e.bindRenderbuffer(36161, null),
                    t.depthBuffer && (i.__webglDepthRenderbuffer = e.createRenderbuffer(),
                    I(i.__webglDepthRenderbuffer, t, !0)),
                    e.bindFramebuffer(36160, null)
                } else
                    console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
            if (u) {
                n.bindTexture(34067, s.__webglTexture),
                P(34067, t.texture, h);
                for (d = 0; d < 6; d++)
                    D(i.__webglFramebuffer[d], t, 36064, 34069 + d);
                y(t.texture, h) && b(34067, t.texture, t.width, t.height),
                n.bindTexture(34067, null)
            } else
                n.bindTexture(3553, s.__webglTexture),
                P(3553, t.texture, h),
                D(i.__webglFramebuffer, t, 36064, 3553),
                y(t.texture, h) && b(3553, t.texture, t.width, t.height),
                n.bindTexture(3553, null);
            t.depthBuffer && N(t)
        }
        ,
        this.updateRenderTargetMipmap = function(e) {
            var t = e.texture;
            if (y(t, v(e) || l)) {
                var i = e.isWebGLCubeRenderTarget ? 34067 : 3553
                  , a = r.get(t).__webglTexture;
                n.bindTexture(i, a),
                b(i, t, e.width, e.height),
                n.bindTexture(i, null)
            }
        }
        ,
        this.updateMultisampleRenderTarget = function(t) {
            if (t.isWebGLMultisampleRenderTarget)
                if (l) {
                    var n = r.get(t);
                    e.bindFramebuffer(36008, n.__webglMultisampledFramebuffer),
                    e.bindFramebuffer(36009, n.__webglFramebuffer);
                    var i = t.width
                      , a = t.height
                      , o = 16384;
                    t.depthBuffer && (o |= 256),
                    t.stencilBuffer && (o |= 1024),
                    e.blitFramebuffer(0, 0, i, a, 0, 0, i, a, o, 9728),
                    e.bindFramebuffer(36160, n.__webglMultisampledFramebuffer)
                } else
                    console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")
        }
        ,
        this.safeSetTexture2D = function(e, t) {
            e && e.isWebGLRenderTarget && (!1 === U && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),
            U = !0),
            e = e.texture),
            S(e, t)
        }
        ,
        this.safeSetTextureCube = function(e, t) {
            e && e.isWebGLCubeRenderTarget && (!1 === B && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),
            B = !0),
            e = e.texture),
            e && e.isCubeTexture || Array.isArray(e.image) && 6 === e.image.length ? M(e, t) : A(e, t)
        }
    }
    function gi(e, t, n) {
        var r = n.isWebGL2;
        return {
            convert: function(e) {
                var n;
                if (1009 === e)
                    return 5121;
                if (1017 === e)
                    return 32819;
                if (1018 === e)
                    return 32820;
                if (1019 === e)
                    return 33635;
                if (1010 === e)
                    return 5120;
                if (1011 === e)
                    return 5122;
                if (1012 === e)
                    return 5123;
                if (1013 === e)
                    return 5124;
                if (1014 === e)
                    return 5125;
                if (1015 === e)
                    return 5126;
                if (1016 === e)
                    return r ? 5131 : null !== (n = t.get("OES_texture_half_float")) ? n.HALF_FLOAT_OES : null;
                if (1021 === e)
                    return 6406;
                if (1022 === e)
                    return 6407;
                if (1023 === e)
                    return 6408;
                if (1024 === e)
                    return 6409;
                if (1025 === e)
                    return 6410;
                if (1026 === e)
                    return 6402;
                if (1027 === e)
                    return 34041;
                if (1028 === e)
                    return 6403;
                if (1029 === e)
                    return 36244;
                if (1030 === e)
                    return 33319;
                if (1031 === e)
                    return 33320;
                if (1032 === e)
                    return 36248;
                if (1033 === e)
                    return 36249;
                if (33776 === e || 33777 === e || 33778 === e || 33779 === e) {
                    if (null === (n = t.get("WEBGL_compressed_texture_s3tc")))
                        return null;
                    if (33776 === e)
                        return n.COMPRESSED_RGB_S3TC_DXT1_EXT;
                    if (33777 === e)
                        return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                    if (33778 === e)
                        return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                    if (33779 === e)
                        return n.COMPRESSED_RGBA_S3TC_DXT5_EXT
                }
                if (35840 === e || 35841 === e || 35842 === e || 35843 === e) {
                    if (null === (n = t.get("WEBGL_compressed_texture_pvrtc")))
                        return null;
                    if (35840 === e)
                        return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                    if (35841 === e)
                        return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                    if (35842 === e)
                        return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                    if (35843 === e)
                        return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                }
                if (36196 === e)
                    return null !== (n = t.get("WEBGL_compressed_texture_etc1")) ? n.COMPRESSED_RGB_ETC1_WEBGL : null;
                if ((37492 === e || 37496 === e) && null !== (n = t.get("WEBGL_compressed_texture_etc"))) {
                    if (37492 === e)
                        return n.COMPRESSED_RGB8_ETC2;
                    if (37496 === e)
                        return n.COMPRESSED_RGBA8_ETC2_EAC
                }
                return 37808 === e || 37809 === e || 37810 === e || 37811 === e || 37812 === e || 37813 === e || 37814 === e || 37815 === e || 37816 === e || 37817 === e || 37818 === e || 37819 === e || 37820 === e || 37821 === e || 37840 === e || 37841 === e || 37842 === e || 37843 === e || 37844 === e || 37845 === e || 37846 === e || 37847 === e || 37848 === e || 37849 === e || 37850 === e || 37851 === e || 37852 === e || 37853 === e ? null !== (n = t.get("WEBGL_compressed_texture_astc")) ? e : null : 36492 === e ? null !== (n = t.get("EXT_texture_compression_bptc")) ? e : null : 1020 === e ? r ? 34042 : null !== (n = t.get("WEBGL_depth_texture")) ? n.UNSIGNED_INT_24_8_WEBGL : null : void 0
            }
        }
    }
    function vi(e) {
        hn.call(this),
        this.cameras = e || []
    }
    function yi() {
        fe.call(this),
        this.type = "Group"
    }
    function bi(e, t) {
        var n = this
          , r = null
          , i = 1
          , a = null
          , o = "local-floor"
          , s = null
          , l = []
          , u = new Map
          , c = new hn;
        c.layers.enable(1),
        c.viewport = new I;
        var h = new hn;
        h.layers.enable(2),
        h.viewport = new I;
        var d = new vi([c, h]);
        d.layers.enable(1),
        d.layers.enable(2);
        var f = null
          , p = null;
        function m(e) {
            var t = u.get(e.inputSource);
            t && (t.targetRay && t.targetRay.dispatchEvent({
                type: e.type
            }),
            t.grip && t.grip.dispatchEvent({
                type: e.type
            }))
        }
        function g() {
            u.forEach((function(e, t) {
                e.targetRay && (e.targetRay.dispatchEvent({
                    type: "disconnected",
                    data: t
                }),
                e.targetRay.visible = !1),
                e.grip && (e.grip.dispatchEvent({
                    type: "disconnected",
                    data: t
                }),
                e.grip.visible = !1)
            }
            )),
            u.clear(),
            e.setFramebuffer(null),
            e.setRenderTarget(e.getRenderTarget()),
            E.stop(),
            n.isPresenting = !1,
            n.dispatchEvent({
                type: "sessionend"
            })
        }
        function v(e) {
            a = e,
            E.setContext(r),
            E.start(),
            n.isPresenting = !0,
            n.dispatchEvent({
                type: "sessionstart"
            })
        }
        function y(e) {
            for (var t = r.inputSources, n = 0; n < l.length; n++)
                u.set(t[n], l[n]);
            for (n = 0; n < e.removed.length; n++) {
                var i = e.removed[n];
                (a = u.get(i)) && (a.targetRay && a.targetRay.dispatchEvent({
                    type: "disconnected",
                    data: i
                }),
                a.grip && a.grip.dispatchEvent({
                    type: "disconnected",
                    data: i
                }),
                u.delete(i))
            }
            for (n = 0; n < e.added.length; n++) {
                var a;
                i = e.added[n];
                (a = u.get(i)) && (a.targetRay && a.targetRay.dispatchEvent({
                    type: "connected",
                    data: i
                }),
                a.grip && a.grip.dispatchEvent({
                    type: "connected",
                    data: i
                }))
            }
        }
        this.enabled = !1,
        this.isPresenting = !1,
        this.getController = function(e) {
            var t = l[e];
            return void 0 === t && (t = {},
            l[e] = t),
            void 0 === t.targetRay && (t.targetRay = new yi,
            t.targetRay.matrixAutoUpdate = !1,
            t.targetRay.visible = !1),
            t.targetRay
        }
        ,
        this.getControllerGrip = function(e) {
            var t = l[e];
            return void 0 === t && (t = {},
            l[e] = t),
            void 0 === t.grip && (t.grip = new yi,
            t.grip.matrixAutoUpdate = !1,
            t.grip.visible = !1),
            t.grip
        }
        ,
        this.setFramebufferScaleFactor = function(e) {
            i = e,
            1 == n.isPresenting && console.warn("WebXRManager: Cannot change framebuffer scale while presenting VR content")
        }
        ,
        this.setReferenceSpaceType = function(e) {
            o = e
        }
        ,
        this.getReferenceSpace = function() {
            return a
        }
        ,
        this.getSession = function() {
            return r
        }
        ,
        this.setSession = function(e) {
            if (null !== (r = e)) {
                r.addEventListener("select", m),
                r.addEventListener("selectstart", m),
                r.addEventListener("selectend", m),
                r.addEventListener("squeeze", m),
                r.addEventListener("squeezestart", m),
                r.addEventListener("squeezeend", m),
                r.addEventListener("end", g);
                var n = t.getContextAttributes()
                  , a = {
                    antialias: n.antialias,
                    alpha: n.alpha,
                    depth: n.depth,
                    stencil: n.stencil,
                    framebufferScaleFactor: i
                }
                  , s = new XRWebGLLayer(r,t,a);
                r.updateRenderState({
                    baseLayer: s
                }),
                r.requestReferenceSpace(o).then(v),
                r.addEventListener("inputsourceschange", y)
            }
        }
        ;
        var b = new G
          , x = new G;
        function w(e, t) {
            null === t ? e.matrixWorld.copy(e.matrix) : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix),
            e.matrixWorldInverse.getInverse(e.matrixWorld)
        }
        this.getCamera = function(e) {
            d.near = h.near = c.near = e.near,
            d.far = h.far = c.far = e.far,
            f === d.near && p === d.far || (r.updateRenderState({
                depthNear: d.near,
                depthFar: d.far
            }),
            f = d.near,
            p = d.far);
            var t = e.parent
              , n = d.cameras;
            w(d, t);
            for (var i = 0; i < n.length; i++)
                w(n[i], t);
            e.matrixWorld.copy(d.matrixWorld);
            for (var a = e.children, o = (i = 0,
            a.length); i < o; i++)
                a[i].updateMatrixWorld(!0);
            return function(e, t, n) {
                b.setFromMatrixPosition(t.matrixWorld),
                x.setFromMatrixPosition(n.matrixWorld);
                var r = b.distanceTo(x)
                  , i = t.projectionMatrix.elements
                  , a = n.projectionMatrix.elements
                  , o = i[14] / (i[10] - 1)
                  , s = i[14] / (i[10] + 1)
                  , l = (i[9] + 1) / i[5]
                  , u = (i[9] - 1) / i[5]
                  , c = (i[8] - 1) / i[0]
                  , h = (a[8] + 1) / a[0]
                  , d = o * c
                  , f = o * h
                  , p = r / (-c + h)
                  , m = p * -c;
                t.matrixWorld.decompose(e.position, e.quaternion, e.scale),
                e.translateX(m),
                e.translateZ(p),
                e.matrixWorld.compose(e.position, e.quaternion, e.scale),
                e.matrixWorldInverse.getInverse(e.matrixWorld);
                var g = o + p
                  , v = s + p
                  , y = d - m
                  , w = f + (r - m)
                  , _ = l * s / v * g
                  , E = u * s / v * g;
                e.projectionMatrix.makePerspective(y, w, _, E, g, v)
            }(d, c, h),
            d
        }
        ;
        var _ = null;
        var E = new bn;
        E.setAnimationLoop((function(t, n) {
            if (null !== (s = n.getViewerPose(a))) {
                var i = s.views
                  , o = r.renderState.baseLayer;
                e.setFramebuffer(o.framebuffer);
                for (var u = 0; u < i.length; u++) {
                    var c = i[u]
                      , h = o.getViewport(c)
                      , f = d.cameras[u];
                    f.matrix.fromArray(c.transform.matrix),
                    f.projectionMatrix.fromArray(c.projectionMatrix),
                    f.viewport.set(h.x, h.y, h.width, h.height),
                    0 === u && d.matrix.copy(f.matrix)
                }
            }
            var p = r.inputSources;
            for (u = 0; u < l.length; u++) {
                var m = l[u]
                  , g = p[u]
                  , v = null
                  , y = null;
                g && (m.targetRay && null !== (v = n.getPose(g.targetRaySpace, a)) && (m.targetRay.matrix.fromArray(v.transform.matrix),
                m.targetRay.matrix.decompose(m.targetRay.position, m.targetRay.rotation, m.targetRay.scale)),
                m.grip && g.gripSpace && null !== (y = n.getPose(g.gripSpace, a)) && (m.grip.matrix.fromArray(y.transform.matrix),
                m.grip.matrix.decompose(m.grip.position, m.grip.rotation, m.grip.scale))),
                m.targetRay && (m.targetRay.visible = null !== v),
                m.grip && (m.grip.visible = null !== y)
            }
            _ && _(t, n)
        }
        )),
        this.setAnimationLoop = function(e) {
            _ = e
        }
        ,
        this.dispose = function() {}
    }
    function xi(e) {
        var t = void 0 !== (e = e || {}).canvas ? e.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
          , n = void 0 !== e.context ? e.context : null
          , r = void 0 !== e.alpha && e.alpha
          , i = void 0 === e.depth || e.depth
          , a = void 0 === e.stencil || e.stencil
          , o = void 0 !== e.antialias && e.antialias
          , s = void 0 === e.premultipliedAlpha || e.premultipliedAlpha
          , l = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer
          , u = void 0 !== e.powerPreference ? e.powerPreference : "default"
          , c = void 0 !== e.failIfMajorPerformanceCaveat && e.failIfMajorPerformanceCaveat
          , h = null
          , d = null;
        this.domElement = t,
        this.debug = {
            checkShaderErrors: !0
        },
        this.autoClear = !0,
        this.autoClearColor = !0,
        this.autoClearDepth = !0,
        this.autoClearStencil = !0,
        this.sortObjects = !0,
        this.clippingPlanes = [],
        this.localClippingEnabled = !1,
        this.gammaFactor = 2,
        this.outputEncoding = 3e3,
        this.physicallyCorrectLights = !1,
        this.toneMapping = 1,
        this.toneMappingExposure = 1,
        this.toneMappingWhitePoint = 1,
        this.maxMorphTargets = 8,
        this.maxMorphNormals = 4;
        var f, p, m, g, v, y, b, x, w, _, E, T, S, M, A, R, P, O, k = this, D = !1, N = null, F = 0, U = 0, B = null, z = null, H = -1, j = {
            geometry: null,
            program: null,
            wireframe: !1
        }, V = null, W = null, q = new I, K = new I, Y = null, Z = t.width, J = t.height, Q = 1, $ = null, ee = null, te = new I(0,0,Z,J), ne = new I(0,0,Z,J), re = !1, ie = new vn, ae = new Rn, oe = !1, se = !1, le = new X, ue = new G;
        function ce() {
            return null === B ? Q : 1
        }
        try {
            var he = {
                alpha: r,
                depth: i,
                stencil: a,
                antialias: o,
                premultipliedAlpha: s,
                preserveDrawingBuffer: l,
                powerPreference: u,
                failIfMajorPerformanceCaveat: c,
                xrCompatible: !0
            };
            if (t.addEventListener("webglcontextlost", ge, !1),
            t.addEventListener("webglcontextrestored", ve, !1),
            null === (f = n || t.getContext("webgl", he) || t.getContext("experimental-webgl", he)))
                throw null !== t.getContext("webgl") ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
            void 0 === f.getShaderPrecisionFormat && (f.getShaderPrecisionFormat = function() {
                return {
                    rangeMin: 1,
                    rangeMax: 1,
                    precision: 1
                }
            }
            )
        } catch (e) {
            throw console.error("THREE.WebGLRenderer: " + e.message),
            e
        }
        function de() {
            p = new Ln(f),
            !1 === (m = new An(f,p,e)).isWebGL2 && (p.get("WEBGL_depth_texture"),
            p.get("OES_texture_float"),
            p.get("OES_texture_half_float"),
            p.get("OES_texture_half_float_linear"),
            p.get("OES_standard_derivatives"),
            p.get("OES_element_index_uint"),
            p.get("ANGLE_instanced_arrays")),
            p.get("OES_texture_float_linear"),
            O = new gi(f,p,m),
            (g = new pi(f,p,m)).scissor(K.copy(ne).multiplyScalar(Q).floor()),
            g.viewport(q.copy(te).multiplyScalar(Q).floor()),
            v = new On(f),
            y = new ei,
            b = new mi(f,p,g,y,m,O,v),
            x = new xn(f,m),
            w = new Cn(f,x,v),
            _ = new In(f,w,x,v),
            A = new Dn(f),
            E = new $r(k,p,m),
            T = new ii,
            S = new ci,
            M = new Sn(k,g,_,s),
            R = new Mn(f,p,v,m),
            P = new Pn(f,p,v,m),
            v.programs = E.programs,
            k.capabilities = m,
            k.extensions = p,
            k.properties = y,
            k.renderLists = T,
            k.state = g,
            k.info = v
        }
        de();
        var fe = new bi(k,f);
        this.xr = fe;
        var me = new fi(k,_,m.maxTextureSize);
        function ge(e) {
            e.preventDefault(),
            console.log("THREE.WebGLRenderer: Context Lost."),
            D = !0
        }
        function ve() {
            console.log("THREE.WebGLRenderer: Context Restored."),
            D = !1,
            de()
        }
        function ye(e) {
            var t = e.target;
            t.removeEventListener("dispose", ye),
            function(e) {
                be(e),
                y.remove(e)
            }(t)
        }
        function be(e) {
            var t = y.get(e).program;
            e.program = void 0,
            void 0 !== t && E.releaseProgram(t)
        }
        this.shadowMap = me,
        this.getContext = function() {
            return f
        }
        ,
        this.getContextAttributes = function() {
            return f.getContextAttributes()
        }
        ,
        this.forceContextLoss = function() {
            var e = p.get("WEBGL_lose_context");
            e && e.loseContext()
        }
        ,
        this.forceContextRestore = function() {
            var e = p.get("WEBGL_lose_context");
            e && e.restoreContext()
        }
        ,
        this.getPixelRatio = function() {
            return Q
        }
        ,
        this.setPixelRatio = function(e) {
            void 0 !== e && (Q = e,
            this.setSize(Z, J, !1))
        }
        ,
        this.getSize = function(e) {
            return void 0 === e && (console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),
            e = new C),
            e.set(Z, J)
        }
        ,
        this.setSize = function(e, n, r) {
            fe.isPresenting ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (Z = e,
            J = n,
            t.width = Math.floor(e * Q),
            t.height = Math.floor(n * Q),
            !1 !== r && (t.style.width = e + "px",
            t.style.height = n + "px"),
            this.setViewport(0, 0, e, n))
        }
        ,
        this.getDrawingBufferSize = function(e) {
            return void 0 === e && (console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),
            e = new C),
            e.set(Z * Q, J * Q).floor()
        }
        ,
        this.setDrawingBufferSize = function(e, n, r) {
            Z = e,
            J = n,
            Q = r,
            t.width = Math.floor(e * r),
            t.height = Math.floor(n * r),
            this.setViewport(0, 0, e, n)
        }
        ,
        this.getCurrentViewport = function(e) {
            return void 0 === e && (console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),
            e = new I),
            e.copy(q)
        }
        ,
        this.getViewport = function(e) {
            return e.copy(te)
        }
        ,
        this.setViewport = function(e, t, n, r) {
            e.isVector4 ? te.set(e.x, e.y, e.z, e.w) : te.set(e, t, n, r),
            g.viewport(q.copy(te).multiplyScalar(Q).floor())
        }
        ,
        this.getScissor = function(e) {
            return e.copy(ne)
        }
        ,
        this.setScissor = function(e, t, n, r) {
            e.isVector4 ? ne.set(e.x, e.y, e.z, e.w) : ne.set(e, t, n, r),
            g.scissor(K.copy(ne).multiplyScalar(Q).floor())
        }
        ,
        this.getScissorTest = function() {
            return re
        }
        ,
        this.setScissorTest = function(e) {
            g.setScissorTest(re = e)
        }
        ,
        this.setOpaqueSort = function(e) {
            $ = e
        }
        ,
        this.setTransparentSort = function(e) {
            ee = e
        }
        ,
        this.getClearColor = function() {
            return M.getClearColor()
        }
        ,
        this.setClearColor = function() {
            M.setClearColor.apply(M, arguments)
        }
        ,
        this.getClearAlpha = function() {
            return M.getClearAlpha()
        }
        ,
        this.setClearAlpha = function() {
            M.setClearAlpha.apply(M, arguments)
        }
        ,
        this.clear = function(e, t, n) {
            var r = 0;
            (void 0 === e || e) && (r |= 16384),
            (void 0 === t || t) && (r |= 256),
            (void 0 === n || n) && (r |= 1024),
            f.clear(r)
        }
        ,
        this.clearColor = function() {
            this.clear(!0, !1, !1)
        }
        ,
        this.clearDepth = function() {
            this.clear(!1, !0, !1)
        }
        ,
        this.clearStencil = function() {
            this.clear(!1, !1, !0)
        }
        ,
        this.dispose = function() {
            t.removeEventListener("webglcontextlost", ge, !1),
            t.removeEventListener("webglcontextrestored", ve, !1),
            T.dispose(),
            S.dispose(),
            y.dispose(),
            _.dispose(),
            fe.dispose(),
            _e.stop(),
            this.forceContextLoss()
        }
        ,
        this.renderBufferImmediate = function(e, t) {
            g.initAttributes();
            var n = y.get(e);
            e.hasPositions && !n.position && (n.position = f.createBuffer()),
            e.hasNormals && !n.normal && (n.normal = f.createBuffer()),
            e.hasUvs && !n.uv && (n.uv = f.createBuffer()),
            e.hasColors && !n.color && (n.color = f.createBuffer());
            var r = t.getAttributes();
            e.hasPositions && (f.bindBuffer(34962, n.position),
            f.bufferData(34962, e.positionArray, 35048),
            g.enableAttribute(r.position),
            f.vertexAttribPointer(r.position, 3, 5126, !1, 0, 0)),
            e.hasNormals && (f.bindBuffer(34962, n.normal),
            f.bufferData(34962, e.normalArray, 35048),
            g.enableAttribute(r.normal),
            f.vertexAttribPointer(r.normal, 3, 5126, !1, 0, 0)),
            e.hasUvs && (f.bindBuffer(34962, n.uv),
            f.bufferData(34962, e.uvArray, 35048),
            g.enableAttribute(r.uv),
            f.vertexAttribPointer(r.uv, 2, 5126, !1, 0, 0)),
            e.hasColors && (f.bindBuffer(34962, n.color),
            f.bufferData(34962, e.colorArray, 35048),
            g.enableAttribute(r.color),
            f.vertexAttribPointer(r.color, 3, 5126, !1, 0, 0)),
            g.disableUnusedAttributes(),
            f.drawArrays(4, 0, e.count),
            e.count = 0
        }
        ;
        var xe = new pe;
        this.renderBufferDirect = function(e, t, n, r, i, a) {
            null === t && (t = xe);
            var o = i.isMesh && i.matrixWorld.determinant() < 0
              , s = Ae(e, t, r, i);
            g.setMaterial(r, o);
            var l = !1;
            j.geometry === n.id && j.program === s.id && j.wireframe === (!0 === r.wireframe) || (j.geometry = n.id,
            j.program = s.id,
            j.wireframe = !0 === r.wireframe,
            l = !0),
            (r.morphTargets || r.morphNormals) && (A.update(i, n, r, s),
            l = !0);
            var u = n.index
              , c = n.attributes.position;
            if (null === u) {
                if (void 0 === c || 0 === c.count)
                    return
            } else if (0 === u.count)
                return;
            var h, d = 1;
            !0 === r.wireframe && (u = w.getWireframeAttribute(n),
            d = 2);
            var v = R;
            null !== u && (h = x.get(u),
            (v = P).setIndex(h)),
            l && (!function(e, t, n, r) {
                if (!1 === m.isWebGL2 && (e.isInstancedMesh || t.isInstancedBufferGeometry) && null === p.get("ANGLE_instanced_arrays"))
                    return;
                g.initAttributes();
                var i = t.attributes
                  , a = r.getAttributes()
                  , o = n.defaultAttributeValues;
                for (var s in a) {
                    var l = a[s];
                    if (l >= 0) {
                        var u = i[s];
                        if (void 0 !== u) {
                            var c = u.normalized
                              , h = u.itemSize;
                            if (void 0 === (E = x.get(u)))
                                continue;
                            var d = E.buffer
                              , v = E.type
                              , y = E.bytesPerElement;
                            if (u.isInterleavedBufferAttribute) {
                                var b = u.data
                                  , w = b.stride
                                  , _ = u.offset;
                                b && b.isInstancedInterleavedBuffer ? (g.enableAttributeAndDivisor(l, b.meshPerAttribute),
                                void 0 === t.maxInstancedCount && (t.maxInstancedCount = b.meshPerAttribute * b.count)) : g.enableAttribute(l),
                                f.bindBuffer(34962, d),
                                f.vertexAttribPointer(l, h, v, c, w * y, _ * y)
                            } else
                                u.isInstancedBufferAttribute ? (g.enableAttributeAndDivisor(l, u.meshPerAttribute),
                                void 0 === t.maxInstancedCount && (t.maxInstancedCount = u.meshPerAttribute * u.count)) : g.enableAttribute(l),
                                f.bindBuffer(34962, d),
                                f.vertexAttribPointer(l, h, v, c, 0, 0)
                        } else if ("instanceMatrix" === s) {
                            var E;
                            if (void 0 === (E = x.get(e.instanceMatrix)))
                                continue;
                            d = E.buffer,
                            v = E.type;
                            g.enableAttributeAndDivisor(l + 0, 1),
                            g.enableAttributeAndDivisor(l + 1, 1),
                            g.enableAttributeAndDivisor(l + 2, 1),
                            g.enableAttributeAndDivisor(l + 3, 1),
                            f.bindBuffer(34962, d),
                            f.vertexAttribPointer(l + 0, 4, v, !1, 64, 0),
                            f.vertexAttribPointer(l + 1, 4, v, !1, 64, 16),
                            f.vertexAttribPointer(l + 2, 4, v, !1, 64, 32),
                            f.vertexAttribPointer(l + 3, 4, v, !1, 64, 48)
                        } else if (void 0 !== o) {
                            var T = o[s];
                            if (void 0 !== T)
                                switch (T.length) {
                                case 2:
                                    f.vertexAttrib2fv(l, T);
                                    break;
                                case 3:
                                    f.vertexAttrib3fv(l, T);
                                    break;
                                case 4:
                                    f.vertexAttrib4fv(l, T);
                                    break;
                                default:
                                    f.vertexAttrib1fv(l, T)
                                }
                        }
                    }
                }
                g.disableUnusedAttributes()
            }(i, n, r, s),
            null !== u && f.bindBuffer(34963, h.buffer));
            var y = null !== u ? u.count : c.count
              , b = n.drawRange.start * d
              , _ = n.drawRange.count * d
              , E = null !== a ? a.start * d : 0
              , T = null !== a ? a.count * d : 1 / 0
              , S = Math.max(b, E)
              , M = Math.min(y, b + _, E + T) - 1
              , L = Math.max(0, M - S + 1);
            if (0 !== L) {
                if (i.isMesh)
                    !0 === r.wireframe ? (g.setLineWidth(r.wireframeLinewidth * ce()),
                    v.setMode(1)) : v.setMode(4);
                else if (i.isLine) {
                    var C = r.linewidth;
                    void 0 === C && (C = 1),
                    g.setLineWidth(C * ce()),
                    i.isLineSegments ? v.setMode(1) : i.isLineLoop ? v.setMode(2) : v.setMode(3)
                } else
                    i.isPoints ? v.setMode(0) : i.isSprite && v.setMode(4);
                i.isInstancedMesh ? v.renderInstances(n, S, L, i.count) : n.isInstancedBufferGeometry ? v.renderInstances(n, S, L, n.maxInstancedCount) : v.render(S, L)
            }
        }
        ,
        this.compile = function(e, t) {
            (d = S.get(e, t)).init(),
            e.traverse((function(e) {
                e.isLight && (d.pushLight(e),
                e.castShadow && d.pushShadow(e))
            }
            )),
            d.setupLights(t);
            var n = {};
            e.traverse((function(t) {
                if (t.material)
                    if (Array.isArray(t.material))
                        for (var r = 0; r < t.material.length; r++)
                            t.material[r].uuid in n == !1 && (Me(t.material[r], e, t),
                            n[t.material[r].uuid] = !0);
                    else
                        t.material.uuid in n == !1 && (Me(t.material, e, t),
                        n[t.material.uuid] = !0)
            }
            ))
        }
        ;
        var we = null;
        var _e = new bn;
        function Ee(e, t, n, r) {
            if (!1 !== e.visible) {
                if (e.layers.test(t.layers))
                    if (e.isGroup)
                        n = e.renderOrder;
                    else if (e.isLOD)
                        !0 === e.autoUpdate && e.update(t);
                    else if (e.isLight)
                        d.pushLight(e),
                        e.castShadow && d.pushShadow(e);
                    else if (e.isSprite) {
                        if (!e.frustumCulled || ie.intersectsSprite(e)) {
                            r && ue.setFromMatrixPosition(e.matrixWorld).applyMatrix4(le);
                            var i = _.update(e);
                            (a = e.material).visible && h.push(e, i, a, n, ue.z, null)
                        }
                    } else if (e.isImmediateRenderObject)
                        r && ue.setFromMatrixPosition(e.matrixWorld).applyMatrix4(le),
                        h.push(e, null, e.material, n, ue.z, null);
                    else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.frame !== v.render.frame && (e.skeleton.update(),
                    e.skeleton.frame = v.render.frame),
                    !e.frustumCulled || ie.intersectsObject(e))) {
                        r && ue.setFromMatrixPosition(e.matrixWorld).applyMatrix4(le);
                        i = _.update(e);
                        var a = e.material;
                        if (Array.isArray(a))
                            for (var o = i.groups, s = 0, l = o.length; s < l; s++) {
                                var u = o[s]
                                  , c = a[u.materialIndex];
                                c && c.visible && h.push(e, i, c, n, ue.z, u)
                            }
                        else
                            a.visible && h.push(e, i, a, n, ue.z, null)
                    }
                var f = e.children;
                for (s = 0,
                l = f.length; s < l; s++)
                    Ee(f[s], t, n, r)
            }
        }
        function Te(e, t, n, r) {
            for (var i = 0, a = e.length; i < a; i++) {
                var o = e[i]
                  , s = o.object
                  , l = o.geometry
                  , u = void 0 === r ? o.material : r
                  , c = o.group;
                if (n.isArrayCamera) {
                    W = n;
                    for (var h = n.cameras, f = 0, p = h.length; f < p; f++) {
                        var m = h[f];
                        s.layers.test(m.layers) && (g.viewport(q.copy(m.viewport)),
                        d.setupLights(m),
                        Se(s, t, m, l, u, c))
                    }
                } else
                    W = null,
                    Se(s, t, n, l, u, c)
            }
        }
        function Se(e, t, n, r, i, a) {
            if (e.onBeforeRender(k, t, n, r, i, a),
            d = S.get(t, W || n),
            e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, e.matrixWorld),
            e.normalMatrix.getNormalMatrix(e.modelViewMatrix),
            e.isImmediateRenderObject) {
                var o = Ae(n, t, i, e);
                g.setMaterial(i),
                j.geometry = null,
                j.program = null,
                j.wireframe = !1,
                function(e, t) {
                    e.render((function(e) {
                        k.renderBufferImmediate(e, t)
                    }
                    ))
                }(e, o)
            } else
                k.renderBufferDirect(n, t, r, i, e, a);
            e.onAfterRender(k, t, n, r, i, a),
            d = S.get(t, W || n)
        }
        function Me(e, t, n) {
            var r = y.get(e)
              , i = d.state.lights
              , a = d.state.shadowsArray
              , o = i.state.version
              , s = E.getParameters(e, i.state, a, t, ae.numPlanes, ae.numIntersection, n)
              , l = E.getProgramCacheKey(s)
              , u = r.program
              , c = !0;
            if (void 0 === u)
                e.addEventListener("dispose", ye);
            else if (u.cacheKey !== l)
                be(e);
            else if (r.lightsStateVersion !== o)
                r.lightsStateVersion = o,
                c = !1;
            else {
                if (void 0 !== s.shaderID)
                    return;
                c = !1
            }
            c && (u = E.acquireProgram(s, l),
            r.program = u,
            r.uniforms = s.uniforms,
            r.environment = e.isMeshStandardMaterial ? t.environment : null,
            r.outputEncoding = k.outputEncoding,
            e.program = u);
            var h = u.getAttributes();
            if (e.morphTargets) {
                e.numSupportedMorphTargets = 0;
                for (var f = 0; f < k.maxMorphTargets; f++)
                    h["morphTarget" + f] >= 0 && e.numSupportedMorphTargets++
            }
            if (e.morphNormals) {
                e.numSupportedMorphNormals = 0;
                for (f = 0; f < k.maxMorphNormals; f++)
                    h["morphNormal" + f] >= 0 && e.numSupportedMorphNormals++
            }
            var p = r.uniforms;
            (e.isShaderMaterial || e.isRawShaderMaterial) && !0 !== e.clipping || (r.numClippingPlanes = ae.numPlanes,
            r.numIntersection = ae.numIntersection,
            p.clippingPlanes = ae.uniform),
            r.fog = t.fog,
            r.needsLights = function(e) {
                return e.isMeshLambertMaterial || e.isMeshToonMaterial || e.isMeshPhongMaterial || e.isMeshStandardMaterial || e.isShadowMaterial || e.isShaderMaterial && !0 === e.lights
            }(e),
            r.lightsStateVersion = o,
            r.needsLights && (p.ambientLightColor.value = i.state.ambient,
            p.lightProbe.value = i.state.probe,
            p.directionalLights.value = i.state.directional,
            p.directionalLightShadows.value = i.state.directionalShadow,
            p.spotLights.value = i.state.spot,
            p.spotLightShadows.value = i.state.spotShadow,
            p.rectAreaLights.value = i.state.rectArea,
            p.pointLights.value = i.state.point,
            p.pointLightShadows.value = i.state.pointShadow,
            p.hemisphereLights.value = i.state.hemi,
            p.directionalShadowMap.value = i.state.directionalShadowMap,
            p.directionalShadowMatrix.value = i.state.directionalShadowMatrix,
            p.spotShadowMap.value = i.state.spotShadowMap,
            p.spotShadowMatrix.value = i.state.spotShadowMatrix,
            p.pointShadowMap.value = i.state.pointShadowMap,
            p.pointShadowMatrix.value = i.state.pointShadowMatrix);
            var m = r.program.getUniforms()
              , g = kr.seqWithValue(m.seq, p);
            r.uniformsList = g
        }
        function Ae(e, t, n, r) {
            b.resetTextureUnits();
            var i = t.fog
              , a = n.isMeshStandardMaterial ? t.environment : null
              , o = y.get(n)
              , s = d.state.lights;
            if (oe && (se || e !== V)) {
                var l = e === V && n.id === H;
                ae.setState(n.clippingPlanes, n.clipIntersection, n.clipShadows, e, o, l)
            }
            n.version === o.__version ? void 0 === o.program || n.fog && o.fog !== i || o.environment !== a || o.needsLights && o.lightsStateVersion !== s.state.version ? Me(n, t, r) : void 0 === o.numClippingPlanes || o.numClippingPlanes === ae.numPlanes && o.numIntersection === ae.numIntersection ? o.outputEncoding !== k.outputEncoding && Me(n, t, r) : Me(n, t, r) : (Me(n, t, r),
            o.__version = n.version);
            var u, c, h = !1, p = !1, v = !1, x = o.program, w = x.getUniforms(), _ = o.uniforms;
            if (g.useProgram(x.program) && (h = !0,
            p = !0,
            v = !0),
            n.id !== H && (H = n.id,
            p = !0),
            h || V !== e) {
                if (w.setValue(f, "projectionMatrix", e.projectionMatrix),
                m.logarithmicDepthBuffer && w.setValue(f, "logDepthBufFC", 2 / (Math.log(e.far + 1) / Math.LN2)),
                V !== e && (V = e,
                p = !0,
                v = !0),
                n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshStandardMaterial || n.envMap) {
                    var E = w.map.cameraPosition;
                    void 0 !== E && E.setValue(f, ue.setFromMatrixPosition(e.matrixWorld))
                }
                (n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial) && w.setValue(f, "isOrthographic", !0 === e.isOrthographicCamera),
                (n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.skinning) && w.setValue(f, "viewMatrix", e.matrixWorldInverse)
            }
            if (n.skinning) {
                w.setOptional(f, r, "bindMatrix"),
                w.setOptional(f, r, "bindMatrixInverse");
                var T = r.skeleton;
                if (T) {
                    var S = T.bones;
                    if (m.floatVertexTextures) {
                        if (void 0 === T.boneTexture) {
                            var M = Math.sqrt(4 * S.length);
                            M = L.ceilPowerOfTwo(M),
                            M = Math.max(M, 4);
                            var A = new Float32Array(M * M * 4);
                            A.set(T.boneMatrices);
                            var R = new pn(A,M,M,1023,1015);
                            T.boneMatrices = A,
                            T.boneTexture = R,
                            T.boneTextureSize = M
                        }
                        w.setValue(f, "boneTexture", T.boneTexture, b),
                        w.setValue(f, "boneTextureSize", T.boneTextureSize)
                    } else
                        w.setOptional(f, T, "boneMatrices")
                }
            }
            return (p || o.receiveShadow !== r.receiveShadow) && (o.receiveShadow = r.receiveShadow,
            w.setValue(f, "receiveShadow", r.receiveShadow)),
            p && (w.setValue(f, "toneMappingExposure", k.toneMappingExposure),
            w.setValue(f, "toneMappingWhitePoint", k.toneMappingWhitePoint),
            o.needsLights && (c = v,
            (u = _).ambientLightColor.needsUpdate = c,
            u.lightProbe.needsUpdate = c,
            u.directionalLights.needsUpdate = c,
            u.directionalLightShadows.needsUpdate = c,
            u.pointLights.needsUpdate = c,
            u.pointLightShadows.needsUpdate = c,
            u.spotLights.needsUpdate = c,
            u.spotLightShadows.needsUpdate = c,
            u.rectAreaLights.needsUpdate = c,
            u.hemisphereLights.needsUpdate = c),
            i && n.fog && function(e, t) {
                e.fogColor.value.copy(t.color),
                t.isFog ? (e.fogNear.value = t.near,
                e.fogFar.value = t.far) : t.isFogExp2 && (e.fogDensity.value = t.density)
            }(_, i),
            n.isMeshBasicMaterial ? Re(_, n) : n.isMeshLambertMaterial ? (Re(_, n),
            function(e, t) {
                t.emissiveMap && (e.emissiveMap.value = t.emissiveMap)
            }(_, n)) : n.isMeshToonMaterial ? (Re(_, n),
            function(e, t) {
                e.specular.value.copy(t.specular),
                e.shininess.value = Math.max(t.shininess, 1e-4),
                t.gradientMap && (e.gradientMap.value = t.gradientMap);
                t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
                t.bumpMap && (e.bumpMap.value = t.bumpMap,
                e.bumpScale.value = t.bumpScale,
                1 === t.side && (e.bumpScale.value *= -1));
                t.normalMap && (e.normalMap.value = t.normalMap,
                e.normalScale.value.copy(t.normalScale),
                1 === t.side && e.normalScale.value.negate());
                t.displacementMap && (e.displacementMap.value = t.displacementMap,
                e.displacementScale.value = t.displacementScale,
                e.displacementBias.value = t.displacementBias)
            }(_, n)) : n.isMeshPhongMaterial ? (Re(_, n),
            function(e, t) {
                e.specular.value.copy(t.specular),
                e.shininess.value = Math.max(t.shininess, 1e-4),
                t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
                t.bumpMap && (e.bumpMap.value = t.bumpMap,
                e.bumpScale.value = t.bumpScale,
                1 === t.side && (e.bumpScale.value *= -1));
                t.normalMap && (e.normalMap.value = t.normalMap,
                e.normalScale.value.copy(t.normalScale),
                1 === t.side && e.normalScale.value.negate());
                t.displacementMap && (e.displacementMap.value = t.displacementMap,
                e.displacementScale.value = t.displacementScale,
                e.displacementBias.value = t.displacementBias)
            }(_, n)) : n.isMeshStandardMaterial ? (Re(_, n, a),
            n.isMeshPhysicalMaterial ? function(e, t, n) {
                Le(e, t, n),
                e.reflectivity.value = t.reflectivity,
                e.clearcoat.value = t.clearcoat,
                e.clearcoatRoughness.value = t.clearcoatRoughness,
                t.sheen && e.sheen.value.copy(t.sheen);
                t.clearcoatMap && (e.clearcoatMap.value = t.clearcoatMap);
                t.clearcoatRoughnessMap && (e.clearcoatRoughnessMap.value = t.clearcoatRoughnessMap);
                t.clearcoatNormalMap && (e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),
                e.clearcoatNormalMap.value = t.clearcoatNormalMap,
                1 === t.side && e.clearcoatNormalScale.value.negate());
                e.transparency.value = t.transparency
            }(_, n, a) : Le(_, n, a)) : n.isMeshMatcapMaterial ? (Re(_, n),
            function(e, t) {
                t.matcap && (e.matcap.value = t.matcap);
                t.bumpMap && (e.bumpMap.value = t.bumpMap,
                e.bumpScale.value = t.bumpScale,
                1 === t.side && (e.bumpScale.value *= -1));
                t.normalMap && (e.normalMap.value = t.normalMap,
                e.normalScale.value.copy(t.normalScale),
                1 === t.side && e.normalScale.value.negate());
                t.displacementMap && (e.displacementMap.value = t.displacementMap,
                e.displacementScale.value = t.displacementScale,
                e.displacementBias.value = t.displacementBias)
            }(_, n)) : n.isMeshDepthMaterial ? (Re(_, n),
            function(e, t) {
                t.displacementMap && (e.displacementMap.value = t.displacementMap,
                e.displacementScale.value = t.displacementScale,
                e.displacementBias.value = t.displacementBias)
            }(_, n)) : n.isMeshDistanceMaterial ? (Re(_, n),
            function(e, t) {
                t.displacementMap && (e.displacementMap.value = t.displacementMap,
                e.displacementScale.value = t.displacementScale,
                e.displacementBias.value = t.displacementBias);
                e.referencePosition.value.copy(t.referencePosition),
                e.nearDistance.value = t.nearDistance,
                e.farDistance.value = t.farDistance
            }(_, n)) : n.isMeshNormalMaterial ? (Re(_, n),
            function(e, t) {
                t.bumpMap && (e.bumpMap.value = t.bumpMap,
                e.bumpScale.value = t.bumpScale,
                1 === t.side && (e.bumpScale.value *= -1));
                t.normalMap && (e.normalMap.value = t.normalMap,
                e.normalScale.value.copy(t.normalScale),
                1 === t.side && e.normalScale.value.negate());
                t.displacementMap && (e.displacementMap.value = t.displacementMap,
                e.displacementScale.value = t.displacementScale,
                e.displacementBias.value = t.displacementBias)
            }(_, n)) : n.isLineBasicMaterial ? (function(e, t) {
                e.diffuse.value.copy(t.color),
                e.opacity.value = t.opacity
            }(_, n),
            n.isLineDashedMaterial && function(e, t) {
                e.dashSize.value = t.dashSize,
                e.totalSize.value = t.dashSize + t.gapSize,
                e.scale.value = t.scale
            }(_, n)) : n.isPointsMaterial ? function(e, t) {
                e.diffuse.value.copy(t.color),
                e.opacity.value = t.opacity,
                e.size.value = t.size * Q,
                e.scale.value = .5 * J,
                t.map && (e.map.value = t.map);
                t.alphaMap && (e.alphaMap.value = t.alphaMap);
                var n;
                t.map ? n = t.map : t.alphaMap && (n = t.alphaMap);
                void 0 !== n && (!0 === n.matrixAutoUpdate && n.updateMatrix(),
                e.uvTransform.value.copy(n.matrix))
            }(_, n) : n.isSpriteMaterial ? function(e, t) {
                e.diffuse.value.copy(t.color),
                e.opacity.value = t.opacity,
                e.rotation.value = t.rotation,
                t.map && (e.map.value = t.map);
                t.alphaMap && (e.alphaMap.value = t.alphaMap);
                var n;
                t.map ? n = t.map : t.alphaMap && (n = t.alphaMap);
                void 0 !== n && (!0 === n.matrixAutoUpdate && n.updateMatrix(),
                e.uvTransform.value.copy(n.matrix))
            }(_, n) : n.isShadowMaterial && (_.color.value.copy(n.color),
            _.opacity.value = n.opacity),
            void 0 !== _.ltc_1 && (_.ltc_1.value = yn.LTC_1),
            void 0 !== _.ltc_2 && (_.ltc_2.value = yn.LTC_2),
            kr.upload(f, o.uniformsList, _, b),
            n.isShaderMaterial && (n.uniformsNeedUpdate = !1)),
            n.isShaderMaterial && !0 === n.uniformsNeedUpdate && (kr.upload(f, o.uniformsList, _, b),
            n.uniformsNeedUpdate = !1),
            n.isSpriteMaterial && w.setValue(f, "center", r.center),
            w.setValue(f, "modelViewMatrix", r.modelViewMatrix),
            w.setValue(f, "normalMatrix", r.normalMatrix),
            w.setValue(f, "modelMatrix", r.matrixWorld),
            x
        }
        function Re(e, t, n) {
            e.opacity.value = t.opacity,
            t.color && e.diffuse.value.copy(t.color),
            t.emissive && e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),
            t.map && (e.map.value = t.map),
            t.alphaMap && (e.alphaMap.value = t.alphaMap),
            t.specularMap && (e.specularMap.value = t.specularMap);
            var r, i, a = t.envMap || n;
            a && (e.envMap.value = a,
            e.flipEnvMap.value = a.isCubeTexture ? -1 : 1,
            e.reflectivity.value = t.reflectivity,
            e.refractionRatio.value = t.refractionRatio,
            e.maxMipLevel.value = y.get(a).__maxMipLevel),
            t.lightMap && (e.lightMap.value = t.lightMap,
            e.lightMapIntensity.value = t.lightMapIntensity),
            t.aoMap && (e.aoMap.value = t.aoMap,
            e.aoMapIntensity.value = t.aoMapIntensity),
            t.map ? r = t.map : t.specularMap ? r = t.specularMap : t.displacementMap ? r = t.displacementMap : t.normalMap ? r = t.normalMap : t.bumpMap ? r = t.bumpMap : t.roughnessMap ? r = t.roughnessMap : t.metalnessMap ? r = t.metalnessMap : t.alphaMap ? r = t.alphaMap : t.emissiveMap && (r = t.emissiveMap),
            void 0 !== r && (r.isWebGLRenderTarget && (r = r.texture),
            !0 === r.matrixAutoUpdate && r.updateMatrix(),
            e.uvTransform.value.copy(r.matrix)),
            t.aoMap ? i = t.aoMap : t.lightMap && (i = t.lightMap),
            void 0 !== i && (i.isWebGLRenderTarget && (i = i.texture),
            !0 === i.matrixAutoUpdate && i.updateMatrix(),
            e.uv2Transform.value.copy(i.matrix))
        }
        function Le(e, t, n) {
            e.roughness.value = t.roughness,
            e.metalness.value = t.metalness,
            t.roughnessMap && (e.roughnessMap.value = t.roughnessMap),
            t.metalnessMap && (e.metalnessMap.value = t.metalnessMap),
            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
            t.bumpMap && (e.bumpMap.value = t.bumpMap,
            e.bumpScale.value = t.bumpScale,
            1 === t.side && (e.bumpScale.value *= -1)),
            t.normalMap && (e.normalMap.value = t.normalMap,
            e.normalScale.value.copy(t.normalScale),
            1 === t.side && e.normalScale.value.negate()),
            t.displacementMap && (e.displacementMap.value = t.displacementMap,
            e.displacementScale.value = t.displacementScale,
            e.displacementBias.value = t.displacementBias),
            (t.envMap || n) && (e.envMapIntensity.value = t.envMapIntensity)
        }
        _e.setAnimationLoop((function(e) {
            fe.isPresenting || we && we(e)
        }
        )),
        "undefined" != typeof window && _e.setContext(window),
        this.setAnimationLoop = function(e) {
            we = e,
            fe.setAnimationLoop(e),
            _e.start()
        }
        ,
        this.render = function(e, t) {
            var n, r;
            if (void 0 !== arguments[2] && (console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),
            n = arguments[2]),
            void 0 !== arguments[3] && (console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),
            r = arguments[3]),
            t && t.isCamera) {
                if (!D) {
                    j.geometry = null,
                    j.program = null,
                    j.wireframe = !1,
                    H = -1,
                    V = null,
                    !0 === e.autoUpdate && e.updateMatrixWorld(),
                    null === t.parent && t.updateMatrixWorld(),
                    fe.enabled && fe.isPresenting && (t = fe.getCamera(t)),
                    (d = S.get(e, t)).init(),
                    e.onBeforeRender(k, e, t, n || B),
                    le.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
                    ie.setFromProjectionMatrix(le),
                    se = this.localClippingEnabled,
                    oe = ae.init(this.clippingPlanes, se, t),
                    (h = T.get(e, t)).init(),
                    Ee(e, t, 0, k.sortObjects),
                    h.finish(),
                    !0 === k.sortObjects && h.sort($, ee),
                    oe && ae.beginShadows();
                    var i = d.state.shadowsArray;
                    me.render(i, e, t),
                    d.setupLights(t),
                    oe && ae.endShadows(),
                    this.info.autoReset && this.info.reset(),
                    void 0 !== n && this.setRenderTarget(n),
                    M.render(h, e, t, r);
                    var a = h.opaque
                      , o = h.transparent;
                    if (e.overrideMaterial) {
                        var s = e.overrideMaterial;
                        a.length && Te(a, e, t, s),
                        o.length && Te(o, e, t, s)
                    } else
                        a.length && Te(a, e, t),
                        o.length && Te(o, e, t);
                    e.onAfterRender(k, e, t),
                    null !== B && (b.updateRenderTargetMipmap(B),
                    b.updateMultisampleRenderTarget(B)),
                    g.buffers.depth.setTest(!0),
                    g.buffers.depth.setMask(!0),
                    g.buffers.color.setMask(!0),
                    g.setPolygonOffset(!1),
                    h = null,
                    d = null
                }
            } else
                console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")
        }
        ,
        this.setFramebuffer = function(e) {
            N !== e && null === B && f.bindFramebuffer(36160, e),
            N = e
        }
        ,
        this.getActiveCubeFace = function() {
            return F
        }
        ,
        this.getActiveMipmapLevel = function() {
            return U
        }
        ,
        this.getRenderTarget = function() {
            return B
        }
        ,
        this.setRenderTarget = function(e, t, n) {
            B = e,
            F = t,
            U = n,
            e && void 0 === y.get(e).__webglFramebuffer && b.setupRenderTarget(e);
            var r = N
              , i = !1;
            if (e) {
                var a = y.get(e).__webglFramebuffer;
                e.isWebGLCubeRenderTarget ? (r = a[t || 0],
                i = !0) : r = e.isWebGLMultisampleRenderTarget ? y.get(e).__webglMultisampledFramebuffer : a,
                q.copy(e.viewport),
                K.copy(e.scissor),
                Y = e.scissorTest
            } else
                q.copy(te).multiplyScalar(Q).floor(),
                K.copy(ne).multiplyScalar(Q).floor(),
                Y = re;
            if (z !== r && (f.bindFramebuffer(36160, r),
            z = r),
            g.viewport(q),
            g.scissor(K),
            g.setScissorTest(Y),
            i) {
                var o = y.get(e.texture);
                f.framebufferTexture2D(36160, 36064, 34069 + (t || 0), o.__webglTexture, n || 0)
            }
        }
        ,
        this.readRenderTargetPixels = function(e, t, n, r, i, a, o) {
            if (e && e.isWebGLRenderTarget) {
                var s = y.get(e).__webglFramebuffer;
                if (e.isWebGLCubeRenderTarget && void 0 !== o && (s = s[o]),
                s) {
                    var l = !1;
                    s !== z && (f.bindFramebuffer(36160, s),
                    l = !0);
                    try {
                        var u = e.texture
                          , c = u.format
                          , h = u.type;
                        if (1023 !== c && O.convert(c) !== f.getParameter(35739))
                            return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                        if (!(1009 === h || O.convert(h) === f.getParameter(35738) || 1015 === h && (m.isWebGL2 || p.get("OES_texture_float") || p.get("WEBGL_color_buffer_float")) || 1016 === h && (m.isWebGL2 ? p.get("EXT_color_buffer_float") : p.get("EXT_color_buffer_half_float"))))
                            return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                        36053 === f.checkFramebufferStatus(36160) ? t >= 0 && t <= e.width - r && n >= 0 && n <= e.height - i && f.readPixels(t, n, r, i, O.convert(c), O.convert(h), a) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                    } finally {
                        l && f.bindFramebuffer(36160, z)
                    }
                }
            } else
                console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")
        }
        ,
        this.copyFramebufferToTexture = function(e, t, n) {
            void 0 === n && (n = 0);
            var r = Math.pow(2, -n)
              , i = Math.floor(t.image.width * r)
              , a = Math.floor(t.image.height * r)
              , o = O.convert(t.format);
            b.setTexture2D(t, 0),
            f.copyTexImage2D(3553, n, o, e.x, e.y, i, a, 0),
            g.unbindTexture()
        }
        ,
        this.copyTextureToTexture = function(e, t, n, r) {
            var i = t.image.width
              , a = t.image.height
              , o = O.convert(n.format)
              , s = O.convert(n.type);
            b.setTexture2D(n, 0),
            t.isDataTexture ? f.texSubImage2D(3553, r || 0, e.x, e.y, i, a, o, s, t.image.data) : f.texSubImage2D(3553, r || 0, e.x, e.y, o, s, t.image),
            g.unbindTexture()
        }
        ,
        this.initTexture = function(e) {
            b.setTexture2D(e, 0),
            g.unbindTexture()
        }
        ,
        "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{
            detail: this
        }))
    }
    function wi(e, t) {
        this.name = "",
        this.color = new it(e),
        this.density = void 0 !== t ? t : 25e-5
    }
    function _i(e, t, n) {
        this.name = "",
        this.color = new it(e),
        this.near = void 0 !== t ? t : 1,
        this.far = void 0 !== n ? n : 1e3
    }
    function Ei(e, t) {
        this.array = e,
        this.stride = t,
        this.count = void 0 !== e ? e.length / t : 0,
        this.usage = 35044,
        this.updateRange = {
            offset: 0,
            count: -1
        },
        this.version = 0
    }
    vi.prototype = Object.assign(Object.create(hn.prototype), {
        constructor: vi,
        isArrayCamera: !0
    }),
    yi.prototype = Object.assign(Object.create(fe.prototype), {
        constructor: yi,
        isGroup: !0
    }),
    Object.assign(bi.prototype, S.prototype),
    Object.assign(wi.prototype, {
        isFogExp2: !0,
        clone: function() {
            return new wi(this.color,this.density)
        },
        toJSON: function() {
            return {
                type: "FogExp2",
                color: this.color.getHex(),
                density: this.density
            }
        }
    }),
    Object.assign(_i.prototype, {
        isFog: !0,
        clone: function() {
            return new _i(this.color,this.near,this.far)
        },
        toJSON: function() {
            return {
                type: "Fog",
                color: this.color.getHex(),
                near: this.near,
                far: this.far
            }
        }
    }),
    Object.defineProperty(Ei.prototype, "needsUpdate", {
        set: function(e) {
            !0 === e && this.version++
        }
    }),
    Object.assign(Ei.prototype, {
        isInterleavedBuffer: !0,
        onUploadCallback: function() {},
        setUsage: function(e) {
            return this.usage = e,
            this
        },
        copy: function(e) {
            return this.array = new e.array.constructor(e.array),
            this.count = e.count,
            this.stride = e.stride,
            this.usage = e.usage,
            this
        },
        copyAt: function(e, t, n) {
            e *= this.stride,
            n *= t.stride;
            for (var r = 0, i = this.stride; r < i; r++)
                this.array[e + r] = t.array[n + r];
            return this
        },
        set: function(e, t) {
            return void 0 === t && (t = 0),
            this.array.set(e, t),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        onUpload: function(e) {
            return this.onUploadCallback = e,
            this
        }
    });
    var Ti, Si = new G;
    function Mi(e, t, n, r) {
        this.data = e,
        this.itemSize = t,
        this.offset = n,
        this.normalized = !0 === r
    }
    function Ai(e) {
        ct.call(this),
        this.type = "SpriteMaterial",
        this.color = new it(16777215),
        this.map = null,
        this.alphaMap = null,
        this.rotation = 0,
        this.sizeAttenuation = !0,
        this.transparent = !0,
        this.setValues(e)
    }
    Object.defineProperties(Mi.prototype, {
        count: {
            get: function() {
                return this.data.count
            }
        },
        array: {
            get: function() {
                return this.data.array
            }
        }
    }),
    Object.assign(Mi.prototype, {
        isInterleavedBufferAttribute: !0,
        applyMatrix4: function(e) {
            for (var t = 0, n = this.data.count; t < n; t++)
                Si.x = this.getX(t),
                Si.y = this.getY(t),
                Si.z = this.getZ(t),
                Si.applyMatrix4(e),
                this.setXYZ(t, Si.x, Si.y, Si.z);
            return this
        },
        setX: function(e, t) {
            return this.data.array[e * this.data.stride + this.offset] = t,
            this
        },
        setY: function(e, t) {
            return this.data.array[e * this.data.stride + this.offset + 1] = t,
            this
        },
        setZ: function(e, t) {
            return this.data.array[e * this.data.stride + this.offset + 2] = t,
            this
        },
        setW: function(e, t) {
            return this.data.array[e * this.data.stride + this.offset + 3] = t,
            this
        },
        getX: function(e) {
            return this.data.array[e * this.data.stride + this.offset]
        },
        getY: function(e) {
            return this.data.array[e * this.data.stride + this.offset + 1]
        },
        getZ: function(e) {
            return this.data.array[e * this.data.stride + this.offset + 2]
        },
        getW: function(e) {
            return this.data.array[e * this.data.stride + this.offset + 3]
        },
        setXY: function(e, t, n) {
            return e = e * this.data.stride + this.offset,
            this.data.array[e + 0] = t,
            this.data.array[e + 1] = n,
            this
        },
        setXYZ: function(e, t, n, r) {
            return e = e * this.data.stride + this.offset,
            this.data.array[e + 0] = t,
            this.data.array[e + 1] = n,
            this.data.array[e + 2] = r,
            this
        },
        setXYZW: function(e, t, n, r, i) {
            return e = e * this.data.stride + this.offset,
            this.data.array[e + 0] = t,
            this.data.array[e + 1] = n,
            this.data.array[e + 2] = r,
            this.data.array[e + 3] = i,
            this
        }
    }),
    Ai.prototype = Object.create(ct.prototype),
    Ai.prototype.constructor = Ai,
    Ai.prototype.isSpriteMaterial = !0,
    Ai.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.map = e.map,
        this.alphaMap = e.alphaMap,
        this.rotation = e.rotation,
        this.sizeAttenuation = e.sizeAttenuation,
        this
    }
    ;
    var Ri = new G
      , Li = new G
      , Ci = new G
      , Pi = new C
      , Oi = new C
      , ki = new X
      , Di = new G
      , Ii = new G
      , Ni = new G
      , Fi = new C
      , Ui = new C
      , Bi = new C;
    function zi(e) {
        if (fe.call(this),
        this.type = "Sprite",
        void 0 === Ti) {
            Ti = new Ot;
            var t = new Ei(new Float32Array([-.5, -.5, 0, 0, 0, .5, -.5, 0, 1, 0, .5, .5, 0, 1, 1, -.5, .5, 0, 0, 1]),5);
            Ti.setIndex([0, 1, 2, 0, 2, 3]),
            Ti.setAttribute("position", new Mi(t,3,0,!1)),
            Ti.setAttribute("uv", new Mi(t,2,3,!1))
        }
        this.geometry = Ti,
        this.material = void 0 !== e ? e : new Ai,
        this.center = new C(.5,.5)
    }
    function Gi(e, t, n, r, i, a) {
        Pi.subVectors(e, n).addScalar(.5).multiply(r),
        void 0 !== i ? (Oi.x = a * Pi.x - i * Pi.y,
        Oi.y = i * Pi.x + a * Pi.y) : Oi.copy(Pi),
        e.copy(t),
        e.x += Oi.x,
        e.y += Oi.y,
        e.applyMatrix4(ki)
    }
    zi.prototype = Object.assign(Object.create(fe.prototype), {
        constructor: zi,
        isSprite: !0,
        raycast: function(e, t) {
            null === e.camera && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),
            Li.setFromMatrixScale(this.matrixWorld),
            ki.copy(e.camera.matrixWorld),
            this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld),
            Ci.setFromMatrixPosition(this.modelViewMatrix),
            e.camera.isPerspectiveCamera && !1 === this.material.sizeAttenuation && Li.multiplyScalar(-Ci.z);
            var n, r, i = this.material.rotation;
            0 !== i && (r = Math.cos(i),
            n = Math.sin(i));
            var a = this.center;
            Gi(Di.set(-.5, -.5, 0), Ci, a, Li, n, r),
            Gi(Ii.set(.5, -.5, 0), Ci, a, Li, n, r),
            Gi(Ni.set(.5, .5, 0), Ci, a, Li, n, r),
            Fi.set(0, 0),
            Ui.set(1, 0),
            Bi.set(1, 1);
            var o = e.ray.intersectTriangle(Di, Ii, Ni, !1, Ri);
            if (null !== o || (Gi(Ii.set(-.5, .5, 0), Ci, a, Li, n, r),
            Ui.set(0, 1),
            null !== (o = e.ray.intersectTriangle(Di, Ni, Ii, !1, Ri)))) {
                var s = e.ray.origin.distanceTo(Ri);
                s < e.near || s > e.far || t.push({
                    distance: s,
                    point: Ri.clone(),
                    uv: et.getUV(Ri, Di, Ii, Ni, Fi, Ui, Bi, new C),
                    face: null,
                    object: this
                })
            }
        },
        clone: function() {
            return new this.constructor(this.material).copy(this)
        },
        copy: function(e) {
            return fe.prototype.copy.call(this, e),
            void 0 !== e.center && this.center.copy(e.center),
            this
        }
    });
    var Hi = new G
      , ji = new G;
    function Vi() {
        fe.call(this),
        this._currentLevel = 0,
        this.type = "LOD",
        Object.defineProperties(this, {
            levels: {
                enumerable: !0,
                value: []
            }
        }),
        this.autoUpdate = !0
    }
    function Wi(e, t) {
        e && e.isGeometry && console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),
        Zt.call(this, e, t),
        this.type = "SkinnedMesh",
        this.bindMode = "attached",
        this.bindMatrix = new X,
        this.bindMatrixInverse = new X
    }
    Vi.prototype = Object.assign(Object.create(fe.prototype), {
        constructor: Vi,
        isLOD: !0,
        copy: function(e) {
            fe.prototype.copy.call(this, e, !1);
            for (var t = e.levels, n = 0, r = t.length; n < r; n++) {
                var i = t[n];
                this.addLevel(i.object.clone(), i.distance)
            }
            return this.autoUpdate = e.autoUpdate,
            this
        },
        addLevel: function(e, t) {
            void 0 === t && (t = 0),
            t = Math.abs(t);
            for (var n = this.levels, r = 0; r < n.length && !(t < n[r].distance); r++)
                ;
            return n.splice(r, 0, {
                distance: t,
                object: e
            }),
            this.add(e),
            this
        },
        getCurrentLevel: function() {
            return this._currentLevel
        },
        getObjectForDistance: function(e) {
            var t = this.levels;
            if (t.length > 0) {
                for (var n = 1, r = t.length; n < r && !(e < t[n].distance); n++)
                    ;
                return t[n - 1].object
            }
            return null
        },
        raycast: function(e, t) {
            if (this.levels.length > 0) {
                Hi.setFromMatrixPosition(this.matrixWorld);
                var n = e.ray.origin.distanceTo(Hi);
                this.getObjectForDistance(n).raycast(e, t)
            }
        },
        update: function(e) {
            var t = this.levels;
            if (t.length > 1) {
                Hi.setFromMatrixPosition(e.matrixWorld),
                ji.setFromMatrixPosition(this.matrixWorld);
                var n = Hi.distanceTo(ji) / e.zoom;
                t[0].object.visible = !0;
                for (var r = 1, i = t.length; r < i && n >= t[r].distance; r++)
                    t[r - 1].object.visible = !1,
                    t[r].object.visible = !0;
                for (this._currentLevel = r - 1; r < i; r++)
                    t[r].object.visible = !1
            }
        },
        toJSON: function(e) {
            var t = fe.prototype.toJSON.call(this, e);
            !1 === this.autoUpdate && (t.object.autoUpdate = !1),
            t.object.levels = [];
            for (var n = this.levels, r = 0, i = n.length; r < i; r++) {
                var a = n[r];
                t.object.levels.push({
                    object: a.object.uuid,
                    distance: a.distance
                })
            }
            return t
        }
    }),
    Wi.prototype = Object.assign(Object.create(Zt.prototype), {
        constructor: Wi,
        isSkinnedMesh: !0,
        bind: function(e, t) {
            this.skeleton = e,
            void 0 === t && (this.updateMatrixWorld(!0),
            this.skeleton.calculateInverses(),
            t = this.matrixWorld),
            this.bindMatrix.copy(t),
            this.bindMatrixInverse.getInverse(t)
        },
        pose: function() {
            this.skeleton.pose()
        },
        normalizeSkinWeights: function() {
            for (var e = new I, t = this.geometry.attributes.skinWeight, n = 0, r = t.count; n < r; n++) {
                e.x = t.getX(n),
                e.y = t.getY(n),
                e.z = t.getZ(n),
                e.w = t.getW(n);
                var i = 1 / e.manhattanLength();
                i !== 1 / 0 ? e.multiplyScalar(i) : e.set(1, 0, 0, 0),
                t.setXYZW(n, e.x, e.y, e.z, e.w)
            }
        },
        updateMatrixWorld: function(e) {
            Zt.prototype.updateMatrixWorld.call(this, e),
            "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode)
        },
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    });
    var qi = new X
      , Ki = new X;
    function Yi(e, t) {
        if (e = e || [],
        this.bones = e.slice(0),
        this.boneMatrices = new Float32Array(16 * this.bones.length),
        this.frame = -1,
        void 0 === t)
            this.calculateInverses();
        else if (this.bones.length === t.length)
            this.boneInverses = t.slice(0);
        else {
            console.warn("THREE.Skeleton boneInverses is the wrong length."),
            this.boneInverses = [];
            for (var n = 0, r = this.bones.length; n < r; n++)
                this.boneInverses.push(new X)
        }
    }
    function Xi() {
        fe.call(this),
        this.type = "Bone"
    }
    Object.assign(Yi.prototype, {
        calculateInverses: function() {
            this.boneInverses = [];
            for (var e = 0, t = this.bones.length; e < t; e++) {
                var n = new X;
                this.bones[e] && n.getInverse(this.bones[e].matrixWorld),
                this.boneInverses.push(n)
            }
        },
        pose: function() {
            var e, t, n;
            for (t = 0,
            n = this.bones.length; t < n; t++)
                (e = this.bones[t]) && e.matrixWorld.getInverse(this.boneInverses[t]);
            for (t = 0,
            n = this.bones.length; t < n; t++)
                (e = this.bones[t]) && (e.parent && e.parent.isBone ? (e.matrix.getInverse(e.parent.matrixWorld),
                e.matrix.multiply(e.matrixWorld)) : e.matrix.copy(e.matrixWorld),
                e.matrix.decompose(e.position, e.quaternion, e.scale))
        },
        update: function() {
            for (var e = this.bones, t = this.boneInverses, n = this.boneMatrices, r = this.boneTexture, i = 0, a = e.length; i < a; i++) {
                var o = e[i] ? e[i].matrixWorld : Ki;
                qi.multiplyMatrices(o, t[i]),
                qi.toArray(n, 16 * i)
            }
            void 0 !== r && (r.needsUpdate = !0)
        },
        clone: function() {
            return new Yi(this.bones,this.boneInverses)
        },
        getBoneByName: function(e) {
            for (var t = 0, n = this.bones.length; t < n; t++) {
                var r = this.bones[t];
                if (r.name === e)
                    return r
            }
        },
        dispose: function() {
            this.boneTexture && (this.boneTexture.dispose(),
            this.boneTexture = void 0)
        }
    }),
    Xi.prototype = Object.assign(Object.create(fe.prototype), {
        constructor: Xi,
        isBone: !0
    });
    var Zi = new X
      , Ji = new X
      , Qi = []
      , $i = new Zt;
    function ea(e, t, n) {
        Zt.call(this, e, t),
        this.instanceMatrix = new ft(new Float32Array(16 * n),16),
        this.count = n,
        this.frustumCulled = !1
    }
    function ta(e) {
        ct.call(this),
        this.type = "LineBasicMaterial",
        this.color = new it(16777215),
        this.linewidth = 1,
        this.linecap = "round",
        this.linejoin = "round",
        this.setValues(e)
    }
    ea.prototype = Object.assign(Object.create(Zt.prototype), {
        constructor: ea,
        isInstancedMesh: !0,
        getMatrixAt: function(e, t) {
            t.fromArray(this.instanceMatrix.array, 16 * e)
        },
        raycast: function(e, t) {
            var n = this.matrixWorld
              , r = this.count;
            if ($i.geometry = this.geometry,
            $i.material = this.material,
            void 0 !== $i.material)
                for (var i = 0; i < r; i++)
                    this.getMatrixAt(i, Zi),
                    Ji.multiplyMatrices(n, Zi),
                    $i.matrixWorld = Ji,
                    $i.raycast(e, Qi),
                    Qi.length > 0 && (Qi[0].instanceId = i,
                    Qi[0].object = this,
                    t.push(Qi[0]),
                    Qi.length = 0)
        },
        setMatrixAt: function(e, t) {
            t.toArray(this.instanceMatrix.array, 16 * e)
        },
        updateMorphTargets: function() {}
    }),
    ta.prototype = Object.create(ct.prototype),
    ta.prototype.constructor = ta,
    ta.prototype.isLineBasicMaterial = !0,
    ta.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.linewidth = e.linewidth,
        this.linecap = e.linecap,
        this.linejoin = e.linejoin,
        this
    }
    ;
    var na = new G
      , ra = new G
      , ia = new X
      , aa = new Be
      , oa = new Pe;
    function sa(e, t, n) {
        1 === n && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),
        fe.call(this),
        this.type = "Line",
        this.geometry = void 0 !== e ? e : new Ot,
        this.material = void 0 !== t ? t : new ta
    }
    sa.prototype = Object.assign(Object.create(fe.prototype), {
        constructor: sa,
        isLine: !0,
        computeLineDistances: function() {
            var e = this.geometry;
            if (e.isBufferGeometry)
                if (null === e.index) {
                    for (var t = e.attributes.position, n = [0], r = 1, i = t.count; r < i; r++)
                        na.fromBufferAttribute(t, r - 1),
                        ra.fromBufferAttribute(t, r),
                        n[r] = n[r - 1],
                        n[r] += na.distanceTo(ra);
                    e.setAttribute("lineDistance", new wt(n,1))
                } else
                    console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
            else if (e.isGeometry) {
                var a = e.vertices;
                (n = e.lineDistances)[0] = 0;
                for (r = 1,
                i = a.length; r < i; r++)
                    n[r] = n[r - 1],
                    n[r] += a[r - 1].distanceTo(a[r])
            }
            return this
        },
        raycast: function(e, t) {
            var n = this.geometry
              , r = this.matrixWorld
              , i = e.params.Line.threshold;
            if (null === n.boundingSphere && n.computeBoundingSphere(),
            oa.copy(n.boundingSphere),
            oa.applyMatrix4(r),
            oa.radius += i,
            !1 !== e.ray.intersectsSphere(oa)) {
                ia.getInverse(r),
                aa.copy(e.ray).applyMatrix4(ia);
                var a = i / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                  , o = a * a
                  , s = new G
                  , l = new G
                  , u = new G
                  , c = new G
                  , h = this && this.isLineSegments ? 2 : 1;
                if (n.isBufferGeometry) {
                    var d = n.index
                      , f = n.attributes.position.array;
                    if (null !== d)
                        for (var p = d.array, m = 0, g = p.length - 1; m < g; m += h) {
                            var v = p[m]
                              , y = p[m + 1];
                            if (s.fromArray(f, 3 * v),
                            l.fromArray(f, 3 * y),
                            !(aa.distanceSqToSegment(s, l, c, u) > o))
                                c.applyMatrix4(this.matrixWorld),
                                (w = e.ray.origin.distanceTo(c)) < e.near || w > e.far || t.push({
                                    distance: w,
                                    point: u.clone().applyMatrix4(this.matrixWorld),
                                    index: m,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                        }
                    else
                        for (m = 0,
                        g = f.length / 3 - 1; m < g; m += h) {
                            if (s.fromArray(f, 3 * m),
                            l.fromArray(f, 3 * m + 3),
                            !(aa.distanceSqToSegment(s, l, c, u) > o))
                                c.applyMatrix4(this.matrixWorld),
                                (w = e.ray.origin.distanceTo(c)) < e.near || w > e.far || t.push({
                                    distance: w,
                                    point: u.clone().applyMatrix4(this.matrixWorld),
                                    index: m,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                        }
                } else if (n.isGeometry) {
                    var b = n.vertices
                      , x = b.length;
                    for (m = 0; m < x - 1; m += h) {
                        var w;
                        if (!(aa.distanceSqToSegment(b[m], b[m + 1], c, u) > o))
                            c.applyMatrix4(this.matrixWorld),
                            (w = e.ray.origin.distanceTo(c)) < e.near || w > e.far || t.push({
                                distance: w,
                                point: u.clone().applyMatrix4(this.matrixWorld),
                                index: m,
                                face: null,
                                faceIndex: null,
                                object: this
                            })
                    }
                }
            }
        },
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    });
    var la = new G
      , ua = new G;
    function ca(e, t) {
        sa.call(this, e, t),
        this.type = "LineSegments"
    }
    function ha(e, t) {
        sa.call(this, e, t),
        this.type = "LineLoop"
    }
    function da(e) {
        ct.call(this),
        this.type = "PointsMaterial",
        this.color = new it(16777215),
        this.map = null,
        this.alphaMap = null,
        this.size = 1,
        this.sizeAttenuation = !0,
        this.morphTargets = !1,
        this.setValues(e)
    }
    ca.prototype = Object.assign(Object.create(sa.prototype), {
        constructor: ca,
        isLineSegments: !0,
        computeLineDistances: function() {
            var e = this.geometry;
            if (e.isBufferGeometry)
                if (null === e.index) {
                    for (var t = e.attributes.position, n = [], r = 0, i = t.count; r < i; r += 2)
                        la.fromBufferAttribute(t, r),
                        ua.fromBufferAttribute(t, r + 1),
                        n[r] = 0 === r ? 0 : n[r - 1],
                        n[r + 1] = n[r] + la.distanceTo(ua);
                    e.setAttribute("lineDistance", new wt(n,1))
                } else
                    console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
            else if (e.isGeometry) {
                var a = e.vertices;
                for (n = e.lineDistances,
                r = 0,
                i = a.length; r < i; r += 2)
                    la.copy(a[r]),
                    ua.copy(a[r + 1]),
                    n[r] = 0 === r ? 0 : n[r - 1],
                    n[r + 1] = n[r] + la.distanceTo(ua)
            }
            return this
        }
    }),
    ha.prototype = Object.assign(Object.create(sa.prototype), {
        constructor: ha,
        isLineLoop: !0
    }),
    da.prototype = Object.create(ct.prototype),
    da.prototype.constructor = da,
    da.prototype.isPointsMaterial = !0,
    da.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.map = e.map,
        this.alphaMap = e.alphaMap,
        this.size = e.size,
        this.sizeAttenuation = e.sizeAttenuation,
        this.morphTargets = e.morphTargets,
        this
    }
    ;
    var fa = new X
      , pa = new Be
      , ma = new Pe
      , ga = new G;
    function va(e, t) {
        fe.call(this),
        this.type = "Points",
        this.geometry = void 0 !== e ? e : new Ot,
        this.material = void 0 !== t ? t : new da,
        this.updateMorphTargets()
    }
    function ya(e, t, n, r, i, a, o) {
        var s = pa.distanceSqToPoint(e);
        if (s < n) {
            var l = new G;
            pa.closestPointToPoint(e, l),
            l.applyMatrix4(r);
            var u = i.ray.origin.distanceTo(l);
            if (u < i.near || u > i.far)
                return;
            a.push({
                distance: u,
                distanceToRay: Math.sqrt(s),
                point: l,
                index: t,
                face: null,
                object: o
            })
        }
    }
    function ba(e, t, n, r, i, a, o, s, l) {
        D.call(this, e, t, n, r, i, a, o, s, l),
        this.format = void 0 !== o ? o : 1022,
        this.minFilter = void 0 !== a ? a : 1006,
        this.magFilter = void 0 !== i ? i : 1006,
        this.generateMipmaps = !1
    }
    function xa(e, t, n, r, i, a, o, s, l, u, c, h) {
        D.call(this, null, a, o, s, l, u, r, i, c, h),
        this.image = {
            width: t,
            height: n
        },
        this.mipmaps = e,
        this.flipY = !1,
        this.generateMipmaps = !1
    }
    function wa(e, t, n, r, i, a, o, s, l) {
        D.call(this, e, t, n, r, i, a, o, s, l),
        this.needsUpdate = !0
    }
    function _a(e, t, n, r, i, a, o, s, l, u) {
        if (1026 !== (u = void 0 !== u ? u : 1026) && 1027 !== u)
            throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        void 0 === n && 1026 === u && (n = 1012),
        void 0 === n && 1027 === u && (n = 1020),
        D.call(this, null, r, i, a, o, s, u, n, l),
        this.image = {
            width: e,
            height: t
        },
        this.magFilter = void 0 !== o ? o : 1003,
        this.minFilter = void 0 !== s ? s : 1003,
        this.flipY = !1,
        this.generateMipmaps = !1
    }
    function Ea(e) {
        Ot.call(this),
        this.type = "WireframeGeometry";
        var t, n, r, i, a, o, s, l, u, c, h = [], d = [0, 0], f = {}, p = ["a", "b", "c"];
        if (e && e.isGeometry) {
            var m = e.faces;
            for (t = 0,
            r = m.length; t < r; t++) {
                var g = m[t];
                for (n = 0; n < 3; n++)
                    s = g[p[n]],
                    l = g[p[(n + 1) % 3]],
                    d[0] = Math.min(s, l),
                    d[1] = Math.max(s, l),
                    void 0 === f[u = d[0] + "," + d[1]] && (f[u] = {
                        index1: d[0],
                        index2: d[1]
                    })
            }
            for (u in f)
                o = f[u],
                c = e.vertices[o.index1],
                h.push(c.x, c.y, c.z),
                c = e.vertices[o.index2],
                h.push(c.x, c.y, c.z)
        } else if (e && e.isBufferGeometry) {
            var v, y, b, x, w, _, E;
            if (c = new G,
            null !== e.index) {
                for (v = e.attributes.position,
                y = e.index,
                0 === (b = e.groups).length && (b = [{
                    start: 0,
                    count: y.count,
                    materialIndex: 0
                }]),
                i = 0,
                a = b.length; i < a; ++i)
                    for (t = w = (x = b[i]).start,
                    r = w + x.count; t < r; t += 3)
                        for (n = 0; n < 3; n++)
                            s = y.getX(t + n),
                            l = y.getX(t + (n + 1) % 3),
                            d[0] = Math.min(s, l),
                            d[1] = Math.max(s, l),
                            void 0 === f[u = d[0] + "," + d[1]] && (f[u] = {
                                index1: d[0],
                                index2: d[1]
                            });
                for (u in f)
                    o = f[u],
                    c.fromBufferAttribute(v, o.index1),
                    h.push(c.x, c.y, c.z),
                    c.fromBufferAttribute(v, o.index2),
                    h.push(c.x, c.y, c.z)
            } else
                for (t = 0,
                r = (v = e.attributes.position).count / 3; t < r; t++)
                    for (n = 0; n < 3; n++)
                        _ = 3 * t + n,
                        c.fromBufferAttribute(v, _),
                        h.push(c.x, c.y, c.z),
                        E = 3 * t + (n + 1) % 3,
                        c.fromBufferAttribute(v, E),
                        h.push(c.x, c.y, c.z)
        }
        this.setAttribute("position", new wt(h,3))
    }
    function Ta(e, t, n) {
        rn.call(this),
        this.type = "ParametricGeometry",
        this.parameters = {
            func: e,
            slices: t,
            stacks: n
        },
        this.fromBufferGeometry(new Sa(e,t,n)),
        this.mergeVertices()
    }
    function Sa(e, t, n) {
        Ot.call(this),
        this.type = "ParametricBufferGeometry",
        this.parameters = {
            func: e,
            slices: t,
            stacks: n
        };
        var r, i, a = [], o = [], s = [], l = [], u = 1e-5, c = new G, h = new G, d = new G, f = new G, p = new G;
        e.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
        var m = t + 1;
        for (r = 0; r <= n; r++) {
            var g = r / n;
            for (i = 0; i <= t; i++) {
                var v = i / t;
                e(v, g, h),
                o.push(h.x, h.y, h.z),
                v - u >= 0 ? (e(v - u, g, d),
                f.subVectors(h, d)) : (e(v + u, g, d),
                f.subVectors(d, h)),
                g - u >= 0 ? (e(v, g - u, d),
                p.subVectors(h, d)) : (e(v, g + u, d),
                p.subVectors(d, h)),
                c.crossVectors(f, p).normalize(),
                s.push(c.x, c.y, c.z),
                l.push(v, g)
            }
        }
        for (r = 0; r < n; r++)
            for (i = 0; i < t; i++) {
                var y = r * m + i
                  , b = r * m + i + 1
                  , x = (r + 1) * m + i + 1
                  , w = (r + 1) * m + i;
                a.push(y, b, w),
                a.push(b, x, w)
            }
        this.setIndex(a),
        this.setAttribute("position", new wt(o,3)),
        this.setAttribute("normal", new wt(s,3)),
        this.setAttribute("uv", new wt(l,2))
    }
    function Ma(e, t, n, r) {
        rn.call(this),
        this.type = "PolyhedronGeometry",
        this.parameters = {
            vertices: e,
            indices: t,
            radius: n,
            detail: r
        },
        this.fromBufferGeometry(new Aa(e,t,n,r)),
        this.mergeVertices()
    }
    function Aa(e, t, n, r) {
        Ot.call(this),
        this.type = "PolyhedronBufferGeometry",
        this.parameters = {
            vertices: e,
            indices: t,
            radius: n,
            detail: r
        },
        n = n || 1;
        var i = []
          , a = [];
        function o(e, t, n, r) {
            var i, a, o = Math.pow(2, r), l = [];
            for (i = 0; i <= o; i++) {
                l[i] = [];
                var u = e.clone().lerp(n, i / o)
                  , c = t.clone().lerp(n, i / o)
                  , h = o - i;
                for (a = 0; a <= h; a++)
                    l[i][a] = 0 === a && i === o ? u : u.clone().lerp(c, a / h)
            }
            for (i = 0; i < o; i++)
                for (a = 0; a < 2 * (o - i) - 1; a++) {
                    var d = Math.floor(a / 2);
                    a % 2 == 0 ? (s(l[i][d + 1]),
                    s(l[i + 1][d]),
                    s(l[i][d])) : (s(l[i][d + 1]),
                    s(l[i + 1][d + 1]),
                    s(l[i + 1][d]))
                }
        }
        function s(e) {
            i.push(e.x, e.y, e.z)
        }
        function l(t, n) {
            var r = 3 * t;
            n.x = e[r + 0],
            n.y = e[r + 1],
            n.z = e[r + 2]
        }
        function u(e, t, n, r) {
            r < 0 && 1 === e.x && (a[t] = e.x - 1),
            0 === n.x && 0 === n.z && (a[t] = r / 2 / Math.PI + .5)
        }
        function c(e) {
            return Math.atan2(e.z, -e.x)
        }
        !function(e) {
            for (var n = new G, r = new G, i = new G, a = 0; a < t.length; a += 3)
                l(t[a + 0], n),
                l(t[a + 1], r),
                l(t[a + 2], i),
                o(n, r, i, e)
        }(r = r || 0),
        function(e) {
            for (var t = new G, n = 0; n < i.length; n += 3)
                t.x = i[n + 0],
                t.y = i[n + 1],
                t.z = i[n + 2],
                t.normalize().multiplyScalar(e),
                i[n + 0] = t.x,
                i[n + 1] = t.y,
                i[n + 2] = t.z
        }(n),
        function() {
            for (var e = new G, t = 0; t < i.length; t += 3) {
                e.x = i[t + 0],
                e.y = i[t + 1],
                e.z = i[t + 2];
                var n = c(e) / 2 / Math.PI + .5
                  , r = (o = e,
                Math.atan2(-o.y, Math.sqrt(o.x * o.x + o.z * o.z)) / Math.PI + .5);
                a.push(n, 1 - r)
            }
            var o;
            (function() {
                for (var e = new G, t = new G, n = new G, r = new G, o = new C, s = new C, l = new C, h = 0, d = 0; h < i.length; h += 9,
                d += 6) {
                    e.set(i[h + 0], i[h + 1], i[h + 2]),
                    t.set(i[h + 3], i[h + 4], i[h + 5]),
                    n.set(i[h + 6], i[h + 7], i[h + 8]),
                    o.set(a[d + 0], a[d + 1]),
                    s.set(a[d + 2], a[d + 3]),
                    l.set(a[d + 4], a[d + 5]),
                    r.copy(e).add(t).add(n).divideScalar(3);
                    var f = c(r);
                    u(o, d + 0, e, f),
                    u(s, d + 2, t, f),
                    u(l, d + 4, n, f)
                }
            }
            )(),
            function() {
                for (var e = 0; e < a.length; e += 6) {
                    var t = a[e + 0]
                      , n = a[e + 2]
                      , r = a[e + 4]
                      , i = Math.max(t, n, r)
                      , o = Math.min(t, n, r);
                    i > .9 && o < .1 && (t < .2 && (a[e + 0] += 1),
                    n < .2 && (a[e + 2] += 1),
                    r < .2 && (a[e + 4] += 1))
                }
            }()
        }(),
        this.setAttribute("position", new wt(i,3)),
        this.setAttribute("normal", new wt(i.slice(),3)),
        this.setAttribute("uv", new wt(a,2)),
        0 === r ? this.computeVertexNormals() : this.normalizeNormals()
    }
    function Ra(e, t) {
        rn.call(this),
        this.type = "TetrahedronGeometry",
        this.parameters = {
            radius: e,
            detail: t
        },
        this.fromBufferGeometry(new La(e,t)),
        this.mergeVertices()
    }
    function La(e, t) {
        Aa.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], e, t),
        this.type = "TetrahedronBufferGeometry",
        this.parameters = {
            radius: e,
            detail: t
        }
    }
    function Ca(e, t) {
        rn.call(this),
        this.type = "OctahedronGeometry",
        this.parameters = {
            radius: e,
            detail: t
        },
        this.fromBufferGeometry(new Pa(e,t)),
        this.mergeVertices()
    }
    function Pa(e, t) {
        Aa.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], e, t),
        this.type = "OctahedronBufferGeometry",
        this.parameters = {
            radius: e,
            detail: t
        }
    }
    function Oa(e, t) {
        rn.call(this),
        this.type = "IcosahedronGeometry",
        this.parameters = {
            radius: e,
            detail: t
        },
        this.fromBufferGeometry(new ka(e,t)),
        this.mergeVertices()
    }
    function ka(e, t) {
        var n = (1 + Math.sqrt(5)) / 2
          , r = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1];
        Aa.call(this, r, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], e, t),
        this.type = "IcosahedronBufferGeometry",
        this.parameters = {
            radius: e,
            detail: t
        }
    }
    function Da(e, t) {
        rn.call(this),
        this.type = "DodecahedronGeometry",
        this.parameters = {
            radius: e,
            detail: t
        },
        this.fromBufferGeometry(new Ia(e,t)),
        this.mergeVertices()
    }
    function Ia(e, t) {
        var n = (1 + Math.sqrt(5)) / 2
          , r = 1 / n
          , i = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, 0, -n, 0, -r, n, 0, -r, -n, 0, r, n, 0, r];
        Aa.call(this, i, [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], e, t),
        this.type = "DodecahedronBufferGeometry",
        this.parameters = {
            radius: e,
            detail: t
        }
    }
    function Na(e, t, n, r, i, a) {
        rn.call(this),
        this.type = "TubeGeometry",
        this.parameters = {
            path: e,
            tubularSegments: t,
            radius: n,
            radialSegments: r,
            closed: i
        },
        void 0 !== a && console.warn("THREE.TubeGeometry: taper has been removed.");
        var o = new Fa(e,t,n,r,i);
        this.tangents = o.tangents,
        this.normals = o.normals,
        this.binormals = o.binormals,
        this.fromBufferGeometry(o),
        this.mergeVertices()
    }
    function Fa(e, t, n, r, i) {
        Ot.call(this),
        this.type = "TubeBufferGeometry",
        this.parameters = {
            path: e,
            tubularSegments: t,
            radius: n,
            radialSegments: r,
            closed: i
        },
        t = t || 64,
        n = n || 1,
        r = r || 8,
        i = i || !1;
        var a = e.computeFrenetFrames(t, i);
        this.tangents = a.tangents,
        this.normals = a.normals,
        this.binormals = a.binormals;
        var o, s, l = new G, u = new G, c = new C, h = new G, d = [], f = [], p = [], m = [];
        function g(i) {
            h = e.getPointAt(i / t, h);
            var o = a.normals[i]
              , c = a.binormals[i];
            for (s = 0; s <= r; s++) {
                var p = s / r * Math.PI * 2
                  , m = Math.sin(p)
                  , g = -Math.cos(p);
                u.x = g * o.x + m * c.x,
                u.y = g * o.y + m * c.y,
                u.z = g * o.z + m * c.z,
                u.normalize(),
                f.push(u.x, u.y, u.z),
                l.x = h.x + n * u.x,
                l.y = h.y + n * u.y,
                l.z = h.z + n * u.z,
                d.push(l.x, l.y, l.z)
            }
        }
        !function() {
            for (o = 0; o < t; o++)
                g(o);
            g(!1 === i ? t : 0),
            function() {
                for (o = 0; o <= t; o++)
                    for (s = 0; s <= r; s++)
                        c.x = o / t,
                        c.y = s / r,
                        p.push(c.x, c.y)
            }(),
            function() {
                for (s = 1; s <= t; s++)
                    for (o = 1; o <= r; o++) {
                        var e = (r + 1) * (s - 1) + (o - 1)
                          , n = (r + 1) * s + (o - 1)
                          , i = (r + 1) * s + o
                          , a = (r + 1) * (s - 1) + o;
                        m.push(e, n, a),
                        m.push(n, i, a)
                    }
            }()
        }(),
        this.setIndex(m),
        this.setAttribute("position", new wt(d,3)),
        this.setAttribute("normal", new wt(f,3)),
        this.setAttribute("uv", new wt(p,2))
    }
    function Ua(e, t, n, r, i, a, o) {
        rn.call(this),
        this.type = "TorusKnotGeometry",
        this.parameters = {
            radius: e,
            tube: t,
            tubularSegments: n,
            radialSegments: r,
            p: i,
            q: a
        },
        void 0 !== o && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),
        this.fromBufferGeometry(new Ba(e,t,n,r,i,a)),
        this.mergeVertices()
    }
    function Ba(e, t, n, r, i, a) {
        Ot.call(this),
        this.type = "TorusKnotBufferGeometry",
        this.parameters = {
            radius: e,
            tube: t,
            tubularSegments: n,
            radialSegments: r,
            p: i,
            q: a
        },
        e = e || 1,
        t = t || .4,
        n = Math.floor(n) || 64,
        r = Math.floor(r) || 8,
        i = i || 2,
        a = a || 3;
        var o, s, l = [], u = [], c = [], h = [], d = new G, f = new G, p = new G, m = new G, g = new G, v = new G, y = new G;
        for (o = 0; o <= n; ++o) {
            var b = o / n * i * Math.PI * 2;
            for (A(b, i, a, e, p),
            A(b + .01, i, a, e, m),
            v.subVectors(m, p),
            y.addVectors(m, p),
            g.crossVectors(v, y),
            y.crossVectors(g, v),
            g.normalize(),
            y.normalize(),
            s = 0; s <= r; ++s) {
                var x = s / r * Math.PI * 2
                  , w = -t * Math.cos(x)
                  , _ = t * Math.sin(x);
                d.x = p.x + (w * y.x + _ * g.x),
                d.y = p.y + (w * y.y + _ * g.y),
                d.z = p.z + (w * y.z + _ * g.z),
                u.push(d.x, d.y, d.z),
                f.subVectors(d, p).normalize(),
                c.push(f.x, f.y, f.z),
                h.push(o / n),
                h.push(s / r)
            }
        }
        for (s = 1; s <= n; s++)
            for (o = 1; o <= r; o++) {
                var E = (r + 1) * (s - 1) + (o - 1)
                  , T = (r + 1) * s + (o - 1)
                  , S = (r + 1) * s + o
                  , M = (r + 1) * (s - 1) + o;
                l.push(E, T, M),
                l.push(T, S, M)
            }
        function A(e, t, n, r, i) {
            var a = Math.cos(e)
              , o = Math.sin(e)
              , s = n / t * e
              , l = Math.cos(s);
            i.x = r * (2 + l) * .5 * a,
            i.y = r * (2 + l) * o * .5,
            i.z = r * Math.sin(s) * .5
        }
        this.setIndex(l),
        this.setAttribute("position", new wt(u,3)),
        this.setAttribute("normal", new wt(c,3)),
        this.setAttribute("uv", new wt(h,2))
    }
    function za(e, t, n, r, i) {
        rn.call(this),
        this.type = "TorusGeometry",
        this.parameters = {
            radius: e,
            tube: t,
            radialSegments: n,
            tubularSegments: r,
            arc: i
        },
        this.fromBufferGeometry(new Ga(e,t,n,r,i)),
        this.mergeVertices()
    }
    function Ga(e, t, n, r, i) {
        Ot.call(this),
        this.type = "TorusBufferGeometry",
        this.parameters = {
            radius: e,
            tube: t,
            radialSegments: n,
            tubularSegments: r,
            arc: i
        },
        e = e || 1,
        t = t || .4,
        n = Math.floor(n) || 8,
        r = Math.floor(r) || 6,
        i = i || 2 * Math.PI;
        var a, o, s = [], l = [], u = [], c = [], h = new G, d = new G, f = new G;
        for (a = 0; a <= n; a++)
            for (o = 0; o <= r; o++) {
                var p = o / r * i
                  , m = a / n * Math.PI * 2;
                d.x = (e + t * Math.cos(m)) * Math.cos(p),
                d.y = (e + t * Math.cos(m)) * Math.sin(p),
                d.z = t * Math.sin(m),
                l.push(d.x, d.y, d.z),
                h.x = e * Math.cos(p),
                h.y = e * Math.sin(p),
                f.subVectors(d, h).normalize(),
                u.push(f.x, f.y, f.z),
                c.push(o / r),
                c.push(a / n)
            }
        for (a = 1; a <= n; a++)
            for (o = 1; o <= r; o++) {
                var g = (r + 1) * a + o - 1
                  , v = (r + 1) * (a - 1) + o - 1
                  , y = (r + 1) * (a - 1) + o
                  , b = (r + 1) * a + o;
                s.push(g, v, b),
                s.push(v, y, b)
            }
        this.setIndex(s),
        this.setAttribute("position", new wt(l,3)),
        this.setAttribute("normal", new wt(u,3)),
        this.setAttribute("uv", new wt(c,2))
    }
    va.prototype = Object.assign(Object.create(fe.prototype), {
        constructor: va,
        isPoints: !0,
        raycast: function(e, t) {
            var n = this.geometry
              , r = this.matrixWorld
              , i = e.params.Points.threshold;
            if (null === n.boundingSphere && n.computeBoundingSphere(),
            ma.copy(n.boundingSphere),
            ma.applyMatrix4(r),
            ma.radius += i,
            !1 !== e.ray.intersectsSphere(ma)) {
                fa.getInverse(r),
                pa.copy(e.ray).applyMatrix4(fa);
                var a = i / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                  , o = a * a;
                if (n.isBufferGeometry) {
                    var s = n.index
                      , l = n.attributes.position.array;
                    if (null !== s)
                        for (var u = s.array, c = 0, h = u.length; c < h; c++) {
                            var d = u[c];
                            ga.fromArray(l, 3 * d),
                            ya(ga, d, o, r, e, t, this)
                        }
                    else {
                        c = 0;
                        for (var f = l.length / 3; c < f; c++)
                            ga.fromArray(l, 3 * c),
                            ya(ga, c, o, r, e, t, this)
                    }
                } else {
                    var p = n.vertices;
                    for (c = 0,
                    f = p.length; c < f; c++)
                        ya(p[c], c, o, r, e, t, this)
                }
            }
        },
        updateMorphTargets: function() {
            var e, t, n, r = this.geometry;
            if (r.isBufferGeometry) {
                var i = r.morphAttributes
                  , a = Object.keys(i);
                if (a.length > 0) {
                    var o = i[a[0]];
                    if (void 0 !== o)
                        for (this.morphTargetInfluences = [],
                        this.morphTargetDictionary = {},
                        e = 0,
                        t = o.length; e < t; e++)
                            n = o[e].name || String(e),
                            this.morphTargetInfluences.push(0),
                            this.morphTargetDictionary[n] = e
                }
            } else {
                var s = r.morphTargets;
                void 0 !== s && s.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")
            }
        },
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    }),
    ba.prototype = Object.assign(Object.create(D.prototype), {
        constructor: ba,
        isVideoTexture: !0,
        update: function() {
            var e = this.image;
            e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0)
        }
    }),
    xa.prototype = Object.create(D.prototype),
    xa.prototype.constructor = xa,
    xa.prototype.isCompressedTexture = !0,
    wa.prototype = Object.create(D.prototype),
    wa.prototype.constructor = wa,
    wa.prototype.isCanvasTexture = !0,
    _a.prototype = Object.create(D.prototype),
    _a.prototype.constructor = _a,
    _a.prototype.isDepthTexture = !0,
    Ea.prototype = Object.create(Ot.prototype),
    Ea.prototype.constructor = Ea,
    Ta.prototype = Object.create(rn.prototype),
    Ta.prototype.constructor = Ta,
    Sa.prototype = Object.create(Ot.prototype),
    Sa.prototype.constructor = Sa,
    Ma.prototype = Object.create(rn.prototype),
    Ma.prototype.constructor = Ma,
    Aa.prototype = Object.create(Ot.prototype),
    Aa.prototype.constructor = Aa,
    Ra.prototype = Object.create(rn.prototype),
    Ra.prototype.constructor = Ra,
    La.prototype = Object.create(Aa.prototype),
    La.prototype.constructor = La,
    Ca.prototype = Object.create(rn.prototype),
    Ca.prototype.constructor = Ca,
    Pa.prototype = Object.create(Aa.prototype),
    Pa.prototype.constructor = Pa,
    Oa.prototype = Object.create(rn.prototype),
    Oa.prototype.constructor = Oa,
    ka.prototype = Object.create(Aa.prototype),
    ka.prototype.constructor = ka,
    Da.prototype = Object.create(rn.prototype),
    Da.prototype.constructor = Da,
    Ia.prototype = Object.create(Aa.prototype),
    Ia.prototype.constructor = Ia,
    Na.prototype = Object.create(rn.prototype),
    Na.prototype.constructor = Na,
    Fa.prototype = Object.create(Ot.prototype),
    Fa.prototype.constructor = Fa,
    Fa.prototype.toJSON = function() {
        var e = Ot.prototype.toJSON.call(this);
        return e.path = this.parameters.path.toJSON(),
        e
    }
    ,
    Ua.prototype = Object.create(rn.prototype),
    Ua.prototype.constructor = Ua,
    Ba.prototype = Object.create(Ot.prototype),
    Ba.prototype.constructor = Ba,
    za.prototype = Object.create(rn.prototype),
    za.prototype.constructor = za,
    Ga.prototype = Object.create(Ot.prototype),
    Ga.prototype.constructor = Ga;
    var Ha = function(e, t, n) {
        n = n || 2;
        var r, i, a, o, s, l, u, c = t && t.length, h = c ? t[0] * n : e.length, d = ja(e, 0, h, n, !0), f = [];
        if (!d || d.next === d.prev)
            return f;
        if (c && (d = function(e, t, n, r) {
            var i, a, o, s, l, u = [];
            for (i = 0,
            a = t.length; i < a; i++)
                o = t[i] * r,
                s = i < a - 1 ? t[i + 1] * r : e.length,
                (l = ja(e, o, s, r, !1)) === l.next && (l.steiner = !0),
                u.push($a(l));
            for (u.sort(Za),
            i = 0; i < u.length; i++)
                Ja(u[i], n),
                n = Va(n, n.next);
            return n
        }(e, t, d, n)),
        e.length > 80 * n) {
            r = a = e[0],
            i = o = e[1];
            for (var p = n; p < h; p += n)
                (s = e[p]) < r && (r = s),
                (l = e[p + 1]) < i && (i = l),
                s > a && (a = s),
                l > o && (o = l);
            u = 0 !== (u = Math.max(a - r, o - i)) ? 1 / u : 0
        }
        return Wa(d, f, n, r, i, u),
        f
    };
    function ja(e, t, n, r, i) {
        var a, o;
        if (i === function(e, t, n, r) {
            for (var i = 0, a = t, o = n - r; a < n; a += r)
                i += (e[o] - e[a]) * (e[a + 1] + e[o + 1]),
                o = a;
            return i
        }(e, t, n, r) > 0)
            for (a = t; a < n; a += r)
                o = so(a, e[a], e[a + 1], o);
        else
            for (a = n - r; a >= t; a -= r)
                o = so(a, e[a], e[a + 1], o);
        return o && ro(o, o.next) && (lo(o),
        o = o.next),
        o
    }
    function Va(e, t) {
        if (!e)
            return e;
        t || (t = e);
        var n, r = e;
        do {
            if (n = !1,
            r.steiner || !ro(r, r.next) && 0 !== no(r.prev, r, r.next))
                r = r.next;
            else {
                if (lo(r),
                (r = t = r.prev) === r.next)
                    break;
                n = !0
            }
        } while (n || r !== t);
        return t
    }
    function Wa(e, t, n, r, i, a, o) {
        if (e) {
            !o && a && function(e, t, n, r) {
                var i = e;
                do {
                    null === i.z && (i.z = Qa(i.x, i.y, t, n, r)),
                    i.prevZ = i.prev,
                    i.nextZ = i.next,
                    i = i.next
                } while (i !== e);
                i.prevZ.nextZ = null,
                i.prevZ = null,
                function(e) {
                    var t, n, r, i, a, o, s, l, u = 1;
                    do {
                        for (n = e,
                        e = null,
                        a = null,
                        o = 0; n; ) {
                            for (o++,
                            r = n,
                            s = 0,
                            t = 0; t < u && (s++,
                            r = r.nextZ); t++)
                                ;
                            for (l = u; s > 0 || l > 0 && r; )
                                0 !== s && (0 === l || !r || n.z <= r.z) ? (i = n,
                                n = n.nextZ,
                                s--) : (i = r,
                                r = r.nextZ,
                                l--),
                                a ? a.nextZ = i : e = i,
                                i.prevZ = a,
                                a = i;
                            n = r
                        }
                        a.nextZ = null,
                        u *= 2
                    } while (o > 1)
                }(i)
            }(e, r, i, a);
            for (var s, l, u = e; e.prev !== e.next; )
                if (s = e.prev,
                l = e.next,
                a ? Ka(e, r, i, a) : qa(e))
                    t.push(s.i / n),
                    t.push(e.i / n),
                    t.push(l.i / n),
                    lo(e),
                    e = l.next,
                    u = l.next;
                else if ((e = l) === u) {
                    o ? 1 === o ? Wa(e = Ya(e, t, n), t, n, r, i, a, 2) : 2 === o && Xa(e, t, n, r, i, a) : Wa(Va(e), t, n, r, i, a, 1);
                    break
                }
        }
    }
    function qa(e) {
        var t = e.prev
          , n = e
          , r = e.next;
        if (no(t, n, r) >= 0)
            return !1;
        for (var i = e.next.next; i !== e.prev; ) {
            if (eo(t.x, t.y, n.x, n.y, r.x, r.y, i.x, i.y) && no(i.prev, i, i.next) >= 0)
                return !1;
            i = i.next
        }
        return !0
    }
    function Ka(e, t, n, r) {
        var i = e.prev
          , a = e
          , o = e.next;
        if (no(i, a, o) >= 0)
            return !1;
        for (var s = i.x < a.x ? i.x < o.x ? i.x : o.x : a.x < o.x ? a.x : o.x, l = i.y < a.y ? i.y < o.y ? i.y : o.y : a.y < o.y ? a.y : o.y, u = i.x > a.x ? i.x > o.x ? i.x : o.x : a.x > o.x ? a.x : o.x, c = i.y > a.y ? i.y > o.y ? i.y : o.y : a.y > o.y ? a.y : o.y, h = Qa(s, l, t, n, r), d = Qa(u, c, t, n, r), f = e.prevZ, p = e.nextZ; f && f.z >= h && p && p.z <= d; ) {
            if (f !== e.prev && f !== e.next && eo(i.x, i.y, a.x, a.y, o.x, o.y, f.x, f.y) && no(f.prev, f, f.next) >= 0)
                return !1;
            if (f = f.prevZ,
            p !== e.prev && p !== e.next && eo(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) && no(p.prev, p, p.next) >= 0)
                return !1;
            p = p.nextZ
        }
        for (; f && f.z >= h; ) {
            if (f !== e.prev && f !== e.next && eo(i.x, i.y, a.x, a.y, o.x, o.y, f.x, f.y) && no(f.prev, f, f.next) >= 0)
                return !1;
            f = f.prevZ
        }
        for (; p && p.z <= d; ) {
            if (p !== e.prev && p !== e.next && eo(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) && no(p.prev, p, p.next) >= 0)
                return !1;
            p = p.nextZ
        }
        return !0
    }
    function Ya(e, t, n) {
        var r = e;
        do {
            var i = r.prev
              , a = r.next.next;
            !ro(i, a) && io(i, r, r.next, a) && ao(i, a) && ao(a, i) && (t.push(i.i / n),
            t.push(r.i / n),
            t.push(a.i / n),
            lo(r),
            lo(r.next),
            r = e = a),
            r = r.next
        } while (r !== e);
        return r
    }
    function Xa(e, t, n, r, i, a) {
        var o = e;
        do {
            for (var s = o.next.next; s !== o.prev; ) {
                if (o.i !== s.i && to(o, s)) {
                    var l = oo(o, s);
                    return o = Va(o, o.next),
                    l = Va(l, l.next),
                    Wa(o, t, n, r, i, a),
                    void Wa(l, t, n, r, i, a)
                }
                s = s.next
            }
            o = o.next
        } while (o !== e)
    }
    function Za(e, t) {
        return e.x - t.x
    }
    function Ja(e, t) {
        if (t = function(e, t) {
            var n, r = t, i = e.x, a = e.y, o = -1 / 0;
            do {
                if (a <= r.y && a >= r.next.y && r.next.y !== r.y) {
                    var s = r.x + (a - r.y) * (r.next.x - r.x) / (r.next.y - r.y);
                    if (s <= i && s > o) {
                        if (o = s,
                        s === i) {
                            if (a === r.y)
                                return r;
                            if (a === r.next.y)
                                return r.next
                        }
                        n = r.x < r.next.x ? r : r.next
                    }
                }
                r = r.next
            } while (r !== t);
            if (!n)
                return null;
            if (i === o)
                return n.prev;
            var l, u = n, c = n.x, h = n.y, d = 1 / 0;
            r = n.next;
            for (; r !== u; )
                i >= r.x && r.x >= c && i !== r.x && eo(a < h ? i : o, a, c, h, a < h ? o : i, a, r.x, r.y) && ((l = Math.abs(a - r.y) / (i - r.x)) < d || l === d && r.x > n.x) && ao(r, e) && (n = r,
                d = l),
                r = r.next;
            return n
        }(e, t)) {
            var n = oo(t, e);
            Va(n, n.next)
        }
    }
    function Qa(e, t, n, r, i) {
        return (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - n) * i) | e << 8)) | e << 4)) | e << 2)) | e << 1)) | (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - r) * i) | t << 8)) | t << 4)) | t << 2)) | t << 1)) << 1
    }
    function $a(e) {
        var t = e
          , n = e;
        do {
            (t.x < n.x || t.x === n.x && t.y < n.y) && (n = t),
            t = t.next
        } while (t !== e);
        return n
    }
    function eo(e, t, n, r, i, a, o, s) {
        return (i - o) * (t - s) - (e - o) * (a - s) >= 0 && (e - o) * (r - s) - (n - o) * (t - s) >= 0 && (n - o) * (a - s) - (i - o) * (r - s) >= 0
    }
    function to(e, t) {
        return e.next.i !== t.i && e.prev.i !== t.i && !function(e, t) {
            var n = e;
            do {
                if (n.i !== e.i && n.next.i !== e.i && n.i !== t.i && n.next.i !== t.i && io(n, n.next, e, t))
                    return !0;
                n = n.next
            } while (n !== e);
            return !1
        }(e, t) && ao(e, t) && ao(t, e) && function(e, t) {
            var n = e
              , r = !1
              , i = (e.x + t.x) / 2
              , a = (e.y + t.y) / 2;
            do {
                n.y > a != n.next.y > a && n.next.y !== n.y && i < (n.next.x - n.x) * (a - n.y) / (n.next.y - n.y) + n.x && (r = !r),
                n = n.next
            } while (n !== e);
            return r
        }(e, t)
    }
    function no(e, t, n) {
        return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y)
    }
    function ro(e, t) {
        return e.x === t.x && e.y === t.y
    }
    function io(e, t, n, r) {
        return !!(ro(e, n) && ro(t, r) || ro(e, r) && ro(n, t)) || no(e, t, n) > 0 != no(e, t, r) > 0 && no(n, r, e) > 0 != no(n, r, t) > 0
    }
    function ao(e, t) {
        return no(e.prev, e, e.next) < 0 ? no(e, t, e.next) >= 0 && no(e, e.prev, t) >= 0 : no(e, t, e.prev) < 0 || no(e, e.next, t) < 0
    }
    function oo(e, t) {
        var n = new uo(e.i,e.x,e.y)
          , r = new uo(t.i,t.x,t.y)
          , i = e.next
          , a = t.prev;
        return e.next = t,
        t.prev = e,
        n.next = i,
        i.prev = n,
        r.next = n,
        n.prev = r,
        a.next = r,
        r.prev = a,
        r
    }
    function so(e, t, n, r) {
        var i = new uo(e,t,n);
        return r ? (i.next = r.next,
        i.prev = r,
        r.next.prev = i,
        r.next = i) : (i.prev = i,
        i.next = i),
        i
    }
    function lo(e) {
        e.next.prev = e.prev,
        e.prev.next = e.next,
        e.prevZ && (e.prevZ.nextZ = e.nextZ),
        e.nextZ && (e.nextZ.prevZ = e.prevZ)
    }
    function uo(e, t, n) {
        this.i = e,
        this.x = t,
        this.y = n,
        this.prev = null,
        this.next = null,
        this.z = null,
        this.prevZ = null,
        this.nextZ = null,
        this.steiner = !1
    }
    var co = {
        area: function(e) {
            for (var t = e.length, n = 0, r = t - 1, i = 0; i < t; r = i++)
                n += e[r].x * e[i].y - e[i].x * e[r].y;
            return .5 * n
        },
        isClockWise: function(e) {
            return co.area(e) < 0
        },
        triangulateShape: function(e, t) {
            var n = []
              , r = []
              , i = [];
            ho(e),
            fo(n, e);
            var a = e.length;
            t.forEach(ho);
            for (var o = 0; o < t.length; o++)
                r.push(a),
                a += t[o].length,
                fo(n, t[o]);
            var s = Ha(n, r);
            for (o = 0; o < s.length; o += 3)
                i.push(s.slice(o, o + 3));
            return i
        }
    };
    function ho(e) {
        var t = e.length;
        t > 2 && e[t - 1].equals(e[0]) && e.pop()
    }
    function fo(e, t) {
        for (var n = 0; n < t.length; n++)
            e.push(t[n].x),
            e.push(t[n].y)
    }
    function po(e, t) {
        rn.call(this),
        this.type = "ExtrudeGeometry",
        this.parameters = {
            shapes: e,
            options: t
        },
        this.fromBufferGeometry(new mo(e,t)),
        this.mergeVertices()
    }
    function mo(e, t) {
        Ot.call(this),
        this.type = "ExtrudeBufferGeometry",
        this.parameters = {
            shapes: e,
            options: t
        },
        e = Array.isArray(e) ? e : [e];
        for (var n = this, r = [], i = [], a = 0, o = e.length; a < o; a++) {
            s(e[a])
        }
        function s(e) {
            var a = []
              , o = void 0 !== t.curveSegments ? t.curveSegments : 12
              , s = void 0 !== t.steps ? t.steps : 1
              , l = void 0 !== t.depth ? t.depth : 100
              , u = void 0 === t.bevelEnabled || t.bevelEnabled
              , c = void 0 !== t.bevelThickness ? t.bevelThickness : 6
              , h = void 0 !== t.bevelSize ? t.bevelSize : c - 2
              , d = void 0 !== t.bevelOffset ? t.bevelOffset : 0
              , f = void 0 !== t.bevelSegments ? t.bevelSegments : 3
              , p = t.extrudePath
              , m = void 0 !== t.UVGenerator ? t.UVGenerator : go;
            void 0 !== t.amount && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),
            l = t.amount);
            var g, v, y, b, x, w, _, E, T = !1;
            p && (g = p.getSpacedPoints(s),
            T = !0,
            u = !1,
            v = p.computeFrenetFrames(s, !1),
            y = new G,
            b = new G,
            x = new G),
            u || (f = 0,
            c = 0,
            h = 0,
            d = 0);
            var S = e.extractPoints(o)
              , M = S.shape
              , A = S.holes;
            if (!co.isClockWise(M))
                for (M = M.reverse(),
                _ = 0,
                E = A.length; _ < E; _++)
                    w = A[_],
                    co.isClockWise(w) && (A[_] = w.reverse());
            var R = co.triangulateShape(M, A)
              , L = M;
            for (_ = 0,
            E = A.length; _ < E; _++)
                w = A[_],
                M = M.concat(w);
            function P(e, t, n) {
                return t || console.error("THREE.ExtrudeGeometry: vec does not exist"),
                t.clone().multiplyScalar(n).add(e)
            }
            var O, k, D, I, N, F, U = M.length, B = R.length;
            function z(e, t, n) {
                var r, i, a, o = e.x - t.x, s = e.y - t.y, l = n.x - e.x, u = n.y - e.y, c = o * o + s * s, h = o * u - s * l;
                if (Math.abs(h) > Number.EPSILON) {
                    var d = Math.sqrt(c)
                      , f = Math.sqrt(l * l + u * u)
                      , p = t.x - s / d
                      , m = t.y + o / d
                      , g = ((n.x - u / f - p) * u - (n.y + l / f - m) * l) / (o * u - s * l)
                      , v = (r = p + o * g - e.x) * r + (i = m + s * g - e.y) * i;
                    if (v <= 2)
                        return new C(r,i);
                    a = Math.sqrt(v / 2)
                } else {
                    var y = !1;
                    o > Number.EPSILON ? l > Number.EPSILON && (y = !0) : o < -Number.EPSILON ? l < -Number.EPSILON && (y = !0) : Math.sign(s) === Math.sign(u) && (y = !0),
                    y ? (r = -s,
                    i = o,
                    a = Math.sqrt(c)) : (r = o,
                    i = s,
                    a = Math.sqrt(c / 2))
                }
                return new C(r / a,i / a)
            }
            for (var H = [], j = 0, V = L.length, W = V - 1, q = j + 1; j < V; j++,
            W++,
            q++)
                W === V && (W = 0),
                q === V && (q = 0),
                H[j] = z(L[j], L[W], L[q]);
            var K, Y, X = [], Z = H.concat();
            for (_ = 0,
            E = A.length; _ < E; _++) {
                for (w = A[_],
                K = [],
                j = 0,
                W = (V = w.length) - 1,
                q = j + 1; j < V; j++,
                W++,
                q++)
                    W === V && (W = 0),
                    q === V && (q = 0),
                    K[j] = z(w[j], w[W], w[q]);
                X.push(K),
                Z = Z.concat(K)
            }
            for (O = 0; O < f; O++) {
                for (D = O / f,
                I = c * Math.cos(D * Math.PI / 2),
                k = h * Math.sin(D * Math.PI / 2) + d,
                j = 0,
                V = L.length; j < V; j++)
                    Q((N = P(L[j], H[j], k)).x, N.y, -I);
                for (_ = 0,
                E = A.length; _ < E; _++)
                    for (w = A[_],
                    K = X[_],
                    j = 0,
                    V = w.length; j < V; j++)
                        Q((N = P(w[j], K[j], k)).x, N.y, -I)
            }
            for (k = h + d,
            j = 0; j < U; j++)
                N = u ? P(M[j], Z[j], k) : M[j],
                T ? (b.copy(v.normals[0]).multiplyScalar(N.x),
                y.copy(v.binormals[0]).multiplyScalar(N.y),
                x.copy(g[0]).add(b).add(y),
                Q(x.x, x.y, x.z)) : Q(N.x, N.y, 0);
            for (Y = 1; Y <= s; Y++)
                for (j = 0; j < U; j++)
                    N = u ? P(M[j], Z[j], k) : M[j],
                    T ? (b.copy(v.normals[Y]).multiplyScalar(N.x),
                    y.copy(v.binormals[Y]).multiplyScalar(N.y),
                    x.copy(g[Y]).add(b).add(y),
                    Q(x.x, x.y, x.z)) : Q(N.x, N.y, l / s * Y);
            for (O = f - 1; O >= 0; O--) {
                for (D = O / f,
                I = c * Math.cos(D * Math.PI / 2),
                k = h * Math.sin(D * Math.PI / 2) + d,
                j = 0,
                V = L.length; j < V; j++)
                    Q((N = P(L[j], H[j], k)).x, N.y, l + I);
                for (_ = 0,
                E = A.length; _ < E; _++)
                    for (w = A[_],
                    K = X[_],
                    j = 0,
                    V = w.length; j < V; j++)
                        N = P(w[j], K[j], k),
                        T ? Q(N.x, N.y + g[s - 1].y, g[s - 1].x + I) : Q(N.x, N.y, l + I)
            }
            function J(e, t) {
                var n, r;
                for (j = e.length; --j >= 0; ) {
                    n = j,
                    (r = j - 1) < 0 && (r = e.length - 1);
                    var i = 0
                      , a = s + 2 * f;
                    for (i = 0; i < a; i++) {
                        var o = U * i
                          , l = U * (i + 1);
                        ee(t + n + o, t + r + o, t + r + l, t + n + l)
                    }
                }
            }
            function Q(e, t, n) {
                a.push(e),
                a.push(t),
                a.push(n)
            }
            function $(e, t, i) {
                te(e),
                te(t),
                te(i);
                var a = r.length / 3
                  , o = m.generateTopUV(n, r, a - 3, a - 2, a - 1);
                ne(o[0]),
                ne(o[1]),
                ne(o[2])
            }
            function ee(e, t, i, a) {
                te(e),
                te(t),
                te(a),
                te(t),
                te(i),
                te(a);
                var o = r.length / 3
                  , s = m.generateSideWallUV(n, r, o - 6, o - 3, o - 2, o - 1);
                ne(s[0]),
                ne(s[1]),
                ne(s[3]),
                ne(s[1]),
                ne(s[2]),
                ne(s[3])
            }
            function te(e) {
                r.push(a[3 * e + 0]),
                r.push(a[3 * e + 1]),
                r.push(a[3 * e + 2])
            }
            function ne(e) {
                i.push(e.x),
                i.push(e.y)
            }
            !function() {
                var e = r.length / 3;
                if (u) {
                    var t = 0
                      , i = U * t;
                    for (j = 0; j < B; j++)
                        $((F = R[j])[2] + i, F[1] + i, F[0] + i);
                    for (i = U * (t = s + 2 * f),
                    j = 0; j < B; j++)
                        $((F = R[j])[0] + i, F[1] + i, F[2] + i)
                } else {
                    for (j = 0; j < B; j++)
                        $((F = R[j])[2], F[1], F[0]);
                    for (j = 0; j < B; j++)
                        $((F = R[j])[0] + U * s, F[1] + U * s, F[2] + U * s)
                }
                n.addGroup(e, r.length / 3 - e, 0)
            }(),
            function() {
                var e = r.length / 3
                  , t = 0;
                for (J(L, t),
                t += L.length,
                _ = 0,
                E = A.length; _ < E; _++)
                    J(w = A[_], t),
                    t += w.length;
                n.addGroup(e, r.length / 3 - e, 1)
            }()
        }
        this.setAttribute("position", new wt(r,3)),
        this.setAttribute("uv", new wt(i,2)),
        this.computeVertexNormals()
    }
    po.prototype = Object.create(rn.prototype),
    po.prototype.constructor = po,
    po.prototype.toJSON = function() {
        var e = rn.prototype.toJSON.call(this);
        return vo(this.parameters.shapes, this.parameters.options, e)
    }
    ,
    mo.prototype = Object.create(Ot.prototype),
    mo.prototype.constructor = mo,
    mo.prototype.toJSON = function() {
        var e = Ot.prototype.toJSON.call(this);
        return vo(this.parameters.shapes, this.parameters.options, e)
    }
    ;
    var go = {
        generateTopUV: function(e, t, n, r, i) {
            var a = t[3 * n]
              , o = t[3 * n + 1]
              , s = t[3 * r]
              , l = t[3 * r + 1]
              , u = t[3 * i]
              , c = t[3 * i + 1];
            return [new C(a,o), new C(s,l), new C(u,c)]
        },
        generateSideWallUV: function(e, t, n, r, i, a) {
            var o = t[3 * n]
              , s = t[3 * n + 1]
              , l = t[3 * n + 2]
              , u = t[3 * r]
              , c = t[3 * r + 1]
              , h = t[3 * r + 2]
              , d = t[3 * i]
              , f = t[3 * i + 1]
              , p = t[3 * i + 2]
              , m = t[3 * a]
              , g = t[3 * a + 1]
              , v = t[3 * a + 2];
            return Math.abs(s - c) < .01 ? [new C(o,1 - l), new C(u,1 - h), new C(d,1 - p), new C(m,1 - v)] : [new C(s,1 - l), new C(c,1 - h), new C(f,1 - p), new C(g,1 - v)]
        }
    };
    function vo(e, t, n) {
        if (n.shapes = [],
        Array.isArray(e))
            for (var r = 0, i = e.length; r < i; r++) {
                var a = e[r];
                n.shapes.push(a.uuid)
            }
        else
            n.shapes.push(e.uuid);
        return void 0 !== t.extrudePath && (n.options.extrudePath = t.extrudePath.toJSON()),
        n
    }
    function yo(e, t) {
        rn.call(this),
        this.type = "TextGeometry",
        this.parameters = {
            text: e,
            parameters: t
        },
        this.fromBufferGeometry(new bo(e,t)),
        this.mergeVertices()
    }
    function bo(e, t) {
        var n = (t = t || {}).font;
        if (!n || !n.isFont)
            return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),
            new rn;
        var r = n.generateShapes(e, t.size);
        t.depth = void 0 !== t.height ? t.height : 50,
        void 0 === t.bevelThickness && (t.bevelThickness = 10),
        void 0 === t.bevelSize && (t.bevelSize = 8),
        void 0 === t.bevelEnabled && (t.bevelEnabled = !1),
        mo.call(this, r, t),
        this.type = "TextBufferGeometry"
    }
    function xo(e, t, n, r, i, a, o) {
        rn.call(this),
        this.type = "SphereGeometry",
        this.parameters = {
            radius: e,
            widthSegments: t,
            heightSegments: n,
            phiStart: r,
            phiLength: i,
            thetaStart: a,
            thetaLength: o
        },
        this.fromBufferGeometry(new wo(e,t,n,r,i,a,o)),
        this.mergeVertices()
    }
    function wo(e, t, n, r, i, a, o) {
        Ot.call(this),
        this.type = "SphereBufferGeometry",
        this.parameters = {
            radius: e,
            widthSegments: t,
            heightSegments: n,
            phiStart: r,
            phiLength: i,
            thetaStart: a,
            thetaLength: o
        },
        e = e || 1,
        t = Math.max(3, Math.floor(t) || 8),
        n = Math.max(2, Math.floor(n) || 6),
        r = void 0 !== r ? r : 0,
        i = void 0 !== i ? i : 2 * Math.PI,
        a = void 0 !== a ? a : 0,
        o = void 0 !== o ? o : Math.PI;
        var s, l, u = Math.min(a + o, Math.PI), c = 0, h = [], d = new G, f = new G, p = [], m = [], g = [], v = [];
        for (l = 0; l <= n; l++) {
            var y = []
              , b = l / n
              , x = 0;
            for (0 == l && 0 == a ? x = .5 / t : l == n && u == Math.PI && (x = -.5 / t),
            s = 0; s <= t; s++) {
                var w = s / t;
                d.x = -e * Math.cos(r + w * i) * Math.sin(a + b * o),
                d.y = e * Math.cos(a + b * o),
                d.z = e * Math.sin(r + w * i) * Math.sin(a + b * o),
                m.push(d.x, d.y, d.z),
                f.copy(d).normalize(),
                g.push(f.x, f.y, f.z),
                v.push(w + x, 1 - b),
                y.push(c++)
            }
            h.push(y)
        }
        for (l = 0; l < n; l++)
            for (s = 0; s < t; s++) {
                var _ = h[l][s + 1]
                  , E = h[l][s]
                  , T = h[l + 1][s]
                  , S = h[l + 1][s + 1];
                (0 !== l || a > 0) && p.push(_, E, S),
                (l !== n - 1 || u < Math.PI) && p.push(E, T, S)
            }
        this.setIndex(p),
        this.setAttribute("position", new wt(m,3)),
        this.setAttribute("normal", new wt(g,3)),
        this.setAttribute("uv", new wt(v,2))
    }
    function _o(e, t, n, r, i, a) {
        rn.call(this),
        this.type = "RingGeometry",
        this.parameters = {
            innerRadius: e,
            outerRadius: t,
            thetaSegments: n,
            phiSegments: r,
            thetaStart: i,
            thetaLength: a
        },
        this.fromBufferGeometry(new Eo(e,t,n,r,i,a)),
        this.mergeVertices()
    }
    function Eo(e, t, n, r, i, a) {
        Ot.call(this),
        this.type = "RingBufferGeometry",
        this.parameters = {
            innerRadius: e,
            outerRadius: t,
            thetaSegments: n,
            phiSegments: r,
            thetaStart: i,
            thetaLength: a
        },
        e = e || .5,
        t = t || 1,
        i = void 0 !== i ? i : 0,
        a = void 0 !== a ? a : 2 * Math.PI,
        n = void 0 !== n ? Math.max(3, n) : 8;
        var o, s, l, u = [], c = [], h = [], d = [], f = e, p = (t - e) / (r = void 0 !== r ? Math.max(1, r) : 1), m = new G, g = new C;
        for (s = 0; s <= r; s++) {
            for (l = 0; l <= n; l++)
                o = i + l / n * a,
                m.x = f * Math.cos(o),
                m.y = f * Math.sin(o),
                c.push(m.x, m.y, m.z),
                h.push(0, 0, 1),
                g.x = (m.x / t + 1) / 2,
                g.y = (m.y / t + 1) / 2,
                d.push(g.x, g.y);
            f += p
        }
        for (s = 0; s < r; s++) {
            var v = s * (n + 1);
            for (l = 0; l < n; l++) {
                var y = o = l + v
                  , b = o + n + 1
                  , x = o + n + 2
                  , w = o + 1;
                u.push(y, b, w),
                u.push(b, x, w)
            }
        }
        this.setIndex(u),
        this.setAttribute("position", new wt(c,3)),
        this.setAttribute("normal", new wt(h,3)),
        this.setAttribute("uv", new wt(d,2))
    }
    function To(e, t, n, r) {
        rn.call(this),
        this.type = "LatheGeometry",
        this.parameters = {
            points: e,
            segments: t,
            phiStart: n,
            phiLength: r
        },
        this.fromBufferGeometry(new So(e,t,n,r)),
        this.mergeVertices()
    }
    function So(e, t, n, r) {
        Ot.call(this),
        this.type = "LatheBufferGeometry",
        this.parameters = {
            points: e,
            segments: t,
            phiStart: n,
            phiLength: r
        },
        t = Math.floor(t) || 12,
        n = n || 0,
        r = r || 2 * Math.PI,
        r = L.clamp(r, 0, 2 * Math.PI);
        var i, a, o, s = [], l = [], u = [], c = 1 / t, h = new G, d = new C;
        for (a = 0; a <= t; a++) {
            var f = n + a * c * r
              , p = Math.sin(f)
              , m = Math.cos(f);
            for (o = 0; o <= e.length - 1; o++)
                h.x = e[o].x * p,
                h.y = e[o].y,
                h.z = e[o].x * m,
                l.push(h.x, h.y, h.z),
                d.x = a / t,
                d.y = o / (e.length - 1),
                u.push(d.x, d.y)
        }
        for (a = 0; a < t; a++)
            for (o = 0; o < e.length - 1; o++) {
                var g = i = o + a * e.length
                  , v = i + e.length
                  , y = i + e.length + 1
                  , b = i + 1;
                s.push(g, v, b),
                s.push(v, y, b)
            }
        if (this.setIndex(s),
        this.setAttribute("position", new wt(l,3)),
        this.setAttribute("uv", new wt(u,2)),
        this.computeVertexNormals(),
        r === 2 * Math.PI) {
            var x = this.attributes.normal.array
              , w = new G
              , _ = new G
              , E = new G;
            for (i = t * e.length * 3,
            a = 0,
            o = 0; a < e.length; a++,
            o += 3)
                w.x = x[o + 0],
                w.y = x[o + 1],
                w.z = x[o + 2],
                _.x = x[i + o + 0],
                _.y = x[i + o + 1],
                _.z = x[i + o + 2],
                E.addVectors(w, _).normalize(),
                x[o + 0] = x[i + o + 0] = E.x,
                x[o + 1] = x[i + o + 1] = E.y,
                x[o + 2] = x[i + o + 2] = E.z
        }
    }
    function Mo(e, t) {
        rn.call(this),
        this.type = "ShapeGeometry",
        "object" == typeof t && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."),
        t = t.curveSegments),
        this.parameters = {
            shapes: e,
            curveSegments: t
        },
        this.fromBufferGeometry(new Ao(e,t)),
        this.mergeVertices()
    }
    function Ao(e, t) {
        Ot.call(this),
        this.type = "ShapeBufferGeometry",
        this.parameters = {
            shapes: e,
            curveSegments: t
        },
        t = t || 12;
        var n = []
          , r = []
          , i = []
          , a = []
          , o = 0
          , s = 0;
        if (!1 === Array.isArray(e))
            u(e);
        else
            for (var l = 0; l < e.length; l++)
                u(e[l]),
                this.addGroup(o, s, l),
                o += s,
                s = 0;
        function u(e) {
            var o, l, u, c = r.length / 3, h = e.extractPoints(t), d = h.shape, f = h.holes;
            for (!1 === co.isClockWise(d) && (d = d.reverse()),
            o = 0,
            l = f.length; o < l; o++)
                u = f[o],
                !0 === co.isClockWise(u) && (f[o] = u.reverse());
            var p = co.triangulateShape(d, f);
            for (o = 0,
            l = f.length; o < l; o++)
                u = f[o],
                d = d.concat(u);
            for (o = 0,
            l = d.length; o < l; o++) {
                var m = d[o];
                r.push(m.x, m.y, 0),
                i.push(0, 0, 1),
                a.push(m.x, m.y)
            }
            for (o = 0,
            l = p.length; o < l; o++) {
                var g = p[o]
                  , v = g[0] + c
                  , y = g[1] + c
                  , b = g[2] + c;
                n.push(v, y, b),
                s += 3
            }
        }
        this.setIndex(n),
        this.setAttribute("position", new wt(r,3)),
        this.setAttribute("normal", new wt(i,3)),
        this.setAttribute("uv", new wt(a,2))
    }
    function Ro(e, t) {
        if (t.shapes = [],
        Array.isArray(e))
            for (var n = 0, r = e.length; n < r; n++) {
                var i = e[n];
                t.shapes.push(i.uuid)
            }
        else
            t.shapes.push(e.uuid);
        return t
    }
    function Lo(e, t) {
        Ot.call(this),
        this.type = "EdgesGeometry",
        this.parameters = {
            thresholdAngle: t
        },
        t = void 0 !== t ? t : 1;
        var n, r, i, a, o = [], s = Math.cos(L.DEG2RAD * t), l = [0, 0], u = {}, c = ["a", "b", "c"];
        e.isBufferGeometry ? (a = new rn).fromBufferGeometry(e) : a = e.clone(),
        a.mergeVertices(),
        a.computeFaceNormals();
        for (var h = a.vertices, d = a.faces, f = 0, p = d.length; f < p; f++)
            for (var m = d[f], g = 0; g < 3; g++)
                n = m[c[g]],
                r = m[c[(g + 1) % 3]],
                l[0] = Math.min(n, r),
                l[1] = Math.max(n, r),
                void 0 === u[i = l[0] + "," + l[1]] ? u[i] = {
                    index1: l[0],
                    index2: l[1],
                    face1: f,
                    face2: void 0
                } : u[i].face2 = f;
        for (i in u) {
            var v = u[i];
            if (void 0 === v.face2 || d[v.face1].normal.dot(d[v.face2].normal) <= s) {
                var y = h[v.index1];
                o.push(y.x, y.y, y.z),
                y = h[v.index2],
                o.push(y.x, y.y, y.z)
            }
        }
        this.setAttribute("position", new wt(o,3))
    }
    function Co(e, t, n, r, i, a, o, s) {
        rn.call(this),
        this.type = "CylinderGeometry",
        this.parameters = {
            radiusTop: e,
            radiusBottom: t,
            height: n,
            radialSegments: r,
            heightSegments: i,
            openEnded: a,
            thetaStart: o,
            thetaLength: s
        },
        this.fromBufferGeometry(new Po(e,t,n,r,i,a,o,s)),
        this.mergeVertices()
    }
    function Po(e, t, n, r, i, a, o, s) {
        Ot.call(this),
        this.type = "CylinderBufferGeometry",
        this.parameters = {
            radiusTop: e,
            radiusBottom: t,
            height: n,
            radialSegments: r,
            heightSegments: i,
            openEnded: a,
            thetaStart: o,
            thetaLength: s
        };
        var l = this;
        e = void 0 !== e ? e : 1,
        t = void 0 !== t ? t : 1,
        n = n || 1,
        r = Math.floor(r) || 8,
        i = Math.floor(i) || 1,
        a = void 0 !== a && a,
        o = void 0 !== o ? o : 0,
        s = void 0 !== s ? s : 2 * Math.PI;
        var u = []
          , c = []
          , h = []
          , d = []
          , f = 0
          , p = []
          , m = n / 2
          , g = 0;
        function v(n) {
            var i, a, p, v = new C, y = new G, b = 0, x = !0 === n ? e : t, w = !0 === n ? 1 : -1;
            for (a = f,
            i = 1; i <= r; i++)
                c.push(0, m * w, 0),
                h.push(0, w, 0),
                d.push(.5, .5),
                f++;
            for (p = f,
            i = 0; i <= r; i++) {
                var _ = i / r * s + o
                  , E = Math.cos(_)
                  , T = Math.sin(_);
                y.x = x * T,
                y.y = m * w,
                y.z = x * E,
                c.push(y.x, y.y, y.z),
                h.push(0, w, 0),
                v.x = .5 * E + .5,
                v.y = .5 * T * w + .5,
                d.push(v.x, v.y),
                f++
            }
            for (i = 0; i < r; i++) {
                var S = a + i
                  , M = p + i;
                !0 === n ? u.push(M, M + 1, S) : u.push(M + 1, M, S),
                b += 3
            }
            l.addGroup(g, b, !0 === n ? 1 : 2),
            g += b
        }
        !function() {
            var a, v, y = new G, b = new G, x = 0, w = (t - e) / n;
            for (v = 0; v <= i; v++) {
                var _ = []
                  , E = v / i
                  , T = E * (t - e) + e;
                for (a = 0; a <= r; a++) {
                    var S = a / r
                      , M = S * s + o
                      , A = Math.sin(M)
                      , R = Math.cos(M);
                    b.x = T * A,
                    b.y = -E * n + m,
                    b.z = T * R,
                    c.push(b.x, b.y, b.z),
                    y.set(A, w, R).normalize(),
                    h.push(y.x, y.y, y.z),
                    d.push(S, 1 - E),
                    _.push(f++)
                }
                p.push(_)
            }
            for (a = 0; a < r; a++)
                for (v = 0; v < i; v++) {
                    var L = p[v][a]
                      , C = p[v + 1][a]
                      , P = p[v + 1][a + 1]
                      , O = p[v][a + 1];
                    u.push(L, C, O),
                    u.push(C, P, O),
                    x += 6
                }
            l.addGroup(g, x, 0),
            g += x
        }(),
        !1 === a && (e > 0 && v(!0),
        t > 0 && v(!1)),
        this.setIndex(u),
        this.setAttribute("position", new wt(c,3)),
        this.setAttribute("normal", new wt(h,3)),
        this.setAttribute("uv", new wt(d,2))
    }
    function Oo(e, t, n, r, i, a, o) {
        Co.call(this, 0, e, t, n, r, i, a, o),
        this.type = "ConeGeometry",
        this.parameters = {
            radius: e,
            height: t,
            radialSegments: n,
            heightSegments: r,
            openEnded: i,
            thetaStart: a,
            thetaLength: o
        }
    }
    function ko(e, t, n, r, i, a, o) {
        Po.call(this, 0, e, t, n, r, i, a, o),
        this.type = "ConeBufferGeometry",
        this.parameters = {
            radius: e,
            height: t,
            radialSegments: n,
            heightSegments: r,
            openEnded: i,
            thetaStart: a,
            thetaLength: o
        }
    }
    function Do(e, t, n, r) {
        rn.call(this),
        this.type = "CircleGeometry",
        this.parameters = {
            radius: e,
            segments: t,
            thetaStart: n,
            thetaLength: r
        },
        this.fromBufferGeometry(new Io(e,t,n,r)),
        this.mergeVertices()
    }
    function Io(e, t, n, r) {
        Ot.call(this),
        this.type = "CircleBufferGeometry",
        this.parameters = {
            radius: e,
            segments: t,
            thetaStart: n,
            thetaLength: r
        },
        e = e || 1,
        t = void 0 !== t ? Math.max(3, t) : 8,
        n = void 0 !== n ? n : 0,
        r = void 0 !== r ? r : 2 * Math.PI;
        var i, a, o = [], s = [], l = [], u = [], c = new G, h = new C;
        for (s.push(0, 0, 0),
        l.push(0, 0, 1),
        u.push(.5, .5),
        a = 0,
        i = 3; a <= t; a++,
        i += 3) {
            var d = n + a / t * r;
            c.x = e * Math.cos(d),
            c.y = e * Math.sin(d),
            s.push(c.x, c.y, c.z),
            l.push(0, 0, 1),
            h.x = (s[i] / e + 1) / 2,
            h.y = (s[i + 1] / e + 1) / 2,
            u.push(h.x, h.y)
        }
        for (i = 1; i <= t; i++)
            o.push(i, i + 1, 0);
        this.setIndex(o),
        this.setAttribute("position", new wt(s,3)),
        this.setAttribute("normal", new wt(l,3)),
        this.setAttribute("uv", new wt(u,2))
    }
    yo.prototype = Object.create(rn.prototype),
    yo.prototype.constructor = yo,
    bo.prototype = Object.create(mo.prototype),
    bo.prototype.constructor = bo,
    xo.prototype = Object.create(rn.prototype),
    xo.prototype.constructor = xo,
    wo.prototype = Object.create(Ot.prototype),
    wo.prototype.constructor = wo,
    _o.prototype = Object.create(rn.prototype),
    _o.prototype.constructor = _o,
    Eo.prototype = Object.create(Ot.prototype),
    Eo.prototype.constructor = Eo,
    To.prototype = Object.create(rn.prototype),
    To.prototype.constructor = To,
    So.prototype = Object.create(Ot.prototype),
    So.prototype.constructor = So,
    Mo.prototype = Object.create(rn.prototype),
    Mo.prototype.constructor = Mo,
    Mo.prototype.toJSON = function() {
        var e = rn.prototype.toJSON.call(this);
        return Ro(this.parameters.shapes, e)
    }
    ,
    Ao.prototype = Object.create(Ot.prototype),
    Ao.prototype.constructor = Ao,
    Ao.prototype.toJSON = function() {
        var e = Ot.prototype.toJSON.call(this);
        return Ro(this.parameters.shapes, e)
    }
    ,
    Lo.prototype = Object.create(Ot.prototype),
    Lo.prototype.constructor = Lo,
    Co.prototype = Object.create(rn.prototype),
    Co.prototype.constructor = Co,
    Po.prototype = Object.create(Ot.prototype),
    Po.prototype.constructor = Po,
    Oo.prototype = Object.create(Co.prototype),
    Oo.prototype.constructor = Oo,
    ko.prototype = Object.create(Po.prototype),
    ko.prototype.constructor = ko,
    Do.prototype = Object.create(rn.prototype),
    Do.prototype.constructor = Do,
    Io.prototype = Object.create(Ot.prototype),
    Io.prototype.constructor = Io;
    var No = Object.freeze({
        __proto__: null,
        WireframeGeometry: Ea,
        ParametricGeometry: Ta,
        ParametricBufferGeometry: Sa,
        TetrahedronGeometry: Ra,
        TetrahedronBufferGeometry: La,
        OctahedronGeometry: Ca,
        OctahedronBufferGeometry: Pa,
        IcosahedronGeometry: Oa,
        IcosahedronBufferGeometry: ka,
        DodecahedronGeometry: Da,
        DodecahedronBufferGeometry: Ia,
        PolyhedronGeometry: Ma,
        PolyhedronBufferGeometry: Aa,
        TubeGeometry: Na,
        TubeBufferGeometry: Fa,
        TorusKnotGeometry: Ua,
        TorusKnotBufferGeometry: Ba,
        TorusGeometry: za,
        TorusBufferGeometry: Ga,
        TextGeometry: yo,
        TextBufferGeometry: bo,
        SphereGeometry: xo,
        SphereBufferGeometry: wo,
        RingGeometry: _o,
        RingBufferGeometry: Eo,
        PlaneGeometry: wn,
        PlaneBufferGeometry: _n,
        LatheGeometry: To,
        LatheBufferGeometry: So,
        ShapeGeometry: Mo,
        ShapeBufferGeometry: Ao,
        ExtrudeGeometry: po,
        ExtrudeBufferGeometry: mo,
        EdgesGeometry: Lo,
        ConeGeometry: Oo,
        ConeBufferGeometry: ko,
        CylinderGeometry: Co,
        CylinderBufferGeometry: Po,
        CircleGeometry: Do,
        CircleBufferGeometry: Io,
        BoxGeometry: class extends rn {
            constructor(e, t, n, r, i, a) {
                super(),
                this.type = "BoxGeometry",
                this.parameters = {
                    width: e,
                    height: t,
                    depth: n,
                    widthSegments: r,
                    heightSegments: i,
                    depthSegments: a
                },
                this.fromBufferGeometry(new an(e,t,n,r,i,a)),
                this.mergeVertices()
            }
        }
        ,
        BoxBufferGeometry: an
    });
    function Fo(e) {
        ct.call(this),
        this.type = "ShadowMaterial",
        this.color = new it(0),
        this.transparent = !0,
        this.setValues(e)
    }
    function Uo(e) {
        un.call(this, e),
        this.type = "RawShaderMaterial"
    }
    function Bo(e) {
        ct.call(this),
        this.defines = {
            STANDARD: ""
        },
        this.type = "MeshStandardMaterial",
        this.color = new it(16777215),
        this.roughness = 1,
        this.metalness = 0,
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new it(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = 0,
        this.normalScale = new C(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.roughnessMap = null,
        this.metalnessMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.envMapIntensity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.vertexTangents = !1,
        this.setValues(e)
    }
    function zo(e) {
        Bo.call(this),
        this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        },
        this.type = "MeshPhysicalMaterial",
        this.clearcoat = 0,
        this.clearcoatMap = null,
        this.clearcoatRoughness = 0,
        this.clearcoatRoughnessMap = null,
        this.clearcoatNormalScale = new C(1,1),
        this.clearcoatNormalMap = null,
        this.reflectivity = .5,
        this.sheen = null,
        this.transparency = 0,
        this.setValues(e)
    }
    function Go(e) {
        ct.call(this),
        this.type = "MeshPhongMaterial",
        this.color = new it(16777215),
        this.specular = new it(1118481),
        this.shininess = 30,
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new it(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = 0,
        this.normalScale = new C(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = 0,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(e)
    }
    function Ho(e) {
        ct.call(this),
        this.defines = {
            TOON: ""
        },
        this.type = "MeshToonMaterial",
        this.color = new it(16777215),
        this.specular = new it(1118481),
        this.shininess = 30,
        this.map = null,
        this.gradientMap = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new it(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = 0,
        this.normalScale = new C(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.specularMap = null,
        this.alphaMap = null,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(e)
    }
    function jo(e) {
        ct.call(this),
        this.type = "MeshNormalMaterial",
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = 0,
        this.normalScale = new C(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(e)
    }
    function Vo(e) {
        ct.call(this),
        this.type = "MeshLambertMaterial",
        this.color = new it(16777215),
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new it(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = 0,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(e)
    }
    function Wo(e) {
        ct.call(this),
        this.defines = {
            MATCAP: ""
        },
        this.type = "MeshMatcapMaterial",
        this.color = new it(16777215),
        this.matcap = null,
        this.map = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = 0,
        this.normalScale = new C(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.alphaMap = null,
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(e)
    }
    function qo(e) {
        ta.call(this),
        this.type = "LineDashedMaterial",
        this.scale = 1,
        this.dashSize = 3,
        this.gapSize = 1,
        this.setValues(e)
    }
    Fo.prototype = Object.create(ct.prototype),
    Fo.prototype.constructor = Fo,
    Fo.prototype.isShadowMaterial = !0,
    Fo.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this
    }
    ,
    Uo.prototype = Object.create(un.prototype),
    Uo.prototype.constructor = Uo,
    Uo.prototype.isRawShaderMaterial = !0,
    Bo.prototype = Object.create(ct.prototype),
    Bo.prototype.constructor = Bo,
    Bo.prototype.isMeshStandardMaterial = !0,
    Bo.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.defines = {
            STANDARD: ""
        },
        this.color.copy(e.color),
        this.roughness = e.roughness,
        this.metalness = e.metalness,
        this.map = e.map,
        this.lightMap = e.lightMap,
        this.lightMapIntensity = e.lightMapIntensity,
        this.aoMap = e.aoMap,
        this.aoMapIntensity = e.aoMapIntensity,
        this.emissive.copy(e.emissive),
        this.emissiveMap = e.emissiveMap,
        this.emissiveIntensity = e.emissiveIntensity,
        this.bumpMap = e.bumpMap,
        this.bumpScale = e.bumpScale,
        this.normalMap = e.normalMap,
        this.normalMapType = e.normalMapType,
        this.normalScale.copy(e.normalScale),
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this.roughnessMap = e.roughnessMap,
        this.metalnessMap = e.metalnessMap,
        this.alphaMap = e.alphaMap,
        this.envMap = e.envMap,
        this.envMapIntensity = e.envMapIntensity,
        this.refractionRatio = e.refractionRatio,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.wireframeLinecap = e.wireframeLinecap,
        this.wireframeLinejoin = e.wireframeLinejoin,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this.vertexTangents = e.vertexTangents,
        this
    }
    ,
    zo.prototype = Object.create(Bo.prototype),
    zo.prototype.constructor = zo,
    zo.prototype.isMeshPhysicalMaterial = !0,
    zo.prototype.copy = function(e) {
        return Bo.prototype.copy.call(this, e),
        this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        },
        this.clearcoat = e.clearcoat,
        this.clearcoatMap = e.clearcoatMap,
        this.clearcoatRoughness = e.clearcoatRoughness,
        this.clearcoatRoughnessMap = e.clearcoatRoughnessMap,
        this.clearcoatNormalMap = e.clearcoatNormalMap,
        this.clearcoatNormalScale.copy(e.clearcoatNormalScale),
        this.reflectivity = e.reflectivity,
        e.sheen ? this.sheen = (this.sheen || new it).copy(e.sheen) : this.sheen = null,
        this.transparency = e.transparency,
        this
    }
    ,
    Go.prototype = Object.create(ct.prototype),
    Go.prototype.constructor = Go,
    Go.prototype.isMeshPhongMaterial = !0,
    Go.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.specular.copy(e.specular),
        this.shininess = e.shininess,
        this.map = e.map,
        this.lightMap = e.lightMap,
        this.lightMapIntensity = e.lightMapIntensity,
        this.aoMap = e.aoMap,
        this.aoMapIntensity = e.aoMapIntensity,
        this.emissive.copy(e.emissive),
        this.emissiveMap = e.emissiveMap,
        this.emissiveIntensity = e.emissiveIntensity,
        this.bumpMap = e.bumpMap,
        this.bumpScale = e.bumpScale,
        this.normalMap = e.normalMap,
        this.normalMapType = e.normalMapType,
        this.normalScale.copy(e.normalScale),
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this.specularMap = e.specularMap,
        this.alphaMap = e.alphaMap,
        this.envMap = e.envMap,
        this.combine = e.combine,
        this.reflectivity = e.reflectivity,
        this.refractionRatio = e.refractionRatio,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.wireframeLinecap = e.wireframeLinecap,
        this.wireframeLinejoin = e.wireframeLinejoin,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this
    }
    ,
    Ho.prototype = Object.create(ct.prototype),
    Ho.prototype.constructor = Ho,
    Ho.prototype.isMeshToonMaterial = !0,
    Ho.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.specular.copy(e.specular),
        this.shininess = e.shininess,
        this.map = e.map,
        this.gradientMap = e.gradientMap,
        this.lightMap = e.lightMap,
        this.lightMapIntensity = e.lightMapIntensity,
        this.aoMap = e.aoMap,
        this.aoMapIntensity = e.aoMapIntensity,
        this.emissive.copy(e.emissive),
        this.emissiveMap = e.emissiveMap,
        this.emissiveIntensity = e.emissiveIntensity,
        this.bumpMap = e.bumpMap,
        this.bumpScale = e.bumpScale,
        this.normalMap = e.normalMap,
        this.normalMapType = e.normalMapType,
        this.normalScale.copy(e.normalScale),
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this.specularMap = e.specularMap,
        this.alphaMap = e.alphaMap,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.wireframeLinecap = e.wireframeLinecap,
        this.wireframeLinejoin = e.wireframeLinejoin,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this
    }
    ,
    jo.prototype = Object.create(ct.prototype),
    jo.prototype.constructor = jo,
    jo.prototype.isMeshNormalMaterial = !0,
    jo.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.bumpMap = e.bumpMap,
        this.bumpScale = e.bumpScale,
        this.normalMap = e.normalMap,
        this.normalMapType = e.normalMapType,
        this.normalScale.copy(e.normalScale),
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this
    }
    ,
    Vo.prototype = Object.create(ct.prototype),
    Vo.prototype.constructor = Vo,
    Vo.prototype.isMeshLambertMaterial = !0,
    Vo.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.map = e.map,
        this.lightMap = e.lightMap,
        this.lightMapIntensity = e.lightMapIntensity,
        this.aoMap = e.aoMap,
        this.aoMapIntensity = e.aoMapIntensity,
        this.emissive.copy(e.emissive),
        this.emissiveMap = e.emissiveMap,
        this.emissiveIntensity = e.emissiveIntensity,
        this.specularMap = e.specularMap,
        this.alphaMap = e.alphaMap,
        this.envMap = e.envMap,
        this.combine = e.combine,
        this.reflectivity = e.reflectivity,
        this.refractionRatio = e.refractionRatio,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.wireframeLinecap = e.wireframeLinecap,
        this.wireframeLinejoin = e.wireframeLinejoin,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this
    }
    ,
    Wo.prototype = Object.create(ct.prototype),
    Wo.prototype.constructor = Wo,
    Wo.prototype.isMeshMatcapMaterial = !0,
    Wo.prototype.copy = function(e) {
        return ct.prototype.copy.call(this, e),
        this.defines = {
            MATCAP: ""
        },
        this.color.copy(e.color),
        this.matcap = e.matcap,
        this.map = e.map,
        this.bumpMap = e.bumpMap,
        this.bumpScale = e.bumpScale,
        this.normalMap = e.normalMap,
        this.normalMapType = e.normalMapType,
        this.normalScale.copy(e.normalScale),
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this.alphaMap = e.alphaMap,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this
    }
    ,
    qo.prototype = Object.create(ta.prototype),
    qo.prototype.constructor = qo,
    qo.prototype.isLineDashedMaterial = !0,
    qo.prototype.copy = function(e) {
        return ta.prototype.copy.call(this, e),
        this.scale = e.scale,
        this.dashSize = e.dashSize,
        this.gapSize = e.gapSize,
        this
    }
    ;
    var Ko = Object.freeze({
        __proto__: null,
        ShadowMaterial: Fo,
        SpriteMaterial: Ai,
        RawShaderMaterial: Uo,
        ShaderMaterial: un,
        PointsMaterial: da,
        MeshPhysicalMaterial: zo,
        MeshStandardMaterial: Bo,
        MeshPhongMaterial: Go,
        MeshToonMaterial: Ho,
        MeshNormalMaterial: jo,
        MeshLambertMaterial: Vo,
        MeshDepthMaterial: hi,
        MeshDistanceMaterial: di,
        MeshBasicMaterial: ht,
        MeshMatcapMaterial: Wo,
        LineDashedMaterial: qo,
        LineBasicMaterial: ta,
        Material: ct
    })
      , Yo = {
        arraySlice: function(e, t, n) {
            return Yo.isTypedArray(e) ? new e.constructor(e.subarray(t, void 0 !== n ? n : e.length)) : e.slice(t, n)
        },
        convertArray: function(e, t, n) {
            return !e || !n && e.constructor === t ? e : "number" == typeof t.BYTES_PER_ELEMENT ? new t(e) : Array.prototype.slice.call(e)
        },
        isTypedArray: function(e) {
            return ArrayBuffer.isView(e) && !(e instanceof DataView)
        },
        getKeyframeOrder: function(e) {
            for (var t = e.length, n = new Array(t), r = 0; r !== t; ++r)
                n[r] = r;
            return n.sort((function(t, n) {
                return e[t] - e[n]
            }
            )),
            n
        },
        sortedArray: function(e, t, n) {
            for (var r = e.length, i = new e.constructor(r), a = 0, o = 0; o !== r; ++a)
                for (var s = n[a] * t, l = 0; l !== t; ++l)
                    i[o++] = e[s + l];
            return i
        },
        flattenJSON: function(e, t, n, r) {
            for (var i = 1, a = e[0]; void 0 !== a && void 0 === a[r]; )
                a = e[i++];
            if (void 0 !== a) {
                var o = a[r];
                if (void 0 !== o)
                    if (Array.isArray(o))
                        do {
                            void 0 !== (o = a[r]) && (t.push(a.time),
                            n.push.apply(n, o)),
                            a = e[i++]
                        } while (void 0 !== a);
                    else if (void 0 !== o.toArray)
                        do {
                            void 0 !== (o = a[r]) && (t.push(a.time),
                            o.toArray(n, n.length)),
                            a = e[i++]
                        } while (void 0 !== a);
                    else
                        do {
                            void 0 !== (o = a[r]) && (t.push(a.time),
                            n.push(o)),
                            a = e[i++]
                        } while (void 0 !== a)
            }
        },
        subclip: function(e, t, n, r, i) {
            i = i || 30;
            var a = e.clone();
            a.name = t;
            for (var o = [], s = 0; s < a.tracks.length; ++s) {
                for (var l = a.tracks[s], u = l.getValueSize(), c = [], h = [], d = 0; d < l.times.length; ++d) {
                    var f = l.times[d] * i;
                    if (!(f < n || f >= r)) {
                        c.push(l.times[d]);
                        for (var p = 0; p < u; ++p)
                            h.push(l.values[d * u + p])
                    }
                }
                0 !== c.length && (l.times = Yo.convertArray(c, l.times.constructor),
                l.values = Yo.convertArray(h, l.values.constructor),
                o.push(l))
            }
            a.tracks = o;
            var m = 1 / 0;
            for (s = 0; s < a.tracks.length; ++s)
                m > a.tracks[s].times[0] && (m = a.tracks[s].times[0]);
            for (s = 0; s < a.tracks.length; ++s)
                a.tracks[s].shift(-1 * m);
            return a.resetDuration(),
            a
        }
    };
    function Xo(e, t, n, r) {
        this.parameterPositions = e,
        this._cachedIndex = 0,
        this.resultBuffer = void 0 !== r ? r : new t.constructor(n),
        this.sampleValues = t,
        this.valueSize = n
    }
    function Zo(e, t, n, r) {
        Xo.call(this, e, t, n, r),
        this._weightPrev = -0,
        this._offsetPrev = -0,
        this._weightNext = -0,
        this._offsetNext = -0
    }
    function Jo(e, t, n, r) {
        Xo.call(this, e, t, n, r)
    }
    function Qo(e, t, n, r) {
        Xo.call(this, e, t, n, r)
    }
    function $o(e, t, n, r) {
        if (void 0 === e)
            throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (void 0 === t || 0 === t.length)
            throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
        this.name = e,
        this.times = Yo.convertArray(t, this.TimeBufferType),
        this.values = Yo.convertArray(n, this.ValueBufferType),
        this.setInterpolation(r || this.DefaultInterpolation)
    }
    function es(e, t, n) {
        $o.call(this, e, t, n)
    }
    function ts(e, t, n, r) {
        $o.call(this, e, t, n, r)
    }
    function ns(e, t, n, r) {
        $o.call(this, e, t, n, r)
    }
    function rs(e, t, n, r) {
        Xo.call(this, e, t, n, r)
    }
    function is(e, t, n, r) {
        $o.call(this, e, t, n, r)
    }
    function as(e, t, n, r) {
        $o.call(this, e, t, n, r)
    }
    function os(e, t, n, r) {
        $o.call(this, e, t, n, r)
    }
    function ss(e, t, n) {
        this.name = e,
        this.tracks = n,
        this.duration = void 0 !== t ? t : -1,
        this.uuid = L.generateUUID(),
        this.duration < 0 && this.resetDuration()
    }
    function ls(e) {
        if (void 0 === e.type)
            throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
        var t = function(e) {
            switch (e.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
                return ns;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
                return os;
            case "color":
                return ts;
            case "quaternion":
                return is;
            case "bool":
            case "boolean":
                return es;
            case "string":
                return as
            }
            throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + e)
        }(e.type);
        if (void 0 === e.times) {
            var n = []
              , r = [];
            Yo.flattenJSON(e.keys, n, r, "value"),
            e.times = n,
            e.values = r
        }
        return void 0 !== t.parse ? t.parse(e) : new t(e.name,e.times,e.values,e.interpolation)
    }
    Object.assign(Xo.prototype, {
        evaluate: function(e) {
            var t = this.parameterPositions
              , n = this._cachedIndex
              , r = t[n]
              , i = t[n - 1];
            e: {
                t: {
                    var a;
                    n: {
                        r: if (!(e < r)) {
                            for (var o = n + 2; ; ) {
                                if (void 0 === r) {
                                    if (e < i)
                                        break r;
                                    return n = t.length,
                                    this._cachedIndex = n,
                                    this.afterEnd_(n - 1, e, i)
                                }
                                if (n === o)
                                    break;
                                if (i = r,
                                e < (r = t[++n]))
                                    break t
                            }
                            a = t.length;
                            break n
                        }
                        if (e >= i)
                            break e;
                        var s = t[1];
                        e < s && (n = 2,
                        i = s);
                        for (o = n - 2; ; ) {
                            if (void 0 === i)
                                return this._cachedIndex = 0,
                                this.beforeStart_(0, e, r);
                            if (n === o)
                                break;
                            if (r = i,
                            e >= (i = t[--n - 1]))
                                break t
                        }
                        a = n,
                        n = 0
                    }
                    for (; n < a; ) {
                        var l = n + a >>> 1;
                        e < t[l] ? a = l : n = l + 1
                    }
                    if (r = t[n],
                    void 0 === (i = t[n - 1]))
                        return this._cachedIndex = 0,
                        this.beforeStart_(0, e, r);
                    if (void 0 === r)
                        return n = t.length,
                        this._cachedIndex = n,
                        this.afterEnd_(n - 1, i, e)
                }
                this._cachedIndex = n,
                this.intervalChanged_(n, i, r)
            }
            return this.interpolate_(n, i, e, r)
        },
        settings: null,
        DefaultSettings_: {},
        getSettings_: function() {
            return this.settings || this.DefaultSettings_
        },
        copySampleValue_: function(e) {
            for (var t = this.resultBuffer, n = this.sampleValues, r = this.valueSize, i = e * r, a = 0; a !== r; ++a)
                t[a] = n[i + a];
            return t
        },
        interpolate_: function() {
            throw new Error("call to abstract method")
        },
        intervalChanged_: function() {}
    }),
    Object.assign(Xo.prototype, {
        beforeStart_: Xo.prototype.copySampleValue_,
        afterEnd_: Xo.prototype.copySampleValue_
    }),
    Zo.prototype = Object.assign(Object.create(Xo.prototype), {
        constructor: Zo,
        DefaultSettings_: {
            endingStart: 2400,
            endingEnd: 2400
        },
        intervalChanged_: function(e, t, n) {
            var r = this.parameterPositions
              , i = e - 2
              , a = e + 1
              , o = r[i]
              , s = r[a];
            if (void 0 === o)
                switch (this.getSettings_().endingStart) {
                case 2401:
                    i = e,
                    o = 2 * t - n;
                    break;
                case 2402:
                    o = t + r[i = r.length - 2] - r[i + 1];
                    break;
                default:
                    i = e,
                    o = n
                }
            if (void 0 === s)
                switch (this.getSettings_().endingEnd) {
                case 2401:
                    a = e,
                    s = 2 * n - t;
                    break;
                case 2402:
                    a = 1,
                    s = n + r[1] - r[0];
                    break;
                default:
                    a = e - 1,
                    s = t
                }
            var l = .5 * (n - t)
              , u = this.valueSize;
            this._weightPrev = l / (t - o),
            this._weightNext = l / (s - n),
            this._offsetPrev = i * u,
            this._offsetNext = a * u
        },
        interpolate_: function(e, t, n, r) {
            for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = e * o, l = s - o, u = this._offsetPrev, c = this._offsetNext, h = this._weightPrev, d = this._weightNext, f = (n - t) / (r - t), p = f * f, m = p * f, g = -h * m + 2 * h * p - h * f, v = (1 + h) * m + (-1.5 - 2 * h) * p + (-.5 + h) * f + 1, y = (-1 - d) * m + (1.5 + d) * p + .5 * f, b = d * m - d * p, x = 0; x !== o; ++x)
                i[x] = g * a[u + x] + v * a[l + x] + y * a[s + x] + b * a[c + x];
            return i
        }
    }),
    Jo.prototype = Object.assign(Object.create(Xo.prototype), {
        constructor: Jo,
        interpolate_: function(e, t, n, r) {
            for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = e * o, l = s - o, u = (n - t) / (r - t), c = 1 - u, h = 0; h !== o; ++h)
                i[h] = a[l + h] * c + a[s + h] * u;
            return i
        }
    }),
    Qo.prototype = Object.assign(Object.create(Xo.prototype), {
        constructor: Qo,
        interpolate_: function(e) {
            return this.copySampleValue_(e - 1)
        }
    }),
    Object.assign($o, {
        toJSON: function(e) {
            var t, n = e.constructor;
            if (void 0 !== n.toJSON)
                t = n.toJSON(e);
            else {
                t = {
                    name: e.name,
                    times: Yo.convertArray(e.times, Array),
                    values: Yo.convertArray(e.values, Array)
                };
                var r = e.getInterpolation();
                r !== e.DefaultInterpolation && (t.interpolation = r)
            }
            return t.type = e.ValueTypeName,
            t
        }
    }),
    Object.assign($o.prototype, {
        constructor: $o,
        TimeBufferType: Float32Array,
        ValueBufferType: Float32Array,
        DefaultInterpolation: 2301,
        InterpolantFactoryMethodDiscrete: function(e) {
            return new Qo(this.times,this.values,this.getValueSize(),e)
        },
        InterpolantFactoryMethodLinear: function(e) {
            return new Jo(this.times,this.values,this.getValueSize(),e)
        },
        InterpolantFactoryMethodSmooth: function(e) {
            return new Zo(this.times,this.values,this.getValueSize(),e)
        },
        setInterpolation: function(e) {
            var t;
            switch (e) {
            case 2300:
                t = this.InterpolantFactoryMethodDiscrete;
                break;
            case 2301:
                t = this.InterpolantFactoryMethodLinear;
                break;
            case 2302:
                t = this.InterpolantFactoryMethodSmooth
            }
            if (void 0 === t) {
                var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                if (void 0 === this.createInterpolant) {
                    if (e === this.DefaultInterpolation)
                        throw new Error(n);
                    this.setInterpolation(this.DefaultInterpolation)
                }
                return console.warn("THREE.KeyframeTrack:", n),
                this
            }
            return this.createInterpolant = t,
            this
        },
        getInterpolation: function() {
            switch (this.createInterpolant) {
            case this.InterpolantFactoryMethodDiscrete:
                return 2300;
            case this.InterpolantFactoryMethodLinear:
                return 2301;
            case this.InterpolantFactoryMethodSmooth:
                return 2302
            }
        },
        getValueSize: function() {
            return this.values.length / this.times.length
        },
        shift: function(e) {
            if (0 !== e)
                for (var t = this.times, n = 0, r = t.length; n !== r; ++n)
                    t[n] += e;
            return this
        },
        scale: function(e) {
            if (1 !== e)
                for (var t = this.times, n = 0, r = t.length; n !== r; ++n)
                    t[n] *= e;
            return this
        },
        trim: function(e, t) {
            for (var n = this.times, r = n.length, i = 0, a = r - 1; i !== r && n[i] < e; )
                ++i;
            for (; -1 !== a && n[a] > t; )
                --a;
            if (++a,
            0 !== i || a !== r) {
                i >= a && (i = (a = Math.max(a, 1)) - 1);
                var o = this.getValueSize();
                this.times = Yo.arraySlice(n, i, a),
                this.values = Yo.arraySlice(this.values, i * o, a * o)
            }
            return this
        },
        validate: function() {
            var e = !0
              , t = this.getValueSize();
            t - Math.floor(t) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this),
            e = !1);
            var n = this.times
              , r = this.values
              , i = n.length;
            0 === i && (console.error("THREE.KeyframeTrack: Track is empty.", this),
            e = !1);
            for (var a = null, o = 0; o !== i; o++) {
                var s = n[o];
                if ("number" == typeof s && isNaN(s)) {
                    console.error("THREE.KeyframeTrack: Time is not a valid number.", this, o, s),
                    e = !1;
                    break
                }
                if (null !== a && a > s) {
                    console.error("THREE.KeyframeTrack: Out of order keys.", this, o, s, a),
                    e = !1;
                    break
                }
                a = s
            }
            if (void 0 !== r && Yo.isTypedArray(r)) {
                o = 0;
                for (var l = r.length; o !== l; ++o) {
                    var u = r[o];
                    if (isNaN(u)) {
                        console.error("THREE.KeyframeTrack: Value is not a valid number.", this, o, u),
                        e = !1;
                        break
                    }
                }
            }
            return e
        },
        optimize: function() {
            for (var e = Yo.arraySlice(this.times), t = Yo.arraySlice(this.values), n = this.getValueSize(), r = 2302 === this.getInterpolation(), i = 1, a = e.length - 1, o = 1; o < a; ++o) {
                var s = !1
                  , l = e[o];
                if (l !== e[o + 1] && (1 !== o || l !== l[0]))
                    if (r)
                        s = !0;
                    else
                        for (var u = o * n, c = u - n, h = u + n, d = 0; d !== n; ++d) {
                            var f = t[u + d];
                            if (f !== t[c + d] || f !== t[h + d]) {
                                s = !0;
                                break
                            }
                        }
                if (s) {
                    if (o !== i) {
                        e[i] = e[o];
                        var p = o * n
                          , m = i * n;
                        for (d = 0; d !== n; ++d)
                            t[m + d] = t[p + d]
                    }
                    ++i
                }
            }
            if (a > 0) {
                e[i] = e[a];
                for (p = a * n,
                m = i * n,
                d = 0; d !== n; ++d)
                    t[m + d] = t[p + d];
                ++i
            }
            return i !== e.length ? (this.times = Yo.arraySlice(e, 0, i),
            this.values = Yo.arraySlice(t, 0, i * n)) : (this.times = e,
            this.values = t),
            this
        },
        clone: function() {
            var e = Yo.arraySlice(this.times, 0)
              , t = Yo.arraySlice(this.values, 0)
              , n = new (0,
            this.constructor)(this.name,e,t);
            return n.createInterpolant = this.createInterpolant,
            n
        }
    }),
    es.prototype = Object.assign(Object.create($o.prototype), {
        constructor: es,
        ValueTypeName: "bool",
        ValueBufferType: Array,
        DefaultInterpolation: 2300,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0
    }),
    ts.prototype = Object.assign(Object.create($o.prototype), {
        constructor: ts,
        ValueTypeName: "color"
    }),
    ns.prototype = Object.assign(Object.create($o.prototype), {
        constructor: ns,
        ValueTypeName: "number"
    }),
    rs.prototype = Object.assign(Object.create(Xo.prototype), {
        constructor: rs,
        interpolate_: function(e, t, n, r) {
            for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = e * o, l = (n - t) / (r - t), u = s + o; s !== u; s += 4)
                U.slerpFlat(i, 0, a, s - o, a, s, l);
            return i
        }
    }),
    is.prototype = Object.assign(Object.create($o.prototype), {
        constructor: is,
        ValueTypeName: "quaternion",
        DefaultInterpolation: 2301,
        InterpolantFactoryMethodLinear: function(e) {
            return new rs(this.times,this.values,this.getValueSize(),e)
        },
        InterpolantFactoryMethodSmooth: void 0
    }),
    as.prototype = Object.assign(Object.create($o.prototype), {
        constructor: as,
        ValueTypeName: "string",
        ValueBufferType: Array,
        DefaultInterpolation: 2300,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0
    }),
    os.prototype = Object.assign(Object.create($o.prototype), {
        constructor: os,
        ValueTypeName: "vector"
    }),
    Object.assign(ss, {
        parse: function(e) {
            for (var t = [], n = e.tracks, r = 1 / (e.fps || 1), i = 0, a = n.length; i !== a; ++i)
                t.push(ls(n[i]).scale(r));
            return new ss(e.name,e.duration,t)
        },
        toJSON: function(e) {
            for (var t = [], n = e.tracks, r = {
                name: e.name,
                duration: e.duration,
                tracks: t,
                uuid: e.uuid
            }, i = 0, a = n.length; i !== a; ++i)
                t.push($o.toJSON(n[i]));
            return r
        },
        CreateFromMorphTargetSequence: function(e, t, n, r) {
            for (var i = t.length, a = [], o = 0; o < i; o++) {
                var s = []
                  , l = [];
                s.push((o + i - 1) % i, o, (o + 1) % i),
                l.push(0, 1, 0);
                var u = Yo.getKeyframeOrder(s);
                s = Yo.sortedArray(s, 1, u),
                l = Yo.sortedArray(l, 1, u),
                r || 0 !== s[0] || (s.push(i),
                l.push(l[0])),
                a.push(new ns(".morphTargetInfluences[" + t[o].name + "]",s,l).scale(1 / n))
            }
            return new ss(e,-1,a)
        },
        findByName: function(e, t) {
            var n = e;
            if (!Array.isArray(e)) {
                var r = e;
                n = r.geometry && r.geometry.animations || r.animations
            }
            for (var i = 0; i < n.length; i++)
                if (n[i].name === t)
                    return n[i];
            return null
        },
        CreateClipsFromMorphTargetSequences: function(e, t, n) {
            for (var r = {}, i = /^([\w-]*?)([\d]+)$/, a = 0, o = e.length; a < o; a++) {
                var s = e[a]
                  , l = s.name.match(i);
                if (l && l.length > 1) {
                    var u = r[h = l[1]];
                    u || (r[h] = u = []),
                    u.push(s)
                }
            }
            var c = [];
            for (var h in r)
                c.push(ss.CreateFromMorphTargetSequence(h, r[h], t, n));
            return c
        },
        parseAnimation: function(e, t) {
            if (!e)
                return console.error("THREE.AnimationClip: No animation in JSONLoader data."),
                null;
            for (var n = function(e, t, n, r, i) {
                if (0 !== n.length) {
                    var a = []
                      , o = [];
                    Yo.flattenJSON(n, a, o, r),
                    0 !== a.length && i.push(new e(t,a,o))
                }
            }, r = [], i = e.name || "default", a = e.length || -1, o = e.fps || 30, s = e.hierarchy || [], l = 0; l < s.length; l++) {
                var u = s[l].keys;
                if (u && 0 !== u.length)
                    if (u[0].morphTargets) {
                        for (var c = {}, h = 0; h < u.length; h++)
                            if (u[h].morphTargets)
                                for (var d = 0; d < u[h].morphTargets.length; d++)
                                    c[u[h].morphTargets[d]] = -1;
                        for (var f in c) {
                            var p = []
                              , m = [];
                            for (d = 0; d !== u[h].morphTargets.length; ++d) {
                                var g = u[h];
                                p.push(g.time),
                                m.push(g.morphTarget === f ? 1 : 0)
                            }
                            r.push(new ns(".morphTargetInfluence[" + f + "]",p,m))
                        }
                        a = c.length * (o || 1)
                    } else {
                        var v = ".bones[" + t[l].name + "]";
                        n(os, v + ".position", u, "pos", r),
                        n(is, v + ".quaternion", u, "rot", r),
                        n(os, v + ".scale", u, "scl", r)
                    }
            }
            return 0 === r.length ? null : new ss(i,a,r)
        }
    }),
    Object.assign(ss.prototype, {
        resetDuration: function() {
            for (var e = 0, t = 0, n = this.tracks.length; t !== n; ++t) {
                var r = this.tracks[t];
                e = Math.max(e, r.times[r.times.length - 1])
            }
            return this.duration = e,
            this
        },
        trim: function() {
            for (var e = 0; e < this.tracks.length; e++)
                this.tracks[e].trim(0, this.duration);
            return this
        },
        validate: function() {
            for (var e = !0, t = 0; t < this.tracks.length; t++)
                e = e && this.tracks[t].validate();
            return e
        },
        optimize: function() {
            for (var e = 0; e < this.tracks.length; e++)
                this.tracks[e].optimize();
            return this
        },
        clone: function() {
            for (var e = [], t = 0; t < this.tracks.length; t++)
                e.push(this.tracks[t].clone());
            return new ss(this.name,this.duration,e)
        }
    });
    var us = {
        enabled: !1,
        files: {},
        add: function(e, t) {
            !1 !== this.enabled && (this.files[e] = t)
        },
        get: function(e) {
            if (!1 !== this.enabled)
                return this.files[e]
        },
        remove: function(e) {
            delete this.files[e]
        },
        clear: function() {
            this.files = {}
        }
    };
    function cs(e, t, n) {
        var r = this
          , i = !1
          , a = 0
          , o = 0
          , s = void 0
          , l = [];
        this.onStart = void 0,
        this.onLoad = e,
        this.onProgress = t,
        this.onError = n,
        this.itemStart = function(e) {
            o++,
            !1 === i && void 0 !== r.onStart && r.onStart(e, a, o),
            i = !0
        }
        ,
        this.itemEnd = function(e) {
            a++,
            void 0 !== r.onProgress && r.onProgress(e, a, o),
            a === o && (i = !1,
            void 0 !== r.onLoad && r.onLoad())
        }
        ,
        this.itemError = function(e) {
            void 0 !== r.onError && r.onError(e)
        }
        ,
        this.resolveURL = function(e) {
            return s ? s(e) : e
        }
        ,
        this.setURLModifier = function(e) {
            return s = e,
            this
        }
        ,
        this.addHandler = function(e, t) {
            return l.push(e, t),
            this
        }
        ,
        this.removeHandler = function(e) {
            var t = l.indexOf(e);
            return -1 !== t && l.splice(t, 2),
            this
        }
        ,
        this.getHandler = function(e) {
            for (var t = 0, n = l.length; t < n; t += 2) {
                var r = l[t]
                  , i = l[t + 1];
                if (r.global && (r.lastIndex = 0),
                r.test(e))
                    return i
            }
            return null
        }
    }
    var hs = new cs;
    function ds(e) {
        this.manager = void 0 !== e ? e : hs,
        this.crossOrigin = "anonymous",
        this.path = "",
        this.resourcePath = ""
    }
    Object.assign(ds.prototype, {
        load: function() {},
        parse: function() {},
        setCrossOrigin: function(e) {
            return this.crossOrigin = e,
            this
        },
        setPath: function(e) {
            return this.path = e,
            this
        },
        setResourcePath: function(e) {
            return this.resourcePath = e,
            this
        }
    });
    var fs = {};
    function ps(e) {
        ds.call(this, e)
    }
    function ms(e) {
        ds.call(this, e)
    }
    function gs(e) {
        ds.call(this, e)
    }
    function vs(e) {
        ds.call(this, e)
    }
    function ys(e) {
        ds.call(this, e)
    }
    function bs(e) {
        ds.call(this, e)
    }
    function xs(e) {
        ds.call(this, e)
    }
    function ws() {
        this.type = "Curve",
        this.arcLengthDivisions = 200
    }
    function _s(e, t, n, r, i, a, o, s) {
        ws.call(this),
        this.type = "EllipseCurve",
        this.aX = e || 0,
        this.aY = t || 0,
        this.xRadius = n || 1,
        this.yRadius = r || 1,
        this.aStartAngle = i || 0,
        this.aEndAngle = a || 2 * Math.PI,
        this.aClockwise = o || !1,
        this.aRotation = s || 0
    }
    function Es(e, t, n, r, i, a) {
        _s.call(this, e, t, n, n, r, i, a),
        this.type = "ArcCurve"
    }
    function Ts() {
        var e = 0
          , t = 0
          , n = 0
          , r = 0;
        function i(i, a, o, s) {
            e = i,
            t = o,
            n = -3 * i + 3 * a - 2 * o - s,
            r = 2 * i - 2 * a + o + s
        }
        return {
            initCatmullRom: function(e, t, n, r, a) {
                i(t, n, a * (n - e), a * (r - t))
            },
            initNonuniformCatmullRom: function(e, t, n, r, a, o, s) {
                var l = (t - e) / a - (n - e) / (a + o) + (n - t) / o
                  , u = (n - t) / o - (r - t) / (o + s) + (r - n) / s;
                i(t, n, l *= o, u *= o)
            },
            calc: function(i) {
                var a = i * i;
                return e + t * i + n * a + r * (a * i)
            }
        }
    }
    ps.prototype = Object.assign(Object.create(ds.prototype), {
        constructor: ps,
        load: function(e, t, n, r) {
            void 0 === e && (e = ""),
            void 0 !== this.path && (e = this.path + e),
            e = this.manager.resolveURL(e);
            var i = this
              , a = us.get(e);
            if (void 0 !== a)
                return i.manager.itemStart(e),
                setTimeout((function() {
                    t && t(a),
                    i.manager.itemEnd(e)
                }
                ), 0),
                a;
            if (void 0 === fs[e]) {
                var o = e.match(/^data:(.*?)(;base64)?,(.*)$/);
                if (o) {
                    var s = o[1]
                      , l = !!o[2]
                      , u = o[3];
                    u = decodeURIComponent(u),
                    l && (u = atob(u));
                    try {
                        var c, h = (this.responseType || "").toLowerCase();
                        switch (h) {
                        case "arraybuffer":
                        case "blob":
                            for (var d = new Uint8Array(u.length), f = 0; f < u.length; f++)
                                d[f] = u.charCodeAt(f);
                            c = "blob" === h ? new Blob([d.buffer],{
                                type: s
                            }) : d.buffer;
                            break;
                        case "document":
                            var p = new DOMParser;
                            c = p.parseFromString(u, s);
                            break;
                        case "json":
                            c = JSON.parse(u);
                            break;
                        default:
                            c = u
                        }
                        setTimeout((function() {
                            t && t(c),
                            i.manager.itemEnd(e)
                        }
                        ), 0)
                    } catch (t) {
                        setTimeout((function() {
                            r && r(t),
                            i.manager.itemError(e),
                            i.manager.itemEnd(e)
                        }
                        ), 0)
                    }
                } else {
                    fs[e] = [],
                    fs[e].push({
                        onLoad: t,
                        onProgress: n,
                        onError: r
                    });
                    var m = new XMLHttpRequest;
                    for (var g in m.open("GET", e, !0),
                    m.addEventListener("load", (function(t) {
                        var n = this.response
                          , r = fs[e];
                        if (delete fs[e],
                        200 === this.status || 0 === this.status) {
                            0 === this.status && console.warn("THREE.FileLoader: HTTP Status 0 received."),
                            us.add(e, n);
                            for (var a = 0, o = r.length; a < o; a++) {
                                (s = r[a]).onLoad && s.onLoad(n)
                            }
                            i.manager.itemEnd(e)
                        } else {
                            for (a = 0,
                            o = r.length; a < o; a++) {
                                var s;
                                (s = r[a]).onError && s.onError(t)
                            }
                            i.manager.itemError(e),
                            i.manager.itemEnd(e)
                        }
                    }
                    ), !1),
                    m.addEventListener("progress", (function(t) {
                        for (var n = fs[e], r = 0, i = n.length; r < i; r++) {
                            var a = n[r];
                            a.onProgress && a.onProgress(t)
                        }
                    }
                    ), !1),
                    m.addEventListener("error", (function(t) {
                        var n = fs[e];
                        delete fs[e];
                        for (var r = 0, a = n.length; r < a; r++) {
                            var o = n[r];
                            o.onError && o.onError(t)
                        }
                        i.manager.itemError(e),
                        i.manager.itemEnd(e)
                    }
                    ), !1),
                    m.addEventListener("abort", (function(t) {
                        var n = fs[e];
                        delete fs[e];
                        for (var r = 0, a = n.length; r < a; r++) {
                            var o = n[r];
                            o.onError && o.onError(t)
                        }
                        i.manager.itemError(e),
                        i.manager.itemEnd(e)
                    }
                    ), !1),
                    void 0 !== this.responseType && (m.responseType = this.responseType),
                    void 0 !== this.withCredentials && (m.withCredentials = this.withCredentials),
                    m.overrideMimeType && m.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain"),
                    this.requestHeader)
                        m.setRequestHeader(g, this.requestHeader[g]);
                    m.send(null)
                }
                return i.manager.itemStart(e),
                m
            }
            fs[e].push({
                onLoad: t,
                onProgress: n,
                onError: r
            })
        },
        setResponseType: function(e) {
            return this.responseType = e,
            this
        },
        setWithCredentials: function(e) {
            return this.withCredentials = e,
            this
        },
        setMimeType: function(e) {
            return this.mimeType = e,
            this
        },
        setRequestHeader: function(e) {
            return this.requestHeader = e,
            this
        }
    }),
    ms.prototype = Object.assign(Object.create(ds.prototype), {
        constructor: ms,
        load: function(e, t, n, r) {
            var i = this
              , a = new ps(i.manager);
            a.setPath(i.path),
            a.load(e, (function(e) {
                t(i.parse(JSON.parse(e)))
            }
            ), n, r)
        },
        parse: function(e) {
            for (var t = [], n = 0; n < e.length; n++) {
                var r = ss.parse(e[n]);
                t.push(r)
            }
            return t
        }
    }),
    gs.prototype = Object.assign(Object.create(ds.prototype), {
        constructor: gs,
        load: function(e, t, n, r) {
            var i = this
              , a = []
              , o = new xa;
            o.image = a;
            var s = new ps(this.manager);
            function l(l) {
                s.load(e[l], (function(e) {
                    var n = i.parse(e, !0);
                    a[l] = {
                        width: n.width,
                        height: n.height,
                        format: n.format,
                        mipmaps: n.mipmaps
                    },
                    6 === (u += 1) && (1 === n.mipmapCount && (o.minFilter = 1006),
                    o.format = n.format,
                    o.needsUpdate = !0,
                    t && t(o))
                }
                ), n, r)
            }
            if (s.setPath(this.path),
            s.setResponseType("arraybuffer"),
            Array.isArray(e))
                for (var u = 0, c = 0, h = e.length; c < h; ++c)
                    l(c);
            else
                s.load(e, (function(e) {
                    var n = i.parse(e, !0);
                    if (n.isCubemap)
                        for (var r = n.mipmaps.length / n.mipmapCount, s = 0; s < r; s++) {
                            a[s] = {
                                mipmaps: []
                            };
                            for (var l = 0; l < n.mipmapCount; l++)
                                a[s].mipmaps.push(n.mipmaps[s * n.mipmapCount + l]),
                                a[s].format = n.format,
                                a[s].width = n.width,
                                a[s].height = n.height
                        }
                    else
                        o.image.width = n.width,
                        o.image.height = n.height,
                        o.mipmaps = n.mipmaps;
                    1 === n.mipmapCount && (o.minFilter = 1006),
                    o.format = n.format,
                    o.needsUpdate = !0,
                    t && t(o)
                }
                ), n, r);
            return o
        }
    }),
    vs.prototype = Object.assign(Object.create(ds.prototype), {
        constructor: vs,
        load: function(e, t, n, r) {
            var i = this
              , a = new pn
              , o = new ps(this.manager);
            return o.setResponseType("arraybuffer"),
            o.setPath(this.path),
            o.load(e, (function(e) {
                var n = i.parse(e);
                n && (void 0 !== n.image ? a.image = n.image : void 0 !== n.data && (a.image.width = n.width,
                a.image.height = n.height,
                a.image.data = n.data),
                a.wrapS = void 0 !== n.wrapS ? n.wrapS : 1001,
                a.wrapT = void 0 !== n.wrapT ? n.wrapT : 1001,
                a.magFilter = void 0 !== n.magFilter ? n.magFilter : 1006,
                a.minFilter = void 0 !== n.minFilter ? n.minFilter : 1006,
                a.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1,
                void 0 !== n.format && (a.format = n.format),
                void 0 !== n.type && (a.type = n.type),
                void 0 !== n.mipmaps && (a.mipmaps = n.mipmaps,
                a.minFilter = 1008),
                1 === n.mipmapCount && (a.minFilter = 1006),
                a.needsUpdate = !0,
                t && t(a, n))
            }
            ), n, r),
            a
        }
    }),
    ys.prototype = Object.assign(Object.create(ds.prototype), {
        constructor: ys,
        load: function(e, t, n, r) {
            void 0 !== this.path && (e = this.path + e),
            e = this.manager.resolveURL(e);
            var i = this
              , a = us.get(e);
            if (void 0 !== a)
                return i.manager.itemStart(e),
                setTimeout((function() {
                    t && t(a),
                    i.manager.itemEnd(e)
                }
                ), 0),
                a;
            var o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
            function s() {
                o.removeEventListener("load", s, !1),
                o.removeEventListener("error", l, !1),
                us.add(e, this),
                t && t(this),
                i.manager.itemEnd(e)
            }
            function l(t) {
                o.removeEventListener("load", s, !1),
                o.removeEventListener("error", l, !1),
                r && r(t),
                i.manager.itemError(e),
                i.manager.itemEnd(e)
            }
            return o.addEventListener("load", s, !1),
            o.addEventListener("error", l, !1),
            "data:" !== e.substr(0, 5) && void 0 !== this.crossOrigin && (o.crossOrigin = this.crossOrigin),
            i.manager.itemStart(e),
            o.src = e,
            o
        }
    }),
    bs.prototype = Object.assign(Object.create(ds.prototype), {
        constructor: bs,
        load: function(e, t, n, r) {
            var i = new Nn
              , a = new ys(this.manager);
            a.setCrossOrigin(this.crossOrigin),
            a.setPath(this.path);
            var o = 0;
            function s(n) {
                a.load(e[n], (function(e) {
                    i.images[n] = e,
                    6 === ++o && (i.needsUpdate = !0,
                    t && t(i))
                }
                ), void 0, r)
            }
            for (var l = 0; l < e.length; ++l)
                s(l);
            return i
        }
    }),
    xs.prototype = Object.assign(Object.create(ds.prototype), {
        constructor: xs,
        load: function(e, t, n, r) {
            var i = new D
              , a = new ys(this.manager);
            return a.setCrossOrigin(this.crossOrigin),
            a.setPath(this.path),
            a.load(e, (function(n) {
                i.image = n;
                var r = e.search(/\.jpe?g($|\?)/i) > 0 || 0 === e.search(/^data\:image\/jpeg/);
                i.format = r ? 1022 : 1023,
                i.needsUpdate = !0,
                void 0 !== t && t(i)
            }
            ), n, r),
            i
        }
    }),
    Object.assign(ws.prototype, {
        getPoint: function() {
            return console.warn("THREE.Curve: .getPoint() not implemented."),
            null
        },
        getPointAt: function(e, t) {
            var n = this.getUtoTmapping(e);
            return this.getPoint(n, t)
        },
        getPoints: function(e) {
            void 0 === e && (e = 5);
            for (var t = [], n = 0; n <= e; n++)
                t.push(this.getPoint(n / e));
            return t
        },
        getSpacedPoints: function(e) {
            void 0 === e && (e = 5);
            for (var t = [], n = 0; n <= e; n++)
                t.push(this.getPointAt(n / e));
            return t
        },
        getLength: function() {
            var e = this.getLengths();
            return e[e.length - 1]
        },
        getLengths: function(e) {
            if (void 0 === e && (e = this.arcLengthDivisions),
            this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate)
                return this.cacheArcLengths;
            this.needsUpdate = !1;
            var t, n, r = [], i = this.getPoint(0), a = 0;
            for (r.push(0),
            n = 1; n <= e; n++)
                a += (t = this.getPoint(n / e)).distanceTo(i),
                r.push(a),
                i = t;
            return this.cacheArcLengths = r,
            r
        },
        updateArcLengths: function() {
            this.needsUpdate = !0,
            this.getLengths()
        },
        getUtoTmapping: function(e, t) {
            var n, r = this.getLengths(), i = 0, a = r.length;
            n = t || e * r[a - 1];
            for (var o, s = 0, l = a - 1; s <= l; )
                if ((o = r[i = Math.floor(s + (l - s) / 2)] - n) < 0)
                    s = i + 1;
                else {
                    if (!(o > 0)) {
                        l = i;
                        break
                    }
                    l = i - 1
                }
            if (r[i = l] === n)
                return i / (a - 1);
            var u = r[i];
            return (i + (n - u) / (r[i + 1] - u)) / (a - 1)
        },
        getTangent: function(e) {
            var t = e - 1e-4
              , n = e + 1e-4;
            t < 0 && (t = 0),
            n > 1 && (n = 1);
            var r = this.getPoint(t);
            return this.getPoint(n).clone().sub(r).normalize()
        },
        getTangentAt: function(e) {
            var t = this.getUtoTmapping(e);
            return this.getTangent(t)
        },
        computeFrenetFrames: function(e, t) {
            var n, r, i, a = new G, o = [], s = [], l = [], u = new G, c = new X;
            for (n = 0; n <= e; n++)
                r = n / e,
                o[n] = this.getTangentAt(r),
                o[n].normalize();
            s[0] = new G,
            l[0] = new G;
            var h = Number.MAX_VALUE
              , d = Math.abs(o[0].x)
              , f = Math.abs(o[0].y)
              , p = Math.abs(o[0].z);
            for (d <= h && (h = d,
            a.set(1, 0, 0)),
            f <= h && (h = f,
            a.set(0, 1, 0)),
            p <= h && a.set(0, 0, 1),
            u.crossVectors(o[0], a).normalize(),
            s[0].crossVectors(o[0], u),
            l[0].crossVectors(o[0], s[0]),
            n = 1; n <= e; n++)
                s[n] = s[n - 1].clone(),
                l[n] = l[n - 1].clone(),
                u.crossVectors(o[n - 1], o[n]),
                u.length() > Number.EPSILON && (u.normalize(),
                i = Math.acos(L.clamp(o[n - 1].dot(o[n]), -1, 1)),
                s[n].applyMatrix4(c.makeRotationAxis(u, i))),
                l[n].crossVectors(o[n], s[n]);
            if (!0 === t)
                for (i = Math.acos(L.clamp(s[0].dot(s[e]), -1, 1)),
                i /= e,
                o[0].dot(u.crossVectors(s[0], s[e])) > 0 && (i = -i),
                n = 1; n <= e; n++)
                    s[n].applyMatrix4(c.makeRotationAxis(o[n], i * n)),
                    l[n].crossVectors(o[n], s[n]);
            return {
                tangents: o,
                normals: s,
                binormals: l
            }
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.arcLengthDivisions = e.arcLengthDivisions,
            this
        },
        toJSON: function() {
            var e = {
                metadata: {
                    version: 4.5,
                    type: "Curve",
                    generator: "Curve.toJSON"
                }
            };
            return e.arcLengthDivisions = this.arcLengthDivisions,
            e.type = this.type,
            e
        },
        fromJSON: function(e) {
            return this.arcLengthDivisions = e.arcLengthDivisions,
            this
        }
    }),
    _s.prototype = Object.create(ws.prototype),
    _s.prototype.constructor = _s,
    _s.prototype.isEllipseCurve = !0,
    _s.prototype.getPoint = function(e, t) {
        for (var n = t || new C, r = 2 * Math.PI, i = this.aEndAngle - this.aStartAngle, a = Math.abs(i) < Number.EPSILON; i < 0; )
            i += r;
        for (; i > r; )
            i -= r;
        i < Number.EPSILON && (i = a ? 0 : r),
        !0 !== this.aClockwise || a || (i === r ? i = -r : i -= r);
        var o = this.aStartAngle + e * i
          , s = this.aX + this.xRadius * Math.cos(o)
          , l = this.aY + this.yRadius * Math.sin(o);
        if (0 !== this.aRotation) {
            var u = Math.cos(this.aRotation)
              , c = Math.sin(this.aRotation)
              , h = s - this.aX
              , d = l - this.aY;
            s = h * u - d * c + this.aX,
            l = h * c + d * u + this.aY
        }
        return n.set(s, l)
    }
    ,
    _s.prototype.copy = function(e) {
        return ws.prototype.copy.call(this, e),
        this.aX = e.aX,
        this.aY = e.aY,
        this.xRadius = e.xRadius,
        this.yRadius = e.yRadius,
        this.aStartAngle = e.aStartAngle,
        this.aEndAngle = e.aEndAngle,
        this.aClockwise = e.aClockwise,
        this.aRotation = e.aRotation,
        this
    }
    ,
    _s.prototype.toJSON = function() {
        var e = ws.prototype.toJSON.call(this);
        return e.aX = this.aX,
        e.aY = this.aY,
        e.xRadius = this.xRadius,
        e.yRadius = this.yRadius,
        e.aStartAngle = this.aStartAngle,
        e.aEndAngle = this.aEndAngle,
        e.aClockwise = this.aClockwise,
        e.aRotation = this.aRotation,
        e
    }
    ,
    _s.prototype.fromJSON = function(e) {
        return ws.prototype.fromJSON.call(this, e),
        this.aX = e.aX,
        this.aY = e.aY,
        this.xRadius = e.xRadius,
        this.yRadius = e.yRadius,
        this.aStartAngle = e.aStartAngle,
        this.aEndAngle = e.aEndAngle,
        this.aClockwise = e.aClockwise,
        this.aRotation = e.aRotation,
        this
    }
    ,
    Es.prototype = Object.create(_s.prototype),
    Es.prototype.constructor = Es,
    Es.prototype.isArcCurve = !0;
    var Ss = new G
      , Ms = new Ts
      , As = new Ts
      , Rs = new Ts;
    function Ls(e, t, n, r) {
        ws.call(this),
        this.type = "CatmullRomCurve3",
        this.points = e || [],
        this.closed = t || !1,
        this.curveType = n || "centripetal",
        this.tension = r || .5
    }
    function Cs(e, t, n, r, i) {
        var a = .5 * (r - t)
          , o = .5 * (i - n)
          , s = e * e;
        return (2 * n - 2 * r + a + o) * (e * s) + (-3 * n + 3 * r - 2 * a - o) * s + a * e + n
    }
    function Ps(e, t, n, r) {
        return function(e, t) {
            var n = 1 - e;
            return n * n * t
        }(e, t) + function(e, t) {
            return 2 * (1 - e) * e * t
        }(e, n) + function(e, t) {
            return e * e * t
        }(e, r)
    }
    function Os(e, t, n, r, i) {
        return function(e, t) {
            var n = 1 - e;
            return n * n * n * t
        }(e, t) + function(e, t) {
            var n = 1 - e;
            return 3 * n * n * e * t
        }(e, n) + function(e, t) {
            return 3 * (1 - e) * e * e * t
        }(e, r) + function(e, t) {
            return e * e * e * t
        }(e, i)
    }
    function ks(e, t, n, r) {
        ws.call(this),
        this.type = "CubicBezierCurve",
        this.v0 = e || new C,
        this.v1 = t || new C,
        this.v2 = n || new C,
        this.v3 = r || new C
    }
    function Ds(e, t, n, r) {
        ws.call(this),
        this.type = "CubicBezierCurve3",
        this.v0 = e || new G,
        this.v1 = t || new G,
        this.v2 = n || new G,
        this.v3 = r || new G
    }
    function Is(e, t) {
        ws.call(this),
        this.type = "LineCurve",
        this.v1 = e || new C,
        this.v2 = t || new C
    }
    function Ns(e, t) {
        ws.call(this),
        this.type = "LineCurve3",
        this.v1 = e || new G,
        this.v2 = t || new G
    }
    function Fs(e, t, n) {
        ws.call(this),
        this.type = "QuadraticBezierCurve",
        this.v0 = e || new C,
        this.v1 = t || new C,
        this.v2 = n || new C
    }
    function Us(e, t, n) {
        ws.call(this),
        this.type = "QuadraticBezierCurve3",
        this.v0 = e || new G,
        this.v1 = t || new G,
        this.v2 = n || new G
    }
    function Bs(e) {
        ws.call(this),
        this.type = "SplineCurve",
        this.points = e || []
    }
    Ls.prototype = Object.create(ws.prototype),
    Ls.prototype.constructor = Ls,
    Ls.prototype.isCatmullRomCurve3 = !0,
    Ls.prototype.getPoint = function(e, t) {
        var n, r, i, a, o = t || new G, s = this.points, l = s.length, u = (l - (this.closed ? 0 : 1)) * e, c = Math.floor(u), h = u - c;
        if (this.closed ? c += c > 0 ? 0 : (Math.floor(Math.abs(c) / l) + 1) * l : 0 === h && c === l - 1 && (c = l - 2,
        h = 1),
        this.closed || c > 0 ? n = s[(c - 1) % l] : (Ss.subVectors(s[0], s[1]).add(s[0]),
        n = Ss),
        r = s[c % l],
        i = s[(c + 1) % l],
        this.closed || c + 2 < l ? a = s[(c + 2) % l] : (Ss.subVectors(s[l - 1], s[l - 2]).add(s[l - 1]),
        a = Ss),
        "centripetal" === this.curveType || "chordal" === this.curveType) {
            var d = "chordal" === this.curveType ? .5 : .25
              , f = Math.pow(n.distanceToSquared(r), d)
              , p = Math.pow(r.distanceToSquared(i), d)
              , m = Math.pow(i.distanceToSquared(a), d);
            p < 1e-4 && (p = 1),
            f < 1e-4 && (f = p),
            m < 1e-4 && (m = p),
            Ms.initNonuniformCatmullRom(n.x, r.x, i.x, a.x, f, p, m),
            As.initNonuniformCatmullRom(n.y, r.y, i.y, a.y, f, p, m),
            Rs.initNonuniformCatmullRom(n.z, r.z, i.z, a.z, f, p, m)
        } else
            "catmullrom" === this.curveType && (Ms.initCatmullRom(n.x, r.x, i.x, a.x, this.tension),
            As.initCatmullRom(n.y, r.y, i.y, a.y, this.tension),
            Rs.initCatmullRom(n.z, r.z, i.z, a.z, this.tension));
        return o.set(Ms.calc(h), As.calc(h), Rs.calc(h)),
        o
    }
    ,
    Ls.prototype.copy = function(e) {
        ws.prototype.copy.call(this, e),
        this.points = [];
        for (var t = 0, n = e.points.length; t < n; t++) {
            var r = e.points[t];
            this.points.push(r.clone())
        }
        return this.closed = e.closed,
        this.curveType = e.curveType,
        this.tension = e.tension,
        this
    }
    ,
    Ls.prototype.toJSON = function() {
        var e = ws.prototype.toJSON.call(this);
        e.points = [];
        for (var t = 0, n = this.points.length; t < n; t++) {
            var r = this.points[t];
            e.points.push(r.toArray())
        }
        return e.closed = this.closed,
        e.curveType = this.curveType,
        e.tension = this.tension,
        e
    }
    ,
    Ls.prototype.fromJSON = function(e) {
        ws.prototype.fromJSON.call(this, e),
        this.points = [];
        for (var t = 0, n = e.points.length; t < n; t++) {
            var r = e.points[t];
            this.points.push((new G).fromArray(r))
        }
        return this.closed = e.closed,
        this.curveType = e.curveType,
        this.tension = e.tension,
        this
    }
    ,
    ks.prototype = Object.create(ws.prototype),
    ks.prototype.constructor = ks,
    ks.prototype.isCubicBezierCurve = !0,
    ks.prototype.getPoint = function(e, t) {
        var n = t || new C
          , r = this.v0
          , i = this.v1
          , a = this.v2
          , o = this.v3;
        return n.set(Os(e, r.x, i.x, a.x, o.x), Os(e, r.y, i.y, a.y, o.y)),
        n
    }
    ,
    ks.prototype.copy = function(e) {
        return ws.prototype.copy.call(this, e),
        this.v0.copy(e.v0),
        this.v1.copy(e.v1),
        this.v2.copy(e.v2),
        this.v3.copy(e.v3),
        this
    }
    ,
    ks.prototype.toJSON = function() {
        var e = ws.prototype.toJSON.call(this);
        return e.v0 = this.v0.toArray(),
        e.v1 = this.v1.toArray(),
        e.v2 = this.v2.toArray(),
        e.v3 = this.v3.toArray(),
        e
    }
    ,
    ks.prototype.fromJSON = function(e) {
        return ws.prototype.fromJSON.call(this, e),
        this.v0.fromArray(e.v0),
        this.v1.fromArray(e.v1),
        this.v2.fromArray(e.v2),
        this.v3.fromArray(e.v3),
        this
    }
    ,
    Ds.prototype = Object.create(ws.prototype),
    Ds.prototype.constructor = Ds,
    Ds.prototype.isCubicBezierCurve3 = !0,
    Ds.prototype.getPoint = function(e, t) {
        var n = t || new G
          , r = this.v0
          , i = this.v1
          , a = this.v2
          , o = this.v3;
        return n.set(Os(e, r.x, i.x, a.x, o.x), Os(e, r.y, i.y, a.y, o.y), Os(e, r.z, i.z, a.z, o.z)),
        n
    }
    ,
    Ds.prototype.copy = function(e) {
        return ws.prototype.copy.call(this, e),
        this.v0.copy(e.v0),
        this.v1.copy(e.v1),
        this.v2.copy(e.v2),
        this.v3.copy(e.v3),
        this
    }
    ,
    Ds.prototype.toJSON = function() {
        var e = ws.prototype.toJSON.call(this);
        return e.v0 = this.v0.toArray(),
        e.v1 = this.v1.toArray(),
        e.v2 = this.v2.toArray(),
        e.v3 = this.v3.toArray(),
        e
    }
    ,
    Ds.prototype.fromJSON = function(e) {
        return ws.prototype.fromJSON.call(this, e),
        this.v0.fromArray(e.v0),
        this.v1.fromArray(e.v1),
        this.v2.fromArray(e.v2),
        this.v3.fromArray(e.v3),
        this
    }
    ,
    Is.prototype = Object.create(ws.prototype),
    Is.prototype.constructor = Is,
    Is.prototype.isLineCurve = !0,
    Is.prototype.getPoint = function(e, t) {
        var n = t || new C;
        return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1),
        n.multiplyScalar(e).add(this.v1)),
        n
    }
    ,
    Is.prototype.getPointAt = function(e, t) {
        return this.getPoint(e, t)
    }
    ,
    Is.prototype.getTangent = function() {
        return this.v2.clone().sub(this.v1).normalize()
    }
    ,
    Is.prototype.copy = function(e) {
        return ws.prototype.copy.call(this, e),
        this.v1.copy(e.v1),
        this.v2.copy(e.v2),
        this
    }
    ,
    Is.prototype.toJSON = function() {
        var e = ws.prototype.toJSON.call(this);
        return e.v1 = this.v1.toArray(),
        e.v2 = this.v2.toArray(),
        e
    }
    ,
    Is.prototype.fromJSON = function(e) {
        return ws.prototype.fromJSON.call(this, e),
        this.v1.fromArray(e.v1),
        this.v2.fromArray(e.v2),
        this
    }
    ,
    Ns.prototype = Object.create(ws.prototype),
    Ns.prototype.constructor = Ns,
    Ns.prototype.isLineCurve3 = !0,
    Ns.prototype.getPoint = function(e, t) {
        var n = t || new G;
        return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1),
        n.multiplyScalar(e).add(this.v1)),
        n
    }
    ,
    Ns.prototype.getPointAt = function(e, t) {
        return this.getPoint(e, t)
    }
    ,
    Ns.prototype.copy = function(e) {
        return ws.prototype.copy.call(this, e),
        this.v1.copy(e.v1),
        this.v2.copy(e.v2),
        this
    }
    ,
    Ns.prototype.toJSON = function() {
        var e = ws.prototype.toJSON.call(this);
        return e.v1 = this.v1.toArray(),
        e.v2 = this.v2.toArray(),
        e
    }
    ,
    Ns.prototype.fromJSON = function(e) {
        return ws.prototype.fromJSON.call(this, e),
        this.v1.fromArray(e.v1),
        this.v2.fromArray(e.v2),
        this
    }
    ,
    Fs.prototype = Object.create(ws.prototype),
    Fs.prototype.constructor = Fs,
    Fs.prototype.isQuadraticBezierCurve = !0,
    Fs.prototype.getPoint = function(e, t) {
        var n = t || new C
          , r = this.v0
          , i = this.v1
          , a = this.v2;
        return n.set(Ps(e, r.x, i.x, a.x), Ps(e, r.y, i.y, a.y)),
        n
    }
    ,
    Fs.prototype.copy = function(e) {
        return ws.prototype.copy.call(this, e),
        this.v0.copy(e.v0),
        this.v1.copy(e.v1),
        this.v2.copy(e.v2),
        this
    }
    ,
    Fs.prototype.toJSON = function() {
        var e = ws.prototype.toJSON.call(this);
        return e.v0 = this.v0.toArray(),
        e.v1 = this.v1.toArray(),
        e.v2 = this.v2.toArray(),
        e
    }
    ,
    Fs.prototype.fromJSON = function(e) {
        return ws.prototype.fromJSON.call(this, e),
        this.v0.fromArray(e.v0),
        this.v1.fromArray(e.v1),
        this.v2.fromArray(e.v2),
        this
    }
    ,
    Us.prototype = Object.create(ws.prototype),
    Us.prototype.constructor = Us,
    Us.prototype.isQuadraticBezierCurve3 = !0,
    Us.prototype.getPoint = function(e, t) {
        var n = t || new G
          , r = this.v0
          , i = this.v1
          , a = this.v2;
        return n.set(Ps(e, r.x, i.x, a.x), Ps(e, r.y, i.y, a.y), Ps(e, r.z, i.z, a.z)),
        n
    }
    ,
    Us.prototype.copy = function(e) {
        return ws.prototype.copy.call(this, e),
        this.v0.copy(e.v0),
        this.v1.copy(e.v1),
        this.v2.copy(e.v2),
        this
    }
    ,
    Us.prototype.toJSON = function() {
        var e = ws.prototype.toJSON.call(this);
        return e.v0 = this.v0.toArray(),
        e.v1 = this.v1.toArray(),
        e.v2 = this.v2.toArray(),
        e
    }
    ,
    Us.prototype.fromJSON = function(e) {
        return ws.prototype.fromJSON.call(this, e),
        this.v0.fromArray(e.v0),
        this.v1.fromArray(e.v1),
        this.v2.fromArray(e.v2),
        this
    }
    ,
    Bs.prototype = Object.create(ws.prototype),
    Bs.prototype.constructor = Bs,
    Bs.prototype.isSplineCurve = !0,
    Bs.prototype.getPoint = function(e, t) {
        var n = t || new C
          , r = this.points
          , i = (r.length - 1) * e
          , a = Math.floor(i)
          , o = i - a
          , s = r[0 === a ? a : a - 1]
          , l = r[a]
          , u = r[a > r.length - 2 ? r.length - 1 : a + 1]
          , c = r[a > r.length - 3 ? r.length - 1 : a + 2];
        return n.set(Cs(o, s.x, l.x, u.x, c.x), Cs(o, s.y, l.y, u.y, c.y)),
        n
    }
    ,
    Bs.prototype.copy = function(e) {
        ws.prototype.copy.call(this, e),
        this.points = [];
        for (var t = 0, n = e.points.length; t < n; t++) {
            var r = e.points[t];
            this.points.push(r.clone())
        }
        return this
    }
    ,
    Bs.prototype.toJSON = function() {
        var e = ws.prototype.toJSON.call(this);
        e.points = [];
        for (var t = 0, n = this.points.length; t < n; t++) {
            var r = this.points[t];
            e.points.push(r.toArray())
        }
        return e
    }
    ,
    Bs.prototype.fromJSON = function(e) {
        ws.prototype.fromJSON.call(this, e),
        this.points = [];
        for (var t = 0, n = e.points.length; t < n; t++) {
            var r = e.points[t];
            this.points.push((new C).fromArray(r))
        }
        return this
    }
    ;
    var zs = Object.freeze({
        __proto__: null,
        ArcCurve: Es,
        CatmullRomCurve3: Ls,
        CubicBezierCurve: ks,
        CubicBezierCurve3: Ds,
        EllipseCurve: _s,
        LineCurve: Is,
        LineCurve3: Ns,
        QuadraticBezierCurve: Fs,
        QuadraticBezierCurve3: Us,
        SplineCurve: Bs
    });
    function Gs() {
        ws.call(this),
        this.type = "CurvePath",
        this.curves = [],
        this.autoClose = !1
    }
    function Hs(e) {
        Gs.call(this),
        this.type = "Path",
        this.currentPoint = new C,
        e && this.setFromPoints(e)
    }
    function js(e) {
        Hs.call(this, e),
        this.uuid = L.generateUUID(),
        this.type = "Shape",
        this.holes = []
    }
    function Vs(e, t) {
        fe.call(this),
        this.type = "Light",
        this.color = new it(e),
        this.intensity = void 0 !== t ? t : 1,
        this.receiveShadow = void 0
    }
    function Ws(e, t, n) {
        Vs.call(this, e, n),
        this.type = "HemisphereLight",
        this.castShadow = void 0,
        this.position.copy(fe.DefaultUp),
        this.updateMatrix(),
        this.groundColor = new it(t)
    }
    function qs(e) {
        this.camera = e,
        this.bias = 0,
        this.radius = 1,
        this.mapSize = new C(512,512),
        this.map = null,
        this.mapPass = null,
        this.matrix = new X,
        this._frustum = new vn,
        this._frameExtents = new C(1,1),
        this._viewportCount = 1,
        this._viewports = [new I(0,0,1,1)]
    }
    function Ks() {
        qs.call(this, new hn(50,1,.5,500))
    }
    function Ys(e, t, n, r, i, a) {
        Vs.call(this, e, t),
        this.type = "SpotLight",
        this.position.copy(fe.DefaultUp),
        this.updateMatrix(),
        this.target = new fe,
        Object.defineProperty(this, "power", {
            get: function() {
                return this.intensity * Math.PI
            },
            set: function(e) {
                this.intensity = e / Math.PI
            }
        }),
        this.distance = void 0 !== n ? n : 0,
        this.angle = void 0 !== r ? r : Math.PI / 3,
        this.penumbra = void 0 !== i ? i : 0,
        this.decay = void 0 !== a ? a : 1,
        this.shadow = new Ks
    }
    function Xs() {
        qs.call(this, new hn(90,1,.5,500)),
        this._frameExtents = new C(4,2),
        this._viewportCount = 6,
        this._viewports = [new I(2,1,1,1), new I(0,1,1,1), new I(3,1,1,1), new I(1,1,1,1), new I(3,0,1,1), new I(1,0,1,1)],
        this._cubeDirections = [new G(1,0,0), new G(-1,0,0), new G(0,0,1), new G(0,0,-1), new G(0,1,0), new G(0,-1,0)],
        this._cubeUps = [new G(0,1,0), new G(0,1,0), new G(0,1,0), new G(0,1,0), new G(0,0,1), new G(0,0,-1)]
    }
    function Zs(e, t, n, r) {
        Vs.call(this, e, t),
        this.type = "PointLight",
        Object.defineProperty(this, "power", {
            get: function() {
                return 4 * this.intensity * Math.PI
            },
            set: function(e) {
                this.intensity = e / (4 * Math.PI)
            }
        }),
        this.distance = void 0 !== n ? n : 0,
        this.decay = void 0 !== r ? r : 1,
        this.shadow = new Xs
    }
    function Js(e, t, n, r, i, a) {
        cn.call(this),
        this.type = "OrthographicCamera",
        this.zoom = 1,
        this.view = null,
        this.left = void 0 !== e ? e : -1,
        this.right = void 0 !== t ? t : 1,
        this.top = void 0 !== n ? n : 1,
        this.bottom = void 0 !== r ? r : -1,
        this.near = void 0 !== i ? i : .1,
        this.far = void 0 !== a ? a : 2e3,
        this.updateProjectionMatrix()
    }
    function Qs() {
        qs.call(this, new Js(-5,5,5,-5,.5,500))
    }
    function $s(e, t) {
        Vs.call(this, e, t),
        this.type = "DirectionalLight",
        this.position.copy(fe.DefaultUp),
        this.updateMatrix(),
        this.target = new fe,
        this.shadow = new Qs
    }
    function el(e, t) {
        Vs.call(this, e, t),
        this.type = "AmbientLight",
        this.castShadow = void 0
    }
    function tl(e, t, n, r) {
        Vs.call(this, e, t),
        this.type = "RectAreaLight",
        this.width = void 0 !== n ? n : 10,
        this.height = void 0 !== r ? r : 10
    }
    function nl(e) {
        ds.call(this, e),
        this.textures = {}
    }
    Gs.prototype = Object.assign(Object.create(ws.prototype), {
        constructor: Gs,
        add: function(e) {
            this.curves.push(e)
        },
        closePath: function() {
            var e = this.curves[0].getPoint(0)
              , t = this.curves[this.curves.length - 1].getPoint(1);
            e.equals(t) || this.curves.push(new Is(t,e))
        },
        getPoint: function(e) {
            for (var t = e * this.getLength(), n = this.getCurveLengths(), r = 0; r < n.length; ) {
                if (n[r] >= t) {
                    var i = n[r] - t
                      , a = this.curves[r]
                      , o = a.getLength()
                      , s = 0 === o ? 0 : 1 - i / o;
                    return a.getPointAt(s)
                }
                r++
            }
            return null
        },
        getLength: function() {
            var e = this.getCurveLengths();
            return e[e.length - 1]
        },
        updateArcLengths: function() {
            this.needsUpdate = !0,
            this.cacheLengths = null,
            this.getCurveLengths()
        },
        getCurveLengths: function() {
            if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
                return this.cacheLengths;
            for (var e = [], t = 0, n = 0, r = this.curves.length; n < r; n++)
                t += this.curves[n].getLength(),
                e.push(t);
            return this.cacheLengths = e,
            e
        },
        getSpacedPoints: function(e) {
            void 0 === e && (e = 40);
            for (var t = [], n = 0; n <= e; n++)
                t.push(this.getPoint(n / e));
            return this.autoClose && t.push(t[0]),
            t
        },
        getPoints: function(e) {
            e = e || 12;
            for (var t, n = [], r = 0, i = this.curves; r < i.length; r++)
                for (var a = i[r], o = a && a.isEllipseCurve ? 2 * e : a && (a.isLineCurve || a.isLineCurve3) ? 1 : a && a.isSplineCurve ? e * a.points.length : e, s = a.getPoints(o), l = 0; l < s.length; l++) {
                    var u = s[l];
                    t && t.equals(u) || (n.push(u),
                    t = u)
                }
            return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]),
            n
        },
        copy: function(e) {
            ws.prototype.copy.call(this, e),
            this.curves = [];
            for (var t = 0, n = e.curves.length; t < n; t++) {
                var r = e.curves[t];
                this.curves.push(r.clone())
            }
            return this.autoClose = e.autoClose,
            this
        },
        toJSON: function() {
            var e = ws.prototype.toJSON.call(this);
            e.autoClose = this.autoClose,
            e.curves = [];
            for (var t = 0, n = this.curves.length; t < n; t++) {
                var r = this.curves[t];
                e.curves.push(r.toJSON())
            }
            return e
        },
        fromJSON: function(e) {
            ws.prototype.fromJSON.call(this, e),
            this.autoClose = e.autoClose,
            this.curves = [];
            for (var t = 0, n = e.curves.length; t < n; t++) {
                var r = e.curves[t];
                this.curves.push((new zs[r.type]).fromJSON(r))
            }
            return this
        }
    }),
    Hs.prototype = Object.assign(Object.create(Gs.prototype), {
        constructor: Hs,
        setFromPoints: function(e) {
            this.moveTo(e[0].x, e[0].y);
            for (var t = 1, n = e.length; t < n; t++)
                this.lineTo(e[t].x, e[t].y);
            return this
        },
        moveTo: function(e, t) {
            return this.currentPoint.set(e, t),
            this
        },
        lineTo: function(e, t) {
            var n = new Is(this.currentPoint.clone(),new C(e,t));
            return this.curves.push(n),
            this.currentPoint.set(e, t),
            this
        },
        quadraticCurveTo: function(e, t, n, r) {
            var i = new Fs(this.currentPoint.clone(),new C(e,t),new C(n,r));
            return this.curves.push(i),
            this.currentPoint.set(n, r),
            this
        },
        bezierCurveTo: function(e, t, n, r, i, a) {
            var o = new ks(this.currentPoint.clone(),new C(e,t),new C(n,r),new C(i,a));
            return this.curves.push(o),
            this.currentPoint.set(i, a),
            this
        },
        splineThru: function(e) {
            var t = new Bs([this.currentPoint.clone()].concat(e));
            return this.curves.push(t),
            this.currentPoint.copy(e[e.length - 1]),
            this
        },
        arc: function(e, t, n, r, i, a) {
            var o = this.currentPoint.x
              , s = this.currentPoint.y;
            return this.absarc(e + o, t + s, n, r, i, a),
            this
        },
        absarc: function(e, t, n, r, i, a) {
            return this.absellipse(e, t, n, n, r, i, a),
            this
        },
        ellipse: function(e, t, n, r, i, a, o, s) {
            var l = this.currentPoint.x
              , u = this.currentPoint.y;
            return this.absellipse(e + l, t + u, n, r, i, a, o, s),
            this
        },
        absellipse: function(e, t, n, r, i, a, o, s) {
            var l = new _s(e,t,n,r,i,a,o,s);
            if (this.curves.length > 0) {
                var u = l.getPoint(0);
                u.equals(this.currentPoint) || this.lineTo(u.x, u.y)
            }
            this.curves.push(l);
            var c = l.getPoint(1);
            return this.currentPoint.copy(c),
            this
        },
        copy: function(e) {
            return Gs.prototype.copy.call(this, e),
            this.currentPoint.copy(e.currentPoint),
            this
        },
        toJSON: function() {
            var e = Gs.prototype.toJSON.call(this);
            return e.currentPoint = this.currentPoint.toArray(),
            e
        },
        fromJSON: function(e) {
            return Gs.prototype.fromJSON.call(this, e),
            this.currentPoint.fromArray(e.currentPoint),
            this
        }
    }),
    js.prototype = Object.assign(Object.create(Hs.prototype), {
        constructor: js,
        getPointsHoles: function(e) {
            for (var t = [], n = 0, r = this.holes.length; n < r; n++)
                t[n] = this.holes[n].getPoints(e);
            return t
        },
        extractPoints: function(e) {
            return {
                shape: this.getPoints(e),
                holes: this.getPointsHoles(e)
            }
        },
        copy: function(e) {
            Hs.prototype.copy.call(this, e),
            this.holes = [];
            for (var t = 0, n = e.holes.length; t < n; t++) {
                var r = e.holes[t];
                this.holes.push(r.clone())
            }
            return this
        },
        toJSON: function() {
            var e = Hs.prototype.toJSON.call(this);
            e.uuid = this.uuid,
            e.holes = [];
            for (var t = 0, n = this.holes.length; t < n; t++) {
                var r = this.holes[t];
                e.holes.push(r.toJSON())
            }
            return e
        },
        fromJSON: function(e) {
            Hs.prototype.fromJSON.call(this, e),
            this.uuid = e.uuid,
            this.holes = [];
            for (var t = 0, n = e.holes.length; t < n; t++) {
                var r = e.holes[t];
                this.holes.push((new Hs).fromJSON(r))
            }
            return this
        }
    }),
    Vs.prototype = Object.assign(Object.create(fe.prototype), {
        constructor: Vs,
        isLight: !0,
        copy: function(e) {
            return fe.prototype.copy.call(this, e),
            this.color.copy(e.color),
            this.intensity = e.intensity,
            this
        },
        toJSON: function(e) {
            var t = fe.prototype.toJSON.call(this, e);
            return t.object.color = this.color.getHex(),
            t.object.intensity = this.intensity,
            void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()),
            void 0 !== this.distance && (t.object.distance = this.distance),
            void 0 !== this.angle && (t.object.angle = this.angle),
            void 0 !== this.decay && (t.object.decay = this.decay),
            void 0 !== this.penumbra && (t.object.penumbra = this.penumbra),
            void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()),
            t
        }
    }),
    Ws.prototype = Object.assign(Object.create(Vs.prototype), {
        constructor: Ws,
        isHemisphereLight: !0,
        copy: function(e) {
            return Vs.prototype.copy.call(this, e),
            this.groundColor.copy(e.groundColor),
            this
        }
    }),
    Object.assign(qs.prototype, {
        _projScreenMatrix: new X,
        _lightPositionWorld: new G,
        _lookTarget: new G,
        getViewportCount: function() {
            return this._viewportCount
        },
        getFrustum: function() {
            return this._frustum
        },
        updateMatrices: function(e) {
            var t = this.camera
              , n = this.matrix
              , r = this._projScreenMatrix
              , i = this._lookTarget
              , a = this._lightPositionWorld;
            a.setFromMatrixPosition(e.matrixWorld),
            t.position.copy(a),
            i.setFromMatrixPosition(e.target.matrixWorld),
            t.lookAt(i),
            t.updateMatrixWorld(),
            r.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
            this._frustum.setFromProjectionMatrix(r),
            n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
            n.multiply(t.projectionMatrix),
            n.multiply(t.matrixWorldInverse)
        },
        getViewport: function(e) {
            return this._viewports[e]
        },
        getFrameExtents: function() {
            return this._frameExtents
        },
        copy: function(e) {
            return this.camera = e.camera.clone(),
            this.bias = e.bias,
            this.radius = e.radius,
            this.mapSize.copy(e.mapSize),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        toJSON: function() {
            var e = {};
            return 0 !== this.bias && (e.bias = this.bias),
            1 !== this.radius && (e.radius = this.radius),
            512 === this.mapSize.x && 512 === this.mapSize.y || (e.mapSize = this.mapSize.toArray()),
            e.camera = this.camera.toJSON(!1).object,
            delete e.camera.matrix,
            e
        }
    }),
    Ks.prototype = Object.assign(Object.create(qs.prototype), {
        constructor: Ks,
        isSpotLightShadow: !0,
        updateMatrices: function(e) {
            var t = this.camera
              , n = 2 * L.RAD2DEG * e.angle
              , r = this.mapSize.width / this.mapSize.height
              , i = e.distance || t.far;
            n === t.fov && r === t.aspect && i === t.far || (t.fov = n,
            t.aspect = r,
            t.far = i,
            t.updateProjectionMatrix()),
            qs.prototype.updateMatrices.call(this, e)
        }
    }),
    Ys.prototype = Object.assign(Object.create(Vs.prototype), {
        constructor: Ys,
        isSpotLight: !0,
        copy: function(e) {
            return Vs.prototype.copy.call(this, e),
            this.distance = e.distance,
            this.angle = e.angle,
            this.penumbra = e.penumbra,
            this.decay = e.decay,
            this.target = e.target.clone(),
            this.shadow = e.shadow.clone(),
            this
        }
    }),
    Xs.prototype = Object.assign(Object.create(qs.prototype), {
        constructor: Xs,
        isPointLightShadow: !0,
        updateMatrices: function(e, t) {
            void 0 === t && (t = 0);
            var n = this.camera
              , r = this.matrix
              , i = this._lightPositionWorld
              , a = this._lookTarget
              , o = this._projScreenMatrix;
            i.setFromMatrixPosition(e.matrixWorld),
            n.position.copy(i),
            a.copy(n.position),
            a.add(this._cubeDirections[t]),
            n.up.copy(this._cubeUps[t]),
            n.lookAt(a),
            n.updateMatrixWorld(),
            r.makeTranslation(-i.x, -i.y, -i.z),
            o.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse),
            this._frustum.setFromProjectionMatrix(o)
        }
    }),
    Zs.prototype = Object.assign(Object.create(Vs.prototype), {
        constructor: Zs,
        isPointLight: !0,
        copy: function(e) {
            return Vs.prototype.copy.call(this, e),
            this.distance = e.distance,
            this.decay = e.decay,
            this.shadow = e.shadow.clone(),
            this
        }
    }),
    Js.prototype = Object.assign(Object.create(cn.prototype), {
        constructor: Js,
        isOrthographicCamera: !0,
        copy: function(e, t) {
            return cn.prototype.copy.call(this, e, t),
            this.left = e.left,
            this.right = e.right,
            this.top = e.top,
            this.bottom = e.bottom,
            this.near = e.near,
            this.far = e.far,
            this.zoom = e.zoom,
            this.view = null === e.view ? null : Object.assign({}, e.view),
            this
        },
        setViewOffset: function(e, t, n, r, i, a) {
            null === this.view && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }),
            this.view.enabled = !0,
            this.view.fullWidth = e,
            this.view.fullHeight = t,
            this.view.offsetX = n,
            this.view.offsetY = r,
            this.view.width = i,
            this.view.height = a,
            this.updateProjectionMatrix()
        },
        clearViewOffset: function() {
            null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix()
        },
        updateProjectionMatrix: function() {
            var e = (this.right - this.left) / (2 * this.zoom)
              , t = (this.top - this.bottom) / (2 * this.zoom)
              , n = (this.right + this.left) / 2
              , r = (this.top + this.bottom) / 2
              , i = n - e
              , a = n + e
              , o = r + t
              , s = r - t;
            if (null !== this.view && this.view.enabled) {
                var l = (this.right - this.left) / this.view.fullWidth / this.zoom
                  , u = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
                a = (i += l * this.view.offsetX) + l * this.view.width,
                s = (o -= u * this.view.offsetY) - u * this.view.height
            }
            this.projectionMatrix.makeOrthographic(i, a, o, s, this.near, this.far),
            this.projectionMatrixInverse.getInverse(this.projectionMatrix)
        },
        toJSON: function(e) {
            var t = fe.prototype.toJSON.call(this, e);
            return t.object.zoom = this.zoom,
            t.object.left = this.left,
            t.object.right = this.right,
            t.object.top = this.top,
            t.object.bottom = this.bottom,
            t.object.near = this.near,
            t.object.far = this.far,
            null !== this.view && (t.object.view = Object.assign({}, this.view)),
            t
        }
    }),
    Qs.prototype = Object.assign(Object.create(qs.prototype), {
        constructor: Qs,
        isDirectionalLightShadow: !0,
        updateMatrices: function(e) {
            qs.prototype.updateMatrices.call(this, e)
        }
    }),
    $s.prototype = Object.assign(Object.create(Vs.prototype), {
        constructor: $s,
        isDirectionalLight: !0,
        copy: function(e) {
            return Vs.prototype.copy.call(this, e),
            this.target = e.target.clone(),
            this.shadow = e.shadow.clone(),
            this
        }
    }),
    el.prototype = Object.assign(Object.create(Vs.prototype), {
        constructor: el,
        isAmbientLight: !0
    }),
    tl.prototype = Object.assign(Object.create(Vs.prototype), {
        constructor: tl,
        isRectAreaLight: !0,
        copy: function(e) {
            return Vs.prototype.copy.call(this, e),
            this.width = e.width,
            this.height = e.height,
            this
        },
        toJSON: function(e) {
            var t = Vs.prototype.toJSON.call(this, e);
            return t.object.width = this.width,
            t.object.height = this.height,
            t
        }
    }),
    nl.prototype = Object.assign(Object.create(ds.prototype), {
        constructor: nl,
        load: function(e, t, n, r) {
            var i = this
              , a = new ps(i.manager);
            a.setPath(i.path),
            a.load(e, (function(e) {
                t(i.parse(JSON.parse(e)))
            }
            ), n, r)
        },
        parse: function(e) {
            var t = this.textures;
            function n(e) {
                return void 0 === t[e] && console.warn("THREE.MaterialLoader: Undefined texture", e),
                t[e]
            }
            var r = new Ko[e.type];
            if (void 0 !== e.uuid && (r.uuid = e.uuid),
            void 0 !== e.name && (r.name = e.name),
            void 0 !== e.color && r.color.setHex(e.color),
            void 0 !== e.roughness && (r.roughness = e.roughness),
            void 0 !== e.metalness && (r.metalness = e.metalness),
            void 0 !== e.sheen && (r.sheen = (new it).setHex(e.sheen)),
            void 0 !== e.emissive && r.emissive.setHex(e.emissive),
            void 0 !== e.specular && r.specular.setHex(e.specular),
            void 0 !== e.shininess && (r.shininess = e.shininess),
            void 0 !== e.clearcoat && (r.clearcoat = e.clearcoat),
            void 0 !== e.clearcoatRoughness && (r.clearcoatRoughness = e.clearcoatRoughness),
            void 0 !== e.fog && (r.fog = e.fog),
            void 0 !== e.flatShading && (r.flatShading = e.flatShading),
            void 0 !== e.blending && (r.blending = e.blending),
            void 0 !== e.combine && (r.combine = e.combine),
            void 0 !== e.side && (r.side = e.side),
            void 0 !== e.opacity && (r.opacity = e.opacity),
            void 0 !== e.transparent && (r.transparent = e.transparent),
            void 0 !== e.alphaTest && (r.alphaTest = e.alphaTest),
            void 0 !== e.depthTest && (r.depthTest = e.depthTest),
            void 0 !== e.depthWrite && (r.depthWrite = e.depthWrite),
            void 0 !== e.colorWrite && (r.colorWrite = e.colorWrite),
            void 0 !== e.stencilWrite && (r.stencilWrite = e.stencilWrite),
            void 0 !== e.stencilWriteMask && (r.stencilWriteMask = e.stencilWriteMask),
            void 0 !== e.stencilFunc && (r.stencilFunc = e.stencilFunc),
            void 0 !== e.stencilRef && (r.stencilRef = e.stencilRef),
            void 0 !== e.stencilFuncMask && (r.stencilFuncMask = e.stencilFuncMask),
            void 0 !== e.stencilFail && (r.stencilFail = e.stencilFail),
            void 0 !== e.stencilZFail && (r.stencilZFail = e.stencilZFail),
            void 0 !== e.stencilZPass && (r.stencilZPass = e.stencilZPass),
            void 0 !== e.wireframe && (r.wireframe = e.wireframe),
            void 0 !== e.wireframeLinewidth && (r.wireframeLinewidth = e.wireframeLinewidth),
            void 0 !== e.wireframeLinecap && (r.wireframeLinecap = e.wireframeLinecap),
            void 0 !== e.wireframeLinejoin && (r.wireframeLinejoin = e.wireframeLinejoin),
            void 0 !== e.rotation && (r.rotation = e.rotation),
            1 !== e.linewidth && (r.linewidth = e.linewidth),
            void 0 !== e.dashSize && (r.dashSize = e.dashSize),
            void 0 !== e.gapSize && (r.gapSize = e.gapSize),
            void 0 !== e.scale && (r.scale = e.scale),
            void 0 !== e.polygonOffset && (r.polygonOffset = e.polygonOffset),
            void 0 !== e.polygonOffsetFactor && (r.polygonOffsetFactor = e.polygonOffsetFactor),
            void 0 !== e.polygonOffsetUnits && (r.polygonOffsetUnits = e.polygonOffsetUnits),
            void 0 !== e.skinning && (r.skinning = e.skinning),
            void 0 !== e.morphTargets && (r.morphTargets = e.morphTargets),
            void 0 !== e.morphNormals && (r.morphNormals = e.morphNormals),
            void 0 !== e.dithering && (r.dithering = e.dithering),
            void 0 !== e.vertexTangents && (r.vertexTangents = e.vertexTangents),
            void 0 !== e.visible && (r.visible = e.visible),
            void 0 !== e.toneMapped && (r.toneMapped = e.toneMapped),
            void 0 !== e.userData && (r.userData = e.userData),
            void 0 !== e.vertexColors && ("number" == typeof e.vertexColors ? r.vertexColors = e.vertexColors > 0 : r.vertexColors = e.vertexColors),
            void 0 !== e.uniforms)
                for (var i in e.uniforms) {
                    var a = e.uniforms[i];
                    switch (r.uniforms[i] = {},
                    a.type) {
                    case "t":
                        r.uniforms[i].value = n(a.value);
                        break;
                    case "c":
                        r.uniforms[i].value = (new it).setHex(a.value);
                        break;
                    case "v2":
                        r.uniforms[i].value = (new C).fromArray(a.value);
                        break;
                    case "v3":
                        r.uniforms[i].value = (new G).fromArray(a.value);
                        break;
                    case "v4":
                        r.uniforms[i].value = (new I).fromArray(a.value);
                        break;
                    case "m3":
                        r.uniforms[i].value = (new P).fromArray(a.value);
                    case "m4":
                        r.uniforms[i].value = (new X).fromArray(a.value);
                        break;
                    default:
                        r.uniforms[i].value = a.value
                    }
                }
            if (void 0 !== e.defines && (r.defines = e.defines),
            void 0 !== e.vertexShader && (r.vertexShader = e.vertexShader),
            void 0 !== e.fragmentShader && (r.fragmentShader = e.fragmentShader),
            void 0 !== e.extensions)
                for (var o in e.extensions)
                    r.extensions[o] = e.extensions[o];
            if (void 0 !== e.shading && (r.flatShading = 1 === e.shading),
            void 0 !== e.size && (r.size = e.size),
            void 0 !== e.sizeAttenuation && (r.sizeAttenuation = e.sizeAttenuation),
            void 0 !== e.map && (r.map = n(e.map)),
            void 0 !== e.matcap && (r.matcap = n(e.matcap)),
            void 0 !== e.alphaMap && (r.alphaMap = n(e.alphaMap)),
            void 0 !== e.bumpMap && (r.bumpMap = n(e.bumpMap)),
            void 0 !== e.bumpScale && (r.bumpScale = e.bumpScale),
            void 0 !== e.normalMap && (r.normalMap = n(e.normalMap)),
            void 0 !== e.normalMapType && (r.normalMapType = e.normalMapType),
            void 0 !== e.normalScale) {
                var s = e.normalScale;
                !1 === Array.isArray(s) && (s = [s, s]),
                r.normalScale = (new C).fromArray(s)
            }
            return void 0 !== e.displacementMap && (r.displacementMap = n(e.displacementMap)),
            void 0 !== e.displacementScale && (r.displacementScale = e.displacementScale),
            void 0 !== e.displacementBias && (r.displacementBias = e.displacementBias),
            void 0 !== e.roughnessMap && (r.roughnessMap = n(e.roughnessMap)),
            void 0 !== e.metalnessMap && (r.metalnessMap = n(e.metalnessMap)),
            void 0 !== e.emissiveMap && (r.emissiveMap = n(e.emissiveMap)),
            void 0 !== e.emissiveIntensity && (r.emissiveIntensity = e.emissiveIntensity),
            void 0 !== e.specularMap && (r.specularMap = n(e.specularMap)),
            void 0 !== e.envMap && (r.envMap = n(e.envMap)),
            void 0 !== e.envMapIntensity && (r.envMapIntensity = e.envMapIntensity),
            void 0 !== e.reflectivity && (r.reflectivity = e.reflectivity),
            void 0 !== e.refractionRatio && (r.refractionRatio = e.refractionRatio),
            void 0 !== e.lightMap && (r.lightMap = n(e.lightMap)),
            void 0 !== e.lightMapIntensity && (r.lightMapIntensity = e.lightMapIntensity),
            void 0 !== e.aoMap && (r.aoMap = n(e.aoMap)),
            void 0 !== e.aoMapIntensity && (r.aoMapIntensity = e.aoMapIntensity),
            void 0 !== e.gradientMap && (r.gradientMap = n(e.gradientMap)),
            void 0 !== e.clearcoatMap && (r.clearcoatMap = n(e.clearcoatMap)),
            void 0 !== e.clearcoatRoughnessMap && (r.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)),
            void 0 !== e.clearcoatNormalMap && (r.clearcoatNormalMap = n(e.clearcoatNormalMap)),
            void 0 !== e.clearcoatNormalScale && (r.clearcoatNormalScale = (new C).fromArray(e.clearcoatNormalScale)),
            r
        },
        setTextures: function(e) {
            return this.textures = e,
            this
        }
    });
    var rl = function(e) {
        var t = e.lastIndexOf("/");
        return -1 === t ? "./" : e.substr(0, t + 1)
    };
    function il() {
        Ot.call(this),
        this.type = "InstancedBufferGeometry",
        this.maxInstancedCount = void 0
    }
    function al(e, t, n, r) {
        "number" == typeof n && (r = n,
        n = !1,
        console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),
        ft.call(this, e, t, n),
        this.meshPerAttribute = r || 1
    }
    function ol(e) {
        ds.call(this, e)
    }
    il.prototype = Object.assign(Object.create(Ot.prototype), {
        constructor: il,
        isInstancedBufferGeometry: !0,
        copy: function(e) {
            return Ot.prototype.copy.call(this, e),
            this.maxInstancedCount = e.maxInstancedCount,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        toJSON: function() {
            var e = Ot.prototype.toJSON.call(this);
            return e.maxInstancedCount = this.maxInstancedCount,
            e.isInstancedBufferGeometry = !0,
            e
        }
    }),
    al.prototype = Object.assign(Object.create(ft.prototype), {
        constructor: al,
        isInstancedBufferAttribute: !0,
        copy: function(e) {
            return ft.prototype.copy.call(this, e),
            this.meshPerAttribute = e.meshPerAttribute,
            this
        },
        toJSON: function() {
            var e = ft.prototype.toJSON.call(this);
            return e.meshPerAttribute = this.meshPerAttribute,
            e.isInstancedBufferAttribute = !0,
            e
        }
    }),
    ol.prototype = Object.assign(Object.create(ds.prototype), {
        constructor: ol,
        load: function(e, t, n, r) {
            var i = this
              , a = new ps(i.manager);
            a.setPath(i.path),
            a.load(e, (function(e) {
                t(i.parse(JSON.parse(e)))
            }
            ), n, r)
        },
        parse: function(e) {
            var t = e.isInstancedBufferGeometry ? new il : new Ot
              , n = e.data.index;
            if (void 0 !== n) {
                var r = new sl[n.type](n.array);
                t.setIndex(new ft(r,1))
            }
            var i = e.data.attributes;
            for (var a in i) {
                var o = i[a]
                  , s = (r = new sl[o.type](o.array),
                new (o.isInstancedBufferAttribute ? al : ft)(r,o.itemSize,o.normalized));
                void 0 !== o.name && (s.name = o.name),
                t.setAttribute(a, s)
            }
            var l = e.data.morphAttributes;
            if (l)
                for (var a in l) {
                    for (var u = l[a], c = [], h = 0, d = u.length; h < d; h++) {
                        o = u[h],
                        s = new ft(r = new sl[o.type](o.array),o.itemSize,o.normalized);
                        void 0 !== o.name && (s.name = o.name),
                        c.push(s)
                    }
                    t.morphAttributes[a] = c
                }
            e.data.morphTargetsRelative && (t.morphTargetsRelative = !0);
            var f = e.data.groups || e.data.drawcalls || e.data.offsets;
            if (void 0 !== f) {
                h = 0;
                for (var p = f.length; h !== p; ++h) {
                    var m = f[h];
                    t.addGroup(m.start, m.count, m.materialIndex)
                }
            }
            var g = e.data.boundingSphere;
            if (void 0 !== g) {
                var v = new G;
                void 0 !== g.center && v.fromArray(g.center),
                t.boundingSphere = new Pe(v,g.radius)
            }
            return e.name && (t.name = e.name),
            e.userData && (t.userData = e.userData),
            t
        }
    });
    var sl = {
        Int8Array: Int8Array,
        Uint8Array: Uint8Array,
        Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
        Int16Array: Int16Array,
        Uint16Array: Uint16Array,
        Int32Array: Int32Array,
        Uint32Array: Uint32Array,
        Float32Array: Float32Array,
        Float64Array: Float64Array
    };
    function ll(e) {
        ds.call(this, e)
    }
    ll.prototype = Object.assign(Object.create(ds.prototype), {
        constructor: ll,
        load: function(e, t, n, r) {
            var i = this
              , a = "" === this.path ? rl(e) : this.path;
            this.resourcePath = this.resourcePath || a;
            var o = new ps(i.manager);
            o.setPath(this.path),
            o.load(e, (function(n) {
                var a = null;
                try {
                    a = JSON.parse(n)
                } catch (t) {
                    return void 0 !== r && r(t),
                    void console.error("THREE:ObjectLoader: Can't parse " + e + ".", t.message)
                }
                var o = a.metadata;
                void 0 !== o && void 0 !== o.type && "geometry" !== o.type.toLowerCase() ? i.parse(a, t) : console.error("THREE.ObjectLoader: Can't load " + e)
            }
            ), n, r)
        },
        parse: function(e, t) {
            var n = this.parseShape(e.shapes)
              , r = this.parseGeometries(e.geometries, n)
              , i = this.parseImages(e.images, (function() {
                void 0 !== t && t(s)
            }
            ))
              , a = this.parseTextures(e.textures, i)
              , o = this.parseMaterials(e.materials, a)
              , s = this.parseObject(e.object, r, o);
            return e.animations && (s.animations = this.parseAnimations(e.animations)),
            void 0 !== e.images && 0 !== e.images.length || void 0 !== t && t(s),
            s
        },
        parseShape: function(e) {
            var t = {};
            if (void 0 !== e)
                for (var n = 0, r = e.length; n < r; n++) {
                    var i = (new js).fromJSON(e[n]);
                    t[i.uuid] = i
                }
            return t
        },
        parseGeometries: function(e, t) {
            var n = {};
            if (void 0 !== e)
                for (var r = new ol, i = 0, a = e.length; i < a; i++) {
                    var o, s = e[i];
                    switch (s.type) {
                    case "PlaneGeometry":
                    case "PlaneBufferGeometry":
                        o = new No[s.type](s.width,s.height,s.widthSegments,s.heightSegments);
                        break;
                    case "BoxGeometry":
                    case "BoxBufferGeometry":
                    case "CubeGeometry":
                        o = new No[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);
                        break;
                    case "CircleGeometry":
                    case "CircleBufferGeometry":
                        o = new No[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);
                        break;
                    case "CylinderGeometry":
                    case "CylinderBufferGeometry":
                        o = new No[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);
                        break;
                    case "ConeGeometry":
                    case "ConeBufferGeometry":
                        o = new No[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);
                        break;
                    case "SphereGeometry":
                    case "SphereBufferGeometry":
                        o = new No[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);
                        break;
                    case "DodecahedronGeometry":
                    case "DodecahedronBufferGeometry":
                    case "IcosahedronGeometry":
                    case "IcosahedronBufferGeometry":
                    case "OctahedronGeometry":
                    case "OctahedronBufferGeometry":
                    case "TetrahedronGeometry":
                    case "TetrahedronBufferGeometry":
                        o = new No[s.type](s.radius,s.detail);
                        break;
                    case "RingGeometry":
                    case "RingBufferGeometry":
                        o = new No[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);
                        break;
                    case "TorusGeometry":
                    case "TorusBufferGeometry":
                        o = new No[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);
                        break;
                    case "TorusKnotGeometry":
                    case "TorusKnotBufferGeometry":
                        o = new No[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);
                        break;
                    case "TubeGeometry":
                    case "TubeBufferGeometry":
                        o = new No[s.type]((new zs[s.path.type]).fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);
                        break;
                    case "LatheGeometry":
                    case "LatheBufferGeometry":
                        o = new No[s.type](s.points,s.segments,s.phiStart,s.phiLength);
                        break;
                    case "PolyhedronGeometry":
                    case "PolyhedronBufferGeometry":
                        o = new No[s.type](s.vertices,s.indices,s.radius,s.details);
                        break;
                    case "ShapeGeometry":
                    case "ShapeBufferGeometry":
                        for (var l = [], u = 0, c = s.shapes.length; u < c; u++) {
                            var h = t[s.shapes[u]];
                            l.push(h)
                        }
                        o = new No[s.type](l,s.curveSegments);
                        break;
                    case "ExtrudeGeometry":
                    case "ExtrudeBufferGeometry":
                        for (l = [],
                        u = 0,
                        c = s.shapes.length; u < c; u++) {
                            h = t[s.shapes[u]];
                            l.push(h)
                        }
                        var d = s.options.extrudePath;
                        void 0 !== d && (s.options.extrudePath = (new zs[d.type]).fromJSON(d)),
                        o = new No[s.type](l,s.options);
                        break;
                    case "BufferGeometry":
                    case "InstancedBufferGeometry":
                        o = r.parse(s);
                        break;
                    case "Geometry":
                        console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');
                        break;
                    default:
                        console.warn('THREE.ObjectLoader: Unsupported geometry type "' + s.type + '"');
                        continue
                    }
                    o.uuid = s.uuid,
                    void 0 !== s.name && (o.name = s.name),
                    !0 === o.isBufferGeometry && void 0 !== s.userData && (o.userData = s.userData),
                    n[s.uuid] = o
                }
            return n
        },
        parseMaterials: function(e, t) {
            var n = {}
              , r = {};
            if (void 0 !== e) {
                var i = new nl;
                i.setTextures(t);
                for (var a = 0, o = e.length; a < o; a++) {
                    var s = e[a];
                    if ("MultiMaterial" === s.type) {
                        for (var l = [], u = 0; u < s.materials.length; u++) {
                            var c = s.materials[u];
                            void 0 === n[c.uuid] && (n[c.uuid] = i.parse(c)),
                            l.push(n[c.uuid])
                        }
                        r[s.uuid] = l
                    } else
                        void 0 === n[s.uuid] && (n[s.uuid] = i.parse(s)),
                        r[s.uuid] = n[s.uuid]
                }
            }
            return r
        },
        parseAnimations: function(e) {
            for (var t = [], n = 0; n < e.length; n++) {
                var r = e[n]
                  , i = ss.parse(r);
                void 0 !== r.uuid && (i.uuid = r.uuid),
                t.push(i)
            }
            return t
        },
        parseImages: function(e, t) {
            var n = this
              , r = {};
            function i(e) {
                return n.manager.itemStart(e),
                a.load(e, (function() {
                    n.manager.itemEnd(e)
                }
                ), void 0, (function() {
                    n.manager.itemError(e),
                    n.manager.itemEnd(e)
                }
                ))
            }
            if (void 0 !== e && e.length > 0) {
                var a = new ys(new cs(t));
                a.setCrossOrigin(this.crossOrigin);
                for (var o = 0, s = e.length; o < s; o++) {
                    var l = e[o]
                      , u = l.url;
                    if (Array.isArray(u)) {
                        r[l.uuid] = [];
                        for (var c = 0, h = u.length; c < h; c++) {
                            var d = u[c]
                              , f = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(d) ? d : n.resourcePath + d;
                            r[l.uuid].push(i(f))
                        }
                    } else {
                        f = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url) ? l.url : n.resourcePath + l.url;
                        r[l.uuid] = i(f)
                    }
                }
            }
            return r
        },
        parseTextures: function(e, t) {
            function n(e, t) {
                return "number" == typeof e ? e : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", e),
                t[e])
            }
            var r = {};
            if (void 0 !== e)
                for (var i = 0, a = e.length; i < a; i++) {
                    var o, s = e[i];
                    void 0 === s.image && console.warn('THREE.ObjectLoader: No "image" specified for', s.uuid),
                    void 0 === t[s.image] && console.warn("THREE.ObjectLoader: Undefined image", s.image),
                    (o = Array.isArray(t[s.image]) ? new Nn(t[s.image]) : new D(t[s.image])).needsUpdate = !0,
                    o.uuid = s.uuid,
                    void 0 !== s.name && (o.name = s.name),
                    void 0 !== s.mapping && (o.mapping = n(s.mapping, cl)),
                    void 0 !== s.offset && o.offset.fromArray(s.offset),
                    void 0 !== s.repeat && o.repeat.fromArray(s.repeat),
                    void 0 !== s.center && o.center.fromArray(s.center),
                    void 0 !== s.rotation && (o.rotation = s.rotation),
                    void 0 !== s.wrap && (o.wrapS = n(s.wrap[0], hl),
                    o.wrapT = n(s.wrap[1], hl)),
                    void 0 !== s.format && (o.format = s.format),
                    void 0 !== s.type && (o.type = s.type),
                    void 0 !== s.encoding && (o.encoding = s.encoding),
                    void 0 !== s.minFilter && (o.minFilter = n(s.minFilter, dl)),
                    void 0 !== s.magFilter && (o.magFilter = n(s.magFilter, dl)),
                    void 0 !== s.anisotropy && (o.anisotropy = s.anisotropy),
                    void 0 !== s.flipY && (o.flipY = s.flipY),
                    void 0 !== s.premultiplyAlpha && (o.premultiplyAlpha = s.premultiplyAlpha),
                    void 0 !== s.unpackAlignment && (o.unpackAlignment = s.unpackAlignment),
                    r[s.uuid] = o
                }
            return r
        },
        parseObject: function(e, t, n) {
            var r;
            function i(e) {
                return void 0 === t[e] && console.warn("THREE.ObjectLoader: Undefined geometry", e),
                t[e]
            }
            function a(e) {
                if (void 0 !== e) {
                    if (Array.isArray(e)) {
                        for (var t = [], r = 0, i = e.length; r < i; r++) {
                            var a = e[r];
                            void 0 === n[a] && console.warn("THREE.ObjectLoader: Undefined material", a),
                            t.push(n[a])
                        }
                        return t
                    }
                    return void 0 === n[e] && console.warn("THREE.ObjectLoader: Undefined material", e),
                    n[e]
                }
            }
            switch (e.type) {
            case "Scene":
                r = new pe,
                void 0 !== e.background && Number.isInteger(e.background) && (r.background = new it(e.background)),
                void 0 !== e.fog && ("Fog" === e.fog.type ? r.fog = new _i(e.fog.color,e.fog.near,e.fog.far) : "FogExp2" === e.fog.type && (r.fog = new wi(e.fog.color,e.fog.density)));
                break;
            case "PerspectiveCamera":
                r = new hn(e.fov,e.aspect,e.near,e.far),
                void 0 !== e.focus && (r.focus = e.focus),
                void 0 !== e.zoom && (r.zoom = e.zoom),
                void 0 !== e.filmGauge && (r.filmGauge = e.filmGauge),
                void 0 !== e.filmOffset && (r.filmOffset = e.filmOffset),
                void 0 !== e.view && (r.view = Object.assign({}, e.view));
                break;
            case "OrthographicCamera":
                r = new Js(e.left,e.right,e.top,e.bottom,e.near,e.far),
                void 0 !== e.zoom && (r.zoom = e.zoom),
                void 0 !== e.view && (r.view = Object.assign({}, e.view));
                break;
            case "AmbientLight":
                r = new el(e.color,e.intensity);
                break;
            case "DirectionalLight":
                r = new $s(e.color,e.intensity);
                break;
            case "PointLight":
                r = new Zs(e.color,e.intensity,e.distance,e.decay);
                break;
            case "RectAreaLight":
                r = new tl(e.color,e.intensity,e.width,e.height);
                break;
            case "SpotLight":
                r = new Ys(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);
                break;
            case "HemisphereLight":
                r = new Ws(e.color,e.groundColor,e.intensity);
                break;
            case "SkinnedMesh":
                console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
            case "Mesh":
                r = new Zt(o = i(e.geometry),s = a(e.material));
                break;
            case "InstancedMesh":
                var o = i(e.geometry)
                  , s = a(e.material)
                  , l = e.count
                  , u = e.instanceMatrix;
                (r = new ea(o,s,l)).instanceMatrix = new ft(new Float32Array(u.array),16);
                break;
            case "LOD":
                r = new Vi;
                break;
            case "Line":
                r = new sa(i(e.geometry),a(e.material),e.mode);
                break;
            case "LineLoop":
                r = new ha(i(e.geometry),a(e.material));
                break;
            case "LineSegments":
                r = new ca(i(e.geometry),a(e.material));
                break;
            case "PointCloud":
            case "Points":
                r = new va(i(e.geometry),a(e.material));
                break;
            case "Sprite":
                r = new zi(a(e.material));
                break;
            case "Group":
                r = new yi;
                break;
            default:
                r = new fe
            }
            if (r.uuid = e.uuid,
            void 0 !== e.name && (r.name = e.name),
            void 0 !== e.matrix ? (r.matrix.fromArray(e.matrix),
            void 0 !== e.matrixAutoUpdate && (r.matrixAutoUpdate = e.matrixAutoUpdate),
            r.matrixAutoUpdate && r.matrix.decompose(r.position, r.quaternion, r.scale)) : (void 0 !== e.position && r.position.fromArray(e.position),
            void 0 !== e.rotation && r.rotation.fromArray(e.rotation),
            void 0 !== e.quaternion && r.quaternion.fromArray(e.quaternion),
            void 0 !== e.scale && r.scale.fromArray(e.scale)),
            void 0 !== e.castShadow && (r.castShadow = e.castShadow),
            void 0 !== e.receiveShadow && (r.receiveShadow = e.receiveShadow),
            e.shadow && (void 0 !== e.shadow.bias && (r.shadow.bias = e.shadow.bias),
            void 0 !== e.shadow.radius && (r.shadow.radius = e.shadow.radius),
            void 0 !== e.shadow.mapSize && r.shadow.mapSize.fromArray(e.shadow.mapSize),
            void 0 !== e.shadow.camera && (r.shadow.camera = this.parseObject(e.shadow.camera))),
            void 0 !== e.visible && (r.visible = e.visible),
            void 0 !== e.frustumCulled && (r.frustumCulled = e.frustumCulled),
            void 0 !== e.renderOrder && (r.renderOrder = e.renderOrder),
            void 0 !== e.userData && (r.userData = e.userData),
            void 0 !== e.layers && (r.layers.mask = e.layers),
            void 0 !== e.children)
                for (var c = e.children, h = 0; h < c.length; h++)
                    r.add(this.parseObject(c[h], t, n));
            if ("LOD" === e.type) {
                void 0 !== e.autoUpdate && (r.autoUpdate = e.autoUpdate);
                for (var d = e.levels, f = 0; f < d.length; f++) {
                    var p = d[f]
                      , m = r.getObjectByProperty("uuid", p.object);
                    void 0 !== m && r.addLevel(m, p.distance)
                }
            }
            return r
        }
    });
    var ul, cl = {
        UVMapping: 300,
        CubeReflectionMapping: 301,
        CubeRefractionMapping: 302,
        EquirectangularReflectionMapping: 303,
        EquirectangularRefractionMapping: 304,
        SphericalReflectionMapping: 305,
        CubeUVReflectionMapping: 306,
        CubeUVRefractionMapping: 307
    }, hl = {
        RepeatWrapping: 1e3,
        ClampToEdgeWrapping: 1001,
        MirroredRepeatWrapping: 1002
    }, dl = {
        NearestFilter: 1003,
        NearestMipmapNearestFilter: 1004,
        NearestMipmapLinearFilter: 1005,
        LinearFilter: 1006,
        LinearMipmapNearestFilter: 1007,
        LinearMipmapLinearFilter: 1008
    };
    function fl(e) {
        "undefined" == typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),
        "undefined" == typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."),
        ds.call(this, e),
        this.options = void 0
    }
    function pl() {
        this.type = "ShapePath",
        this.color = new it,
        this.subPaths = [],
        this.currentPath = null
    }
    function ml(e) {
        this.type = "Font",
        this.data = e
    }
    function gl(e, t, n, r, i) {
        var a = i.glyphs[e] || i.glyphs["?"];
        if (a) {
            var o, s, l, u, c, h, d, f, p = new pl;
            if (a.o)
                for (var m = a._cachedOutline || (a._cachedOutline = a.o.split(" ")), g = 0, v = m.length; g < v; ) {
                    switch (m[g++]) {
                    case "m":
                        o = m[g++] * t + n,
                        s = m[g++] * t + r,
                        p.moveTo(o, s);
                        break;
                    case "l":
                        o = m[g++] * t + n,
                        s = m[g++] * t + r,
                        p.lineTo(o, s);
                        break;
                    case "q":
                        l = m[g++] * t + n,
                        u = m[g++] * t + r,
                        c = m[g++] * t + n,
                        h = m[g++] * t + r,
                        p.quadraticCurveTo(c, h, l, u);
                        break;
                    case "b":
                        l = m[g++] * t + n,
                        u = m[g++] * t + r,
                        c = m[g++] * t + n,
                        h = m[g++] * t + r,
                        d = m[g++] * t + n,
                        f = m[g++] * t + r,
                        p.bezierCurveTo(c, h, d, f, l, u)
                    }
                }
            return {
                offsetX: a.ha * t,
                path: p
            }
        }
        console.error('THREE.Font: character "' + e + '" does not exists in font family ' + i.familyName + ".")
    }
    function vl(e) {
        ds.call(this, e)
    }
    fl.prototype = Object.assign(Object.create(ds.prototype), {
        constructor: fl,
        setOptions: function(e) {
            return this.options = e,
            this
        },
        load: function(e, t, n, r) {
            void 0 === e && (e = ""),
            void 0 !== this.path && (e = this.path + e),
            e = this.manager.resolveURL(e);
            var i = this
              , a = us.get(e);
            if (void 0 !== a)
                return i.manager.itemStart(e),
                setTimeout((function() {
                    t && t(a),
                    i.manager.itemEnd(e)
                }
                ), 0),
                a;
            fetch(e).then((function(e) {
                return e.blob()
            }
            )).then((function(e) {
                return void 0 === i.options ? createImageBitmap(e) : createImageBitmap(e, i.options)
            }
            )).then((function(n) {
                us.add(e, n),
                t && t(n),
                i.manager.itemEnd(e)
            }
            )).catch((function(t) {
                r && r(t),
                i.manager.itemError(e),
                i.manager.itemEnd(e)
            }
            )),
            i.manager.itemStart(e)
        }
    }),
    Object.assign(pl.prototype, {
        moveTo: function(e, t) {
            return this.currentPath = new Hs,
            this.subPaths.push(this.currentPath),
            this.currentPath.moveTo(e, t),
            this
        },
        lineTo: function(e, t) {
            return this.currentPath.lineTo(e, t),
            this
        },
        quadraticCurveTo: function(e, t, n, r) {
            return this.currentPath.quadraticCurveTo(e, t, n, r),
            this
        },
        bezierCurveTo: function(e, t, n, r, i, a) {
            return this.currentPath.bezierCurveTo(e, t, n, r, i, a),
            this
        },
        splineThru: function(e) {
            return this.currentPath.splineThru(e),
            this
        },
        toShapes: function(e, t) {
            function n(e) {
                for (var t = [], n = 0, r = e.length; n < r; n++) {
                    var i = e[n]
                      , a = new js;
                    a.curves = i.curves,
                    t.push(a)
                }
                return t
            }
            function r(e, t) {
                for (var n = t.length, r = !1, i = n - 1, a = 0; a < n; i = a++) {
                    var o = t[i]
                      , s = t[a]
                      , l = s.x - o.x
                      , u = s.y - o.y;
                    if (Math.abs(u) > Number.EPSILON) {
                        if (u < 0 && (o = t[a],
                        l = -l,
                        s = t[i],
                        u = -u),
                        e.y < o.y || e.y > s.y)
                            continue;
                        if (e.y === o.y) {
                            if (e.x === o.x)
                                return !0
                        } else {
                            var c = u * (e.x - o.x) - l * (e.y - o.y);
                            if (0 === c)
                                return !0;
                            if (c < 0)
                                continue;
                            r = !r
                        }
                    } else {
                        if (e.y !== o.y)
                            continue;
                        if (s.x <= e.x && e.x <= o.x || o.x <= e.x && e.x <= s.x)
                            return !0
                    }
                }
                return r
            }
            var i = co.isClockWise
              , a = this.subPaths;
            if (0 === a.length)
                return [];
            if (!0 === t)
                return n(a);
            var o, s, l, u = [];
            if (1 === a.length)
                return s = a[0],
                (l = new js).curves = s.curves,
                u.push(l),
                u;
            var c = !i(a[0].getPoints());
            c = e ? !c : c;
            var h, d, f = [], p = [], m = [], g = 0;
            p[g] = void 0,
            m[g] = [];
            for (var v = 0, y = a.length; v < y; v++)
                o = i(h = (s = a[v]).getPoints()),
                (o = e ? !o : o) ? (!c && p[g] && g++,
                p[g] = {
                    s: new js,
                    p: h
                },
                p[g].s.curves = s.curves,
                c && g++,
                m[g] = []) : m[g].push({
                    h: s,
                    p: h[0]
                });
            if (!p[0])
                return n(a);
            if (p.length > 1) {
                for (var b = !1, x = [], w = 0, _ = p.length; w < _; w++)
                    f[w] = [];
                for (w = 0,
                _ = p.length; w < _; w++)
                    for (var E = m[w], T = 0; T < E.length; T++) {
                        for (var S = E[T], M = !0, A = 0; A < p.length; A++)
                            r(S.p, p[A].p) && (w !== A && x.push({
                                froms: w,
                                tos: A,
                                hole: T
                            }),
                            M ? (M = !1,
                            f[A].push(S)) : b = !0);
                        M && f[w].push(S)
                    }
                x.length > 0 && (b || (m = f))
            }
            v = 0;
            for (var R = p.length; v < R; v++) {
                l = p[v].s,
                u.push(l);
                for (var L = 0, C = (d = m[v]).length; L < C; L++)
                    l.holes.push(d[L].h)
            }
            return u
        }
    }),
    Object.assign(ml.prototype, {
        isFont: !0,
        generateShapes: function(e, t) {
            void 0 === t && (t = 100);
            for (var n = [], r = function(e, t, n) {
                for (var r = Array.from ? Array.from(e) : String(e).split(""), i = t / n.resolution, a = (n.boundingBox.yMax - n.boundingBox.yMin + n.underlineThickness) * i, o = [], s = 0, l = 0, u = 0; u < r.length; u++) {
                    var c = r[u];
                    if ("\n" === c)
                        s = 0,
                        l -= a;
                    else {
                        var h = gl(c, i, s, l, n);
                        s += h.offsetX,
                        o.push(h.path)
                    }
                }
                return o
            }(e, t, this.data), i = 0, a = r.length; i < a; i++)
                Array.prototype.push.apply(n, r[i].toShapes());
            return n
        }
    }),
    vl.prototype = Object.assign(Object.create(ds.prototype), {
        constructor: vl,
        load: function(e, t, n, r) {
            var i = this
              , a = new ps(this.manager);
            a.setPath(this.path),
            a.load(e, (function(e) {
                var n;
                try {
                    n = JSON.parse(e)
                } catch (t) {
                    console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),
                    n = JSON.parse(e.substring(65, e.length - 2))
                }
                var r = i.parse(n);
                t && t(r)
            }
            ), n, r)
        },
        parse: function(e) {
            return new ml(e)
        }
    });
    var yl = function() {
        return void 0 === ul && (ul = new (window.AudioContext || window.webkitAudioContext)),
        ul
    };
    function bl(e) {
        ds.call(this, e)
    }
    function xl() {
        this.coefficients = [];
        for (var e = 0; e < 9; e++)
            this.coefficients.push(new G)
    }
    function wl(e, t) {
        Vs.call(this, void 0, t),
        this.sh = void 0 !== e ? e : new xl
    }
    function _l(e, t, n) {
        wl.call(this, void 0, n);
        var r = (new it).set(e)
          , i = (new it).set(t)
          , a = new G(r.r,r.g,r.b)
          , o = new G(i.r,i.g,i.b)
          , s = Math.sqrt(Math.PI)
          , l = s * Math.sqrt(.75);
        this.sh.coefficients[0].copy(a).add(o).multiplyScalar(s),
        this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(l)
    }
    function El(e, t) {
        wl.call(this, void 0, t);
        var n = (new it).set(e);
        this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI))
    }
    bl.prototype = Object.assign(Object.create(ds.prototype), {
        constructor: bl,
        load: function(e, t, n, r) {
            var i = new ps(this.manager);
            i.setResponseType("arraybuffer"),
            i.setPath(this.path),
            i.load(e, (function(e) {
                var n = e.slice(0);
                yl().decodeAudioData(n, (function(e) {
                    t(e)
                }
                ))
            }
            ), n, r)
        }
    }),
    Object.assign(xl.prototype, {
        isSphericalHarmonics3: !0,
        set: function(e) {
            for (var t = 0; t < 9; t++)
                this.coefficients[t].copy(e[t]);
            return this
        },
        zero: function() {
            for (var e = 0; e < 9; e++)
                this.coefficients[e].set(0, 0, 0);
            return this
        },
        getAt: function(e, t) {
            var n = e.x
              , r = e.y
              , i = e.z
              , a = this.coefficients;
            return t.copy(a[0]).multiplyScalar(.282095),
            t.addScaledVector(a[1], .488603 * r),
            t.addScaledVector(a[2], .488603 * i),
            t.addScaledVector(a[3], .488603 * n),
            t.addScaledVector(a[4], n * r * 1.092548),
            t.addScaledVector(a[5], r * i * 1.092548),
            t.addScaledVector(a[6], .315392 * (3 * i * i - 1)),
            t.addScaledVector(a[7], n * i * 1.092548),
            t.addScaledVector(a[8], .546274 * (n * n - r * r)),
            t
        },
        getIrradianceAt: function(e, t) {
            var n = e.x
              , r = e.y
              , i = e.z
              , a = this.coefficients;
            return t.copy(a[0]).multiplyScalar(.886227),
            t.addScaledVector(a[1], 1.023328 * r),
            t.addScaledVector(a[2], 1.023328 * i),
            t.addScaledVector(a[3], 1.023328 * n),
            t.addScaledVector(a[4], .858086 * n * r),
            t.addScaledVector(a[5], .858086 * r * i),
            t.addScaledVector(a[6], .743125 * i * i - .247708),
            t.addScaledVector(a[7], .858086 * n * i),
            t.addScaledVector(a[8], .429043 * (n * n - r * r)),
            t
        },
        add: function(e) {
            for (var t = 0; t < 9; t++)
                this.coefficients[t].add(e.coefficients[t]);
            return this
        },
        addScaledSH: function(e, t) {
            for (var n = 0; n < 9; n++)
                this.coefficients[n].addScaledVector(e.coefficients[n], t);
            return this
        },
        scale: function(e) {
            for (var t = 0; t < 9; t++)
                this.coefficients[t].multiplyScalar(e);
            return this
        },
        lerp: function(e, t) {
            for (var n = 0; n < 9; n++)
                this.coefficients[n].lerp(e.coefficients[n], t);
            return this
        },
        equals: function(e) {
            for (var t = 0; t < 9; t++)
                if (!this.coefficients[t].equals(e.coefficients[t]))
                    return !1;
            return !0
        },
        copy: function(e) {
            return this.set(e.coefficients)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        fromArray: function(e, t) {
            void 0 === t && (t = 0);
            for (var n = this.coefficients, r = 0; r < 9; r++)
                n[r].fromArray(e, t + 3 * r);
            return this
        },
        toArray: function(e, t) {
            void 0 === e && (e = []),
            void 0 === t && (t = 0);
            for (var n = this.coefficients, r = 0; r < 9; r++)
                n[r].toArray(e, t + 3 * r);
            return e
        }
    }),
    Object.assign(xl, {
        getBasisAt: function(e, t) {
            var n = e.x
              , r = e.y
              , i = e.z;
            t[0] = .282095,
            t[1] = .488603 * r,
            t[2] = .488603 * i,
            t[3] = .488603 * n,
            t[4] = 1.092548 * n * r,
            t[5] = 1.092548 * r * i,
            t[6] = .315392 * (3 * i * i - 1),
            t[7] = 1.092548 * n * i,
            t[8] = .546274 * (n * n - r * r)
        }
    }),
    wl.prototype = Object.assign(Object.create(Vs.prototype), {
        constructor: wl,
        isLightProbe: !0,
        copy: function(e) {
            return Vs.prototype.copy.call(this, e),
            this.sh.copy(e.sh),
            this.intensity = e.intensity,
            this
        },
        toJSON: function(e) {
            return Vs.prototype.toJSON.call(this, e)
        }
    }),
    _l.prototype = Object.assign(Object.create(wl.prototype), {
        constructor: _l,
        isHemisphereLightProbe: !0,
        copy: function(e) {
            return wl.prototype.copy.call(this, e),
            this
        },
        toJSON: function(e) {
            return wl.prototype.toJSON.call(this, e)
        }
    }),
    El.prototype = Object.assign(Object.create(wl.prototype), {
        constructor: El,
        isAmbientLightProbe: !0,
        copy: function(e) {
            return wl.prototype.copy.call(this, e),
            this
        },
        toJSON: function(e) {
            return wl.prototype.toJSON.call(this, e)
        }
    });
    var Tl = new X
      , Sl = new X;
    function Ml(e) {
        this.autoStart = void 0 === e || e,
        this.startTime = 0,
        this.oldTime = 0,
        this.elapsedTime = 0,
        this.running = !1
    }
    Object.assign(function() {
        this.type = "StereoCamera",
        this.aspect = 1,
        this.eyeSep = .064,
        this.cameraL = new hn,
        this.cameraL.layers.enable(1),
        this.cameraL.matrixAutoUpdate = !1,
        this.cameraR = new hn,
        this.cameraR.layers.enable(2),
        this.cameraR.matrixAutoUpdate = !1,
        this._cache = {
            focus: null,
            fov: null,
            aspect: null,
            near: null,
            far: null,
            zoom: null,
            eyeSep: null
        }
    }
    .prototype, {
        update: function(e) {
            var t = this._cache;
            if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
                t.focus = e.focus,
                t.fov = e.fov,
                t.aspect = e.aspect * this.aspect,
                t.near = e.near,
                t.far = e.far,
                t.zoom = e.zoom,
                t.eyeSep = this.eyeSep;
                var n, r, i = e.projectionMatrix.clone(), a = t.eyeSep / 2, o = a * t.near / t.focus, s = t.near * Math.tan(L.DEG2RAD * t.fov * .5) / t.zoom;
                Sl.elements[12] = -a,
                Tl.elements[12] = a,
                n = -s * t.aspect + o,
                r = s * t.aspect + o,
                i.elements[0] = 2 * t.near / (r - n),
                i.elements[8] = (r + n) / (r - n),
                this.cameraL.projectionMatrix.copy(i),
                n = -s * t.aspect - o,
                r = s * t.aspect - o,
                i.elements[0] = 2 * t.near / (r - n),
                i.elements[8] = (r + n) / (r - n),
                this.cameraR.projectionMatrix.copy(i)
            }
            this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Sl),
            this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Tl)
        }
    }),
    Object.assign(Ml.prototype, {
        start: function() {
            this.startTime = ("undefined" == typeof performance ? Date : performance).now(),
            this.oldTime = this.startTime,
            this.elapsedTime = 0,
            this.running = !0
        },
        stop: function() {
            this.getElapsedTime(),
            this.running = !1,
            this.autoStart = !1
        },
        getElapsedTime: function() {
            return this.getDelta(),
            this.elapsedTime
        },
        getDelta: function() {
            var e = 0;
            if (this.autoStart && !this.running)
                return this.start(),
                0;
            if (this.running) {
                var t = ("undefined" == typeof performance ? Date : performance).now();
                e = (t - this.oldTime) / 1e3,
                this.oldTime = t,
                this.elapsedTime += e
            }
            return e
        }
    });
    var Al = new G
      , Rl = new U
      , Ll = new G
      , Cl = new G;
    function Pl() {
        fe.call(this),
        this.type = "AudioListener",
        this.context = yl(),
        this.gain = this.context.createGain(),
        this.gain.connect(this.context.destination),
        this.filter = null,
        this.timeDelta = 0,
        this._clock = new Ml
    }
    function Ol(e) {
        fe.call(this),
        this.type = "Audio",
        this.listener = e,
        this.context = e.context,
        this.gain = this.context.createGain(),
        this.gain.connect(e.getInput()),
        this.autoplay = !1,
        this.buffer = null,
        this.detune = 0,
        this.loop = !1,
        this.loopStart = 0,
        this.loopEnd = 0,
        this.offset = 0,
        this.duration = void 0,
        this.playbackRate = 1,
        this.isPlaying = !1,
        this.hasPlaybackControl = !0,
        this.sourceType = "empty",
        this._startedAt = 0,
        this._pausedAt = 0,
        this.filters = []
    }
    Pl.prototype = Object.assign(Object.create(fe.prototype), {
        constructor: Pl,
        getInput: function() {
            return this.gain
        },
        removeFilter: function() {
            return null !== this.filter && (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination),
            this.gain.connect(this.context.destination),
            this.filter = null),
            this
        },
        getFilter: function() {
            return this.filter
        },
        setFilter: function(e) {
            return null !== this.filter ? (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
            this.filter = e,
            this.gain.connect(this.filter),
            this.filter.connect(this.context.destination),
            this
        },
        getMasterVolume: function() {
            return this.gain.gain.value
        },
        setMasterVolume: function(e) {
            return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01),
            this
        },
        updateMatrixWorld: function(e) {
            fe.prototype.updateMatrixWorld.call(this, e);
            var t = this.context.listener
              , n = this.up;
            if (this.timeDelta = this._clock.getDelta(),
            this.matrixWorld.decompose(Al, Rl, Ll),
            Cl.set(0, 0, -1).applyQuaternion(Rl),
            t.positionX) {
                var r = this.context.currentTime + this.timeDelta;
                t.positionX.linearRampToValueAtTime(Al.x, r),
                t.positionY.linearRampToValueAtTime(Al.y, r),
                t.positionZ.linearRampToValueAtTime(Al.z, r),
                t.forwardX.linearRampToValueAtTime(Cl.x, r),
                t.forwardY.linearRampToValueAtTime(Cl.y, r),
                t.forwardZ.linearRampToValueAtTime(Cl.z, r),
                t.upX.linearRampToValueAtTime(n.x, r),
                t.upY.linearRampToValueAtTime(n.y, r),
                t.upZ.linearRampToValueAtTime(n.z, r)
            } else
                t.setPosition(Al.x, Al.y, Al.z),
                t.setOrientation(Cl.x, Cl.y, Cl.z, n.x, n.y, n.z)
        }
    }),
    Ol.prototype = Object.assign(Object.create(fe.prototype), {
        constructor: Ol,
        getOutput: function() {
            return this.gain
        },
        setNodeSource: function(e) {
            return this.hasPlaybackControl = !1,
            this.sourceType = "audioNode",
            this.source = e,
            this.connect(),
            this
        },
        setMediaElementSource: function(e) {
            return this.hasPlaybackControl = !1,
            this.sourceType = "mediaNode",
            this.source = this.context.createMediaElementSource(e),
            this.connect(),
            this
        },
        setMediaStreamSource: function(e) {
            return this.hasPlaybackControl = !1,
            this.sourceType = "mediaStreamNode",
            this.source = this.context.createMediaStreamSource(e),
            this.connect(),
            this
        },
        setBuffer: function(e) {
            return this.buffer = e,
            this.sourceType = "buffer",
            this.autoplay && this.play(),
            this
        },
        play: function(e) {
            if (void 0 === e && (e = 0),
            !0 !== this.isPlaying) {
                if (!1 !== this.hasPlaybackControl) {
                    this._startedAt = this.context.currentTime + e;
                    var t = this.context.createBufferSource();
                    return t.buffer = this.buffer,
                    t.loop = this.loop,
                    t.loopStart = this.loopStart,
                    t.loopEnd = this.loopEnd,
                    t.onended = this.onEnded.bind(this),
                    t.start(this._startedAt, this._pausedAt + this.offset, this.duration),
                    this.isPlaying = !0,
                    this.source = t,
                    this.setDetune(this.detune),
                    this.setPlaybackRate(this.playbackRate),
                    this.connect()
                }
                console.warn("THREE.Audio: this Audio has no playback control.")
            } else
                console.warn("THREE.Audio: Audio is already playing.")
        },
        pause: function() {
            if (!1 !== this.hasPlaybackControl)
                return !0 === this.isPlaying && (this._pausedAt += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate,
                this.source.stop(),
                this.source.onended = null,
                this.isPlaying = !1),
                this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        stop: function() {
            if (!1 !== this.hasPlaybackControl)
                return this._pausedAt = 0,
                this.source.stop(),
                this.source.onended = null,
                this.isPlaying = !1,
                this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        connect: function() {
            if (this.filters.length > 0) {
                this.source.connect(this.filters[0]);
                for (var e = 1, t = this.filters.length; e < t; e++)
                    this.filters[e - 1].connect(this.filters[e]);
                this.filters[this.filters.length - 1].connect(this.getOutput())
            } else
                this.source.connect(this.getOutput());
            return this
        },
        disconnect: function() {
            if (this.filters.length > 0) {
                this.source.disconnect(this.filters[0]);
                for (var e = 1, t = this.filters.length; e < t; e++)
                    this.filters[e - 1].disconnect(this.filters[e]);
                this.filters[this.filters.length - 1].disconnect(this.getOutput())
            } else
                this.source.disconnect(this.getOutput());
            return this
        },
        getFilters: function() {
            return this.filters
        },
        setFilters: function(e) {
            return e || (e = []),
            !0 === this.isPlaying ? (this.disconnect(),
            this.filters = e,
            this.connect()) : this.filters = e,
            this
        },
        setDetune: function(e) {
            if (this.detune = e,
            void 0 !== this.source.detune)
                return !0 === this.isPlaying && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01),
                this
        },
        getDetune: function() {
            return this.detune
        },
        getFilter: function() {
            return this.getFilters()[0]
        },
        setFilter: function(e) {
            return this.setFilters(e ? [e] : [])
        },
        setPlaybackRate: function(e) {
            if (!1 !== this.hasPlaybackControl)
                return this.playbackRate = e,
                !0 === this.isPlaying && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01),
                this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        getPlaybackRate: function() {
            return this.playbackRate
        },
        onEnded: function() {
            this.isPlaying = !1
        },
        getLoop: function() {
            return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."),
            !1) : this.loop
        },
        setLoop: function(e) {
            if (!1 !== this.hasPlaybackControl)
                return this.loop = e,
                !0 === this.isPlaying && (this.source.loop = this.loop),
                this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        setLoopStart: function(e) {
            return this.loopStart = e,
            this
        },
        setLoopEnd: function(e) {
            return this.loopEnd = e,
            this
        },
        getVolume: function() {
            return this.gain.gain.value
        },
        setVolume: function(e) {
            return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01),
            this
        }
    });
    var kl = new G
      , Dl = new U
      , Il = new G
      , Nl = new G;
    function Fl(e) {
        Ol.call(this, e),
        this.panner = this.context.createPanner(),
        this.panner.panningModel = "HRTF",
        this.panner.connect(this.gain)
    }
    function Ul(e, t) {
        this.analyser = e.context.createAnalyser(),
        this.analyser.fftSize = void 0 !== t ? t : 2048,
        this.data = new Uint8Array(this.analyser.frequencyBinCount),
        e.getOutput().connect(this.analyser)
    }
    function Bl(e, t, n) {
        this.binding = e,
        this.valueSize = n;
        var r, i = Float64Array;
        switch (t) {
        case "quaternion":
            r = this._slerp;
            break;
        case "string":
        case "bool":
            i = Array,
            r = this._select;
            break;
        default:
            r = this._lerp
        }
        this.buffer = new i(4 * n),
        this._mixBufferRegion = r,
        this.cumulativeWeight = 0,
        this.useCount = 0,
        this.referenceCount = 0
    }
    Fl.prototype = Object.assign(Object.create(Ol.prototype), {
        constructor: Fl,
        getOutput: function() {
            return this.panner
        },
        getRefDistance: function() {
            return this.panner.refDistance
        },
        setRefDistance: function(e) {
            return this.panner.refDistance = e,
            this
        },
        getRolloffFactor: function() {
            return this.panner.rolloffFactor
        },
        setRolloffFactor: function(e) {
            return this.panner.rolloffFactor = e,
            this
        },
        getDistanceModel: function() {
            return this.panner.distanceModel
        },
        setDistanceModel: function(e) {
            return this.panner.distanceModel = e,
            this
        },
        getMaxDistance: function() {
            return this.panner.maxDistance
        },
        setMaxDistance: function(e) {
            return this.panner.maxDistance = e,
            this
        },
        setDirectionalCone: function(e, t, n) {
            return this.panner.coneInnerAngle = e,
            this.panner.coneOuterAngle = t,
            this.panner.coneOuterGain = n,
            this
        },
        updateMatrixWorld: function(e) {
            if (fe.prototype.updateMatrixWorld.call(this, e),
            !0 !== this.hasPlaybackControl || !1 !== this.isPlaying) {
                this.matrixWorld.decompose(kl, Dl, Il),
                Nl.set(0, 0, 1).applyQuaternion(Dl);
                var t = this.panner;
                if (t.positionX) {
                    var n = this.context.currentTime + this.listener.timeDelta;
                    t.positionX.linearRampToValueAtTime(kl.x, n),
                    t.positionY.linearRampToValueAtTime(kl.y, n),
                    t.positionZ.linearRampToValueAtTime(kl.z, n),
                    t.orientationX.linearRampToValueAtTime(Nl.x, n),
                    t.orientationY.linearRampToValueAtTime(Nl.y, n),
                    t.orientationZ.linearRampToValueAtTime(Nl.z, n)
                } else
                    t.setPosition(kl.x, kl.y, kl.z),
                    t.setOrientation(Nl.x, Nl.y, Nl.z)
            }
        }
    }),
    Object.assign(Ul.prototype, {
        getFrequencyData: function() {
            return this.analyser.getByteFrequencyData(this.data),
            this.data
        },
        getAverageFrequency: function() {
            for (var e = 0, t = this.getFrequencyData(), n = 0; n < t.length; n++)
                e += t[n];
            return e / t.length
        }
    }),
    Object.assign(Bl.prototype, {
        accumulate: function(e, t) {
            var n = this.buffer
              , r = this.valueSize
              , i = e * r + r
              , a = this.cumulativeWeight;
            if (0 === a) {
                for (var o = 0; o !== r; ++o)
                    n[i + o] = n[o];
                a = t
            } else {
                var s = t / (a += t);
                this._mixBufferRegion(n, i, 0, s, r)
            }
            this.cumulativeWeight = a
        },
        apply: function(e) {
            var t = this.valueSize
              , n = this.buffer
              , r = e * t + t
              , i = this.cumulativeWeight
              , a = this.binding;
            if (this.cumulativeWeight = 0,
            i < 1) {
                var o = 3 * t;
                this._mixBufferRegion(n, r, o, 1 - i, t)
            }
            for (var s = t, l = t + t; s !== l; ++s)
                if (n[s] !== n[s + t]) {
                    a.setValue(n, r);
                    break
                }
        },
        saveOriginalState: function() {
            var e = this.binding
              , t = this.buffer
              , n = this.valueSize
              , r = 3 * n;
            e.getValue(t, r);
            for (var i = n, a = r; i !== a; ++i)
                t[i] = t[r + i % n];
            this.cumulativeWeight = 0
        },
        restoreOriginalState: function() {
            var e = 3 * this.valueSize;
            this.binding.setValue(this.buffer, e)
        },
        _select: function(e, t, n, r, i) {
            if (r >= .5)
                for (var a = 0; a !== i; ++a)
                    e[t + a] = e[n + a]
        },
        _slerp: function(e, t, n, r) {
            U.slerpFlat(e, t, e, t, e, n, r)
        },
        _lerp: function(e, t, n, r, i) {
            for (var a = 1 - r, o = 0; o !== i; ++o) {
                var s = t + o;
                e[s] = e[s] * a + e[n + o] * r
            }
        }
    });
    var zl = new RegExp("[\\[\\]\\.:\\/]","g")
      , Gl = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]"
      , Hl = /((?:WC+[\/:])*)/.source.replace("WC", "[^\\[\\]\\.:\\/]")
      , jl = /(WCOD+)?/.source.replace("WCOD", Gl)
      , Vl = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", "[^\\[\\]\\.:\\/]")
      , Wl = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", "[^\\[\\]\\.:\\/]")
      , ql = new RegExp("^" + Hl + jl + Vl + Wl + "$")
      , Kl = ["material", "materials", "bones"];
    function Yl(e, t, n) {
        var r = n || Xl.parseTrackName(t);
        this._targetGroup = e,
        this._bindings = e.subscribe_(t, r)
    }
    function Xl(e, t, n) {
        this.path = t,
        this.parsedPath = n || Xl.parseTrackName(t),
        this.node = Xl.findNode(e, this.parsedPath.nodeName) || e,
        this.rootNode = e
    }
    function Zl(e, t, n) {
        this._mixer = e,
        this._clip = t,
        this._localRoot = n || null;
        for (var r = t.tracks, i = r.length, a = new Array(i), o = {
            endingStart: 2400,
            endingEnd: 2400
        }, s = 0; s !== i; ++s) {
            var l = r[s].createInterpolant(null);
            a[s] = l,
            l.settings = o
        }
        this._interpolantSettings = o,
        this._interpolants = a,
        this._propertyBindings = new Array(i),
        this._cacheIndex = null,
        this._byClipCacheIndex = null,
        this._timeScaleInterpolant = null,
        this._weightInterpolant = null,
        this.loop = 2201,
        this._loopCount = -1,
        this._startTime = null,
        this.time = 0,
        this.timeScale = 1,
        this._effectiveTimeScale = 1,
        this.weight = 1,
        this._effectiveWeight = 1,
        this.repetitions = 1 / 0,
        this.paused = !1,
        this.enabled = !0,
        this.clampWhenFinished = !1,
        this.zeroSlopeAtStart = !0,
        this.zeroSlopeAtEnd = !0
    }
    function Jl(e) {
        this._root = e,
        this._initMemoryManager(),
        this._accuIndex = 0,
        this.time = 0,
        this.timeScale = 1
    }
    function Ql(e) {
        "string" == typeof e && (console.warn("THREE.Uniform: Type parameter is no longer needed."),
        e = arguments[1]),
        this.value = e
    }
    function $l(e, t, n) {
        Ei.call(this, e, t),
        this.meshPerAttribute = n || 1
    }
    function eu(e, t, n, r) {
        this.ray = new Be(e,t),
        this.near = n || 0,
        this.far = r || 1 / 0,
        this.camera = null,
        this.layers = new $,
        this.params = {
            Mesh: {},
            Line: {
                threshold: 1
            },
            LOD: {},
            Points: {
                threshold: 1
            },
            Sprite: {}
        },
        Object.defineProperties(this.params, {
            PointCloud: {
                get: function() {
                    return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),
                    this.Points
                }
            }
        })
    }
    function tu(e, t) {
        return e.distance - t.distance
    }
    function nu(e, t, n, r) {
        if (e.layers.test(t.layers) && e.raycast(t, n),
        !0 === r)
            for (var i = e.children, a = 0, o = i.length; a < o; a++)
                nu(i[a], t, n, !0)
    }
    Object.assign(Yl.prototype, {
        getValue: function(e, t) {
            this.bind();
            var n = this._targetGroup.nCachedObjects_
              , r = this._bindings[n];
            void 0 !== r && r.getValue(e, t)
        },
        setValue: function(e, t) {
            for (var n = this._bindings, r = this._targetGroup.nCachedObjects_, i = n.length; r !== i; ++r)
                n[r].setValue(e, t)
        },
        bind: function() {
            for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)
                e[t].bind()
        },
        unbind: function() {
            for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)
                e[t].unbind()
        }
    }),
    Object.assign(Xl, {
        Composite: Yl,
        create: function(e, t, n) {
            return e && e.isAnimationObjectGroup ? new Xl.Composite(e,t,n) : new Xl(e,t,n)
        },
        sanitizeNodeName: function(e) {
            return e.replace(/\s/g, "_").replace(zl, "")
        },
        parseTrackName: function(e) {
            var t = ql.exec(e);
            if (!t)
                throw new Error("PropertyBinding: Cannot parse trackName: " + e);
            var n = {
                nodeName: t[2],
                objectName: t[3],
                objectIndex: t[4],
                propertyName: t[5],
                propertyIndex: t[6]
            }
              , r = n.nodeName && n.nodeName.lastIndexOf(".");
            if (void 0 !== r && -1 !== r) {
                var i = n.nodeName.substring(r + 1);
                -1 !== Kl.indexOf(i) && (n.nodeName = n.nodeName.substring(0, r),
                n.objectName = i)
            }
            if (null === n.propertyName || 0 === n.propertyName.length)
                throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
            return n
        },
        findNode: function(e, t) {
            if (!t || "" === t || "." === t || -1 === t || t === e.name || t === e.uuid)
                return e;
            if (e.skeleton) {
                var n = e.skeleton.getBoneByName(t);
                if (void 0 !== n)
                    return n
            }
            if (e.children) {
                var r = function(e) {
                    for (var n = 0; n < e.length; n++) {
                        var i = e[n];
                        if (i.name === t || i.uuid === t)
                            return i;
                        var a = r(i.children);
                        if (a)
                            return a
                    }
                    return null
                }
                  , i = r(e.children);
                if (i)
                    return i
            }
            return null
        }
    }),
    Object.assign(Xl.prototype, {
        _getValue_unavailable: function() {},
        _setValue_unavailable: function() {},
        BindingType: {
            Direct: 0,
            EntireArray: 1,
            ArrayElement: 2,
            HasFromToArray: 3
        },
        Versioning: {
            None: 0,
            NeedsUpdate: 1,
            MatrixWorldNeedsUpdate: 2
        },
        GetterByBindingType: [function(e, t) {
            e[t] = this.node[this.propertyName]
        }
        , function(e, t) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                e[t++] = n[r]
        }
        , function(e, t) {
            e[t] = this.resolvedProperty[this.propertyIndex]
        }
        , function(e, t) {
            this.resolvedProperty.toArray(e, t)
        }
        ],
        SetterByBindingTypeAndVersioning: [[function(e, t) {
            this.targetObject[this.propertyName] = e[t]
        }
        , function(e, t) {
            this.targetObject[this.propertyName] = e[t],
            this.targetObject.needsUpdate = !0
        }
        , function(e, t) {
            this.targetObject[this.propertyName] = e[t],
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(e, t) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                n[r] = e[t++]
        }
        , function(e, t) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                n[r] = e[t++];
            this.targetObject.needsUpdate = !0
        }
        , function(e, t) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                n[r] = e[t++];
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(e, t) {
            this.resolvedProperty[this.propertyIndex] = e[t]
        }
        , function(e, t) {
            this.resolvedProperty[this.propertyIndex] = e[t],
            this.targetObject.needsUpdate = !0
        }
        , function(e, t) {
            this.resolvedProperty[this.propertyIndex] = e[t],
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(e, t) {
            this.resolvedProperty.fromArray(e, t)
        }
        , function(e, t) {
            this.resolvedProperty.fromArray(e, t),
            this.targetObject.needsUpdate = !0
        }
        , function(e, t) {
            this.resolvedProperty.fromArray(e, t),
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ]],
        getValue: function(e, t) {
            this.bind(),
            this.getValue(e, t)
        },
        setValue: function(e, t) {
            this.bind(),
            this.setValue(e, t)
        },
        bind: function() {
            var e = this.node
              , t = this.parsedPath
              , n = t.objectName
              , r = t.propertyName
              , i = t.propertyIndex;
            if (e || (e = Xl.findNode(this.rootNode, t.nodeName) || this.rootNode,
            this.node = e),
            this.getValue = this._getValue_unavailable,
            this.setValue = this._setValue_unavailable,
            e) {
                if (n) {
                    var a = t.objectIndex;
                    switch (n) {
                    case "materials":
                        if (!e.material)
                            return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                        if (!e.material.materials)
                            return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                        e = e.material.materials;
                        break;
                    case "bones":
                        if (!e.skeleton)
                            return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                        e = e.skeleton.bones;
                        for (var o = 0; o < e.length; o++)
                            if (e[o].name === a) {
                                a = o;
                                break
                            }
                        break;
                    default:
                        if (void 0 === e[n])
                            return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                        e = e[n]
                    }
                    if (void 0 !== a) {
                        if (void 0 === e[a])
                            return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                        e = e[a]
                    }
                }
                var s = e[r];
                if (void 0 !== s) {
                    var l = this.Versioning.None;
                    this.targetObject = e,
                    void 0 !== e.needsUpdate ? l = this.Versioning.NeedsUpdate : void 0 !== e.matrixWorldNeedsUpdate && (l = this.Versioning.MatrixWorldNeedsUpdate);
                    var u = this.BindingType.Direct;
                    if (void 0 !== i) {
                        if ("morphTargetInfluences" === r) {
                            if (!e.geometry)
                                return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                            if (e.geometry.isBufferGeometry) {
                                if (!e.geometry.morphAttributes)
                                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                                for (o = 0; o < this.node.geometry.morphAttributes.position.length; o++)
                                    if (e.geometry.morphAttributes.position[o].name === i) {
                                        i = o;
                                        break
                                    }
                            } else {
                                if (!e.geometry.morphTargets)
                                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
                                for (o = 0; o < this.node.geometry.morphTargets.length; o++)
                                    if (e.geometry.morphTargets[o].name === i) {
                                        i = o;
                                        break
                                    }
                            }
                        }
                        u = this.BindingType.ArrayElement,
                        this.resolvedProperty = s,
                        this.propertyIndex = i
                    } else
                        void 0 !== s.fromArray && void 0 !== s.toArray ? (u = this.BindingType.HasFromToArray,
                        this.resolvedProperty = s) : Array.isArray(s) ? (u = this.BindingType.EntireArray,
                        this.resolvedProperty = s) : this.propertyName = r;
                    this.getValue = this.GetterByBindingType[u],
                    this.setValue = this.SetterByBindingTypeAndVersioning[u][l]
                } else {
                    var c = t.nodeName;
                    console.error("THREE.PropertyBinding: Trying to update property for track: " + c + "." + r + " but it wasn't found.", e)
                }
            } else
                console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.")
        },
        unbind: function() {
            this.node = null,
            this.getValue = this._getValue_unbound,
            this.setValue = this._setValue_unbound
        }
    }),
    Object.assign(Xl.prototype, {
        _getValue_unbound: Xl.prototype.getValue,
        _setValue_unbound: Xl.prototype.setValue
    }),
    Object.assign(function() {
        this.uuid = L.generateUUID(),
        this._objects = Array.prototype.slice.call(arguments),
        this.nCachedObjects_ = 0;
        var e = {};
        this._indicesByUUID = e;
        for (var t = 0, n = arguments.length; t !== n; ++t)
            e[arguments[t].uuid] = t;
        this._paths = [],
        this._parsedPaths = [],
        this._bindings = [],
        this._bindingsIndicesByPath = {};
        var r = this;
        this.stats = {
            objects: {
                get total() {
                    return r._objects.length
                },
                get inUse() {
                    return this.total - r.nCachedObjects_
                }
            },
            get bindingsPerObject() {
                return r._bindings.length
            }
        }
    }
    .prototype, {
        isAnimationObjectGroup: !0,
        add: function() {
            for (var e = this._objects, t = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, i = this._paths, a = this._parsedPaths, o = this._bindings, s = o.length, l = void 0, u = 0, c = arguments.length; u !== c; ++u) {
                var h = arguments[u]
                  , d = h.uuid
                  , f = r[d];
                if (void 0 === f) {
                    f = t++,
                    r[d] = f,
                    e.push(h);
                    for (var p = 0, m = s; p !== m; ++p)
                        o[p].push(new Xl(h,i[p],a[p]))
                } else if (f < n) {
                    l = e[f];
                    var g = --n
                      , v = e[g];
                    r[v.uuid] = f,
                    e[f] = v,
                    r[d] = g,
                    e[g] = h;
                    for (p = 0,
                    m = s; p !== m; ++p) {
                        var y = o[p]
                          , b = y[g]
                          , x = y[f];
                        y[f] = b,
                        void 0 === x && (x = new Xl(h,i[p],a[p])),
                        y[g] = x
                    }
                } else
                    e[f] !== l && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")
            }
            this.nCachedObjects_ = n
        },
        remove: function() {
            for (var e = this._objects, t = this.nCachedObjects_, n = this._indicesByUUID, r = this._bindings, i = r.length, a = 0, o = arguments.length; a !== o; ++a) {
                var s = arguments[a]
                  , l = s.uuid
                  , u = n[l];
                if (void 0 !== u && u >= t) {
                    var c = t++
                      , h = e[c];
                    n[h.uuid] = u,
                    e[u] = h,
                    n[l] = c,
                    e[c] = s;
                    for (var d = 0, f = i; d !== f; ++d) {
                        var p = r[d]
                          , m = p[c]
                          , g = p[u];
                        p[u] = m,
                        p[c] = g
                    }
                }
            }
            this.nCachedObjects_ = t
        },
        uncache: function() {
            for (var e = this._objects, t = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, i = this._bindings, a = i.length, o = 0, s = arguments.length; o !== s; ++o) {
                var l = arguments[o]
                  , u = l.uuid
                  , c = r[u];
                if (void 0 !== c)
                    if (delete r[u],
                    c < n) {
                        var h = --n
                          , d = e[h]
                          , f = e[y = --t];
                        r[d.uuid] = c,
                        e[c] = d,
                        r[f.uuid] = h,
                        e[h] = f,
                        e.pop();
                        for (var p = 0, m = a; p !== m; ++p) {
                            var g = (b = i[p])[h]
                              , v = b[y];
                            b[c] = g,
                            b[h] = v,
                            b.pop()
                        }
                    } else {
                        var y;
                        r[(f = e[y = --t]).uuid] = c,
                        e[c] = f,
                        e.pop();
                        for (p = 0,
                        m = a; p !== m; ++p) {
                            var b;
                            (b = i[p])[c] = b[y],
                            b.pop()
                        }
                    }
            }
            this.nCachedObjects_ = n
        },
        subscribe_: function(e, t) {
            var n = this._bindingsIndicesByPath
              , r = n[e]
              , i = this._bindings;
            if (void 0 !== r)
                return i[r];
            var a = this._paths
              , o = this._parsedPaths
              , s = this._objects
              , l = s.length
              , u = this.nCachedObjects_
              , c = new Array(l);
            r = i.length,
            n[e] = r,
            a.push(e),
            o.push(t),
            i.push(c);
            for (var h = u, d = s.length; h !== d; ++h) {
                var f = s[h];
                c[h] = new Xl(f,e,t)
            }
            return c
        },
        unsubscribe_: function(e) {
            var t = this._bindingsIndicesByPath
              , n = t[e];
            if (void 0 !== n) {
                var r = this._paths
                  , i = this._parsedPaths
                  , a = this._bindings
                  , o = a.length - 1
                  , s = a[o];
                t[e[o]] = n,
                a[n] = s,
                a.pop(),
                i[n] = i[o],
                i.pop(),
                r[n] = r[o],
                r.pop()
            }
        }
    }),
    Object.assign(Zl.prototype, {
        play: function() {
            return this._mixer._activateAction(this),
            this
        },
        stop: function() {
            return this._mixer._deactivateAction(this),
            this.reset()
        },
        reset: function() {
            return this.paused = !1,
            this.enabled = !0,
            this.time = 0,
            this._loopCount = -1,
            this._startTime = null,
            this.stopFading().stopWarping()
        },
        isRunning: function() {
            return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
        },
        isScheduled: function() {
            return this._mixer._isActiveAction(this)
        },
        startAt: function(e) {
            return this._startTime = e,
            this
        },
        setLoop: function(e, t) {
            return this.loop = e,
            this.repetitions = t,
            this
        },
        setEffectiveWeight: function(e) {
            return this.weight = e,
            this._effectiveWeight = this.enabled ? e : 0,
            this.stopFading()
        },
        getEffectiveWeight: function() {
            return this._effectiveWeight
        },
        fadeIn: function(e) {
            return this._scheduleFading(e, 0, 1)
        },
        fadeOut: function(e) {
            return this._scheduleFading(e, 1, 0)
        },
        crossFadeFrom: function(e, t, n) {
            if (e.fadeOut(t),
            this.fadeIn(t),
            n) {
                var r = this._clip.duration
                  , i = e._clip.duration
                  , a = i / r
                  , o = r / i;
                e.warp(1, a, t),
                this.warp(o, 1, t)
            }
            return this
        },
        crossFadeTo: function(e, t, n) {
            return e.crossFadeFrom(this, t, n)
        },
        stopFading: function() {
            var e = this._weightInterpolant;
            return null !== e && (this._weightInterpolant = null,
            this._mixer._takeBackControlInterpolant(e)),
            this
        },
        setEffectiveTimeScale: function(e) {
            return this.timeScale = e,
            this._effectiveTimeScale = this.paused ? 0 : e,
            this.stopWarping()
        },
        getEffectiveTimeScale: function() {
            return this._effectiveTimeScale
        },
        setDuration: function(e) {
            return this.timeScale = this._clip.duration / e,
            this.stopWarping()
        },
        syncWith: function(e) {
            return this.time = e.time,
            this.timeScale = e.timeScale,
            this.stopWarping()
        },
        halt: function(e) {
            return this.warp(this._effectiveTimeScale, 0, e)
        },
        warp: function(e, t, n) {
            var r = this._mixer
              , i = r.time
              , a = this._timeScaleInterpolant
              , o = this.timeScale;
            null === a && (a = r._lendControlInterpolant(),
            this._timeScaleInterpolant = a);
            var s = a.parameterPositions
              , l = a.sampleValues;
            return s[0] = i,
            s[1] = i + n,
            l[0] = e / o,
            l[1] = t / o,
            this
        },
        stopWarping: function() {
            var e = this._timeScaleInterpolant;
            return null !== e && (this._timeScaleInterpolant = null,
            this._mixer._takeBackControlInterpolant(e)),
            this
        },
        getMixer: function() {
            return this._mixer
        },
        getClip: function() {
            return this._clip
        },
        getRoot: function() {
            return this._localRoot || this._mixer._root
        },
        _update: function(e, t, n, r) {
            if (this.enabled) {
                var i = this._startTime;
                if (null !== i) {
                    var a = (e - i) * n;
                    if (a < 0 || 0 === n)
                        return;
                    this._startTime = null,
                    t = n * a
                }
                t *= this._updateTimeScale(e);
                var o = this._updateTime(t)
                  , s = this._updateWeight(e);
                if (s > 0)
                    for (var l = this._interpolants, u = this._propertyBindings, c = 0, h = l.length; c !== h; ++c)
                        l[c].evaluate(o),
                        u[c].accumulate(r, s)
            } else
                this._updateWeight(e)
        },
        _updateWeight: function(e) {
            var t = 0;
            if (this.enabled) {
                t = this.weight;
                var n = this._weightInterpolant;
                if (null !== n) {
                    var r = n.evaluate(e)[0];
                    t *= r,
                    e > n.parameterPositions[1] && (this.stopFading(),
                    0 === r && (this.enabled = !1))
                }
            }
            return this._effectiveWeight = t,
            t
        },
        _updateTimeScale: function(e) {
            var t = 0;
            if (!this.paused) {
                t = this.timeScale;
                var n = this._timeScaleInterpolant;
                if (null !== n)
                    t *= n.evaluate(e)[0],
                    e > n.parameterPositions[1] && (this.stopWarping(),
                    0 === t ? this.paused = !0 : this.timeScale = t)
            }
            return this._effectiveTimeScale = t,
            t
        },
        _updateTime: function(e) {
            var t = this.time + e
              , n = this._clip.duration
              , r = this.loop
              , i = this._loopCount
              , a = 2202 === r;
            if (0 === e)
                return -1 === i ? t : a && 1 == (1 & i) ? n - t : t;
            if (2200 === r) {
                -1 === i && (this._loopCount = 0,
                this._setEndings(!0, !0, !1));
                e: {
                    if (t >= n)
                        t = n;
                    else {
                        if (!(t < 0)) {
                            this.time = t;
                            break e
                        }
                        t = 0
                    }
                    this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                    this.time = t,
                    this._mixer.dispatchEvent({
                        type: "finished",
                        action: this,
                        direction: e < 0 ? -1 : 1
                    })
                }
            } else {
                if (-1 === i && (e >= 0 ? (i = 0,
                this._setEndings(!0, 0 === this.repetitions, a)) : this._setEndings(0 === this.repetitions, !0, a)),
                t >= n || t < 0) {
                    var o = Math.floor(t / n);
                    t -= n * o,
                    i += Math.abs(o);
                    var s = this.repetitions - i;
                    if (s <= 0)
                        this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                        t = e > 0 ? n : 0,
                        this.time = t,
                        this._mixer.dispatchEvent({
                            type: "finished",
                            action: this,
                            direction: e > 0 ? 1 : -1
                        });
                    else {
                        if (1 === s) {
                            var l = e < 0;
                            this._setEndings(l, !l, a)
                        } else
                            this._setEndings(!1, !1, a);
                        this._loopCount = i,
                        this.time = t,
                        this._mixer.dispatchEvent({
                            type: "loop",
                            action: this,
                            loopDelta: o
                        })
                    }
                } else
                    this.time = t;
                if (a && 1 == (1 & i))
                    return n - t
            }
            return t
        },
        _setEndings: function(e, t, n) {
            var r = this._interpolantSettings;
            n ? (r.endingStart = 2401,
            r.endingEnd = 2401) : (r.endingStart = e ? this.zeroSlopeAtStart ? 2401 : 2400 : 2402,
            r.endingEnd = t ? this.zeroSlopeAtEnd ? 2401 : 2400 : 2402)
        },
        _scheduleFading: function(e, t, n) {
            var r = this._mixer
              , i = r.time
              , a = this._weightInterpolant;
            null === a && (a = r._lendControlInterpolant(),
            this._weightInterpolant = a);
            var o = a.parameterPositions
              , s = a.sampleValues;
            return o[0] = i,
            s[0] = t,
            o[1] = i + e,
            s[1] = n,
            this
        }
    }),
    Jl.prototype = Object.assign(Object.create(S.prototype), {
        constructor: Jl,
        _bindAction: function(e, t) {
            var n = e._localRoot || this._root
              , r = e._clip.tracks
              , i = r.length
              , a = e._propertyBindings
              , o = e._interpolants
              , s = n.uuid
              , l = this._bindingsByRootAndName
              , u = l[s];
            void 0 === u && (u = {},
            l[s] = u);
            for (var c = 0; c !== i; ++c) {
                var h = r[c]
                  , d = h.name
                  , f = u[d];
                if (void 0 !== f)
                    a[c] = f;
                else {
                    if (void 0 !== (f = a[c])) {
                        null === f._cacheIndex && (++f.referenceCount,
                        this._addInactiveBinding(f, s, d));
                        continue
                    }
                    var p = t && t._propertyBindings[c].binding.parsedPath;
                    ++(f = new Bl(Xl.create(n, d, p),h.ValueTypeName,h.getValueSize())).referenceCount,
                    this._addInactiveBinding(f, s, d),
                    a[c] = f
                }
                o[c].resultBuffer = f.buffer
            }
        },
        _activateAction: function(e) {
            if (!this._isActiveAction(e)) {
                if (null === e._cacheIndex) {
                    var t = (e._localRoot || this._root).uuid
                      , n = e._clip.uuid
                      , r = this._actionsByClip[n];
                    this._bindAction(e, r && r.knownActions[0]),
                    this._addInactiveAction(e, n, t)
                }
                for (var i = e._propertyBindings, a = 0, o = i.length; a !== o; ++a) {
                    var s = i[a];
                    0 == s.useCount++ && (this._lendBinding(s),
                    s.saveOriginalState())
                }
                this._lendAction(e)
            }
        },
        _deactivateAction: function(e) {
            if (this._isActiveAction(e)) {
                for (var t = e._propertyBindings, n = 0, r = t.length; n !== r; ++n) {
                    var i = t[n];
                    0 == --i.useCount && (i.restoreOriginalState(),
                    this._takeBackBinding(i))
                }
                this._takeBackAction(e)
            }
        },
        _initMemoryManager: function() {
            this._actions = [],
            this._nActiveActions = 0,
            this._actionsByClip = {},
            this._bindings = [],
            this._nActiveBindings = 0,
            this._bindingsByRootAndName = {},
            this._controlInterpolants = [],
            this._nActiveControlInterpolants = 0;
            var e = this;
            this.stats = {
                actions: {
                    get total() {
                        return e._actions.length
                    },
                    get inUse() {
                        return e._nActiveActions
                    }
                },
                bindings: {
                    get total() {
                        return e._bindings.length
                    },
                    get inUse() {
                        return e._nActiveBindings
                    }
                },
                controlInterpolants: {
                    get total() {
                        return e._controlInterpolants.length
                    },
                    get inUse() {
                        return e._nActiveControlInterpolants
                    }
                }
            }
        },
        _isActiveAction: function(e) {
            var t = e._cacheIndex;
            return null !== t && t < this._nActiveActions
        },
        _addInactiveAction: function(e, t, n) {
            var r = this._actions
              , i = this._actionsByClip
              , a = i[t];
            if (void 0 === a)
                a = {
                    knownActions: [e],
                    actionByRoot: {}
                },
                e._byClipCacheIndex = 0,
                i[t] = a;
            else {
                var o = a.knownActions;
                e._byClipCacheIndex = o.length,
                o.push(e)
            }
            e._cacheIndex = r.length,
            r.push(e),
            a.actionByRoot[n] = e
        },
        _removeInactiveAction: function(e) {
            var t = this._actions
              , n = t[t.length - 1]
              , r = e._cacheIndex;
            n._cacheIndex = r,
            t[r] = n,
            t.pop(),
            e._cacheIndex = null;
            var i = e._clip.uuid
              , a = this._actionsByClip
              , o = a[i]
              , s = o.knownActions
              , l = s[s.length - 1]
              , u = e._byClipCacheIndex;
            l._byClipCacheIndex = u,
            s[u] = l,
            s.pop(),
            e._byClipCacheIndex = null,
            delete o.actionByRoot[(e._localRoot || this._root).uuid],
            0 === s.length && delete a[i],
            this._removeInactiveBindingsForAction(e)
        },
        _removeInactiveBindingsForAction: function(e) {
            for (var t = e._propertyBindings, n = 0, r = t.length; n !== r; ++n) {
                var i = t[n];
                0 == --i.referenceCount && this._removeInactiveBinding(i)
            }
        },
        _lendAction: function(e) {
            var t = this._actions
              , n = e._cacheIndex
              , r = this._nActiveActions++
              , i = t[r];
            e._cacheIndex = r,
            t[r] = e,
            i._cacheIndex = n,
            t[n] = i
        },
        _takeBackAction: function(e) {
            var t = this._actions
              , n = e._cacheIndex
              , r = --this._nActiveActions
              , i = t[r];
            e._cacheIndex = r,
            t[r] = e,
            i._cacheIndex = n,
            t[n] = i
        },
        _addInactiveBinding: function(e, t, n) {
            var r = this._bindingsByRootAndName
              , i = r[t]
              , a = this._bindings;
            void 0 === i && (i = {},
            r[t] = i),
            i[n] = e,
            e._cacheIndex = a.length,
            a.push(e)
        },
        _removeInactiveBinding: function(e) {
            var t = this._bindings
              , n = e.binding
              , r = n.rootNode.uuid
              , i = n.path
              , a = this._bindingsByRootAndName
              , o = a[r]
              , s = t[t.length - 1]
              , l = e._cacheIndex;
            s._cacheIndex = l,
            t[l] = s,
            t.pop(),
            delete o[i],
            0 === Object.keys(o).length && delete a[r]
        },
        _lendBinding: function(e) {
            var t = this._bindings
              , n = e._cacheIndex
              , r = this._nActiveBindings++
              , i = t[r];
            e._cacheIndex = r,
            t[r] = e,
            i._cacheIndex = n,
            t[n] = i
        },
        _takeBackBinding: function(e) {
            var t = this._bindings
              , n = e._cacheIndex
              , r = --this._nActiveBindings
              , i = t[r];
            e._cacheIndex = r,
            t[r] = e,
            i._cacheIndex = n,
            t[n] = i
        },
        _lendControlInterpolant: function() {
            var e = this._controlInterpolants
              , t = this._nActiveControlInterpolants++
              , n = e[t];
            return void 0 === n && ((n = new Jo(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex = t,
            e[t] = n),
            n
        },
        _takeBackControlInterpolant: function(e) {
            var t = this._controlInterpolants
              , n = e.__cacheIndex
              , r = --this._nActiveControlInterpolants
              , i = t[r];
            e.__cacheIndex = r,
            t[r] = e,
            i.__cacheIndex = n,
            t[n] = i
        },
        _controlInterpolantsResultBuffer: new Float32Array(1),
        clipAction: function(e, t) {
            var n = t || this._root
              , r = n.uuid
              , i = "string" == typeof e ? ss.findByName(n, e) : e
              , a = null !== i ? i.uuid : e
              , o = this._actionsByClip[a]
              , s = null;
            if (void 0 !== o) {
                var l = o.actionByRoot[r];
                if (void 0 !== l)
                    return l;
                s = o.knownActions[0],
                null === i && (i = s._clip)
            }
            if (null === i)
                return null;
            var u = new Zl(this,i,t);
            return this._bindAction(u, s),
            this._addInactiveAction(u, a, r),
            u
        },
        existingAction: function(e, t) {
            var n = t || this._root
              , r = n.uuid
              , i = "string" == typeof e ? ss.findByName(n, e) : e
              , a = i ? i.uuid : e
              , o = this._actionsByClip[a];
            return void 0 !== o && o.actionByRoot[r] || null
        },
        stopAllAction: function() {
            var e = this._actions
              , t = this._nActiveActions
              , n = this._bindings
              , r = this._nActiveBindings;
            this._nActiveActions = 0,
            this._nActiveBindings = 0;
            for (var i = 0; i !== t; ++i)
                e[i].reset();
            for (i = 0; i !== r; ++i)
                n[i].useCount = 0;
            return this
        },
        update: function(e) {
            e *= this.timeScale;
            for (var t = this._actions, n = this._nActiveActions, r = this.time += e, i = Math.sign(e), a = this._accuIndex ^= 1, o = 0; o !== n; ++o) {
                t[o]._update(r, e, i, a)
            }
            var s = this._bindings
              , l = this._nActiveBindings;
            for (o = 0; o !== l; ++o)
                s[o].apply(a);
            return this
        },
        setTime: function(e) {
            this.time = 0;
            for (var t = 0; t < this._actions.length; t++)
                this._actions[t].time = 0;
            return this.update(e)
        },
        getRoot: function() {
            return this._root
        },
        uncacheClip: function(e) {
            var t = this._actions
              , n = e.uuid
              , r = this._actionsByClip
              , i = r[n];
            if (void 0 !== i) {
                for (var a = i.knownActions, o = 0, s = a.length; o !== s; ++o) {
                    var l = a[o];
                    this._deactivateAction(l);
                    var u = l._cacheIndex
                      , c = t[t.length - 1];
                    l._cacheIndex = null,
                    l._byClipCacheIndex = null,
                    c._cacheIndex = u,
                    t[u] = c,
                    t.pop(),
                    this._removeInactiveBindingsForAction(l)
                }
                delete r[n]
            }
        },
        uncacheRoot: function(e) {
            var t = e.uuid
              , n = this._actionsByClip;
            for (var r in n) {
                var i = n[r].actionByRoot[t];
                void 0 !== i && (this._deactivateAction(i),
                this._removeInactiveAction(i))
            }
            var a = this._bindingsByRootAndName[t];
            if (void 0 !== a)
                for (var o in a) {
                    var s = a[o];
                    s.restoreOriginalState(),
                    this._removeInactiveBinding(s)
                }
        },
        uncacheAction: function(e, t) {
            var n = this.existingAction(e, t);
            null !== n && (this._deactivateAction(n),
            this._removeInactiveAction(n))
        }
    }),
    Ql.prototype.clone = function() {
        return new Ql(void 0 === this.value.clone ? this.value : this.value.clone())
    }
    ,
    $l.prototype = Object.assign(Object.create(Ei.prototype), {
        constructor: $l,
        isInstancedInterleavedBuffer: !0,
        copy: function(e) {
            return Ei.prototype.copy.call(this, e),
            this.meshPerAttribute = e.meshPerAttribute,
            this
        }
    }),
    Object.assign(eu.prototype, {
        set: function(e, t) {
            this.ray.set(e, t)
        },
        setFromCamera: function(e, t) {
            t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld),
            this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize(),
            this.camera = t) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t),
            this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld),
            this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type.")
        },
        intersectObject: function(e, t, n) {
            var r = n || [];
            return nu(e, this, r, t),
            r.sort(tu),
            r
        },
        intersectObjects: function(e, t, n) {
            var r = n || [];
            if (!1 === Array.isArray(e))
                return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),
                r;
            for (var i = 0, a = e.length; i < a; i++)
                nu(e[i], this, r, t);
            return r.sort(tu),
            r
        }
    }),
    Object.assign(function(e, t, n) {
        return this.radius = void 0 !== e ? e : 1,
        this.phi = void 0 !== t ? t : 0,
        this.theta = void 0 !== n ? n : 0,
        this
    }
    .prototype, {
        set: function(e, t, n) {
            return this.radius = e,
            this.phi = t,
            this.theta = n,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.radius = e.radius,
            this.phi = e.phi,
            this.theta = e.theta,
            this
        },
        makeSafe: function() {
            return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)),
            this
        },
        setFromVector3: function(e) {
            return this.setFromCartesianCoords(e.x, e.y, e.z)
        },
        setFromCartesianCoords: function(e, t, n) {
            return this.radius = Math.sqrt(e * e + t * t + n * n),
            0 === this.radius ? (this.theta = 0,
            this.phi = 0) : (this.theta = Math.atan2(e, n),
            this.phi = Math.acos(L.clamp(t / this.radius, -1, 1))),
            this
        }
    }),
    Object.assign(function(e, t, n) {
        return this.radius = void 0 !== e ? e : 1,
        this.theta = void 0 !== t ? t : 0,
        this.y = void 0 !== n ? n : 0,
        this
    }
    .prototype, {
        set: function(e, t, n) {
            return this.radius = e,
            this.theta = t,
            this.y = n,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.radius = e.radius,
            this.theta = e.theta,
            this.y = e.y,
            this
        },
        setFromVector3: function(e) {
            return this.setFromCartesianCoords(e.x, e.y, e.z)
        },
        setFromCartesianCoords: function(e, t, n) {
            return this.radius = Math.sqrt(e * e + n * n),
            this.theta = Math.atan2(e, n),
            this.y = t,
            this
        }
    });
    var ru = new C;
    function iu(e, t) {
        this.min = void 0 !== e ? e : new C(1 / 0,1 / 0),
        this.max = void 0 !== t ? t : new C(-1 / 0,-1 / 0)
    }
    Object.assign(iu.prototype, {
        set: function(e, t) {
            return this.min.copy(e),
            this.max.copy(t),
            this
        },
        setFromPoints: function(e) {
            this.makeEmpty();
            for (var t = 0, n = e.length; t < n; t++)
                this.expandByPoint(e[t]);
            return this
        },
        setFromCenterAndSize: function(e, t) {
            var n = ru.copy(t).multiplyScalar(.5);
            return this.min.copy(e).sub(n),
            this.max.copy(e).add(n),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.min.copy(e.min),
            this.max.copy(e.max),
            this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = 1 / 0,
            this.max.x = this.max.y = -1 / 0,
            this
        },
        isEmpty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y
        },
        getCenter: function(e) {
            return void 0 === e && (console.warn("THREE.Box2: .getCenter() target is now required"),
            e = new C),
            this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        getSize: function(e) {
            return void 0 === e && (console.warn("THREE.Box2: .getSize() target is now required"),
            e = new C),
            this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min)
        },
        expandByPoint: function(e) {
            return this.min.min(e),
            this.max.max(e),
            this
        },
        expandByVector: function(e) {
            return this.min.sub(e),
            this.max.add(e),
            this
        },
        expandByScalar: function(e) {
            return this.min.addScalar(-e),
            this.max.addScalar(e),
            this
        },
        containsPoint: function(e) {
            return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y)
        },
        containsBox: function(e) {
            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y
        },
        getParameter: function(e, t) {
            return void 0 === t && (console.warn("THREE.Box2: .getParameter() target is now required"),
            t = new C),
            t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y))
        },
        intersectsBox: function(e) {
            return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y)
        },
        clampPoint: function(e, t) {
            return void 0 === t && (console.warn("THREE.Box2: .clampPoint() target is now required"),
            t = new C),
            t.copy(e).clamp(this.min, this.max)
        },
        distanceToPoint: function(e) {
            return ru.copy(e).clamp(this.min, this.max).sub(e).length()
        },
        intersect: function(e) {
            return this.min.max(e.min),
            this.max.min(e.max),
            this
        },
        union: function(e) {
            return this.min.min(e.min),
            this.max.max(e.max),
            this
        },
        translate: function(e) {
            return this.min.add(e),
            this.max.add(e),
            this
        },
        equals: function(e) {
            return e.min.equals(this.min) && e.max.equals(this.max)
        }
    });
    var au = new G
      , ou = new G;
    function su(e, t) {
        this.start = void 0 !== e ? e : new G,
        this.end = void 0 !== t ? t : new G
    }
    function lu(e) {
        fe.call(this),
        this.material = e,
        this.render = function() {}
    }
    Object.assign(su.prototype, {
        set: function(e, t) {
            return this.start.copy(e),
            this.end.copy(t),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.start.copy(e.start),
            this.end.copy(e.end),
            this
        },
        getCenter: function(e) {
            return void 0 === e && (console.warn("THREE.Line3: .getCenter() target is now required"),
            e = new G),
            e.addVectors(this.start, this.end).multiplyScalar(.5)
        },
        delta: function(e) {
            return void 0 === e && (console.warn("THREE.Line3: .delta() target is now required"),
            e = new G),
            e.subVectors(this.end, this.start)
        },
        distanceSq: function() {
            return this.start.distanceToSquared(this.end)
        },
        distance: function() {
            return this.start.distanceTo(this.end)
        },
        at: function(e, t) {
            return void 0 === t && (console.warn("THREE.Line3: .at() target is now required"),
            t = new G),
            this.delta(t).multiplyScalar(e).add(this.start)
        },
        closestPointToPointParameter: function(e, t) {
            au.subVectors(e, this.start),
            ou.subVectors(this.end, this.start);
            var n = ou.dot(ou)
              , r = ou.dot(au) / n;
            return t && (r = L.clamp(r, 0, 1)),
            r
        },
        closestPointToPoint: function(e, t, n) {
            var r = this.closestPointToPointParameter(e, t);
            return void 0 === n && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"),
            n = new G),
            this.delta(n).multiplyScalar(r).add(this.start)
        },
        applyMatrix4: function(e) {
            return this.start.applyMatrix4(e),
            this.end.applyMatrix4(e),
            this
        },
        equals: function(e) {
            return e.start.equals(this.start) && e.end.equals(this.end)
        }
    }),
    lu.prototype = Object.create(fe.prototype),
    lu.prototype.constructor = lu,
    lu.prototype.isImmediateRenderObject = !0;
    var uu = new G;
    function cu(e, t) {
        fe.call(this),
        this.light = e,
        this.light.updateMatrixWorld(),
        this.matrix = e.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = t;
        for (var n = new Ot, r = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], i = 0, a = 1; i < 32; i++,
        a++) {
            var o = i / 32 * Math.PI * 2
              , s = a / 32 * Math.PI * 2;
            r.push(Math.cos(o), Math.sin(o), 1, Math.cos(s), Math.sin(s), 1)
        }
        n.setAttribute("position", new wt(r,3));
        var l = new ta({
            fog: !1,
            toneMapped: !1
        });
        this.cone = new ca(n,l),
        this.add(this.cone),
        this.update()
    }
    cu.prototype = Object.create(fe.prototype),
    cu.prototype.constructor = cu,
    cu.prototype.dispose = function() {
        this.cone.geometry.dispose(),
        this.cone.material.dispose()
    }
    ,
    cu.prototype.update = function() {
        this.light.updateMatrixWorld();
        var e = this.light.distance ? this.light.distance : 1e3
          , t = e * Math.tan(this.light.angle);
        this.cone.scale.set(t, t, e),
        uu.setFromMatrixPosition(this.light.target.matrixWorld),
        this.cone.lookAt(uu),
        void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color)
    }
    ;
    var hu = new G
      , du = new X
      , fu = new X;
    function pu(e) {
        for (var t = function e(t) {
            var n = [];
            t && t.isBone && n.push(t);
            for (var r = 0; r < t.children.length; r++)
                n.push.apply(n, e(t.children[r]));
            return n
        }(e), n = new Ot, r = [], i = [], a = new it(0,0,1), o = new it(0,1,0), s = 0; s < t.length; s++) {
            var l = t[s];
            l.parent && l.parent.isBone && (r.push(0, 0, 0),
            r.push(0, 0, 0),
            i.push(a.r, a.g, a.b),
            i.push(o.r, o.g, o.b))
        }
        n.setAttribute("position", new wt(r,3)),
        n.setAttribute("color", new wt(i,3));
        var u = new ta({
            vertexColors: !0,
            depthTest: !1,
            depthWrite: !1,
            toneMapped: !1,
            transparent: !0
        });
        ca.call(this, n, u),
        this.root = e,
        this.bones = t,
        this.matrix = e.matrixWorld,
        this.matrixAutoUpdate = !1
    }
    function mu(e, t, n) {
        this.light = e,
        this.light.updateMatrixWorld(),
        this.color = n;
        var r = new wo(t,4,2)
          , i = new ht({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        });
        Zt.call(this, r, i),
        this.matrix = this.light.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.update()
    }
    pu.prototype = Object.create(ca.prototype),
    pu.prototype.constructor = pu,
    pu.prototype.isSkeletonHelper = !0,
    pu.prototype.updateMatrixWorld = function(e) {
        var t = this.bones
          , n = this.geometry
          , r = n.getAttribute("position");
        fu.getInverse(this.root.matrixWorld);
        for (var i = 0, a = 0; i < t.length; i++) {
            var o = t[i];
            o.parent && o.parent.isBone && (du.multiplyMatrices(fu, o.matrixWorld),
            hu.setFromMatrixPosition(du),
            r.setXYZ(a, hu.x, hu.y, hu.z),
            du.multiplyMatrices(fu, o.parent.matrixWorld),
            hu.setFromMatrixPosition(du),
            r.setXYZ(a + 1, hu.x, hu.y, hu.z),
            a += 2)
        }
        n.getAttribute("position").needsUpdate = !0,
        fe.prototype.updateMatrixWorld.call(this, e)
    }
    ,
    mu.prototype = Object.create(Zt.prototype),
    mu.prototype.constructor = mu,
    mu.prototype.dispose = function() {
        this.geometry.dispose(),
        this.material.dispose()
    }
    ,
    mu.prototype.update = function() {
        void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color)
    }
    ;
    var gu = new G
      , vu = new it
      , yu = new it;
    function bu(e, t, n) {
        fe.call(this),
        this.light = e,
        this.light.updateMatrixWorld(),
        this.matrix = e.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = n;
        var r = new Pa(t);
        r.rotateY(.5 * Math.PI),
        this.material = new ht({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        }),
        void 0 === this.color && (this.material.vertexColors = !0);
        var i = r.getAttribute("position")
          , a = new Float32Array(3 * i.count);
        r.setAttribute("color", new ft(a,3)),
        this.add(new Zt(r,this.material)),
        this.update()
    }
    function xu(e, t, n, r) {
        e = e || 10,
        t = t || 10,
        n = new it(void 0 !== n ? n : 4473924),
        r = new it(void 0 !== r ? r : 8947848);
        for (var i = t / 2, a = e / t, o = e / 2, s = [], l = [], u = 0, c = 0, h = -o; u <= t; u++,
        h += a) {
            s.push(-o, 0, h, o, 0, h),
            s.push(h, 0, -o, h, 0, o);
            var d = u === i ? n : r;
            d.toArray(l, c),
            c += 3,
            d.toArray(l, c),
            c += 3,
            d.toArray(l, c),
            c += 3,
            d.toArray(l, c),
            c += 3
        }
        var f = new Ot;
        f.setAttribute("position", new wt(s,3)),
        f.setAttribute("color", new wt(l,3));
        var p = new ta({
            vertexColors: !0,
            toneMapped: !1
        });
        ca.call(this, f, p)
    }
    function wu(e, t, n, r, i, a) {
        e = e || 10,
        t = t || 16,
        n = n || 8,
        r = r || 64,
        i = new it(void 0 !== i ? i : 4473924),
        a = new it(void 0 !== a ? a : 8947848);
        var o, s, l, u, c, h, d, f = [], p = [];
        for (u = 0; u <= t; u++)
            l = u / t * (2 * Math.PI),
            o = Math.sin(l) * e,
            s = Math.cos(l) * e,
            f.push(0, 0, 0),
            f.push(o, 0, s),
            d = 1 & u ? i : a,
            p.push(d.r, d.g, d.b),
            p.push(d.r, d.g, d.b);
        for (u = 0; u <= n; u++)
            for (d = 1 & u ? i : a,
            h = e - e / n * u,
            c = 0; c < r; c++)
                l = c / r * (2 * Math.PI),
                o = Math.sin(l) * h,
                s = Math.cos(l) * h,
                f.push(o, 0, s),
                p.push(d.r, d.g, d.b),
                l = (c + 1) / r * (2 * Math.PI),
                o = Math.sin(l) * h,
                s = Math.cos(l) * h,
                f.push(o, 0, s),
                p.push(d.r, d.g, d.b);
        var m = new Ot;
        m.setAttribute("position", new wt(f,3)),
        m.setAttribute("color", new wt(p,3));
        var g = new ta({
            vertexColors: !0,
            toneMapped: !1
        });
        ca.call(this, m, g)
    }
    bu.prototype = Object.create(fe.prototype),
    bu.prototype.constructor = bu,
    bu.prototype.dispose = function() {
        this.children[0].geometry.dispose(),
        this.children[0].material.dispose()
    }
    ,
    bu.prototype.update = function() {
        var e = this.children[0];
        if (void 0 !== this.color)
            this.material.color.set(this.color);
        else {
            var t = e.geometry.getAttribute("color");
            vu.copy(this.light.color),
            yu.copy(this.light.groundColor);
            for (var n = 0, r = t.count; n < r; n++) {
                var i = n < r / 2 ? vu : yu;
                t.setXYZ(n, i.r, i.g, i.b)
            }
            t.needsUpdate = !0
        }
        e.lookAt(gu.setFromMatrixPosition(this.light.matrixWorld).negate())
    }
    ,
    xu.prototype = Object.assign(Object.create(ca.prototype), {
        constructor: xu,
        copy: function(e) {
            return ca.prototype.copy.call(this, e),
            this.geometry.copy(e.geometry),
            this.material.copy(e.material),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        }
    }),
    wu.prototype = Object.create(ca.prototype),
    wu.prototype.constructor = wu;
    var _u = new G
      , Eu = new G
      , Tu = new G;
    function Su(e, t, n) {
        fe.call(this),
        this.light = e,
        this.light.updateMatrixWorld(),
        this.matrix = e.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = n,
        void 0 === t && (t = 1);
        var r = new Ot;
        r.setAttribute("position", new wt([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0],3));
        var i = new ta({
            fog: !1,
            toneMapped: !1
        });
        this.lightPlane = new sa(r,i),
        this.add(this.lightPlane),
        (r = new Ot).setAttribute("position", new wt([0, 0, 0, 0, 0, 1],3)),
        this.targetLine = new sa(r,i),
        this.add(this.targetLine),
        this.update()
    }
    Su.prototype = Object.create(fe.prototype),
    Su.prototype.constructor = Su,
    Su.prototype.dispose = function() {
        this.lightPlane.geometry.dispose(),
        this.lightPlane.material.dispose(),
        this.targetLine.geometry.dispose(),
        this.targetLine.material.dispose()
    }
    ,
    Su.prototype.update = function() {
        _u.setFromMatrixPosition(this.light.matrixWorld),
        Eu.setFromMatrixPosition(this.light.target.matrixWorld),
        Tu.subVectors(Eu, _u),
        this.lightPlane.lookAt(Eu),
        void 0 !== this.color ? (this.lightPlane.material.color.set(this.color),
        this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color),
        this.targetLine.material.color.copy(this.light.color)),
        this.targetLine.lookAt(Eu),
        this.targetLine.scale.z = Tu.length()
    }
    ;
    var Mu = new G
      , Au = new cn;
    function Ru(e) {
        var t = new Ot
          , n = new ta({
            color: 16777215,
            vertexColors: !0,
            toneMapped: !1
        })
          , r = []
          , i = []
          , a = {}
          , o = new it(16755200)
          , s = new it(16711680)
          , l = new it(43775)
          , u = new it(16777215)
          , c = new it(3355443);
        function h(e, t, n) {
            d(e, n),
            d(t, n)
        }
        function d(e, t) {
            r.push(0, 0, 0),
            i.push(t.r, t.g, t.b),
            void 0 === a[e] && (a[e] = []),
            a[e].push(r.length / 3 - 1)
        }
        h("n1", "n2", o),
        h("n2", "n4", o),
        h("n4", "n3", o),
        h("n3", "n1", o),
        h("f1", "f2", o),
        h("f2", "f4", o),
        h("f4", "f3", o),
        h("f3", "f1", o),
        h("n1", "f1", o),
        h("n2", "f2", o),
        h("n3", "f3", o),
        h("n4", "f4", o),
        h("p", "n1", s),
        h("p", "n2", s),
        h("p", "n3", s),
        h("p", "n4", s),
        h("u1", "u2", l),
        h("u2", "u3", l),
        h("u3", "u1", l),
        h("c", "t", u),
        h("p", "c", c),
        h("cn1", "cn2", c),
        h("cn3", "cn4", c),
        h("cf1", "cf2", c),
        h("cf3", "cf4", c),
        t.setAttribute("position", new wt(r,3)),
        t.setAttribute("color", new wt(i,3)),
        ca.call(this, t, n),
        this.camera = e,
        this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
        this.matrix = e.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.pointMap = a,
        this.update()
    }
    function Lu(e, t, n, r, i, a, o) {
        Mu.set(i, a, o).unproject(r);
        var s = t[e];
        if (void 0 !== s)
            for (var l = n.getAttribute("position"), u = 0, c = s.length; u < c; u++)
                l.setXYZ(s[u], Mu.x, Mu.y, Mu.z)
    }
    Ru.prototype = Object.create(ca.prototype),
    Ru.prototype.constructor = Ru,
    Ru.prototype.update = function() {
        var e = this.geometry
          , t = this.pointMap;
        Au.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),
        Lu("c", t, e, Au, 0, 0, -1),
        Lu("t", t, e, Au, 0, 0, 1),
        Lu("n1", t, e, Au, -1, -1, -1),
        Lu("n2", t, e, Au, 1, -1, -1),
        Lu("n3", t, e, Au, -1, 1, -1),
        Lu("n4", t, e, Au, 1, 1, -1),
        Lu("f1", t, e, Au, -1, -1, 1),
        Lu("f2", t, e, Au, 1, -1, 1),
        Lu("f3", t, e, Au, -1, 1, 1),
        Lu("f4", t, e, Au, 1, 1, 1),
        Lu("u1", t, e, Au, .7, 1.1, -1),
        Lu("u2", t, e, Au, -.7, 1.1, -1),
        Lu("u3", t, e, Au, 0, 2, -1),
        Lu("cf1", t, e, Au, -1, 0, 1),
        Lu("cf2", t, e, Au, 1, 0, 1),
        Lu("cf3", t, e, Au, 0, -1, 1),
        Lu("cf4", t, e, Au, 0, 1, 1),
        Lu("cn1", t, e, Au, -1, 0, -1),
        Lu("cn2", t, e, Au, 1, 0, -1),
        Lu("cn3", t, e, Au, 0, -1, -1),
        Lu("cn4", t, e, Au, 0, 1, -1),
        e.getAttribute("position").needsUpdate = !0
    }
    ;
    var Cu = new Re;
    function Pu(e, t) {
        this.object = e,
        void 0 === t && (t = 16776960);
        var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
          , r = new Float32Array(24)
          , i = new Ot;
        i.setIndex(new ft(n,1)),
        i.setAttribute("position", new ft(r,3)),
        ca.call(this, i, new ta({
            color: t,
            toneMapped: !1
        })),
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function Ou(e, t) {
        this.type = "Box3Helper",
        this.box = e,
        t = t || 16776960;
        var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
          , r = new Ot;
        r.setIndex(new ft(n,1)),
        r.setAttribute("position", new wt([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1],3)),
        ca.call(this, r, new ta({
            color: t,
            toneMapped: !1
        })),
        this.geometry.computeBoundingSphere()
    }
    function ku(e, t, n) {
        this.type = "PlaneHelper",
        this.plane = e,
        this.size = void 0 === t ? 1 : t;
        var r = void 0 !== n ? n : 16776960
          , i = new Ot;
        i.setAttribute("position", new wt([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0],3)),
        i.computeBoundingSphere(),
        sa.call(this, i, new ta({
            color: r,
            toneMapped: !1
        }));
        var a = new Ot;
        a.setAttribute("position", new wt([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1],3)),
        a.computeBoundingSphere(),
        this.add(new Zt(a,new ht({
            color: r,
            opacity: .2,
            transparent: !0,
            depthWrite: !1,
            toneMapped: !1
        })))
    }
    Pu.prototype = Object.create(ca.prototype),
    Pu.prototype.constructor = Pu,
    Pu.prototype.update = function(e) {
        if (void 0 !== e && console.warn("THREE.BoxHelper: .update() has no longer arguments."),
        void 0 !== this.object && Cu.setFromObject(this.object),
        !Cu.isEmpty()) {
            var t = Cu.min
              , n = Cu.max
              , r = this.geometry.attributes.position
              , i = r.array;
            i[0] = n.x,
            i[1] = n.y,
            i[2] = n.z,
            i[3] = t.x,
            i[4] = n.y,
            i[5] = n.z,
            i[6] = t.x,
            i[7] = t.y,
            i[8] = n.z,
            i[9] = n.x,
            i[10] = t.y,
            i[11] = n.z,
            i[12] = n.x,
            i[13] = n.y,
            i[14] = t.z,
            i[15] = t.x,
            i[16] = n.y,
            i[17] = t.z,
            i[18] = t.x,
            i[19] = t.y,
            i[20] = t.z,
            i[21] = n.x,
            i[22] = t.y,
            i[23] = t.z,
            r.needsUpdate = !0,
            this.geometry.computeBoundingSphere()
        }
    }
    ,
    Pu.prototype.setFromObject = function(e) {
        return this.object = e,
        this.update(),
        this
    }
    ,
    Pu.prototype.copy = function(e) {
        return ca.prototype.copy.call(this, e),
        this.object = e.object,
        this
    }
    ,
    Pu.prototype.clone = function() {
        return (new this.constructor).copy(this)
    }
    ,
    Ou.prototype = Object.create(ca.prototype),
    Ou.prototype.constructor = Ou,
    Ou.prototype.updateMatrixWorld = function(e) {
        var t = this.box;
        t.isEmpty() || (t.getCenter(this.position),
        t.getSize(this.scale),
        this.scale.multiplyScalar(.5),
        fe.prototype.updateMatrixWorld.call(this, e))
    }
    ,
    ku.prototype = Object.create(sa.prototype),
    ku.prototype.constructor = ku,
    ku.prototype.updateMatrixWorld = function(e) {
        var t = -this.plane.constant;
        Math.abs(t) < 1e-8 && (t = 1e-8),
        this.scale.set(.5 * this.size, .5 * this.size, t),
        this.children[0].material.side = t < 0 ? 1 : 0,
        this.lookAt(this.plane.normal),
        fe.prototype.updateMatrixWorld.call(this, e)
    }
    ;
    var Du, Iu, Nu = new G;
    function Fu(e, t, n, r, i, a) {
        fe.call(this),
        void 0 === e && (e = new G(0,0,1)),
        void 0 === t && (t = new G(0,0,0)),
        void 0 === n && (n = 1),
        void 0 === r && (r = 16776960),
        void 0 === i && (i = .2 * n),
        void 0 === a && (a = .2 * i),
        void 0 === Du && ((Du = new Ot).setAttribute("position", new wt([0, 0, 0, 0, 1, 0],3)),
        (Iu = new Po(0,.5,1,5,1)).translate(0, -.5, 0)),
        this.position.copy(t),
        this.line = new sa(Du,new ta({
            color: r,
            toneMapped: !1
        })),
        this.line.matrixAutoUpdate = !1,
        this.add(this.line),
        this.cone = new Zt(Iu,new ht({
            color: r,
            toneMapped: !1
        })),
        this.cone.matrixAutoUpdate = !1,
        this.add(this.cone),
        this.setDirection(e),
        this.setLength(n, i, a)
    }
    function Uu(e) {
        var t = [0, 0, 0, e = e || 1, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e]
          , n = new Ot;
        n.setAttribute("position", new wt(t,3)),
        n.setAttribute("color", new wt([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1],3));
        var r = new ta({
            vertexColors: !0,
            toneMapped: !1
        });
        ca.call(this, n, r)
    }
    Fu.prototype = Object.create(fe.prototype),
    Fu.prototype.constructor = Fu,
    Fu.prototype.setDirection = function(e) {
        if (e.y > .99999)
            this.quaternion.set(0, 0, 0, 1);
        else if (e.y < -.99999)
            this.quaternion.set(1, 0, 0, 0);
        else {
            Nu.set(e.z, 0, -e.x).normalize();
            var t = Math.acos(e.y);
            this.quaternion.setFromAxisAngle(Nu, t)
        }
    }
    ,
    Fu.prototype.setLength = function(e, t, n) {
        void 0 === t && (t = .2 * e),
        void 0 === n && (n = .2 * t),
        this.line.scale.set(1, Math.max(1e-4, e - t), 1),
        this.line.updateMatrix(),
        this.cone.scale.set(n, t, n),
        this.cone.position.y = e,
        this.cone.updateMatrix()
    }
    ,
    Fu.prototype.setColor = function(e) {
        this.line.material.color.set(e),
        this.cone.material.color.set(e)
    }
    ,
    Fu.prototype.copy = function(e) {
        return fe.prototype.copy.call(this, e, !1),
        this.line.copy(e.line),
        this.cone.copy(e.cone),
        this
    }
    ,
    Fu.prototype.clone = function() {
        return (new this.constructor).copy(this)
    }
    ,
    Uu.prototype = Object.create(ca.prototype),
    Uu.prototype.constructor = Uu;
    var Bu, zu, Gu, Hu, ju = Math.pow(2, 8), Vu = [.125, .215, .35, .446, .526, .582], Wu = 5 + Vu.length, qu = {
        3e3: 0,
        3001: 1,
        3002: 2,
        3004: 3,
        3005: 4,
        3006: 5,
        3007: 6
    }, Ku = new Js, Yu = (Bu = 20,
    zu = new Float32Array(Bu),
    Gu = new G(0,1,0),
    (Hu = new Uo({
        defines: {
            n: Bu
        },
        uniforms: {
            envMap: {
                value: null
            },
            samples: {
                value: 1
            },
            weights: {
                value: zu
            },
            latitudinal: {
                value: !1
            },
            dTheta: {
                value: 0
            },
            mipInt: {
                value: 0
            },
            poleAxis: {
                value: Gu
            },
            inputEncoding: {
                value: qu[3e3]
            },
            outputEncoding: {
                value: qu[3e3]
            }
        },
        vertexShader: vc(),
        fragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n${yc()}\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvec3 getSample(float theta, vec3 axis) {\n\tfloat cosTheta = cos(theta);\n\t// Rodrigues' axis-angle rotation\n\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\n}\n\nvoid main() {\n\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\tif (all(equal(axis, vec3(0.0))))\n\t\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\n\taxis = normalize(axis);\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\n\tfor (int i = 1; i < n; i++) {\n\t\tif (i >= samples)\n\t\t\tbreak;\n\t\tfloat theta = dTheta * float(i);\n\t\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\n\t\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\n\t}\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,
        blending: 0,
        depthTest: !1,
        depthWrite: !1
    })).type = "SphericalGaussianBlur",
    Hu), Xu = null, Zu = null, {_lodPlanes: Ju, _sizeLods: Qu, _sigmas: $u} = function() {
        for (var e = [], t = [], n = [], r = 8, i = 0; i < Wu; i++) {
            var a = Math.pow(2, r);
            t.push(a);
            var o = 1 / a;
            i > 4 ? o = Vu[i - 8 + 4 - 1] : 0 == i && (o = 0),
            n.push(o);
            for (var s = 1 / (a - 1), l = -s / 2, u = 1 + s / 2, c = [l, l, u, l, u, u, l, l, u, u, l, u], h = new Float32Array(108), d = new Float32Array(72), f = new Float32Array(36), p = 0; p < 6; p++) {
                var m = p % 3 * 2 / 3 - 1
                  , g = p > 2 ? 0 : -1
                  , v = [m, g, 0, m + 2 / 3, g, 0, m + 2 / 3, g + 1, 0, m, g, 0, m + 2 / 3, g + 1, 0, m, g + 1, 0];
                h.set(v, 18 * p),
                d.set(c, 12 * p);
                var y = [p, p, p, p, p, p];
                f.set(y, 6 * p)
            }
            var b = new Ot;
            b.setAttribute("position", new ft(h,3)),
            b.setAttribute("uv", new ft(d,2)),
            b.setAttribute("faceIndex", new ft(f,1)),
            e.push(b),
            r > 4 && r--
        }
        return {
            _lodPlanes: e,
            _sizeLods: t,
            _sigmas: n
        }
    }(), ec = null, tc = null, nc = null, rc = (1 + Math.sqrt(5)) / 2, ic = 1 / rc, ac = [new G(1,1,1), new G(-1,1,1), new G(1,1,-1), new G(-1,1,-1), new G(0,rc,ic), new G(0,rc,-ic), new G(ic,0,rc), new G(-ic,0,rc), new G(rc,ic,0), new G(-rc,ic,0)];
    function oc(e) {
        tc = e,
        uc(Yu)
    }
    function sc(e) {
        var t = {
            magFilter: 1003,
            minFilter: 1003,
            generateMipmaps: !1,
            type: e ? e.type : 1009,
            format: e ? e.format : 1023,
            encoding: e ? e.encoding : 3002,
            depthBuffer: !1,
            stencilBuffer: !1
        }
          , n = cc(t);
        return n.depthBuffer = !e,
        ec = cc(t),
        n
    }
    function lc(e) {
        ec.dispose(),
        tc.setRenderTarget(nc),
        e.scissorTest = !1,
        e.setSize(e.width, e.height)
    }
    function uc(e) {
        var t = new pe;
        t.add(new Zt(Ju[0],e)),
        tc.compile(t, Ku)
    }
    function cc(e) {
        var t = new N(3 * ju,3 * ju,e);
        return t.texture.mapping = 306,
        t.texture.name = "PMREM.cubeUv",
        t.scissorTest = !0,
        t
    }
    function hc(e, t, n, r, i) {
        e.viewport.set(t, n, r, i),
        e.scissor.set(t, n, r, i)
    }
    function dc(e) {
        var t = tc.autoClear;
        tc.autoClear = !1;
        for (var n = 1; n < Wu; n++) {
            fc(e, n - 1, n, Math.sqrt($u[n] * $u[n] - $u[n - 1] * $u[n - 1]), ac[(n - 1) % ac.length])
        }
        tc.autoClear = t
    }
    function fc(e, t, n, r, i) {
        pc(e, ec, t, n, r, "latitudinal", i),
        pc(ec, e, n, n, r, "longitudinal", i)
    }
    function pc(e, t, n, r, i, a, o) {
        "latitudinal" !== a && "longitudinal" !== a && console.error("blur direction must be either latitudinal or longitudinal!");
        var s = new pe;
        s.add(new Zt(Ju[r],Yu));
        var l = Yu.uniforms
          , u = Qu[n] - 1
          , c = isFinite(i) ? Math.PI / (2 * u) : 2 * Math.PI / 39
          , h = i / c
          , d = isFinite(i) ? 1 + Math.floor(3 * h) : 20;
        d > 20 && console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${d} samples when the maximum is set to 20`);
        for (var f = [], p = 0, m = 0; m < 20; ++m) {
            var g = m / h
              , v = Math.exp(-g * g / 2);
            f.push(v),
            0 == m ? p += v : m < d && (p += 2 * v)
        }
        for (m = 0; m < f.length; m++)
            f[m] = f[m] / p;
        l.envMap.value = e.texture,
        l.samples.value = d,
        l.weights.value = f,
        l.latitudinal.value = "latitudinal" === a,
        o && (l.poleAxis.value = o),
        l.dTheta.value = c,
        l.mipInt.value = 8 - n,
        l.inputEncoding.value = qu[e.texture.encoding],
        l.outputEncoding.value = qu[e.texture.encoding];
        var y = Qu[r];
        hc(t, g = 3 * Math.max(0, ju - 2 * y), (0 === r ? 0 : 2 * ju) + 2 * y * (r > 4 ? r - 8 + 4 : 0), 3 * y, 2 * y),
        tc.setRenderTarget(t),
        tc.render(s, Ku)
    }
    function mc() {
        var e = new Uo({
            uniforms: {
                envMap: {
                    value: null
                },
                texelSize: {
                    value: new C(1,1)
                },
                inputEncoding: {
                    value: qu[3e3]
                },
                outputEncoding: {
                    value: qu[3e3]
                }
            },
            vertexShader: vc(),
            fragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n${yc()}\n\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tvec3 outputDirection = normalize(vOutputDirection);\n\tvec2 uv;\n\tuv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;\n\tuv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;\n\tvec2 f = fract(uv / texelSize - 0.5);\n\tuv -= f * texelSize;\n\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x += texelSize.x;\n\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.y += texelSize.y;\n\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x -= texelSize.x;\n\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tvec3 tm = mix(tl, tr, f.x);\n\tvec3 bm = mix(bl, br, f.x);\n\tgl_FragColor.rgb = mix(tm, bm, f.y);\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,
            blending: 0,
            depthTest: !1,
            depthWrite: !1
        });
        return e.type = "EquirectangularToCubeUV",
        e
    }
    function gc() {
        var e = new Uo({
            uniforms: {
                envMap: {
                    value: null
                },
                inputEncoding: {
                    value: qu[3e3]
                },
                outputEncoding: {
                    value: qu[3e3]
                }
            },
            vertexShader: vc(),
            fragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n${yc()}\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,
            blending: 0,
            depthTest: !1,
            depthWrite: !1
        });
        return e.type = "CubemapToCubeUV",
        e
    }
    function vc() {
        return "\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.x *= -1.0;\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.y *= -1.0;\n\t} else if (face == 5.0) {\n\t\tdirection.xz *= -1.0;\n\t}\n\treturn direction;\n}\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t"
    }
    function yc() {
        return "\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t"
    }
    oc.prototype = {
        constructor: oc,
        fromScene: function(e, t=0, n=.1, r=100) {
            nc = tc.getRenderTarget();
            var i = sc();
            return function(e, t, n, r) {
                var i = new hn(90,1,t,n)
                  , a = [1, 1, 1, 1, -1, 1]
                  , o = [1, 1, -1, -1, -1, 1]
                  , s = tc.outputEncoding
                  , l = tc.toneMapping
                  , u = tc.toneMappingExposure
                  , c = tc.getClearColor()
                  , h = tc.getClearAlpha();
                tc.toneMapping = 1,
                tc.toneMappingExposure = 1,
                tc.outputEncoding = 3e3,
                e.scale.z *= -1;
                var d = e.background;
                if (d && d.isColor) {
                    d.convertSRGBToLinear();
                    var f = Math.max(d.r, d.g, d.b)
                      , p = Math.min(Math.max(Math.ceil(Math.log2(f)), -128), 127);
                    d = d.multiplyScalar(Math.pow(2, -p));
                    var m = (p + 128) / 255;
                    tc.setClearColor(d, m),
                    e.background = null
                }
                for (var g = 0; g < 6; g++) {
                    var v = g % 3;
                    0 == v ? (i.up.set(0, a[g], 0),
                    i.lookAt(o[g], 0, 0)) : 1 == v ? (i.up.set(0, 0, a[g]),
                    i.lookAt(0, o[g], 0)) : (i.up.set(0, a[g], 0),
                    i.lookAt(0, 0, o[g])),
                    hc(r, v * ju, g > 2 ? ju : 0, ju, ju),
                    tc.setRenderTarget(r),
                    tc.render(e, i)
                }
                tc.toneMapping = l,
                tc.toneMappingExposure = u,
                tc.outputEncoding = s,
                tc.setClearColor(c, h),
                e.scale.z *= -1
            }(e, n, r, i),
            t > 0 && fc(i, 0, 0, t),
            dc(i),
            lc(i),
            i
        },
        fromEquirectangular: function(e) {
            return e.magFilter = 1003,
            e.minFilter = 1003,
            e.generateMipmaps = !1,
            this.fromCubemap(e)
        },
        fromCubemap: function(e) {
            nc = tc.getRenderTarget();
            var t = sc(e);
            return function(e, t) {
                var n = new pe;
                e.isCubeTexture ? null == Zu && (Zu = gc()) : null == Xu && (Xu = mc());
                var r = e.isCubeTexture ? Zu : Xu;
                n.add(new Zt(Ju[0],r));
                var i = r.uniforms;
                i.envMap.value = e,
                e.isCubeTexture || i.texelSize.value.set(1 / e.image.width, 1 / e.image.height);
                i.inputEncoding.value = qu[e.encoding],
                i.outputEncoding.value = qu[e.encoding],
                hc(t, 0, 0, 3 * ju, 2 * ju),
                tc.setRenderTarget(t),
                tc.render(n, Ku)
            }(e, t),
            dc(t),
            lc(t),
            t
        },
        compileCubemapShader: function() {
            null == Zu && uc(Zu = gc())
        },
        compileEquirectangularShader: function() {
            null == Xu && uc(Xu = mc())
        },
        dispose: function() {
            Yu.dispose(),
            null != Zu && Zu.dispose(),
            null != Xu && Xu.dispose();
            for (var e = 0; e < Ju.length; e++)
                Ju[e].dispose()
        }
    };
    function bc(e) {
        console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),
        Ls.call(this, e),
        this.type = "catmullrom"
    }
    ws.create = function(e, t) {
        return console.log("THREE.Curve.create() has been deprecated"),
        e.prototype = Object.create(ws.prototype),
        e.prototype.constructor = e,
        e.prototype.getPoint = t,
        e
    }
    ,
    Object.assign(Gs.prototype, {
        createPointsGeometry: function(e) {
            console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            var t = this.getPoints(e);
            return this.createGeometry(t)
        },
        createSpacedPointsGeometry: function(e) {
            console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            var t = this.getSpacedPoints(e);
            return this.createGeometry(t)
        },
        createGeometry: function(e) {
            console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            for (var t = new rn, n = 0, r = e.length; n < r; n++) {
                var i = e[n];
                t.vertices.push(new G(i.x,i.y,i.z || 0))
            }
            return t
        }
    }),
    Object.assign(Hs.prototype, {
        fromPoints: function(e) {
            return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),
            this.setFromPoints(e)
        }
    }),
    Object.create(Ls.prototype),
    Object.create(Ls.prototype),
    bc.prototype = Object.create(Ls.prototype),
    Object.assign(bc.prototype, {
        initFromArray: function() {
            console.error("THREE.Spline: .initFromArray() has been removed.")
        },
        getControlPointsArray: function() {
            console.error("THREE.Spline: .getControlPointsArray() has been removed.")
        },
        reparametrizeByArcLength: function() {
            console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")
        }
    }),
    xu.prototype.setColors = function() {
        console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
    }
    ,
    pu.prototype.update = function() {
        console.error("THREE.SkeletonHelper: update() no longer needs to be called.")
    }
    ,
    Object.assign(ds.prototype, {
        extractUrlBase: function(e) {
            return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),
            rl(e)
        }
    }),
    ds.Handlers = {
        add: function() {
            console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")
        },
        get: function() {
            console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")
        }
    },
    Object.assign(ll.prototype, {
        setTexturePath: function(e) {
            return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),
            this.setResourcePath(e)
        }
    }),
    Object.assign(iu.prototype, {
        center: function(e) {
            return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),
            this.getCenter(e)
        },
        empty: function() {
            return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),
            this.isEmpty()
        },
        isIntersectionBox: function(e) {
            return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(e)
        },
        size: function(e) {
            return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),
            this.getSize(e)
        }
    }),
    Object.assign(Re.prototype, {
        center: function(e) {
            return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),
            this.getCenter(e)
        },
        empty: function() {
            return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),
            this.isEmpty()
        },
        isIntersectionBox: function(e) {
            return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(e)
        },
        isIntersectionSphere: function(e) {
            return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
            this.intersectsSphere(e)
        },
        size: function(e) {
            return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),
            this.getSize(e)
        }
    }),
    vn.prototype.setFromMatrix = function(e) {
        return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),
        this.setFromProjectionMatrix(e)
    }
    ,
    su.prototype.center = function(e) {
        return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),
        this.getCenter(e)
    }
    ,
    Object.assign(L, {
        random16: function() {
            return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),
            Math.random()
        },
        nearestPowerOfTwo: function(e) {
            return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),
            L.floorPowerOfTwo(e)
        },
        nextPowerOfTwo: function(e) {
            return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),
            L.ceilPowerOfTwo(e)
        }
    }),
    Object.assign(P.prototype, {
        flattenToArrayOffset: function(e, t) {
            return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
            this.toArray(e, t)
        },
        multiplyVector3: function(e) {
            return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),
            e.applyMatrix3(this)
        },
        multiplyVector3Array: function() {
            console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")
        },
        applyToBufferAttribute: function(e) {
            return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),
            e.applyMatrix3(this)
        },
        applyToVector3Array: function() {
            console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")
        }
    }),
    Object.assign(X.prototype, {
        extractPosition: function(e) {
            return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),
            this.copyPosition(e)
        },
        flattenToArrayOffset: function(e, t) {
            return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
            this.toArray(e, t)
        },
        getPosition: function() {
            return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),
            (new G).setFromMatrixColumn(this, 3)
        },
        setRotationFromQuaternion: function(e) {
            return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),
            this.makeRotationFromQuaternion(e)
        },
        multiplyToArray: function() {
            console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")
        },
        multiplyVector3: function(e) {
            return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            e.applyMatrix4(this)
        },
        multiplyVector4: function(e) {
            return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            e.applyMatrix4(this)
        },
        multiplyVector3Array: function() {
            console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")
        },
        rotateAxis: function(e) {
            console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),
            e.transformDirection(this)
        },
        crossVector: function(e) {
            return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            e.applyMatrix4(this)
        },
        translate: function() {
            console.error("THREE.Matrix4: .translate() has been removed.")
        },
        rotateX: function() {
            console.error("THREE.Matrix4: .rotateX() has been removed.")
        },
        rotateY: function() {
            console.error("THREE.Matrix4: .rotateY() has been removed.")
        },
        rotateZ: function() {
            console.error("THREE.Matrix4: .rotateZ() has been removed.")
        },
        rotateByAxis: function() {
            console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
        },
        applyToBufferAttribute: function(e) {
            return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),
            e.applyMatrix4(this)
        },
        applyToVector3Array: function() {
            console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")
        },
        makeFrustum: function(e, t, n, r, i, a) {
            return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),
            this.makePerspective(e, t, r, n, i, a)
        }
    }),
    je.prototype.isIntersectionLine = function(e) {
        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),
        this.intersectsLine(e)
    }
    ,
    U.prototype.multiplyVector3 = function(e) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),
        e.applyQuaternion(this)
    }
    ,
    Object.assign(Be.prototype, {
        isIntersectionBox: function(e) {
            return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(e)
        },
        isIntersectionPlane: function(e) {
            return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),
            this.intersectsPlane(e)
        },
        isIntersectionSphere: function(e) {
            return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
            this.intersectsSphere(e)
        }
    }),
    Object.assign(et.prototype, {
        area: function() {
            return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),
            this.getArea()
        },
        barycoordFromPoint: function(e, t) {
            return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),
            this.getBarycoord(e, t)
        },
        midpoint: function(e) {
            return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),
            this.getMidpoint(e)
        },
        normal: function(e) {
            return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),
            this.getNormal(e)
        },
        plane: function(e) {
            return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),
            this.getPlane(e)
        }
    }),
    Object.assign(et, {
        barycoordFromPoint: function(e, t, n, r, i) {
            return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),
            et.getBarycoord(e, t, n, r, i)
        },
        normal: function(e, t, n, r) {
            return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),
            et.getNormal(e, t, n, r)
        }
    }),
    Object.assign(js.prototype, {
        extractAllPoints: function(e) {
            return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),
            this.extractPoints(e)
        },
        extrude: function(e) {
            return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),
            new po(this,e)
        },
        makeGeometry: function(e) {
            return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),
            new Mo(this,e)
        }
    }),
    Object.assign(C.prototype, {
        fromAttribute: function(e, t, n) {
            return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(e, t, n)
        },
        distanceToManhattan: function(e) {
            return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
            this.manhattanDistanceTo(e)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(G.prototype, {
        setEulerFromRotationMatrix: function() {
            console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
        },
        setEulerFromQuaternion: function() {
            console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
        },
        getPositionFromMatrix: function(e) {
            return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),
            this.setFromMatrixPosition(e)
        },
        getScaleFromMatrix: function(e) {
            return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),
            this.setFromMatrixScale(e)
        },
        getColumnFromMatrix: function(e, t) {
            return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),
            this.setFromMatrixColumn(t, e)
        },
        applyProjection: function(e) {
            return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),
            this.applyMatrix4(e)
        },
        fromAttribute: function(e, t, n) {
            return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(e, t, n)
        },
        distanceToManhattan: function(e) {
            return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
            this.manhattanDistanceTo(e)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(I.prototype, {
        fromAttribute: function(e, t, n) {
            return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(e, t, n)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(rn.prototype, {
        computeTangents: function() {
            console.error("THREE.Geometry: .computeTangents() has been removed.")
        },
        computeLineDistances: function() {
            console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")
        },
        applyMatrix: function(e) {
            return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),
            this.applyMatrix4(e)
        }
    }),
    Object.assign(fe.prototype, {
        getChildByName: function(e) {
            return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),
            this.getObjectByName(e)
        },
        renderDepth: function() {
            console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
        },
        translate: function(e, t) {
            return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),
            this.translateOnAxis(t, e)
        },
        getWorldRotation: function() {
            console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")
        },
        applyMatrix: function(e) {
            return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),
            this.applyMatrix4(e)
        }
    }),
    Object.defineProperties(fe.prototype, {
        eulerOrder: {
            get: function() {
                return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                this.rotation.order
            },
            set: function(e) {
                console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                this.rotation.order = e
            }
        },
        useQuaternion: {
            get: function() {
                console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
            },
            set: function() {
                console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
            }
        }
    }),
    Object.assign(Zt.prototype, {
        setDrawMode: function() {
            console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
        }
    }),
    Object.defineProperties(Zt.prototype, {
        drawMode: {
            get: function() {
                return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),
                0
            },
            set: function() {
                console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
            }
        }
    }),
    Object.defineProperties(Vi.prototype, {
        objects: {
            get: function() {
                return console.warn("THREE.LOD: .objects has been renamed to .levels."),
                this.levels
            }
        }
    }),
    Object.defineProperty(Yi.prototype, "useVertexTexture", {
        get: function() {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.")
        },
        set: function() {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.")
        }
    }),
    Wi.prototype.initBones = function() {
        console.error("THREE.SkinnedMesh: initBones() has been removed.")
    }
    ,
    Object.defineProperty(ws.prototype, "__arcLengthDivisions", {
        get: function() {
            return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
            this.arcLengthDivisions
        },
        set: function(e) {
            console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
            this.arcLengthDivisions = e
        }
    }),
    hn.prototype.setLens = function(e, t) {
        console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),
        void 0 !== t && (this.filmGauge = t),
        this.setFocalLength(e)
    }
    ,
    Object.defineProperties(Vs.prototype, {
        onlyShadow: {
            set: function() {
                console.warn("THREE.Light: .onlyShadow has been removed.")
            }
        },
        shadowCameraFov: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),
                this.shadow.camera.fov = e
            }
        },
        shadowCameraLeft: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),
                this.shadow.camera.left = e
            }
        },
        shadowCameraRight: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),
                this.shadow.camera.right = e
            }
        },
        shadowCameraTop: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),
                this.shadow.camera.top = e
            }
        },
        shadowCameraBottom: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),
                this.shadow.camera.bottom = e
            }
        },
        shadowCameraNear: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),
                this.shadow.camera.near = e
            }
        },
        shadowCameraFar: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),
                this.shadow.camera.far = e
            }
        },
        shadowCameraVisible: {
            set: function() {
                console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
            }
        },
        shadowBias: {
            set: function(e) {
                console.warn("THREE.Light: .shadowBias is now .shadow.bias."),
                this.shadow.bias = e
            }
        },
        shadowDarkness: {
            set: function() {
                console.warn("THREE.Light: .shadowDarkness has been removed.")
            }
        },
        shadowMapWidth: {
            set: function(e) {
                console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),
                this.shadow.mapSize.width = e
            }
        },
        shadowMapHeight: {
            set: function(e) {
                console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),
                this.shadow.mapSize.height = e
            }
        }
    }),
    Object.defineProperties(ft.prototype, {
        length: {
            get: function() {
                return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),
                this.array.length
            }
        },
        dynamic: {
            get: function() {
                return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),
                35048 === this.usage
            },
            set: function() {
                console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),
                this.setUsage(35048)
            }
        }
    }),
    Object.assign(ft.prototype, {
        setDynamic: function(e) {
            return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),
            this.setUsage(!0 === e ? 35048 : 35044),
            this
        },
        copyIndicesArray: function() {
            console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")
        },
        setArray: function() {
            console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
        }
    }),
    Object.assign(Ot.prototype, {
        addIndex: function(e) {
            console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),
            this.setIndex(e)
        },
        addAttribute: function(e, t) {
            return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),
            t && t.isBufferAttribute || t && t.isInterleavedBufferAttribute ? "index" === e ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),
            this.setIndex(t),
            this) : this.setAttribute(e, t) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),
            this.setAttribute(e, new ft(arguments[1],arguments[2])))
        },
        addDrawCall: function(e, t, n) {
            void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),
            console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),
            this.addGroup(e, t)
        },
        clearDrawCalls: function() {
            console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),
            this.clearGroups()
        },
        computeTangents: function() {
            console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
        },
        computeOffsets: function() {
            console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
        },
        removeAttribute: function(e) {
            return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),
            this.deleteAttribute(e)
        },
        applyMatrix: function(e) {
            return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),
            this.applyMatrix4(e)
        }
    }),
    Object.defineProperties(Ot.prototype, {
        drawcalls: {
            get: function() {
                return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),
                this.groups
            }
        },
        offsets: {
            get: function() {
                return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),
                this.groups
            }
        }
    }),
    Object.defineProperties(eu.prototype, {
        linePrecision: {
            get: function() {
                return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),
                this.params.Line.threshold
            },
            set: function(e) {
                console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),
                this.params.Line.threshold = e
            }
        }
    }),
    Object.defineProperties(Ei.prototype, {
        dynamic: {
            get: function() {
                return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),
                35048 === this.usage
            },
            set: function(e) {
                console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),
                this.setUsage(e)
            }
        }
    }),
    Object.assign(Ei.prototype, {
        setDynamic: function(e) {
            return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),
            this.setUsage(!0 === e ? 35048 : 35044),
            this
        },
        setArray: function() {
            console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
        }
    }),
    Object.assign(mo.prototype, {
        getArrays: function() {
            console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")
        },
        addShapeList: function() {
            console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")
        },
        addShape: function() {
            console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")
        }
    }),
    Object.defineProperties(Ql.prototype, {
        dynamic: {
            set: function() {
                console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")
            }
        },
        onUpdate: {
            value: function() {
                return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),
                this
            }
        }
    }),
    Object.defineProperties(ct.prototype, {
        wrapAround: {
            get: function() {
                console.warn("THREE.Material: .wrapAround has been removed.")
            },
            set: function() {
                console.warn("THREE.Material: .wrapAround has been removed.")
            }
        },
        overdraw: {
            get: function() {
                console.warn("THREE.Material: .overdraw has been removed.")
            },
            set: function() {
                console.warn("THREE.Material: .overdraw has been removed.")
            }
        },
        wrapRGB: {
            get: function() {
                return console.warn("THREE.Material: .wrapRGB has been removed."),
                new it
            }
        },
        shading: {
            get: function() {
                console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.")
            },
            set: function(e) {
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                this.flatShading = 1 === e
            }
        },
        stencilMask: {
            get: function() {
                return console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."),
                this.stencilFuncMask
            },
            set: function(e) {
                console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."),
                this.stencilFuncMask = e
            }
        }
    }),
    Object.defineProperties(Go.prototype, {
        metal: {
            get: function() {
                return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),
                !1
            },
            set: function() {
                console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
            }
        }
    }),
    Object.defineProperties(un.prototype, {
        derivatives: {
            get: function() {
                return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                this.extensions.derivatives
            },
            set: function(e) {
                console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                this.extensions.derivatives = e
            }
        }
    }),
    Object.assign(xi.prototype, {
        clearTarget: function(e, t, n, r) {
            console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),
            this.setRenderTarget(e),
            this.clear(t, n, r)
        },
        animate: function(e) {
            console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),
            this.setAnimationLoop(e)
        },
        getCurrentRenderTarget: function() {
            return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),
            this.getRenderTarget()
        },
        getMaxAnisotropy: function() {
            return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),
            this.capabilities.getMaxAnisotropy()
        },
        getPrecision: function() {
            return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),
            this.capabilities.precision
        },
        resetGLState: function() {
            return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),
            this.state.reset()
        },
        supportsFloatTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),
            this.extensions.get("OES_texture_float")
        },
        supportsHalfFloatTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),
            this.extensions.get("OES_texture_half_float")
        },
        supportsStandardDerivatives: function() {
            return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),
            this.extensions.get("OES_standard_derivatives")
        },
        supportsCompressedTextureS3TC: function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),
            this.extensions.get("WEBGL_compressed_texture_s3tc")
        },
        supportsCompressedTexturePVRTC: function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),
            this.extensions.get("WEBGL_compressed_texture_pvrtc")
        },
        supportsBlendMinMax: function() {
            return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),
            this.extensions.get("EXT_blend_minmax")
        },
        supportsVertexTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),
            this.capabilities.vertexTextures
        },
        supportsInstancedArrays: function() {
            return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),
            this.extensions.get("ANGLE_instanced_arrays")
        },
        enableScissorTest: function(e) {
            console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),
            this.setScissorTest(e)
        },
        initMaterial: function() {
            console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
        },
        addPrePlugin: function() {
            console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
        },
        addPostPlugin: function() {
            console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
        },
        updateShadowMap: function() {
            console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
        },
        setFaceCulling: function() {
            console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")
        },
        allocTextureUnit: function() {
            console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")
        },
        setTexture: function() {
            console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")
        },
        setTexture2D: function() {
            console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")
        },
        setTextureCube: function() {
            console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")
        },
        getActiveMipMapLevel: function() {
            return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),
            this.getActiveMipmapLevel()
        }
    }),
    Object.defineProperties(xi.prototype, {
        shadowMapEnabled: {
            get: function() {
                return this.shadowMap.enabled
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),
                this.shadowMap.enabled = e
            }
        },
        shadowMapType: {
            get: function() {
                return this.shadowMap.type
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),
                this.shadowMap.type = e
            }
        },
        shadowMapCullFace: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
            }
        },
        context: {
            get: function() {
                return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),
                this.getContext()
            }
        },
        vr: {
            get: function() {
                return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),
                this.xr
            }
        },
        gammaInput: {
            get: function() {
                return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),
                !1
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")
            }
        },
        gammaOutput: {
            get: function() {
                return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),
                !1
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),
                this.outputEncoding = !0 === e ? 3001 : 3e3
            }
        }
    }),
    Object.defineProperties(fi.prototype, {
        cullFace: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
            }
        },
        renderReverseSided: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
            }
        },
        renderSingleSided: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
            }
        }
    }),
    Object.defineProperties(N.prototype, {
        wrapS: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                this.texture.wrapS
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                this.texture.wrapS = e
            }
        },
        wrapT: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                this.texture.wrapT
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                this.texture.wrapT = e
            }
        },
        magFilter: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                this.texture.magFilter
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                this.texture.magFilter = e
            }
        },
        minFilter: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                this.texture.minFilter
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                this.texture.minFilter = e
            }
        },
        anisotropy: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                this.texture.anisotropy
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                this.texture.anisotropy = e
            }
        },
        offset: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                this.texture.offset
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                this.texture.offset = e
            }
        },
        repeat: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                this.texture.repeat
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                this.texture.repeat = e
            }
        },
        format: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                this.texture.format
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                this.texture.format = e
            }
        },
        type: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                this.texture.type
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                this.texture.type = e
            }
        },
        generateMipmaps: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                this.texture.generateMipmaps
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                this.texture.generateMipmaps = e
            }
        }
    }),
    Object.defineProperties(Ol.prototype, {
        load: {
            value: function(e) {
                console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
                var t = this;
                return (new bl).load(e, (function(e) {
                    t.setBuffer(e)
                }
                )),
                this
            }
        },
        startTime: {
            set: function() {
                console.warn("THREE.Audio: .startTime is now .play( delay ).")
            }
        }
    }),
    Ul.prototype.getData = function() {
        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),
        this.getFrequencyData()
    }
    ,
    dn.prototype.updateCubeMap = function(e, t) {
        return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),
        this.update(e, t)
    }
    ;
    O.crossOrigin = void 0,
    O.loadTexture = function(e, t, n, r) {
        console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
        var i = new xs;
        i.setCrossOrigin(this.crossOrigin);
        var a = i.load(e, n, void 0, r);
        return t && (a.mapping = t),
        a
    }
    ,
    O.loadTextureCube = function(e, t, n, r) {
        console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
        var i = new bs;
        i.setCrossOrigin(this.crossOrigin);
        var a = i.load(e, n, void 0, r);
        return t && (a.mapping = t),
        a
    }
    ,
    O.loadCompressedTexture = function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
    }
    ,
    O.loadCompressedTextureCube = function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
    }
    ;
    "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{
        detail: {
            revision: "115"
        }
    }));
    var xc;
    !function(e) {
        e.Next = "next"
    }(xc || (xc = {}));
    n(5);
    var wc;
    !function(e) {
        e.Toggle = "toggle"
    }(wc || (wc = {}));
    var _c, Ec;
    !function(e) {
        e[e.X = 1] = "X",
        e[e.Y = 2] = "Y",
        e[e.Z = 3] = "Z"
    }(_c || (_c = {})),
    function(e) {
        e[e.W = 87] = "W",
        e[e.A = 65] = "A",
        e[e.S = 83] = "S",
        e[e.D = 68] = "D",
        e[e.Q = 81] = "Q",
        e[e.E = 69] = "E",
        e[e.LEFT = 37] = "LEFT",
        e[e.RIGHT = 39] = "RIGHT",
        e[e.UP = 38] = "UP",
        e[e.DOWN = 40] = "DOWN",
        e[e.SHIFT = 16] = "SHIFT",
        e[e.SPACE = 32] = "SPACE"
    }(Ec || (Ec = {}));
    new G(0,1,0);
    var Tc, Sc;
    !function(e) {
        e[e.FREE = 0] = "FREE",
        e[e.FLIGHT = 1] = "FLIGHT"
    }(Tc || (Tc = {}));
    !function(e) {
        e.DragBegin = "DRAG_BEGIN",
        e.Drag = "DRAG",
        e.DragEnd = "DRAG_END",
        e.Key = "KEY",
        e.Scroll = "SCROLL"
    }(Sc || (Sc = {}));
    const Mc = {
        vertex: "precision highp float;\n\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    varying vec2 vUv;\n\n    void main() {\n      vUv = uv;\n      gl_Position = vec4(position.xy, -1.0, 1.0);\n    }\n  ",
        fragment: "precision highp float;\n    uniform sampler2D tMap;\n\n    varying vec2 vUv;\n\n    void main() {\n      gl_FragColor = texture2D(tMap, vUv);\n    }\n  ",
        createUniforms: ()=>({
            tMap: {
                value: null
            }
        })
    }
      , Ac = {
        vertex: "precision highp float;\n    uniform mat4 modelMatrix;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform float textureScale;\n\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    varying vec2 vUv;\n\n    void main() {\n      vUv = (modelMatrix * vec4(position, 1.0)).xz * textureScale;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n\n  ",
        fragment: "precision highp float;\n    uniform sampler2D tMap;\n\n    varying vec2 vUv;\n\n    void main() {\n      gl_FragColor = texture2D(tMap, vUv);\n    }\n  ",
        createUniforms: ()=>({
            tMap: {
                value: null
            },
            textureScale: {
                value: 1
            }
        })
    };
    class Rc extends T {
        constructor(e) {
            super(),
            this.paintScene = e,
            this.disposables = [],
            this.painting = !1,
            this.activePath = null,
            this.activeMaterial = null,
            this.inputs = {
                brush: null,
                renderPosition: new G
            },
            this.events = {
                "brush.start": !0,
                "brush.stroke": !0,
                "brush.end": !0
            }
        }
        onInit() {
            const e = this.context.three;
            this.renderer = this.context.renderer;
            const {camera: t, scene: n} = this.context;
            this.capture = {
                viewport: new I,
                camera: t,
                scene: n
            },
            this.context.renderer.getCurrentViewport(this.capture.viewport),
            this.overlayRenderTarget = new e.WebGLRenderTarget(this.capture.viewport.z,this.capture.viewport.w,{
                stencilBuffer: !1
            });
            const r = new e.PlaneGeometry(2,2)
              , i = Mc.createUniforms();
            i.tMap.value = this.overlayRenderTarget.texture;
            const a = new e.RawShaderMaterial({
                vertexShader: Mc.vertex,
                fragmentShader: Mc.fragment,
                uniforms: i,
                side: e.DoubleSide,
                transparent: !0,
                depthWrite: !1,
                depthTest: !1
            });
            this.renderOverlay = new e.Mesh(r,a),
            this.renderOverlay.renderOrder = 11,
            this.renderOverlay.frustumCulled = !1,
            this.outputs.objectRoot = this.renderOverlay,
            this.disposables.push(r, a, this.overlayRenderTarget.texture, this.overlayRenderTarget)
        }
        onDestroy() {
            this.outputs.objectRoot = null;
            for (const e of this.disposables)
                e.dispose();
            this.disposables.length = 0
        }
        onEvent(e, t) {
            if (Lc(t) && t.buttons & ~x.PRIMARY)
                return;
            if (!Lc(t) && t.button !== b.PRIMARY)
                return;
            const n = "brush.start" === e && !Lc(t) && t.down
              , r = "brush.stroke" === e && this.painting
              , i = "brush.end" === e && !Lc(t) && !t.down;
            if (n && (this.activePath = this.paintScene.addPath(),
            this.painting = !0),
            n || r) {
                if (this.inputs.brush) {
                    const e = this.inputs.brush.clone();
                    e.updateMatrixWorld(),
                    e.renderOrder = this.paintScene.nChildren,
                    this.activeMaterial || (this.activeMaterial = e.material.clone()),
                    e.material = this.activeMaterial,
                    this.activePath.add(e)
                }
            } else
                i && (this.activeMaterial = null,
                this.painting = !1)
        }
        onTick() {
            this.updateTarget()
        }
        updateTarget() {
            this.outputs.objectRoot = null;
            const e = this.renderer.getRenderTarget();
            this.renderer.getViewport(this.capture.viewport),
            this.overlayRenderTarget.setSize(this.capture.viewport.z, this.capture.viewport.w),
            this.renderer.setRenderTarget(this.overlayRenderTarget),
            this.renderer.clear(!0, !0, !1),
            this.renderer.render(this.capture.scene, this.capture.camera);
            const t = this.renderer.sortObjects;
            this.renderer.sortObjects = !1,
            this.renderer.clear(!0, !1, !1),
            this.paintScene.render(this.renderer, this.capture.camera),
            this.renderer.sortObjects = t,
            this.renderer.setRenderTarget(e),
            this.outputs.objectRoot = this.renderOverlay
        }
    }
    function Lc(e) {
        return e.hasOwnProperty("buttons")
    }
    class Cc extends T {
        constructor() {
            super(...arguments),
            this.vectorCache = new G,
            this.disposables = [],
            this.inputs = {
                enabled: !1,
                width: 1,
                color: "#ffffff",
                opacity: 1,
                position: new G,
                normal: new G
            },
            this.outputs = {
                brush: null
            }
        }
        onInit() {
            const e = this.context.three
              , t = new e.CircleGeometry(1,16)
              , n = new e.EdgesGeometry(t)
              , r = new e.LineBasicMaterial({
                transparent: !0,
                color: this.inputs.color,
                depthTest: !1,
                depthWrite: !1
            });
            this.brushPreview = new e.LineSegments(n,r),
            this.brushPreview.renderOrder = 30,
            t.dispose();
            const i = new e.MeshBasicMaterial({
                color: this.inputs.color,
                opacity: this.inputs.opacity,
                transparent: !0,
                blending: e.CustomBlending,
                blendDst: e.ZeroFactor,
                blendSrc: e.OneFactor,
                depthWrite: !1
            });
            this.brush = new e.Mesh(t,i),
            this.disposables.push(t, i, n, r),
            this.outputs.brush = this.brush
        }
        onInputsUpdated(e) {
            const t = this.brushPreview.material
              , n = this.brush.material;
            this.outputs.objectRoot = this.inputs.enabled ? this.brushPreview : null,
            e.color !== this.inputs.color && (t.color.set(this.inputs.color),
            n.color.copy(t.color)),
            n.opacity = this.inputs.opacity
        }
        onDestroy() {
            this.outputs.objectRoot = null;
            for (const e of this.disposables)
                e.dispose();
            this.disposables.length = 0
        }
        onTick() {
            this.brushPreview.scale.setScalar(.0254 * this.inputs.width),
            this.brushPreview.position.copy(this.inputs.position).addScaledVector(this.inputs.normal, .001),
            this.vectorCache.copy(this.inputs.position).add(this.inputs.normal),
            this.brushPreview.lookAt(this.vectorCache),
            this.brush.position.copy(this.brushPreview.position),
            this.brush.quaternion.copy(this.brushPreview.quaternion),
            this.brush.scale.copy(this.brushPreview.scale)
        }
    }
    function Pc() {
        return new Cc
    }
    class Painter {
        constructor(e, t, n, r, i) {
            this.node = t,
            this.cursor = r,
            this.position = new G,
            this.brushCursor = t.addComponent("labs.brushcursor", {
                width: n
            }),
            this.paintTarget = t.addComponent("labs.painttarget"),
            this.input = t.addComponent("mp.input", {
                eventsEnabled: !1,
                userNavigationEnabled: !0
            }),
            this.paintTarget.inputs.renderPosition = this.position,
            this.paintTarget.bind("brush", this.brushCursor, "brush"),
            this.paintTarget.bindEvent("brush.start", this.input, y.POINTER_BUTTON),
            this.paintTarget.bindEvent("brush.stroke", this.input, y.POINTER_MOVE),
            this.paintTarget.bindEvent("brush.end", this.input, y.POINTER_BUTTON),
            this.input.spyOnEvent(new class {
                constructor(e) {
                    this.paintNotifier = e,
                    this.eventType = y.POINTER_BUTTON
                }
                onEvent(e) {
                    e.down ? this.paintNotifier.onBrushStarted() : this.paintNotifier.onBrushEnded()
                }
            }
            (i)),
            t.start(),
            this.createSdkSubscriptions(e),
            this._loader = new this.paintTarget.context.three.ObjectLoader
        }
        dispose() {
            for (const e of this.subs)
                e.cancel();
            this.node.stop()
        }
        enable(e) {
            this.input.inputs.eventsEnabled = e,
            this.input.inputs.userNavigationEnabled = !e,
            this.cursor.inputs.hideReticle = e,
            this.cursor.inputs.cursor = e ? v.PLUS : v.DEFAULT,
            this.brushCursor.inputs.enabled = e
        }
        setBrushState(e) {
            this.brushCursor.inputs.width = e.size,
            this.brushCursor.inputs.color = e.color,
            this.brushCursor.inputs.opacity = e.opacity
        }
        get loader() {
            return this._loader
        }
        createSdkSubscriptions(e) {
            this.subs = [e.Pointer.intersection.subscribe(e=>{
                this.brushCursor.inputs.position = e.position,
                this.brushCursor.inputs.normal = e.normal
            }
            ), e.Camera.pose.subscribe(e=>{
                this.position.copy(e.position)
            }
            )]
        }
    }
    const kc = new G(0,1,0);
    class Dc extends T {
        constructor(e) {
            super(),
            this.paintScene = e,
            this.disposables = [],
            this.activePath = null,
            this.activeMaterial = null,
            this.brushNormal = new G,
            this.inputs = {
                brush: null,
                texture: null,
                textureScale: 1
            },
            this.events = {
                "brush.start": !0,
                "brush.stroke": !0,
                "brush.end": !0
            }
        }
        onInit() {
            const e = this.context.three;
            this.renderer = this.context.renderer;
            const {camera: t, scene: n} = this.context;
            this.capture = {
                viewport: new I,
                camera: t,
                scene: n
            },
            this.context.renderer.getCurrentViewport(this.capture.viewport),
            this.overlayRenderTarget = new e.WebGLRenderTarget(this.capture.viewport.z,this.capture.viewport.w,{
                stencilBuffer: !1
            }),
            this.setupActiveMaterial();
            const r = new e.PlaneGeometry(2,2)
              , i = Mc.createUniforms();
            i.tMap.value = this.overlayRenderTarget.texture;
            const a = new e.RawShaderMaterial({
                vertexShader: Mc.vertex,
                fragmentShader: Mc.fragment,
                uniforms: i,
                side: e.DoubleSide,
                transparent: !0,
                depthWrite: !1,
                depthTest: !1
            });
            this.renderOverlay = new e.Mesh(r,a),
            this.renderOverlay.renderOrder = 10,
            this.renderOverlay.frustumCulled = !1,
            this.outputs.objectRoot = this.renderOverlay,
            this.disposables.push(r, a, this.overlayRenderTarget.texture, this.overlayRenderTarget)
        }
        onDestroy() {
            this.outputs.objectRoot = null;
            for (const e of this.disposables)
                e.dispose();
            this.disposables.length = 0
        }
        onEvent(e) {
            if (!this.activeMaterial || !this.inputs.brush)
                return;
            if (this.inputs.brush.getWorldDirection(this.brushNormal),
            !(Math.abs(this.brushNormal.dot(kc)) > .99))
                return;
            const t = "brush.start" === e
              , n = "brush.stroke" === e
              , r = "brush.end" === e;
            if (t && (console.log("target: isStart"),
            this.activePath = this.paintScene.addPath()),
            t || n) {
                console.log("target: isStart || isStroke");
                const e = this.inputs.brush.clone();
                e.updateMatrixWorld(),
                e.matrixAutoUpdate = !1,
                e.renderOrder = this.paintScene.nChildren,
                e.material = this.activeMaterial,
                this.activePath.add(e)
            } else
                r && console.log("target: isEnd")
        }
        onInputsUpdated(e) {
            e.texture !== this.inputs.texture && this.setupActiveMaterial()
        }
        onTick() {
            this.updateTarget()
        }
        setupActiveMaterial() {
            const e = this.context.three;
            if (this.inputs.texture) {
                const t = Ac.createUniforms();
                t.tMap.value = this.inputs.texture,
                t.textureScale.value = this.inputs.textureScale,
                this.activeMaterial = new e.RawShaderMaterial({
                    vertexShader: Ac.vertex,
                    fragmentShader: Ac.fragment,
                    uniforms: t,
                    side: e.DoubleSide,
                    transparent: !0,
                    depthWrite: !1
                })
            } else
                this.activeMaterial = null
        }
        updateTarget() {
            this.outputs.objectRoot = null;
            const e = this.renderer.getRenderTarget();
            this.renderer.getViewport(this.capture.viewport),
            this.overlayRenderTarget.setSize(this.capture.viewport.z, this.capture.viewport.w),
            this.renderer.setRenderTarget(this.overlayRenderTarget),
            this.renderer.clear(!0, !0, !1),
            this.renderer.render(this.capture.scene, this.capture.camera);
            const t = this.renderer.sortObjects;
            this.renderer.sortObjects = !1,
            this.renderer.clear(!0, !1, !1),
            this.paintScene.render(this.renderer, this.capture.camera),
            this.renderer.sortObjects = t,
            this.renderer.setRenderTarget(e),
            this.outputs.objectRoot = this.renderOverlay
        }
    }
    class Ic extends T {
        constructor() {
            super(...arguments),
            this.textures = {},
            this.inputs = {
                textureDescs: [],
                activeTexture: 0
            },
            this.outputs = {
                texture: null,
                textureScale: 1
            }
        }
        onInit() {
            const e = this.context.three;
            for (const t of this.inputs.textureDescs) {
                const n = (new e.TextureLoader).load(t.src);
                n.wrapS = e.RepeatWrapping,
                n.wrapT = e.RepeatWrapping
            }
        }
        onInputsUpdated() {
            const e = Object.keys(this.textures)
              , t = this.inputs.textureDescs.map(e=>e.src)
              , n = e.filter(e=>-1 === t.indexOf(e));
            for (const e of n)
                this.textures[e] && (this.textures[e].dispose(),
                delete this.textures[e]);
            const r = this.context.three
              , i = new r.TextureLoader;
            for (const e of this.inputs.textureDescs)
                if (!this.textures[e.src]) {
                    const t = i.load("../" + e.src);
                    t.wrapS = r.RepeatWrapping,
                    t.wrapT = r.RepeatWrapping,
                    this.textures[e.src] = t
                }
            if (this.inputs.activeTexture >= this.inputs.textureDescs.length || this.inputs.activeTexture < 0)
                this.outputs.texture = null;
            else {
                const e = this.inputs.textureDescs[this.inputs.activeTexture];
                this.outputs.texture = this.textures[e.src];
                const t = isNaN(e.size) ? 1 : e.size;
                this.outputs.textureScale = 1 / t
            }
        }
    }
    function Nc() {
        return new Ic
    }
    class Fc extends T {
        constructor() {
            super(...arguments),
            this.dragging = !1,
            this.inputs = {
                allowed: ()=>!0
            },
            this.events = {
                "input.start": !0,
                "input.stroke": !0,
                "input.end": !0
            }
        }
        onEvent(e, t) {
            if (Bc(t) && t.buttons & ~x.PRIMARY)
                return;
            if (!Bc(t) && t.button !== b.PRIMARY)
                return;
            const n = "input.start" === e && !Bc(t) && t.down && !this.dragging
              , r = "input.stroke" === e && this.dragging
              , i = "input.end" === e && !Bc(t) && !t.down && this.dragging;
            this.inputs.allowed() && (n && (console.log("isStart"),
            this.dragging = !0,
            this.notify("start", t)),
            r && this.notify("stroke", t)),
            i && (console.log("isEnd"),
            this.dragging = !1,
            this.notify("end", t))
        }
    }
    function Uc() {
        return new Fc
    }
    function Bc(e) {
        return e.hasOwnProperty("buttons")
    }
    const zc = new G(0,1,0);
    class Texturer {
        constructor(e, t, n, r) {
            this.node = t,
            this.cursor = r,
            this.enabled = !1,
            this.position = new G,
            this.brushNormal = new G,
            this.brushInput = t.addComponent("labs.brush.input", {
                allowed: ()=>{
                    if (this.enabled) {
                        const e = Math.abs(this.brushNormal.dot(zc)) > .99;
                        return this.cursor.inputs.cursor = e ? v.PLUS : v.NOPE,
                        e
                    }
                    return !1
                }
            }),
            this.brushCursor = t.addComponent("labs.brushcursor", {
                width: n
            }),
            this.textureTarget = t.addComponent("labs.textureTarget"),
            this.textureSelector = t.addComponent("labs.texture"),
            this.input = t.addComponent("mp.input", {
                eventsEnabled: !1,
                userNavigationEnabled: !0
            }),
            this.textureTarget.bind("texture", this.textureSelector, "texture"),
            this.textureTarget.bind("textureScale", this.textureSelector, "textureScale"),
            this.textureTarget.bind("brush", this.brushCursor, "brush"),
            this.brushInput.bindEvent("input.start", this.input, y.POINTER_BUTTON),
            this.brushInput.bindEvent("input.stroke", this.input, y.POINTER_MOVE),
            this.brushInput.bindEvent("input.end", this.input, y.POINTER_BUTTON),
            this.textureTarget.bindEvent("brush.start", this.brushInput, "start"),
            this.textureTarget.bindEvent("brush.stroke", this.brushInput, "stroke"),
            this.textureTarget.bindEvent("brush.end", this.brushInput, "end"),
            t.start(),
            this.createSdkSubscriptions(e),
            this._loader = new this.textureTarget.context.three.ObjectLoader
        }
        dispose() {
            for (const e of this.subs)
                e.cancel();
            this.node.stop()
        }
        enable(e) {
            this.input.inputs.eventsEnabled = e,
            this.input.inputs.userNavigationEnabled = !e,
            this.cursor.inputs.hideReticle = e,
            this.cursor.inputs.cursor = e ? v.PLUS : v.DEFAULT,
            this.brushCursor.inputs.enabled = e,
            this.enabled = e
        }
        setTextureSettings(e) {
            this.brushCursor.inputs.width = e.size,
            this.textureSelector.inputs.textureDescs = e.textureDescriptors,
            this.textureSelector.inputs.activeTexture = e.activeTexture
        }
        get loader() {
            return this._loader
        }
        createSdkSubscriptions(e) {
            this.subs = [e.Pointer.intersection.subscribe(e=>{
                this.brushCursor.inputs.position = e.position,
                this.brushCursor.inputs.normal = e.normal,
                this.brushNormal.copy(e.normal)
            }
            ), e.Camera.pose.subscribe(e=>{
                this.position.copy(e.position)
            }
            )]
        }
    }
    class Hc extends T {
        constructor() {
            super(...arguments),
            this.pointerPos = new C,
            this.outputs = {
                color: new it
            },
            this.events = {
                "color.pick": !0
            }
        }
        onInit() {
            const e = this.context.three;
            this.renderer = this.context.renderer;
            const {camera: t, scene: n} = this.context;
            this.capture = {
                viewport: new I,
                camera: t,
                scene: n
            },
            this.colorDst = new Uint8Array(4),
            this.context.renderer.getCurrentViewport(this.capture.viewport),
            this.rt = new e.WebGLRenderTarget(this.capture.viewport.z,this.capture.viewport.w)
        }
        onEvent(e, t) {
            "color.pick" !== e || t.down || t.button !== b.PRIMARY || (this.pointerPos.copy(t.position),
            this.pick())
        }
        pick() {
            const e = .5 * (this.pointerPos.x + 1) * this.capture.viewport.z
              , t = .5 * (this.pointerPos.y + 1) * this.capture.viewport.w
              , n = this.renderer.getRenderTarget();
            this.renderer.getViewport(this.capture.viewport),
            this.rt.setSize(this.capture.viewport.z, this.capture.viewport.w),
            this.renderer.setRenderTarget(this.rt),
            this.renderer.clear(!0, !0, !1),
            this.renderer.render(this.capture.scene, this.capture.camera),
            this.renderer.setRenderTarget(n),
            this.renderer.readRenderTargetPixels(this.rt, e, t, 1, 1, this.colorDst),
            this.outputs.color.setRGB(this.colorDst[0], this.colorDst[1], this.colorDst[2]).multiplyScalar(1 / 255),
            this.notify("color.picked")
        }
    }
    function jc() {
        return new Hc
    }
    class Vc {
        constructor(e, t, n, r) {
            this.node = t,
            this.cursor = n,
            this.dropper = t.addComponent("labs.dropper"),
            this.input = t.addComponent("mp.input", {
                eventsEnabled: !1,
                userNavigationEnabled: !0
            });
            const i = this.dropper;
            this.dropper.spyOnEvent(new class {
                constructor() {
                    this.eventType = "color.picked"
                }
                onEvent() {
                    r("#" + i.outputs.color.getHexString())
                }
            }
            ),
            this.dropper.bindEvent("color.pick", this.input, y.POINTER_BUTTON),
            t.start()
        }
        dispose() {
            this.node.stop()
        }
        enable(e) {
            this.input.inputs.eventsEnabled = e,
            this.input.inputs.userNavigationEnabled = !e,
            this.cursor.inputs.hideReticle = e,
            this.cursor.inputs.cursor = e ? v.DROPPER : v.DEFAULT
        }
    }
    class Wc {
        constructor(e, t) {
            this.node = t,
            this.camera = new cn,
            this.eulerHelper = new Q,
            this.cameraOverride = t.addComponent("mp.camera", {
                camera: this.camera
            }),
            t.start(),
            this.createSdkSubscriptions(e)
        }
        dispose() {
            for (const e of this.subs)
                e.cancel();
            this.node.stop()
        }
        enable(e) {
            this.cameraOverride.inputs.enabled = e
        }
        createSdkSubscriptions(e) {
            this.subs = [e.Camera.pose.subscribe(e=>{
                this.camera.position.copy(e.position),
                this.eulerHelper.set(e.rotation.x * Math.PI / 180, e.rotation.y * Math.PI / 180, 0, "YXZ"),
                this.camera.quaternion.setFromEuler(this.eulerHelper)
            }
            )]
        }
    }
    var qc, Kc;
    !function(e) {
        e.APP_READY = "APP_READY",
        e.SCHEMA = "SHEMA_RESPONSE",
        e.SAVE_DATA = "SAVE_DATA",
        e.DATA_MIGRATE = "DATA_MIGRATE"
    }(qc || (qc = {})),
    function(e) {
        e.REQUEST_SCHEMA = "REQUEST_SCHEMA",
        e.REQUEST_SAVE = "REQUEST_SAVE",
        e.REQUEST_LOAD = "REQUEST_LOAD",
        e.REQUEST_MIGRATE = "REQUEST_MIGRATE"
    }(Kc || (Kc = {}));
    var Yc = function(e, t, n, r) {
        return new (n || (n = Promise))((function(i, a) {
            function o(e) {
                try {
                    l(r.next(e))
                } catch (e) {
                    a(e)
                }
            }
            function s(e) {
                try {
                    l(r.throw(e))
                } catch (e) {
                    a(e)
                }
            }
            function l(e) {
                var t;
                e.done ? i(e.value) : (t = e.value,
                t instanceof n ? t : new n((function(e) {
                    e(t)
                }
                ))).then(o, s)
            }
            l((r = r.apply(e, t || [])).next())
        }
        ))
    };
    const Xc = 128
      , Zc = 128;
    class Jc {
        constructor(e, t, n) {
            this.target = e,
            this.saveHandler = t,
            this.takeScreenShot = n,
            this.onMessage = t=>{
                t.source === e && this.handleMessageEvent(t.data)
            }
            ,
            window.addEventListener("message", this.onMessage),
            this.post(qc.APP_READY, -1, {})
        }
        handleMessageEvent(e) {
            e.type == Kc.REQUEST_SCHEMA && this.onSchemaRequested(e),
            function(e) {
                return e.type === Kc.REQUEST_SAVE
            }(e) && this.onSaveRequested(e),
            function(e) {
                return e.type === Kc.REQUEST_LOAD
            }(e) && this.onLoadRequested(e),
            function(e) {
                return e.type === Kc.REQUEST_MIGRATE
            }(e) && this.onMigrateRequested(e)
        }
        onSchemaRequested(e) {
            const t = this.saveHandler.schema;
            this.post(qc.SCHEMA, e.id, t)
        }
        onSaveRequested(e) {
            return Yc(this, void 0, void 0, (function*() {
                const t = this.saveHandler.save();
                if (this.takeScreenShot) {
                    const n = yield this.takeScreenShot(Xc, Zc);
                    this.post(qc.SAVE_DATA, e.id, Object.assign(Object.assign({}, t), {
                        meta: {
                            thumbnailUrl: n,
                            date: Date.now()
                        }
                    }))
                } else
                    this.post(qc.SAVE_DATA, e.id, t)
            }
            ))
        }
        onLoadRequested(e) {
            this.saveHandler.load(e.payload)
        }
        onMigrateRequested(e) {
            const t = this.saveHandler.migrate({
                version: e.payload.oldVersion,
                data: e.payload.oldData
            });
            this.post(qc.DATA_MIGRATE, e.id, t)
        }
        post(e, t, n) {
            this.target.postMessage({
                id: t,
                type: e,
                payload: n
            }, "*")
        }
    }
    var Qc = n(8)
      , $c = n.n(Qc)
      , eh = function(e, t, n, r) {
        return new (n || (n = Promise))((function(i, a) {
            function o(e) {
                try {
                    l(r.next(e))
                } catch (e) {
                    a(e)
                }
            }
            function s(e) {
                try {
                    l(r.throw(e))
                } catch (e) {
                    a(e)
                }
            }
            function l(e) {
                var t;
                e.done ? i(e.value) : (t = e.value,
                t instanceof n ? t : new n((function(e) {
                    e(t)
                }
                ))).then(o, s)
            }
            l((r = r.apply(e, t || [])).next())
        }
        ))
    };
    function th(e) {
        const t = new $c.a(e);
        return {
            get version() {
                return t.verno
            },
            db: t
        }
    }
    class nh {
        constructor(e, t, n) {
            this.target = e,
            this.saveDataObserver = n,
            this.messageId = 0,
            this.onMessage = e=>e.source === this.target && this.handleMessageEvent(e.data),
            window.addEventListener("message", this.onMessage),
            this.db = t.db,
            this.post(Kc.REQUEST_SCHEMA)
        }
        static create(e, t, n) {
            return eh(this, void 0, void 0, (function*() {
                return yield new Promise(e=>{
                    window.addEventListener("message", (function t(n) {
                        n.data && n.data.type === qc.APP_READY && (window.removeEventListener("message", t),
                        e())
                    }
                    ))
                }
                ),
                new nh(e,t,n)
            }
            ))
        }
        getSlotMetadata(e) {
            return eh(this, void 0, void 0, (function*() {
                try {
                    const t = this.db.table("meta");
                    return yield t.get(e)
                } catch (e) {
                    return
                }
            }
            ))
        }
        save(e) {
            return eh(this, void 0, void 0, (function*() {
                const t = this.post(Kc.REQUEST_SAVE)
                  , n = yield this.awaitResponse(qc.SAVE_DATA, t);
                this.putSaveData(n, e),
                this.notifyObserver()
            }
            ))
        }
        load(e) {
            return eh(this, void 0, void 0, (function*() {
                const t = yield this.readSaveSlot(e);
                this.post(Kc.REQUEST_LOAD, {
                    version: this.db.verno,
                    loadData: t
                })
            }
            ))
        }
        post(e, t={}) {
            return this.target.postMessage({
                id: ++this.messageId,
                type: e,
                payload: t
            }, "*"),
            this.messageId
        }
        awaitResponse(e, t) {
            return new Promise(n=>{
                window.addEventListener("message", (function r(i) {
                    i.data.payload && i.data.type === e && i.data.id === t && (window.removeEventListener("message", r),
                    n(i.data.payload))
                }
                ))
            }
            )
        }
        handleMessageEvent(e) {
            e.type === qc.SCHEMA && this.onSchemaReceived(e.payload)
        }
        onSchemaReceived(e) {
            const t = e.schema;
            for (const e in t)
                t[e] = "&, " + t[e];
            t.meta = "&, date",
            this.db.version(e.version).stores(e.schema).upgrade(e=>eh(this, void 0, void 0, (function*() {
                const t = {};
                for (const n of e.storeNames)
                    t[n] = e.table(n).toCollection()
            }
            ))),
            this.notifyObserver()
        }
        putSaveData(e, t) {
            for (const n in e) {
                this.db.table(n).put(e[n], t)
            }
        }
        readSaveSlot(e) {
            return eh(this, void 0, void 0, (function*() {
                const t = this.db.tables.filter(e=>"meta" !== e.name)
                  , n = {};
                for (const r of t)
                    n[r.name] = yield r.get(e);
                return n
            }
            ))
        }
        notifyObserver() {
            return eh(this, void 0, void 0, (function*() {
                this.saveDataObserver.onSavesUpdated(yield Promise.all([this.getSlotMetadata(1), this.getSlotMetadata(2), this.getSlotMetadata(3)]))
            }
            ))
        }
    }
    function rh(e) {
        return eh(this, void 0, void 0, (function*() {
            const t = yield e(new class {
                onSavesUpdated(e) {
                    e.forEach((t,n)=>{
                        e[n] && (p[n].src = e[n].thumbnailUrl,
                        d[n].disabled = !1)
                    }
                    )
                }
            }
            )
              , n = document.createElement("div");
            n.classList.add("saves");
            const r = document.createElement("div");
            r.classList.add("saves");
            const i = document.createElement("button");
            i.innerText = "SAVE 1";
            const a = document.createElement("button");
            a.innerText = "SAVE 2";
            const o = document.createElement("button");
            o.innerText = "SAVE 3";
            const s = [i, a, o];
            r.append(...s),
            s.forEach((e,n)=>{
                e.addEventListener("click", ()=>{
                    t.save(n + 1)
                }
                )
            }
            );
            const l = document.createElement("div")
              , u = document.createElement("button");
            u.innerText = "LOAD 1";
            const c = document.createElement("button");
            c.innerText = "LOAD 2";
            const h = document.createElement("button");
            h.innerText = "LOAD 3";
            const d = [u, c, h];
            l.append(...d),
            d.forEach((e,n)=>{
                e.addEventListener("click", ()=>{
                    t.load(n + 1)
                }
                )
            }
            ),
            [...s, ...d].forEach(e=>{
                e.disabled = !0,
                e.classList.add("save")
            }
            );
            const f = document.createElement("div")
              , p = [new Image, new Image, new Image];
            f.append(...p),
            n.append(r, l, f),
            document.body.append(n),
            s.forEach(e=>{
                e.disabled = !1
            }
            )
        }
        ))
    }
    class ih {
        constructor() {
            this.history = [],
            this.currIndex = -1,
            this.observers = []
        }
        get hasPrev() {
            return this.currIndex > -1
        }
        undo() {
            this.hasPrev && (this.history[this.currIndex].undo(),
            --this.currIndex,
            this.notifyObservers())
        }
        get hasNext() {
            return this.history.length - 1 > this.currIndex
        }
        redo() {
            this.hasNext && (++this.currIndex,
            this.history[this.currIndex].exec(),
            this.notifyObservers())
        }
        exec(e) {
            for (let e = this.history.length - 1; e > this.currIndex; --e)
                this.history[e].dispose();
            this.history.length = this.currIndex + 1,
            this.history.push(e),
            this.redo()
        }
        onHistoryChange(e) {
            this.observers.push(e)
        }
        clear() {
            for (; -1 !== this.currIndex; )
                this.undo();
            for (let e = this.history.length - 1; e > this.currIndex; --e)
                this.history[e].dispose();
            this.history.length = 0,
            this.notifyObservers()
        }
        notifyObservers() {
            for (let e = 0, t = this.observers.length; e < t; ++e)
                this.observers[e].notify()
        }
    }
    n(31);
    function ah() {}
    class oh extends a.Component {
        constructor(e) {
            super(e),
            this.undo = ()=>e.history.undo(),
            this.redo = ()=>e.history.redo(),
            e.history.onHistoryChange(new class {
                constructor(e) {
                    this.controls = e
                }
                notify() {
                    this.controls.forceUpdate()
                }
            }
            (this))
        }
        render() {
            const e = this.props.history;
            return o.a.createElement("div", {
                className: "history-buttons-container"
            }, o.a.createElement(d, {
                classNames: c()("button history-button history-undo", {
                    enabled: e.hasPrev
                }),
                onClick: e.hasPrev ? this.undo : ah
            }, o.a.createElement("div", {
                className: "icon icon-history"
            }), "Undo"), o.a.createElement(d, {
                classNames: c()("button history-button history-redo", {
                    enabled: e.hasNext
                }),
                onClick: e.hasNext ? this.redo : ah
            }, o.a.createElement("div", {
                className: "icon icon-history"
            }), "Redo"))
        }
    }
    class sh {
        constructor(e, t) {
            this.history = e,
            this.scenes = t
        }
        getSceneControl(e) {
            const t = this.scenes[e];
            if (!t)
                throw Error("");
            return new class {
                constructor(e, t) {
                    this.history = e,
                    this.scene = t
                }
                addPath() {
                    const e = new fe;
                    return this.history.exec(new class {
                        constructor(e, t) {
                            this.scene = e,
                            this.path = t
                        }
                        exec() {
                            this.scene.add(this.path)
                        }
                        undo() {
                            this.scene.remove(this.path)
                        }
                        dispose() {
                            for (let e = 0; e < this.path.children.length; ++e)
                                this.path.children[e].geometry.dispose(),
                                this.path.children[e].material.dispose()
                        }
                    }
                    (this.scene,e)),
                    e
                }
                render(e, t) {
                    e.render(this.scene, t)
                }
                get nChildren() {
                    return this.scene.children.length
                }
            }
            (this.history,t)
        }
        addFromScenes(e) {
            const t = lh(...Object.keys(this.scenes))
              , n = lh(...Object.keys(this.scenes));
            this.history.exec(new class {
                constructor(e, t) {
                    this.scenes = e;
                    for (const e in t) {
                        const r = t[e]
                          , i = n[e];
                        for (; r.children.length; )
                            i.add(r.children[0])
                    }
                }
                exec() {
                    for (const e in this.scenes) {
                        const r = this.scenes[e]
                          , i = t[e]
                          , a = n[e];
                        for (; r.children.length; )
                            i.add(r.children[0]);
                        for (; a.children.length; )
                            r.add(a.children[0])
                    }
                }
                undo() {
                    for (const e in this.scenes) {
                        const r = this.scenes[e]
                          , i = t[e]
                          , a = n[e];
                        for (; r.children.length; )
                            a.add(r.children[0]);
                        for (; i.children.length; )
                            r.add(i.children[0])
                    }
                }
                dispose() {
                    for (const e in n) {
                        const t = n[e];
                        for (let e = 0, n = t.children.length; e < n; ++e) {
                            const n = t.children[e];
                            for (let e = 0, t = n.children.length; e < t; ++e) {
                                const t = n.children[e];
                                t.geometry.dispose(),
                                t.material.dispose()
                            }
                        }
                    }
                }
            }
            (this.scenes,e))
        }
    }
    function lh(...e) {
        const t = {};
        for (const n of e)
            t[n] = new pe;
        return t
    }
    var uh, ch;
    n(33);
    class hh extends a.Component {
        constructor(e) {
            super(e),
            this.state = {
                expanded: !0
            },
            this.onHeaderClick = ()=>{
                this.setState(e=>({
                    expanded: !e.expanded
                }))
            }
            ,
            this.colorSelectCallback = ()=>this.props.textureSelectControls.onSelect(-1),
            this.generateSwatch = (e,t)=>this.createSwatchForUrl(e, t, this.clickCallbacks[t]),
            this.clickCallbacks = e.textureSettings.urls.map((e,t)=>()=>this.props.textureSelectControls.onSelect(t))
        }
        componentDidUpdate() {
            this.clickCallbacks = this.props.textureSettings.urls.map((e,t)=>()=>this.props.textureSelectControls.onSelect(t))
        }
        render() {
            return o.a.createElement("div", {
                className: c()("texture-selector", {
                    expanded: this.state.expanded
                }),
                style: {
                    height: this.state.expanded ? this.calcDrawerHeight() : void 0
                }
            }, o.a.createElement("div", {
                className: c()("header"),
                onClick: this.onHeaderClick
            }, o.a.createElement("div", null, o.a.createElement("div", {
                className: c()("icon", "icon-chevron-down")
            }), "Texture")), o.a.createElement("div", {
                className: c()("swatch-drawer")
            }, o.a.createElement(dh, {
                selected: -1 === this.props.textureSettings.selected,
                color: this.props.color,
                onClick: this.colorSelectCallback
            }), this.props.textureSettings.urls.map(this.generateSwatch)))
        }
        createSwatchForUrl(e, t, n) {
            return o.a.createElement(fh, {
                key: t,
                selected: this.props.textureSettings.selected === t,
                textureSrc: e,
                onClick: n
            })
        }
        calcDrawerHeight() {
            const e = this.props.textureSettings.urls.length;
            return 28 * (e + 1) + 8 * e + 32 + 32 + "px"
        }
    }
    class dh extends a.Component {
        render() {
            return o.a.createElement("div", {
                className: c()("swatch", {
                    selected: this.props.selected
                }),
                style: {
                    backgroundColor: this.props.color
                },
                onClick: this.props.onClick
            })
        }
    }
    class fh extends a.Component {
        render() {
            return o.a.createElement("div", {
                className: c()("swatch", {
                    selected: this.props.selected
                }),
                style: {
                    backgroundImage: `url("${this.props.textureSrc}")`
                },
                onClick: this.props.onClick
            })
        }
    }
    !function(e) {
        e.META = "meta",
        e.SHIFT = "shift",
        e.ALT = "alt",
        e.CTRL = "ctrl"
    }(uh || (uh = {})),
    function(e) {
        e[e.META = 1] = "META",
        e[e.SHIFT = 2] = "SHIFT",
        e[e.ALT = 4] = "ALT",
        e[e.CTRL = 8] = "CTRL"
    }(ch || (ch = {}));
    class ph {
        constructor(e, t) {
            this.window = e,
            this.watchedKeys = {};
            for (const e in t) {
                this.watchedKeys[e] = [];
                const n = t[e];
                for (const t of n)
                    this.watchedKeys[e].push({
                        modifiers: t.modifiers.length > 0 ? t.modifiers.map(mh) : [0],
                        callback: t.callback
                    })
            }
            this.onDownHandler = e=>this.onKeyDown(e.keyCode, e),
            this.window.addEventListener("keydown", this.onDownHandler),
            this.window.addEventListener("keyup", this.onUpHandler),
            this.window.addEventListener("blur", this.onBlurHandler)
        }
        dispose() {
            this.window.removeEventListener("keydown", this.onDownHandler),
            this.window.removeEventListener("keyup", this.onUpHandler),
            this.window.removeEventListener("blur", this.onBlurHandler)
        }
        onKeyDown(e, t) {
            if (this.watchedKeys[e]) {
                let n = 0;
                n = t.metaKey ? n | ch.META : n,
                n = t.shiftKey ? n | ch.SHIFT : n,
                n = t.altKey ? n | ch.ALT : n,
                n = t.ctrlKey ? n | ch.CTRL : n;
                for (const r of this.watchedKeys[e])
                    r.modifiers.indexOf(n) > -1 && (t.preventDefault(),
                    r.callback())
            }
        }
    }
    function mh(e) {
        let t = 0;
        for (const n of e)
            switch (n) {
            case uh.META:
                t |= ch.META;
                break;
            case uh.SHIFT:
                t |= ch.SHIFT;
                break;
            case uh.ALT:
                t |= ch.ALT;
                break;
            case uh.CTRL:
                t |= ch.CTRL
            }
        return t
    }
    class gh {
        serialize(e) {
            const t = e.toJSON();
            if (t.materials)
                for (const e of t.materials)
                    e.blendDst = 200,
                    e.blendSrc = 201;
            return t
        }
    }
    class vh {
        constructor(e) {
            this.objectLoader = e
        }
        deserialize(e) {
            return new Promise(t=>{
                this.objectLoader.parse(e, e=>{
                    for (const t of e.children) {
                        const e = t;
                        e.children.length && (e.children[0].material.blendDst = 200,
                        e.children[0].material.blendSrc = 201)
                    }
                    t(e)
                }
                )
            }
            )
        }
    }
    class yh {
        serialize(e) {
            return e.toJSON()
        }
    }
    class bh {
        constructor(e) {
            this.objectLoader = e
        }
        deserialize(e) {
            return new Promise(t=>{
                this.objectLoader.parse(e, e=>{
                    t(e)
                }
                )
            }
            )
        }
    }
    var xh = function(e, t, n, r) {
        return new (n || (n = Promise))((function(i, a) {
            function o(e) {
                try {
                    l(r.next(e))
                } catch (e) {
                    a(e)
                }
            }
            function s(e) {
                try {
                    l(r.throw(e))
                } catch (e) {
                    a(e)
                }
            }
            function l(e) {
                var t;
                e.done ? i(e.value) : (t = e.value,
                t instanceof n ? t : new n((function(e) {
                    e(t)
                }
                ))).then(o, s)
            }
            l((r = r.apply(e, t || [])).next())
        }
        ))
    };
    class wh {
        constructor(e, t) {
            this.saver = e,
            this.loader = t
        }
        get schema() {
            return wh.SCHEMA
        }
        save() {
            return this.saver.save()
        }
        load(e) {
            if (e.version !== wh.SCHEMA.version)
                throw Error(`Version Error: tried to load outdated save data. Migrate the data first. \n\n         Received: ${e.version}; expected: ${wh.SCHEMA.version}`);
            const t = e.loadData;
            if (!t.paint || !t.texture)
                throw Error("Save data corrupted. Could not load save data.");
            this.loader.load(t)
        }
        migrate(e) {
            return {}
        }
    }
    wh.SCHEMA = {
        version: 1,
        schema: {
            paint: "brushes",
            texture: "brushes"
        }
    };
    class _h {
        constructor(e, t) {
            this.scenes = e,
            this.serializers = t
        }
        save() {
            const e = {};
            for (const t in this.serializers)
                e[t] = {
                    brushes: this.serializers[t].serialize(this.scenes[t])
                };
            return e
        }
    }
    class Eh {
        constructor(e, t) {
            this.paintScene = e,
            this.deserializers = t
        }
        load(e) {
            return xh(this, void 0, void 0, (function*() {
                const t = {};
                for (const n in this.deserializers)
                    e[n] && e[n].brushes || console.error(n, " save data corrupt. Could not load data"),
                    t[n] = yield this.deserializers[n].deserialize(e[n].brushes);
                this.paintScene.addFromScenes(t)
            }
            ))
        }
    }
    var Th = function(e, t, n, r) {
        return new (n || (n = Promise))((function(i, a) {
            function o(e) {
                try {
                    l(r.next(e))
                } catch (e) {
                    a(e)
                }
            }
            function s(e) {
                try {
                    l(r.throw(e))
                } catch (e) {
                    a(e)
                }
            }
            function l(e) {
                var t;
                e.done ? i(e.value) : (t = e.value,
                t instanceof n ? t : new n((function(e) {
                    e(t)
                }
                ))).then(o, s)
            }
            l((r = r.apply(e, t || [])).next())
        }
        ))
    };
    class Sh extends a.Component {
        constructor(e) {
            super(e),
            this.iframeRef = o.a.createRef(),
            this.keyWatchers = [],
            this.enabledTool = null;
            const t = new URLSearchParams(window.location.search);
            this.addSaveHandlers = !!t.get("debug"),
            this.modelSid = t.get("m") || "JGPnGQ6hosj",
            this.apiHost = t.get("apiHost") || "",
            this.applicationKey = t.get("applicationKey") || "nsai8wcy6qwb4wfzh6k1u2mgc",
            this.state = {
                sdk: void 0,
                error: void 0,
                toolSettings: {
                    activeTool: p.NONE,
                    size: 5,
                    color: "#c3e2f6",
                    opacity: .75
                },
                textureSettings: {
                    descriptors: [{
                        src: "./assets/carpet1.jpg",
                        size: .5
                    }, {
                        src: "./assets/plywood1.jpg",
                        size: 1.5
                    }, {
                        src: "./assets/brick1.jpg",
                        size: 1
                    }, {
                        src: "./assets/hardwood1.jpg",
                        size: 1.5
                    }],
                    selected: -1
                },
                inProgress: !1,
                warning: ""
            },
            this.history = new ih;
            this.paintControls = new class {
                constructor(e) {
                    this.paintState = e,
                    this.onToolSelected = e=>this.paintState.setToolSubstate("activeTool", e),
                    this.onColorChanged = e=>this.paintState.setToolSubstate("color", e),
                    this.onSizeChanged = e=>this.paintState.setToolSubstate("size", e),
                    this.onOpacityChanged = e=>this.paintState.setToolSubstate("opacity", e)
                }
                get tool() {
                    return {
                        enabled: !0,
                        onSelected: this.onToolSelected
                    }
                }
                get color() {
                    return {
                        enabled: -1 === this.paintState.state.textureSettings.selected,
                        onChanged: this.onColorChanged
                    }
                }
                get size() {
                    return {
                        enabled: !0,
                        onChanged: this.onSizeChanged
                    }
                }
                get opacity() {
                    return {
                        enabled: -1 === this.paintState.state.textureSettings.selected,
                        onChanged: this.onOpacityChanged
                    }
                }
            }
            (this),
            this.textureControls = new class {
                constructor(e) {
                    this.paintState = e
                }
                onSelect(e) {
                    this.paintState.setState(t=>({
                        textureSettings: Object.assign(Object.assign({}, t.textureSettings), {
                            selected: e
                        })
                    }))
                }
            }
            (this),
            this.mapTextureDescriptorsToUrl = ()=>this.state.textureSettings.descriptors.map(e=>e.src)
        }
        componentDidMount() {
            var e, t, n, r;
            this.addSaveHandlers && this.props.onMount && this.props.onMount(this.modelSid),
            e = this.iframeRef.current,
            t = this.applicationKey,
            n = e=>this.onSdkConnect(e),
            r = e=>this.setState({
                error: e
            }),
            e.addEventListener("load", (function() {
                return Th(this, void 0, void 0, (function*() {
                    try {
                        const r = yield e.contentWindow.MP_SDK.connect(e, t, "3.5");
                        n(r)
                    } catch (e) {
                        r(e)
                    }
                }
                ))
            }
            ))
        }
        componentWillUnmount() {
            this.saver,
            this.debugSaver;
            for (const e of this.keyWatchers)
                e.dispose()
        }
        setToolSubstate(e, t) {
            this.setState(n=>({
                toolSettings: Object.assign(Object.assign({}, n.toolSettings), {
                    [e]: t
                })
            }))
        }
        onSdkConnect(e) {
            return Th(this, void 0, void 0, (function*() {
                this.hackRemoveBottomUi(this.iframeRef.current),
                this.hackFullscreen(this.iframeRef.current),
                this.attachKeyboardShortcuts(this.iframeRef.current);
                const t = {
                    paint: new pe,
                    texture: new pe
                }
                  , n = new sh(this.history,t);
                yield Promise.all([e.Scene.register("labs.brushcursor", Pc), e.Scene.register("labs.brush.input", Uc), e.Scene.register("labs.painttarget", (function() {
                    return e = n.getSceneControl("paint"),
                    new Rc(e);
                    var e
                }
                )), e.Scene.register("labs.texture", Nc), e.Scene.register("labs.textureTarget", (function() {
                    return e = n.getSceneControl("texture"),
                    new Dc(e);
                    var e
                }
                )), e.Scene.register("labs.dropper", jc)]);
                const i = {};
                e.Sweep.data.subscribe({
                    onAdded(e, t) {
                        i[e] = {
                            aligned: "aligned" === t.alignmentType
                        },
                        o()
                    }
                });
                const a = {
                    sweep: ""
                };
                e.Camera.pose.subscribe({
                    onChanged(e) {
                        a.sweep !== e.sweep && (a.sweep = e.sweep,
                        i[a.sweep] && o())
                    }
                });
                const o = ()=>{
                    const e = i[a.sweep];
                    e && this.setState({
                        warning: e.aligned ? "" : "Navigate to an aligned sweep to use the paint tools"
                    })
                }
                  , s = yield e.Scene.createNode()
                  , l = s.addComponent("mp.cursor");
                this.painter = new Painter(e,yield e.Scene.createNode(),this.state.toolSettings.size,l,new class {
                    constructor(e) {
                        this.updatePaintState = e
                    }
                    onBrushStarted() {
                        this.updatePaintState(!0)
                    }
                    onBrushEnded() {
                        this.updatePaintState(!1)
                    }
                }
                (e=>{}
                )),
                this.texturer = new Texturer(e,yield e.Scene.createNode(),this.state.toolSettings.size,l);
                const u = new _h(t,{
                    paint: new gh,
                    texture: new yh
                })
                  , c = new Eh(n,{
                    paint: new vh(this.painter.loader),
                    texture: new bh(this.texturer.loader)
                });
                this.addSaveHandlers ? this.debugSaver = new r.AppSaver(window,new wh(u,c),(t,n)=>e.Renderer.takeScreenShot({
                    width: 512,
                    height: 512
                })) : this.saver = new r.AppSaver(window.parent,new wh(u,c),(t,n)=>e.Renderer.takeScreenShot({
                    width: t,
                    height: n
                }));
                this.dropper = new Vc(e,yield e.Scene.createNode(),l,e=>{
                    this.paintControls.color.onChanged(e),
                    this.paintControls.tool.onSelected(p.NONE)
                }
                ),
                this.camera = new Wc(e,yield e.Scene.createNode()),
                this.setState({
                    sdk: e
                }),
                s.start()
            }
            ))
        }
        render() {
            const e = -1 !== this.state.textureSettings.selected;
            return this.enabledTool && (this.enabledTool.enable(!1),
            this.enabledTool = null),
            this.camera && this.camera.enable(this.state.toolSettings.activeTool !== p.NONE),
            this.painter && this.state.toolSettings.activeTool === p.BRUSH && !e && (this.painter.enable(!0),
            this.painter.setBrushState(this.state.toolSettings),
            this.enabledTool = this.painter),
            this.texturer && this.state.toolSettings.activeTool === p.BRUSH && e && (this.texturer.enable(!0),
            this.texturer.setTextureSettings({
                size: this.state.toolSettings.size,
                activeTexture: this.state.textureSettings.selected,
                textureDescriptors: this.state.textureSettings.descriptors
            }),
            this.enabledTool = this.texturer),
            this.dropper && this.state.toolSettings.activeTool === p.DROPPER && (this.dropper.enable(!0),
            this.enabledTool = this.dropper),
            o.a.createElement(a.Fragment, null, o.a.createElement(l, {
                getRef: this.iframeRef,
                modelSid: this.modelSid,
                apiHost: this.apiHost,
                applicationKey: this.applicationKey
            }), this.getBannerUi(), !!this.state.sdk && this.getToolUi())
        }
        getBannerUi() {
            return this.state.error ? o.a.createElement("div", {
                className: "banner error"
            }, "Error connecting to the SDK: ", this.state.error) : o.a.createElement("div", {
                className: c()("banner", {
                    collapsed: !!this.state.sdk && !this.state.warning,
                    error: !!this.state.error,
                    warning: !this.state.error && !!this.state.warning
                })
            }, this.state.error ? "Error connecting to the SDK: " + this.state.error : this.state.sdk ? this.state.warning ? this.state.warning : "Loading Complete" : "Loading Painting Tools...")
        }
        getToolUi() {
            const e = this.mapTextureDescriptorsToUrl();
            return o.a.createElement(a.Fragment, null, o.a.createElement(hh, {
                color: this.state.toolSettings.color,
                textureSettings: {
                    urls: e,
                    selected: this.state.textureSettings.selected
                },
                textureSelectControls: this.textureControls
            }), o.a.createElement(g, {
                toolSettings: this.state.toolSettings,
                paintToolControls: this.paintControls,
                enabled: !this.state.warning
            }), o.a.createElement(oh, {
                history: this.history
            }))
        }
        attachKeyboardShortcuts(e) {
            const t = {
                [E.Z]: [{
                    modifiers: [[uh.META], [uh.CTRL]],
                    callback: ()=>this.history.undo()
                }, {
                    modifiers: [[uh.META, uh.SHIFT], [uh.CTRL, uh.SHIFT]],
                    callback: ()=>this.history.redo()
                }],
                [E.Y]: [{
                    modifiers: [[uh.META], [uh.CTRL]],
                    callback: ()=>this.history.redo()
                }],
                [E.ESCAPE]: [{
                    modifiers: [],
                    callback: ()=>{
                        this.state.toolSettings.activeTool !== p.NONE && this.setToolSubstate("activeTool", p.NONE)
                    }
                }]
            };
            this.keyWatchers.push(new ph(window,t), new ph(e.contentWindow,t))
        }
        hackRemoveBottomUi(e) {
            const t = "[type=button] .icon-tape-measure"
              , n = "[type=button] .icon-vr"
              , r = e.contentDocument.querySelector(".bottom-controls")
              , i = e.contentDocument.querySelector(t)
              , a = e.contentDocument.querySelector("[type=button] .icon-share")
              , o = e.contentDocument.querySelector(n);
            function s(e, t) {
                const n = new MutationObserver(()=>{
                    const r = e.querySelector(t);
                    r && (n.disconnect(),
                    r.style.display = "none")
                }
                );
                n.observe(e, {
                    subtree: !0,
                    childList: !0
                })
            }
            function l(e, t, n) {
                e ? e.style.display = "none" : s(t, n)
            }
            if (r)
                l(i, r, t),
                l(a, r, "[type=button] .icon-share"),
                l(o, r, n);
            else {
                const r = new MutationObserver(()=>{
                    const i = e.contentDocument.querySelector(".bottom-controls");
                    i && (s(i, t),
                    s(i, "[type=button] .icon-share"),
                    s(i, n),
                    r.disconnect())
                }
                );
                r.observe(e.contentDocument.body, {
                    subtree: !0,
                    childList: !0
                })
            }
        }
        hackFullscreen(e) {
            const t = e.contentDocument.querySelector(".fullscreen-mode .icon-fullscreen");
            t && t.addEventListener("click", e=>{
                e.stopImmediatePropagation(),
                e.stopPropagation();
                const n = document.body
                  , r = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement
                  , i = n.requestFullscreen || n.webkitRequestFullscreen || n.mozRequestFullScreen || n.msRequestFullscreen
                  , a = document.exitFullscreen || document.webkitExitFullscreen || document.mozCancelFullScreen || document.msExitFullscreen;
                r ? (a.call(document),
                t.classList.remove("icon-fullscreen-exit"),
                t.classList.add("icon-fullscreen")) : (i.call(n),
                t.classList.remove("icon-fullscreen"),
                t.classList.add("icon-fullscreen-exit"))
            }
            , !0)
        }
    }
    var Mh = function(e, t, n, r) {
        return new (n || (n = Promise))((function(i, a) {
            function o(e) {
                try {
                    l(r.next(e))
                } catch (e) {
                    a(e)
                }
            }
            function s(e) {
                try {
                    l(r.throw(e))
                } catch (e) {
                    a(e)
                }
            }
            function l(e) {
                var t;
                e.done ? i(e.value) : (t = e.value,
                t instanceof n ? t : new n((function(e) {
                    e(t)
                }
                ))).then(o, s)
            }
            l((r = r.apply(e, t || [])).next())
        }
        ))
    };
    s.render(o.a.createElement(Sh, {
        onMount: function(e) {
            return Mh(this, void 0, void 0, (function*() {
                document.body.classList.add("has-saves");
                const t = i.openDb("paint/" + e);
                i.setupMockMessageButtons(e=>Mh(this, void 0, void 0, (function*() {
                    return yield i.AppSaveRequester.create(window, t, e)
                }
                )))
            }
            ))
        }
    }), document.getElementById("content"))
}
]);
//# sourceMappingURL=wall-paint.bundle.js.map
